8<--8<--8<--8<--
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4fb17cd5-cad8-31a6-34d3-08434d926140)
  MIG 7g.40gb     Device  0: (UUID: MIG-e4b043ba-742f-5607-806e-29b77f044f60)
8<--8<--8<--8<--
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ wc -l
+ NB_GPUS=1
+ [[ 1 == 0 ]]
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ awk '{ printf $6"\n"}'
++ cut '-d)' -f1
+ ALL_GPUS=MIG-e4b043ba-742f-5607-806e-29b77f044f60
+ MIG_MODE=1
Found 1 MIG instances: MIG-e4b043ba-742f-5607-806e-29b77f044f60
+ [[ 7g.40gb == \f\u\l\l ]]
+ echo 'Found 1 MIG instances: MIG-e4b043ba-742f-5607-806e-29b77f044f60'
+ [[ 1 == 0 ]]
+ [[ 1 != 1 ]]
++ date +%s
+ start=1639761507
++ date '+%Y-%m-%d %r'
+ start_fmt='2021-12-17 05:18:27 PM'
STARTING TIMING RUN AT 2021-12-17 05:18:27 PM GPU: 1 x 7g.40gb x 8 Pods
+ echo 'STARTING TIMING RUN AT 2021-12-17 05:18:27 PM GPU: 1 x 7g.40gb x 8 Pods'
+ set -x
+ export NCCL_DEBUG=INFO
+ NCCL_DEBUG=INFO
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export TORCH_HOME=/data/coco2017/torchvision
+ TORCH_HOME=/data/coco2017/torchvision
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_val2017.json ']'
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_train2017.json ']'
+ [[ ssd == \m\a\s\k\r\c\n\n ]]
+ DGXNSOCKET=1
+ DGXSOCKETCORES=8
+ [[ 1 == \1 ]]
+ DGXNGPU=1
Running in parallel mode.
+ echo 'Running in parallel mode.'
+ declare -a CMD
+ CMD=('python' '-u' '-m' 'bind_launch' "--nsockets_per_node=${DGXNSOCKET}" "--ncores_per_socket=${DGXSOCKETCORES}" "--nproc_per_node=${DGXNGPU}")
+ declare -a ARGS
+ echo 'Patching '\''bind_launch.py'\'' to err-exit on failure ...'
Patching 'bind_launch.py' to err-exit on failure ...
+ sed 's/process.wait()$/if process.wait(): sys.exit(1)/' -i bind_launch.py
+ [[ ssd == \s\s\d ]]
Setting up the SSD benchmark...
+ echo 'Setting up the SSD benchmark...'
+ EXTRA_PARAMS='--batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4'
+ NUMEPOCHS=80
+ ARGS=(train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs "${NUMEPOCHS}" --warmup-factor 0 --no-save --threshold=${SSD_THRESHOLD} --data ${DATASET_DIR} ${EXTRA_PARAMS})
+ [[ fast == \f\a\s\t ]]
+ echo 'Running in FAST mode'
Running in FAST mode
+ ARGS+=(--evaluation 5 10 15 20 25 30 35 40 50 55 60 65 70 75 80 85)
+ [[ fast == \d\r\y ]]
+ trap 'date; echo failed; exit 1' ERR
+ [[ n != \y ]]
+ SYNC_DIR=/data/coco2017/sync
+ mkdir -p /data/coco2017/sync
+ for sync_f in "$SYNC_DIR/"*
+ [[ /data/coco2017/sync/2021-12-17_18-18-09 != \/\d\a\t\a\/\c\o\c\o\2\0\1\7\/\s\y\n\c\/\2\0\2\1\-\1\2\-\1\7\_\1\8\-\1\8\-\0\9 ]]
+ set +x
Fri Dec 17 17:18:27 UTC 2021 Waiting for all the 8 Pods to start ...
Adding run-mlperf--1-hrgcj to the sync file ...
Fri Dec 17 17:18:27 UTC 2021 All the 8 Pods are running, launch the GPU workload.
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4fb17cd5-cad8-31a6-34d3-08434d926140)
  MIG 7g.40gb     Device  0: (UUID: MIG-e4b043ba-742f-5607-806e-29b77f044f60)
+ [[ 1 == 1 ]]
+ [[ 1 != 1 ]]
+ dest=/tmp/benchmark_all.log
+ [[ 1 == 1 ]]
Running on the MIG GPU
+ echo 'Running on the MIG GPU'
+ python -u -m bind_launch --nsockets_per_node=1 --ncores_per_socket=8 --nproc_per_node=1 train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs 80 --warmup-factor 0 --no-save --threshold=0.1 --data /data/coco2017 --batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4 --evaluation 5 10 15 20 25 30 35 40 50 55 60 65 70 75 80 85
+ tee -a /tmp/benchmark_all.log
:::MLLOG {"namespace": "", "time_ms": 1639761509041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639761509172, "event_type": "POINT_IN_TIME", "key": "seed", "value": 493197917, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 493197917
/opt/conda/lib/python3.6/site-packages/torch/nn/_reduction.py:44: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
:::MLLOG {"namespace": "", "time_ms": 1639761510718, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639761510718, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639761534587, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639761534587, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
[/opt/dali/dali/operators/image/crop/bbox_crop.cc:348] WARNING: `ltrb` is deprecated. Please use `bbox_layout` to specify the format of the bounding box. E.g. For 2D bounding boxes, `ltrb=True`` is equivalent to `bbox_layout="xyXY"`, and `ltrb=False` is equivalent to `bbox_layout="xyWH"`
:::MLLOG {"namespace": "", "time_ms": 1639761535799, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639761535800, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.12s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639761536033, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639761536033, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639761536034, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.521, Average Loss: 0.023, avg. samples / sec: 4.55
Iteration:     20, Loss function: 21.056, Average Loss: 0.454, avg. samples / sec: 926.55
Iteration:     40, Loss function: 20.858, Average Loss: 0.856, avg. samples / sec: 982.43
Iteration:     60, Loss function: 20.409, Average Loss: 1.247, avg. samples / sec: 930.54
Iteration:     80, Loss function: 20.301, Average Loss: 1.623, avg. samples / sec: 965.21
Iteration:    100, Loss function: 16.952, Average Loss: 1.964, avg. samples / sec: 957.47
Iteration:    120, Loss function: 12.147, Average Loss: 2.190, avg. samples / sec: 924.98
Iteration:    140, Loss function: 9.776, Average Loss: 2.354, avg. samples / sec: 948.21
Iteration:    160, Loss function: 9.389, Average Loss: 2.495, avg. samples / sec: 931.00
Iteration:    180, Loss function: 8.962, Average Loss: 2.625, avg. samples / sec: 943.06
Iteration:    200, Loss function: 8.620, Average Loss: 2.750, avg. samples / sec: 677.95
Iteration:    220, Loss function: 8.598, Average Loss: 2.870, avg. samples / sec: 940.60
Iteration:    240, Loss function: 8.739, Average Loss: 2.986, avg. samples / sec: 897.63
Iteration:    260, Loss function: 8.782, Average Loss: 3.100, avg. samples / sec: 959.73
Iteration:    280, Loss function: 8.532, Average Loss: 3.210, avg. samples / sec: 917.04
Iteration:    300, Loss function: 8.339, Average Loss: 3.313, avg. samples / sec: 957.48
Iteration:    320, Loss function: 8.182, Average Loss: 3.412, avg. samples / sec: 932.85
Iteration:    340, Loss function: 8.388, Average Loss: 3.509, avg. samples / sec: 946.19
Iteration:    360, Loss function: 8.190, Average Loss: 3.601, avg. samples / sec: 924.35
Iteration:    380, Loss function: 8.120, Average Loss: 3.691, avg. samples / sec: 938.18
Iteration:    400, Loss function: 7.986, Average Loss: 3.775, avg. samples / sec: 915.21
Iteration:    420, Loss function: 7.652, Average Loss: 3.856, avg. samples / sec: 947.16
Iteration:    440, Loss function: 7.698, Average Loss: 3.934, avg. samples / sec: 951.44
Iteration:    460, Loss function: 7.866, Average Loss: 4.011, avg. samples / sec: 968.05
Iteration:    480, Loss function: 7.472, Average Loss: 4.084, avg. samples / sec: 940.35
Iteration:    500, Loss function: 7.634, Average Loss: 4.156, avg. samples / sec: 910.89
Iteration:    520, Loss function: 7.576, Average Loss: 4.225, avg. samples / sec: 976.28
Iteration:    540, Loss function: 7.435, Average Loss: 4.288, avg. samples / sec: 964.29
Iteration:    560, Loss function: 7.165, Average Loss: 4.350, avg. samples / sec: 938.21
Iteration:    580, Loss function: 7.399, Average Loss: 4.410, avg. samples / sec: 982.89
Iteration:    600, Loss function: 7.334, Average Loss: 4.469, avg. samples / sec: 969.44
Iteration:    620, Loss function: 7.254, Average Loss: 4.524, avg. samples / sec: 966.16
Iteration:    640, Loss function: 6.810, Average Loss: 4.578, avg. samples / sec: 960.71
Iteration:    660, Loss function: 7.140, Average Loss: 4.630, avg. samples / sec: 938.66
Iteration:    680, Loss function: 7.194, Average Loss: 4.681, avg. samples / sec: 940.89
Iteration:    700, Loss function: 7.020, Average Loss: 4.730, avg. samples / sec: 729.96
Iteration:    720, Loss function: 7.152, Average Loss: 4.778, avg. samples / sec: 914.80
Iteration:    740, Loss function: 6.872, Average Loss: 4.822, avg. samples / sec: 974.00
Iteration:    760, Loss function: 6.987, Average Loss: 4.864, avg. samples / sec: 984.15
Iteration:    780, Loss function: 6.770, Average Loss: 4.906, avg. samples / sec: 936.95
Iteration:    800, Loss function: 7.135, Average Loss: 4.944, avg. samples / sec: 985.02
Iteration:    820, Loss function: 6.925, Average Loss: 4.981, avg. samples / sec: 955.24
Iteration:    840, Loss function: 6.787, Average Loss: 5.017, avg. samples / sec: 961.40
Iteration:    860, Loss function: 6.795, Average Loss: 5.050, avg. samples / sec: 979.19
Iteration:    880, Loss function: 6.669, Average Loss: 5.082, avg. samples / sec: 859.45
Iteration:    900, Loss function: 6.770, Average Loss: 5.112, avg. samples / sec: 971.36
Iteration:    920, Loss function: 6.551, Average Loss: 5.141, avg. samples / sec: 976.67
Iteration:    940, Loss function: 6.602, Average Loss: 5.171, avg. samples / sec: 894.11
Iteration:    960, Loss function: 6.218, Average Loss: 5.199, avg. samples / sec: 880.55
Iteration:    980, Loss function: 6.601, Average Loss: 5.226, avg. samples / sec: 946.66
Iteration:   1000, Loss function: 6.507, Average Loss: 5.251, avg. samples / sec: 976.33
Iteration:   1020, Loss function: 6.414, Average Loss: 5.274, avg. samples / sec: 911.21
:::MLLOG {"namespace": "", "time_ms": 1639761661933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639761661934, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.477, Average Loss: 5.297, avg. samples / sec: 933.25
Iteration:   1060, Loss function: 6.307, Average Loss: 5.319, avg. samples / sec: 924.09
Iteration:   1080, Loss function: 6.193, Average Loss: 5.340, avg. samples / sec: 885.57
Iteration:   1100, Loss function: 6.368, Average Loss: 5.360, avg. samples / sec: 933.17
Iteration:   1120, Loss function: 6.301, Average Loss: 5.379, avg. samples / sec: 964.38
Iteration:   1140, Loss function: 6.506, Average Loss: 5.398, avg. samples / sec: 982.64
Iteration:   1160, Loss function: 6.264, Average Loss: 5.414, avg. samples / sec: 985.64
Iteration:   1180, Loss function: 6.154, Average Loss: 5.430, avg. samples / sec: 943.17
Iteration:   1200, Loss function: 6.142, Average Loss: 5.446, avg. samples / sec: 929.47
Iteration:   1220, Loss function: 6.173, Average Loss: 5.460, avg. samples / sec: 928.04
Iteration:   1240, Loss function: 6.053, Average Loss: 5.473, avg. samples / sec: 960.38
Iteration:   1260, Loss function: 6.043, Average Loss: 5.484, avg. samples / sec: 970.27
Iteration:   1280, Loss function: 5.875, Average Loss: 5.496, avg. samples / sec: 952.03
Iteration:   1300, Loss function: 6.066, Average Loss: 5.508, avg. samples / sec: 962.64
Iteration:   1320, Loss function: 6.150, Average Loss: 5.519, avg. samples / sec: 973.30
Iteration:   1340, Loss function: 5.732, Average Loss: 5.528, avg. samples / sec: 977.65
Iteration:   1360, Loss function: 6.032, Average Loss: 5.539, avg. samples / sec: 914.67
Iteration:   1380, Loss function: 6.082, Average Loss: 5.548, avg. samples / sec: 952.69
Iteration:   1400, Loss function: 6.010, Average Loss: 5.557, avg. samples / sec: 986.16
Iteration:   1420, Loss function: 5.977, Average Loss: 5.564, avg. samples / sec: 974.58
Iteration:   1440, Loss function: 6.334, Average Loss: 5.573, avg. samples / sec: 954.26
Iteration:   1460, Loss function: 6.326, Average Loss: 5.581, avg. samples / sec: 899.81
Iteration:   1480, Loss function: 5.757, Average Loss: 5.588, avg. samples / sec: 969.44
Iteration:   1500, Loss function: 5.928, Average Loss: 5.596, avg. samples / sec: 976.47
Iteration:   1520, Loss function: 5.886, Average Loss: 5.601, avg. samples / sec: 992.22
Iteration:   1540, Loss function: 6.122, Average Loss: 5.605, avg. samples / sec: 978.51
Iteration:   1560, Loss function: 5.896, Average Loss: 5.609, avg. samples / sec: 965.27
Iteration:   1580, Loss function: 5.630, Average Loss: 5.615, avg. samples / sec: 993.99
Iteration:   1600, Loss function: 6.162, Average Loss: 5.620, avg. samples / sec: 963.78
Iteration:   1620, Loss function: 5.731, Average Loss: 5.624, avg. samples / sec: 975.86
Iteration:   1640, Loss function: 5.896, Average Loss: 5.628, avg. samples / sec: 985.25
Iteration:   1660, Loss function: 5.968, Average Loss: 5.631, avg. samples / sec: 911.72
Iteration:   1680, Loss function: 5.753, Average Loss: 5.634, avg. samples / sec: 931.79
Iteration:   1700, Loss function: 5.401, Average Loss: 5.637, avg. samples / sec: 990.79
Iteration:   1720, Loss function: 5.578, Average Loss: 5.639, avg. samples / sec: 968.29
Iteration:   1740, Loss function: 5.872, Average Loss: 5.641, avg. samples / sec: 958.37
Iteration:   1760, Loss function: 5.616, Average Loss: 5.642, avg. samples / sec: 967.21
Iteration:   1780, Loss function: 5.700, Average Loss: 5.643, avg. samples / sec: 878.38
Iteration:   1800, Loss function: 5.508, Average Loss: 5.647, avg. samples / sec: 907.40
Iteration:   1820, Loss function: 6.203, Average Loss: 5.648, avg. samples / sec: 990.40
Iteration:   1840, Loss function: 5.861, Average Loss: 5.649, avg. samples / sec: 956.59
Iteration:   1860, Loss function: 5.627, Average Loss: 5.649, avg. samples / sec: 893.66
Iteration:   1880, Loss function: 6.074, Average Loss: 5.651, avg. samples / sec: 970.19
Iteration:   1900, Loss function: 5.723, Average Loss: 5.651, avg. samples / sec: 961.07
Iteration:   1920, Loss function: 5.949, Average Loss: 5.651, avg. samples / sec: 978.15
Iteration:   1940, Loss function: 5.865, Average Loss: 5.651, avg. samples / sec: 983.52
Iteration:   1960, Loss function: 5.518, Average Loss: 5.651, avg. samples / sec: 834.74
Iteration:   1980, Loss function: 5.609, Average Loss: 5.650, avg. samples / sec: 933.70
Iteration:   2000, Loss function: 5.681, Average Loss: 5.649, avg. samples / sec: 951.97
Iteration:   2020, Loss function: 5.531, Average Loss: 5.647, avg. samples / sec: 953.96
Iteration:   2040, Loss function: 5.715, Average Loss: 5.647, avg. samples / sec: 897.55
:::MLLOG {"namespace": "", "time_ms": 1639761785481, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639761785483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.462, Average Loss: 5.645, avg. samples / sec: 938.28
Iteration:   2080, Loss function: 5.118, Average Loss: 5.642, avg. samples / sec: 980.14
Iteration:   2100, Loss function: 5.468, Average Loss: 5.640, avg. samples / sec: 897.02
Iteration:   2120, Loss function: 5.335, Average Loss: 5.637, avg. samples / sec: 974.67
Iteration:   2140, Loss function: 5.471, Average Loss: 5.634, avg. samples / sec: 986.15
Iteration:   2160, Loss function: 5.441, Average Loss: 5.632, avg. samples / sec: 961.94
Iteration:   2180, Loss function: 5.505, Average Loss: 5.629, avg. samples / sec: 991.42
Iteration:   2200, Loss function: 5.663, Average Loss: 5.626, avg. samples / sec: 981.23
Iteration:   2220, Loss function: 5.651, Average Loss: 5.624, avg. samples / sec: 913.61
Iteration:   2240, Loss function: 5.482, Average Loss: 5.622, avg. samples / sec: 966.50
Iteration:   2260, Loss function: 5.332, Average Loss: 5.618, avg. samples / sec: 978.37
Iteration:   2280, Loss function: 5.256, Average Loss: 5.614, avg. samples / sec: 964.58
Iteration:   2300, Loss function: 5.089, Average Loss: 5.611, avg. samples / sec: 889.05
Iteration:   2320, Loss function: 5.350, Average Loss: 5.608, avg. samples / sec: 920.92
Iteration:   2340, Loss function: 5.448, Average Loss: 5.603, avg. samples / sec: 953.46
Iteration:   2360, Loss function: 5.270, Average Loss: 5.600, avg. samples / sec: 980.85
Iteration:   2380, Loss function: 5.425, Average Loss: 5.596, avg. samples / sec: 969.10
Iteration:   2400, Loss function: 5.649, Average Loss: 5.592, avg. samples / sec: 941.39
Iteration:   2420, Loss function: 5.448, Average Loss: 5.588, avg. samples / sec: 929.19
Iteration:   2440, Loss function: 5.489, Average Loss: 5.585, avg. samples / sec: 921.31
Iteration:   2460, Loss function: 5.187, Average Loss: 5.581, avg. samples / sec: 954.01
Iteration:   2480, Loss function: 5.442, Average Loss: 5.577, avg. samples / sec: 896.68
Iteration:   2500, Loss function: 5.347, Average Loss: 5.574, avg. samples / sec: 970.53
Iteration:   2520, Loss function: 5.240, Average Loss: 5.568, avg. samples / sec: 904.32
Iteration:   2540, Loss function: 5.476, Average Loss: 5.565, avg. samples / sec: 983.50
Iteration:   2560, Loss function: 5.285, Average Loss: 5.561, avg. samples / sec: 947.66
Iteration:   2580, Loss function: 5.186, Average Loss: 5.558, avg. samples / sec: 978.77
Iteration:   2600, Loss function: 5.392, Average Loss: 5.554, avg. samples / sec: 969.53
Iteration:   2620, Loss function: 5.391, Average Loss: 5.549, avg. samples / sec: 980.48
Iteration:   2640, Loss function: 5.311, Average Loss: 5.546, avg. samples / sec: 983.03
Iteration:   2660, Loss function: 5.217, Average Loss: 5.543, avg. samples / sec: 983.42
Iteration:   2680, Loss function: 5.315, Average Loss: 5.540, avg. samples / sec: 976.19
Iteration:   2700, Loss function: 5.228, Average Loss: 5.535, avg. samples / sec: 890.07
Iteration:   2720, Loss function: 5.323, Average Loss: 5.530, avg. samples / sec: 969.43
Iteration:   2740, Loss function: 5.173, Average Loss: 5.527, avg. samples / sec: 933.18
Iteration:   2760, Loss function: 5.032, Average Loss: 5.521, avg. samples / sec: 954.35
Iteration:   2780, Loss function: 5.490, Average Loss: 5.518, avg. samples / sec: 938.89
Iteration:   2800, Loss function: 5.240, Average Loss: 5.513, avg. samples / sec: 962.08
Iteration:   2820, Loss function: 5.517, Average Loss: 5.508, avg. samples / sec: 966.17
Iteration:   2840, Loss function: 5.029, Average Loss: 5.504, avg. samples / sec: 965.38
Iteration:   2860, Loss function: 5.073, Average Loss: 5.499, avg. samples / sec: 973.65
Iteration:   2880, Loss function: 5.111, Average Loss: 5.494, avg. samples / sec: 979.80
Iteration:   2900, Loss function: 4.898, Average Loss: 5.489, avg. samples / sec: 988.12
Iteration:   2920, Loss function: 5.221, Average Loss: 5.484, avg. samples / sec: 955.24
Iteration:   2940, Loss function: 4.853, Average Loss: 5.479, avg. samples / sec: 934.75
Iteration:   2960, Loss function: 5.333, Average Loss: 5.475, avg. samples / sec: 911.77
Iteration:   2980, Loss function: 5.323, Average Loss: 5.471, avg. samples / sec: 985.24
Iteration:   3000, Loss function: 5.339, Average Loss: 5.466, avg. samples / sec: 980.27
Iteration:   3020, Loss function: 5.325, Average Loss: 5.460, avg. samples / sec: 954.27
Iteration:   3040, Loss function: 5.240, Average Loss: 5.455, avg. samples / sec: 938.65
Iteration:   3060, Loss function: 4.932, Average Loss: 5.449, avg. samples / sec: 966.16
Iteration:   3080, Loss function: 4.961, Average Loss: 5.444, avg. samples / sec: 984.36
:::MLLOG {"namespace": "", "time_ms": 1639761908173, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639761908186, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.241, Average Loss: 5.439, avg. samples / sec: 968.55
Iteration:   3120, Loss function: 5.049, Average Loss: 5.433, avg. samples / sec: 956.37
Iteration:   3140, Loss function: 5.256, Average Loss: 5.429, avg. samples / sec: 978.43
Iteration:   3160, Loss function: 5.324, Average Loss: 5.422, avg. samples / sec: 977.15
Iteration:   3180, Loss function: 4.935, Average Loss: 5.416, avg. samples / sec: 972.92
Iteration:   3200, Loss function: 5.170, Average Loss: 5.410, avg. samples / sec: 968.65
Iteration:   3220, Loss function: 5.196, Average Loss: 5.404, avg. samples / sec: 974.76
Iteration:   3240, Loss function: 5.288, Average Loss: 5.399, avg. samples / sec: 918.54
Iteration:   3260, Loss function: 5.040, Average Loss: 5.394, avg. samples / sec: 945.25
Iteration:   3280, Loss function: 4.855, Average Loss: 5.388, avg. samples / sec: 878.82
Iteration:   3300, Loss function: 4.786, Average Loss: 5.382, avg. samples / sec: 923.04
Iteration:   3320, Loss function: 5.063, Average Loss: 5.376, avg. samples / sec: 951.71
Iteration:   3340, Loss function: 5.146, Average Loss: 5.373, avg. samples / sec: 973.40
Iteration:   3360, Loss function: 5.271, Average Loss: 5.366, avg. samples / sec: 967.87
Iteration:   3380, Loss function: 5.321, Average Loss: 5.360, avg. samples / sec: 948.76
Iteration:   3400, Loss function: 4.856, Average Loss: 5.355, avg. samples / sec: 979.87
Iteration:   3420, Loss function: 5.207, Average Loss: 5.349, avg. samples / sec: 961.59
Iteration:   3440, Loss function: 4.848, Average Loss: 5.344, avg. samples / sec: 905.45
Iteration:   3460, Loss function: 5.040, Average Loss: 5.339, avg. samples / sec: 966.13
Iteration:   3480, Loss function: 5.218, Average Loss: 5.333, avg. samples / sec: 962.95
Iteration:   3500, Loss function: 5.241, Average Loss: 5.329, avg. samples / sec: 967.35
Iteration:   3520, Loss function: 5.092, Average Loss: 5.326, avg. samples / sec: 976.71
Iteration:   3540, Loss function: 4.943, Average Loss: 5.321, avg. samples / sec: 981.61
Iteration:   3560, Loss function: 5.101, Average Loss: 5.317, avg. samples / sec: 974.56
Iteration:   3580, Loss function: 5.165, Average Loss: 5.314, avg. samples / sec: 990.25
Iteration:   3600, Loss function: 5.202, Average Loss: 5.307, avg. samples / sec: 992.60
Iteration:   3620, Loss function: 4.859, Average Loss: 5.303, avg. samples / sec: 955.75
Iteration:   3640, Loss function: 4.717, Average Loss: 5.298, avg. samples / sec: 972.78
Iteration:   3660, Loss function: 5.186, Average Loss: 5.293, avg. samples / sec: 928.70
Iteration:   3680, Loss function: 5.235, Average Loss: 5.288, avg. samples / sec: 973.06
Iteration:   3700, Loss function: 5.285, Average Loss: 5.283, avg. samples / sec: 887.88
Iteration:   3720, Loss function: 4.948, Average Loss: 5.276, avg. samples / sec: 958.41
Iteration:   3740, Loss function: 5.106, Average Loss: 5.272, avg. samples / sec: 883.81
Iteration:   3760, Loss function: 5.028, Average Loss: 5.267, avg. samples / sec: 927.86
Iteration:   3780, Loss function: 5.048, Average Loss: 5.263, avg. samples / sec: 970.01
Iteration:   3800, Loss function: 4.995, Average Loss: 5.259, avg. samples / sec: 940.52
Iteration:   3820, Loss function: 5.264, Average Loss: 5.254, avg. samples / sec: 987.47
Iteration:   3840, Loss function: 4.922, Average Loss: 5.249, avg. samples / sec: 920.81
Iteration:   3860, Loss function: 4.783, Average Loss: 5.244, avg. samples / sec: 958.07
Iteration:   3880, Loss function: 5.130, Average Loss: 5.239, avg. samples / sec: 954.78
Iteration:   3900, Loss function: 5.159, Average Loss: 5.234, avg. samples / sec: 990.32
Iteration:   3920, Loss function: 5.114, Average Loss: 5.228, avg. samples / sec: 966.12
Iteration:   3940, Loss function: 4.923, Average Loss: 5.223, avg. samples / sec: 963.46
Iteration:   3960, Loss function: 5.027, Average Loss: 5.218, avg. samples / sec: 983.12
Iteration:   3980, Loss function: 4.903, Average Loss: 5.213, avg. samples / sec: 974.56
Iteration:   4000, Loss function: 5.092, Average Loss: 5.209, avg. samples / sec: 965.03
Iteration:   4020, Loss function: 5.079, Average Loss: 5.204, avg. samples / sec: 878.64
Iteration:   4040, Loss function: 5.089, Average Loss: 5.200, avg. samples / sec: 894.37
Iteration:   4060, Loss function: 5.066, Average Loss: 5.197, avg. samples / sec: 899.66
Iteration:   4080, Loss function: 5.168, Average Loss: 5.192, avg. samples / sec: 924.17
Iteration:   4100, Loss function: 5.031, Average Loss: 5.190, avg. samples / sec: 961.74
:::MLLOG {"namespace": "", "time_ms": 1639762031566, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639762031567, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.088, Average Loss: 5.187, avg. samples / sec: 924.11
Iteration:   4140, Loss function: 4.896, Average Loss: 5.181, avg. samples / sec: 919.19
Iteration:   4160, Loss function: 4.918, Average Loss: 5.175, avg. samples / sec: 915.46
Iteration:   4180, Loss function: 5.081, Average Loss: 5.170, avg. samples / sec: 965.08
Iteration:   4200, Loss function: 4.723, Average Loss: 5.165, avg. samples / sec: 960.54
Iteration:   4220, Loss function: 4.830, Average Loss: 5.159, avg. samples / sec: 958.95
Iteration:   4240, Loss function: 4.834, Average Loss: 5.154, avg. samples / sec: 959.86
Iteration:   4260, Loss function: 5.074, Average Loss: 5.150, avg. samples / sec: 970.47
Iteration:   4280, Loss function: 4.988, Average Loss: 5.144, avg. samples / sec: 933.00
Iteration:   4300, Loss function: 4.811, Average Loss: 5.138, avg. samples / sec: 984.21
Iteration:   4320, Loss function: 4.839, Average Loss: 5.133, avg. samples / sec: 976.33
Iteration:   4340, Loss function: 4.829, Average Loss: 5.128, avg. samples / sec: 977.04
Iteration:   4360, Loss function: 4.868, Average Loss: 5.124, avg. samples / sec: 967.72
Iteration:   4380, Loss function: 5.041, Average Loss: 5.119, avg. samples / sec: 976.55
Iteration:   4400, Loss function: 4.836, Average Loss: 5.115, avg. samples / sec: 976.72
Iteration:   4420, Loss function: 4.682, Average Loss: 5.109, avg. samples / sec: 984.82
Iteration:   4440, Loss function: 4.656, Average Loss: 5.104, avg. samples / sec: 983.46
Iteration:   4460, Loss function: 5.201, Average Loss: 5.099, avg. samples / sec: 978.62
Iteration:   4480, Loss function: 4.975, Average Loss: 5.095, avg. samples / sec: 962.58
Iteration:   4500, Loss function: 4.817, Average Loss: 5.091, avg. samples / sec: 903.83
Iteration:   4520, Loss function: 4.726, Average Loss: 5.086, avg. samples / sec: 977.05
Iteration:   4540, Loss function: 5.180, Average Loss: 5.081, avg. samples / sec: 959.11
Iteration:   4560, Loss function: 4.758, Average Loss: 5.078, avg. samples / sec: 948.99
Iteration:   4580, Loss function: 4.785, Average Loss: 5.076, avg. samples / sec: 983.27
Iteration:   4600, Loss function: 4.846, Average Loss: 5.072, avg. samples / sec: 982.13
Iteration:   4620, Loss function: 4.784, Average Loss: 5.068, avg. samples / sec: 967.11
Iteration:   4640, Loss function: 4.838, Average Loss: 5.063, avg. samples / sec: 947.64
Iteration:   4660, Loss function: 4.583, Average Loss: 5.060, avg. samples / sec: 932.85
Iteration:   4680, Loss function: 5.318, Average Loss: 5.055, avg. samples / sec: 999.91
Iteration:   4700, Loss function: 4.656, Average Loss: 5.051, avg. samples / sec: 989.82
Iteration:   4720, Loss function: 4.965, Average Loss: 5.048, avg. samples / sec: 954.35
Iteration:   4740, Loss function: 4.872, Average Loss: 5.045, avg. samples / sec: 924.27
Iteration:   4760, Loss function: 4.801, Average Loss: 5.041, avg. samples / sec: 896.27
Iteration:   4780, Loss function: 5.088, Average Loss: 5.037, avg. samples / sec: 952.62
Iteration:   4800, Loss function: 5.002, Average Loss: 5.035, avg. samples / sec: 943.39
Iteration:   4820, Loss function: 4.820, Average Loss: 5.032, avg. samples / sec: 952.93
Iteration:   4840, Loss function: 5.098, Average Loss: 5.029, avg. samples / sec: 958.69
Iteration:   4860, Loss function: 4.716, Average Loss: 5.024, avg. samples / sec: 913.78
Iteration:   4880, Loss function: 5.043, Average Loss: 5.020, avg. samples / sec: 986.19
Iteration:   4900, Loss function: 4.492, Average Loss: 5.016, avg. samples / sec: 973.21
Iteration:   4920, Loss function: 4.731, Average Loss: 5.013, avg. samples / sec: 1000.73
Iteration:   4940, Loss function: 4.850, Average Loss: 5.009, avg. samples / sec: 914.02
Iteration:   4960, Loss function: 4.780, Average Loss: 5.005, avg. samples / sec: 974.02
Iteration:   4980, Loss function: 4.564, Average Loss: 5.001, avg. samples / sec: 977.94
Iteration:   5000, Loss function: 4.900, Average Loss: 4.998, avg. samples / sec: 938.17
Iteration:   5020, Loss function: 5.058, Average Loss: 4.994, avg. samples / sec: 978.08
Iteration:   5040, Loss function: 4.820, Average Loss: 4.991, avg. samples / sec: 940.20
Iteration:   5060, Loss function: 4.751, Average Loss: 4.987, avg. samples / sec: 864.67
Iteration:   5080, Loss function: 4.596, Average Loss: 4.984, avg. samples / sec: 959.42
Iteration:   5100, Loss function: 4.630, Average Loss: 4.981, avg. samples / sec: 959.46
Iteration:   5120, Loss function: 4.658, Average Loss: 4.978, avg. samples / sec: 991.71
Iteration:   5140, Loss function: 4.927, Average Loss: 4.974, avg. samples / sec: 969.00
:::MLLOG {"namespace": "", "time_ms": 1639762154154, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
Predicting Ended, total time: 32.61 s
:::MLLOG {"namespace": "", "time_ms": 1639762186839, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639762186900, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 6, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762186906, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Loading and preparing results...
DONE (t=0.86s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:   5160, Loss function: 4.851, Average Loss: 4.969, avg. samples / sec: 64.96
Iteration:   5180, Loss function: 4.901, Average Loss: 4.965, avg. samples / sec: 995.73
DONE (t=3.79s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09779
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.20151
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08450
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17410
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12863
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.18843
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20042
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20042
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.09779 AP goal: 0.10000
Iteration:   5200, Loss function: 4.480, Average Loss: 4.960, avg. samples / sec: 1014.20
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0977880025354279, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 5}}
Iteration:   5220, Loss function: 4.675, Average Loss: 4.956, avg. samples / sec: 1010.59
Iteration:   5240, Loss function: 4.491, Average Loss: 4.951, avg. samples / sec: 990.47
Iteration:   5260, Loss function: 4.796, Average Loss: 4.947, avg. samples / sec: 987.50
Iteration:   5280, Loss function: 4.982, Average Loss: 4.946, avg. samples / sec: 999.22
Iteration:   5300, Loss function: 4.954, Average Loss: 4.942, avg. samples / sec: 1017.52
Iteration:   5320, Loss function: 4.918, Average Loss: 4.937, avg. samples / sec: 1025.20
Iteration:   5340, Loss function: 4.732, Average Loss: 4.932, avg. samples / sec: 1032.22
Iteration:   5360, Loss function: 5.052, Average Loss: 4.929, avg. samples / sec: 1033.57
Iteration:   5380, Loss function: 4.297, Average Loss: 4.925, avg. samples / sec: 1030.87
Iteration:   5400, Loss function: 4.396, Average Loss: 4.921, avg. samples / sec: 1034.12
Iteration:   5420, Loss function: 4.577, Average Loss: 4.917, avg. samples / sec: 1033.12
Iteration:   5440, Loss function: 4.826, Average Loss: 4.915, avg. samples / sec: 1034.38
Iteration:   5460, Loss function: 4.621, Average Loss: 4.912, avg. samples / sec: 1035.05
Iteration:   5480, Loss function: 4.594, Average Loss: 4.908, avg. samples / sec: 1034.04
Iteration:   5500, Loss function: 4.530, Average Loss: 4.905, avg. samples / sec: 1033.88
Iteration:   5520, Loss function: 4.642, Average Loss: 4.901, avg. samples / sec: 1035.18
Iteration:   5540, Loss function: 4.629, Average Loss: 4.898, avg. samples / sec: 1034.33
Iteration:   5560, Loss function: 4.869, Average Loss: 4.894, avg. samples / sec: 1033.02
Iteration:   5580, Loss function: 4.730, Average Loss: 4.890, avg. samples / sec: 1034.65
Iteration:   5600, Loss function: 4.511, Average Loss: 4.887, avg. samples / sec: 1032.49
Iteration:   5620, Loss function: 4.395, Average Loss: 4.884, avg. samples / sec: 1032.13
Iteration:   5640, Loss function: 4.447, Average Loss: 4.882, avg. samples / sec: 1033.95
Iteration:   5660, Loss function: 4.561, Average Loss: 4.879, avg. samples / sec: 1035.27
Iteration:   5680, Loss function: 4.987, Average Loss: 4.876, avg. samples / sec: 1031.43
Iteration:   5700, Loss function: 4.406, Average Loss: 4.871, avg. samples / sec: 1030.61
Iteration:   5720, Loss function: 4.661, Average Loss: 4.868, avg. samples / sec: 1035.20
Iteration:   5740, Loss function: 4.500, Average Loss: 4.864, avg. samples / sec: 1034.37
Iteration:   5760, Loss function: 4.786, Average Loss: 4.861, avg. samples / sec: 1034.60
Iteration:   5780, Loss function: 4.541, Average Loss: 4.858, avg. samples / sec: 1031.05
Iteration:   5800, Loss function: 5.029, Average Loss: 4.856, avg. samples / sec: 1033.29
Iteration:   5820, Loss function: 4.709, Average Loss: 4.853, avg. samples / sec: 1034.57
Iteration:   5840, Loss function: 4.567, Average Loss: 4.850, avg. samples / sec: 1033.83
Iteration:   5860, Loss function: 4.820, Average Loss: 4.847, avg. samples / sec: 1031.61
Iteration:   5880, Loss function: 4.605, Average Loss: 4.844, avg. samples / sec: 1034.15
Iteration:   5900, Loss function: 5.010, Average Loss: 4.841, avg. samples / sec: 1033.03
Iteration:   5920, Loss function: 4.508, Average Loss: 4.838, avg. samples / sec: 1032.30
Iteration:   5940, Loss function: 4.575, Average Loss: 4.835, avg. samples / sec: 1033.16
Iteration:   5960, Loss function: 4.775, Average Loss: 4.832, avg. samples / sec: 1034.64
Iteration:   5980, Loss function: 4.534, Average Loss: 4.828, avg. samples / sec: 1027.63
Iteration:   6000, Loss function: 4.582, Average Loss: 4.826, avg. samples / sec: 1021.52
Iteration:   6020, Loss function: 4.520, Average Loss: 4.823, avg. samples / sec: 1024.70
Iteration:   6040, Loss function: 4.522, Average Loss: 4.820, avg. samples / sec: 1017.72
Iteration:   6060, Loss function: 4.587, Average Loss: 4.819, avg. samples / sec: 1030.27
Iteration:   6080, Loss function: 4.474, Average Loss: 4.815, avg. samples / sec: 1034.83
Iteration:   6100, Loss function: 4.440, Average Loss: 4.812, avg. samples / sec: 1030.38
Iteration:   6120, Loss function: 4.743, Average Loss: 4.810, avg. samples / sec: 1033.47
Iteration:   6140, Loss function: 4.877, Average Loss: 4.808, avg. samples / sec: 1031.63
Iteration:   6160, Loss function: 4.820, Average Loss: 4.805, avg. samples / sec: 1033.21
:::MLLOG {"namespace": "", "time_ms": 1639762300993, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639762300994, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.468, Average Loss: 4.801, avg. samples / sec: 1030.76
Iteration:   6200, Loss function: 4.851, Average Loss: 4.797, avg. samples / sec: 1021.75
Iteration:   6220, Loss function: 4.431, Average Loss: 4.793, avg. samples / sec: 1021.95
Iteration:   6240, Loss function: 4.597, Average Loss: 4.789, avg. samples / sec: 1022.12
Iteration:   6260, Loss function: 4.549, Average Loss: 4.786, avg. samples / sec: 1023.50
Iteration:   6280, Loss function: 4.560, Average Loss: 4.783, avg. samples / sec: 1021.84
Iteration:   6300, Loss function: 4.748, Average Loss: 4.781, avg. samples / sec: 1024.09
Iteration:   6320, Loss function: 4.313, Average Loss: 4.776, avg. samples / sec: 1022.02
Iteration:   6340, Loss function: 4.600, Average Loss: 4.774, avg. samples / sec: 1032.32
Iteration:   6360, Loss function: 4.747, Average Loss: 4.769, avg. samples / sec: 1031.64
Iteration:   6380, Loss function: 4.483, Average Loss: 4.765, avg. samples / sec: 1030.41
Iteration:   6400, Loss function: 4.581, Average Loss: 4.763, avg. samples / sec: 1025.19
Iteration:   6420, Loss function: 4.576, Average Loss: 4.759, avg. samples / sec: 1031.23
Iteration:   6440, Loss function: 4.698, Average Loss: 4.757, avg. samples / sec: 1029.12
Iteration:   6460, Loss function: 4.741, Average Loss: 4.755, avg. samples / sec: 1030.36
Iteration:   6480, Loss function: 4.660, Average Loss: 4.753, avg. samples / sec: 1031.28
Iteration:   6500, Loss function: 4.726, Average Loss: 4.750, avg. samples / sec: 1032.08
Iteration:   6520, Loss function: 4.708, Average Loss: 4.749, avg. samples / sec: 1031.35
Iteration:   6540, Loss function: 4.647, Average Loss: 4.746, avg. samples / sec: 1033.23
Iteration:   6560, Loss function: 4.423, Average Loss: 4.744, avg. samples / sec: 1030.96
Iteration:   6580, Loss function: 4.798, Average Loss: 4.742, avg. samples / sec: 1034.09
Iteration:   6600, Loss function: 4.617, Average Loss: 4.740, avg. samples / sec: 1032.38
Iteration:   6620, Loss function: 4.680, Average Loss: 4.738, avg. samples / sec: 1032.75
Iteration:   6640, Loss function: 4.602, Average Loss: 4.735, avg. samples / sec: 1031.34
Iteration:   6660, Loss function: 4.861, Average Loss: 4.731, avg. samples / sec: 1021.69
Iteration:   6680, Loss function: 4.721, Average Loss: 4.729, avg. samples / sec: 1022.12
Iteration:   6700, Loss function: 4.426, Average Loss: 4.725, avg. samples / sec: 1022.90
Iteration:   6720, Loss function: 4.587, Average Loss: 4.723, avg. samples / sec: 1021.00
Iteration:   6740, Loss function: 4.320, Average Loss: 4.721, avg. samples / sec: 1016.94
Iteration:   6760, Loss function: 4.788, Average Loss: 4.719, avg. samples / sec: 1015.47
Iteration:   6780, Loss function: 4.689, Average Loss: 4.717, avg. samples / sec: 1019.30
Iteration:   6800, Loss function: 4.695, Average Loss: 4.713, avg. samples / sec: 1021.86
Iteration:   6820, Loss function: 4.768, Average Loss: 4.712, avg. samples / sec: 1022.53
Iteration:   6840, Loss function: 4.635, Average Loss: 4.710, avg. samples / sec: 1025.17
Iteration:   6860, Loss function: 4.511, Average Loss: 4.708, avg. samples / sec: 1026.34
Iteration:   6880, Loss function: 4.630, Average Loss: 4.705, avg. samples / sec: 1024.63
Iteration:   6900, Loss function: 4.640, Average Loss: 4.704, avg. samples / sec: 1023.91
Iteration:   6920, Loss function: 4.983, Average Loss: 4.700, avg. samples / sec: 1024.28
Iteration:   6940, Loss function: 4.492, Average Loss: 4.698, avg. samples / sec: 1021.74
Iteration:   6960, Loss function: 4.437, Average Loss: 4.695, avg. samples / sec: 1027.10
Iteration:   6980, Loss function: 4.421, Average Loss: 4.694, avg. samples / sec: 1031.84
Iteration:   7000, Loss function: 4.688, Average Loss: 4.692, avg. samples / sec: 1029.56
Iteration:   7020, Loss function: 4.682, Average Loss: 4.690, avg. samples / sec: 1031.02
Iteration:   7040, Loss function: 4.920, Average Loss: 4.688, avg. samples / sec: 1029.97
Iteration:   7060, Loss function: 4.746, Average Loss: 4.686, avg. samples / sec: 1030.38
Iteration:   7080, Loss function: 4.676, Average Loss: 4.684, avg. samples / sec: 1032.79
Iteration:   7100, Loss function: 4.290, Average Loss: 4.683, avg. samples / sec: 1032.35
Iteration:   7120, Loss function: 4.586, Average Loss: 4.680, avg. samples / sec: 1032.46
Iteration:   7140, Loss function: 4.654, Average Loss: 4.678, avg. samples / sec: 1033.10
Iteration:   7160, Loss function: 4.761, Average Loss: 4.676, avg. samples / sec: 1032.96
Iteration:   7180, Loss function: 4.875, Average Loss: 4.674, avg. samples / sec: 1031.53
Iteration:   7200, Loss function: 4.532, Average Loss: 4.673, avg. samples / sec: 1030.88
:::MLLOG {"namespace": "", "time_ms": 1639762415188, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639762415188, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.707, Average Loss: 4.670, avg. samples / sec: 1031.18
Iteration:   7240, Loss function: 4.461, Average Loss: 4.666, avg. samples / sec: 1030.93
Iteration:   7260, Loss function: 4.742, Average Loss: 4.664, avg. samples / sec: 1033.28
Iteration:   7280, Loss function: 4.677, Average Loss: 4.661, avg. samples / sec: 1033.39
Iteration:   7300, Loss function: 4.596, Average Loss: 4.658, avg. samples / sec: 1033.11
Iteration:   7320, Loss function: 4.462, Average Loss: 4.656, avg. samples / sec: 1032.56
Iteration:   7340, Loss function: 4.768, Average Loss: 4.653, avg. samples / sec: 1031.41
Iteration:   7360, Loss function: 4.445, Average Loss: 4.650, avg. samples / sec: 1021.39
Iteration:   7380, Loss function: 4.558, Average Loss: 4.648, avg. samples / sec: 1021.86
Iteration:   7400, Loss function: 4.474, Average Loss: 4.647, avg. samples / sec: 1023.03
Iteration:   7420, Loss function: 4.542, Average Loss: 4.643, avg. samples / sec: 1024.09
Iteration:   7440, Loss function: 4.524, Average Loss: 4.641, avg. samples / sec: 1020.54
Iteration:   7460, Loss function: 4.536, Average Loss: 4.639, avg. samples / sec: 1021.35
Iteration:   7480, Loss function: 4.511, Average Loss: 4.637, avg. samples / sec: 1020.64
Iteration:   7500, Loss function: 4.422, Average Loss: 4.634, avg. samples / sec: 1021.26
Iteration:   7520, Loss function: 4.406, Average Loss: 4.630, avg. samples / sec: 1028.42
Iteration:   7540, Loss function: 4.737, Average Loss: 4.628, avg. samples / sec: 1033.21
Iteration:   7560, Loss function: 4.409, Average Loss: 4.627, avg. samples / sec: 1029.35
Iteration:   7580, Loss function: 4.330, Average Loss: 4.625, avg. samples / sec: 1032.92
Iteration:   7600, Loss function: 4.562, Average Loss: 4.622, avg. samples / sec: 1033.26
Iteration:   7620, Loss function: 4.587, Average Loss: 4.621, avg. samples / sec: 1033.89
Iteration:   7640, Loss function: 4.274, Average Loss: 4.618, avg. samples / sec: 1030.07
Iteration:   7660, Loss function: 4.138, Average Loss: 4.616, avg. samples / sec: 1032.95
Iteration:   7680, Loss function: 4.625, Average Loss: 4.615, avg. samples / sec: 1033.63
Iteration:   7700, Loss function: 4.379, Average Loss: 4.612, avg. samples / sec: 1033.17
Iteration:   7720, Loss function: 4.520, Average Loss: 4.609, avg. samples / sec: 1032.29
Iteration:   7740, Loss function: 4.215, Average Loss: 4.607, avg. samples / sec: 1031.16
Iteration:   7760, Loss function: 4.461, Average Loss: 4.604, avg. samples / sec: 1032.53
Iteration:   7780, Loss function: 4.494, Average Loss: 4.602, avg. samples / sec: 1030.55
Iteration:   7800, Loss function: 4.396, Average Loss: 4.600, avg. samples / sec: 1031.71
Iteration:   7820, Loss function: 4.438, Average Loss: 4.599, avg. samples / sec: 1032.83
Iteration:   7840, Loss function: 4.434, Average Loss: 4.597, avg. samples / sec: 1034.09
Iteration:   7860, Loss function: 4.435, Average Loss: 4.595, avg. samples / sec: 1031.99
Iteration:   7880, Loss function: 4.471, Average Loss: 4.594, avg. samples / sec: 1032.68
Iteration:   7900, Loss function: 4.623, Average Loss: 4.593, avg. samples / sec: 1032.05
Iteration:   7920, Loss function: 4.296, Average Loss: 4.591, avg. samples / sec: 1033.30
Iteration:   7940, Loss function: 4.489, Average Loss: 4.588, avg. samples / sec: 1032.72
Iteration:   7960, Loss function: 4.268, Average Loss: 4.586, avg. samples / sec: 1029.41
Iteration:   7980, Loss function: 4.790, Average Loss: 4.585, avg. samples / sec: 1032.66
Iteration:   8000, Loss function: 4.708, Average Loss: 4.584, avg. samples / sec: 1032.08
Iteration:   8020, Loss function: 4.575, Average Loss: 4.583, avg. samples / sec: 1029.32
Iteration:   8040, Loss function: 4.708, Average Loss: 4.581, avg. samples / sec: 1032.07
Iteration:   8060, Loss function: 4.827, Average Loss: 4.580, avg. samples / sec: 1033.30
Iteration:   8080, Loss function: 4.490, Average Loss: 4.580, avg. samples / sec: 1033.41
Iteration:   8100, Loss function: 4.554, Average Loss: 4.578, avg. samples / sec: 1031.00
Iteration:   8120, Loss function: 4.548, Average Loss: 4.576, avg. samples / sec: 1034.31
Iteration:   8140, Loss function: 4.196, Average Loss: 4.575, avg. samples / sec: 1029.98
Iteration:   8160, Loss function: 4.240, Average Loss: 4.572, avg. samples / sec: 1033.45
Iteration:   8180, Loss function: 4.649, Average Loss: 4.571, avg. samples / sec: 1034.17
Iteration:   8200, Loss function: 4.587, Average Loss: 4.570, avg. samples / sec: 1028.23
Iteration:   8220, Loss function: 4.898, Average Loss: 4.570, avg. samples / sec: 1033.83
:::MLLOG {"namespace": "", "time_ms": 1639762529025, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639762529026, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.414, Average Loss: 4.567, avg. samples / sec: 1031.81
Iteration:   8260, Loss function: 4.434, Average Loss: 4.564, avg. samples / sec: 1032.34
Iteration:   8280, Loss function: 4.537, Average Loss: 4.561, avg. samples / sec: 1033.06
Iteration:   8300, Loss function: 4.164, Average Loss: 4.558, avg. samples / sec: 1033.62
Iteration:   8320, Loss function: 4.750, Average Loss: 4.555, avg. samples / sec: 1033.66
Iteration:   8340, Loss function: 4.575, Average Loss: 4.553, avg. samples / sec: 1031.56
Iteration:   8360, Loss function: 4.550, Average Loss: 4.550, avg. samples / sec: 1031.90
Iteration:   8380, Loss function: 4.560, Average Loss: 4.548, avg. samples / sec: 1033.22
Iteration:   8400, Loss function: 4.382, Average Loss: 4.546, avg. samples / sec: 1032.68
Iteration:   8420, Loss function: 4.260, Average Loss: 4.543, avg. samples / sec: 1031.40
Iteration:   8440, Loss function: 4.654, Average Loss: 4.542, avg. samples / sec: 1034.12
Iteration:   8460, Loss function: 4.623, Average Loss: 4.541, avg. samples / sec: 1034.18
Iteration:   8480, Loss function: 4.675, Average Loss: 4.539, avg. samples / sec: 1031.61
Iteration:   8500, Loss function: 4.137, Average Loss: 4.536, avg. samples / sec: 1032.20
Iteration:   8520, Loss function: 4.276, Average Loss: 4.533, avg. samples / sec: 1032.14
Iteration:   8540, Loss function: 4.734, Average Loss: 4.530, avg. samples / sec: 1028.88
Iteration:   8560, Loss function: 4.423, Average Loss: 4.528, avg. samples / sec: 1018.76
Iteration:   8580, Loss function: 4.515, Average Loss: 4.526, avg. samples / sec: 1020.30
Iteration:   8600, Loss function: 4.409, Average Loss: 4.525, avg. samples / sec: 1021.18
Iteration:   8620, Loss function: 4.354, Average Loss: 4.523, avg. samples / sec: 1017.62
Iteration:   8640, Loss function: 4.273, Average Loss: 4.522, avg. samples / sec: 1019.26
Iteration:   8660, Loss function: 4.283, Average Loss: 4.521, avg. samples / sec: 1021.73
Iteration:   8680, Loss function: 4.447, Average Loss: 4.519, avg. samples / sec: 1022.19
Iteration:   8700, Loss function: 4.487, Average Loss: 4.519, avg. samples / sec: 1016.84
Iteration:   8720, Loss function: 4.471, Average Loss: 4.517, avg. samples / sec: 1022.12
Iteration:   8740, Loss function: 4.403, Average Loss: 4.515, avg. samples / sec: 1022.70
Iteration:   8760, Loss function: 4.256, Average Loss: 4.515, avg. samples / sec: 1021.30
Iteration:   8780, Loss function: 4.443, Average Loss: 4.513, avg. samples / sec: 1021.63
Iteration:   8800, Loss function: 4.634, Average Loss: 4.512, avg. samples / sec: 1022.75
Iteration:   8820, Loss function: 4.191, Average Loss: 4.509, avg. samples / sec: 1020.76
Iteration:   8840, Loss function: 4.504, Average Loss: 4.508, avg. samples / sec: 1021.06
Iteration:   8860, Loss function: 4.782, Average Loss: 4.507, avg. samples / sec: 1020.98
Iteration:   8880, Loss function: 4.631, Average Loss: 4.505, avg. samples / sec: 1023.08
Iteration:   8900, Loss function: 4.466, Average Loss: 4.504, avg. samples / sec: 1027.73
Iteration:   8920, Loss function: 4.558, Average Loss: 4.502, avg. samples / sec: 1032.46
Iteration:   8940, Loss function: 4.363, Average Loss: 4.501, avg. samples / sec: 1030.99
Iteration:   8960, Loss function: 4.447, Average Loss: 4.500, avg. samples / sec: 1032.78
Iteration:   8980, Loss function: 4.260, Average Loss: 4.498, avg. samples / sec: 1032.59
Iteration:   9000, Loss function: 4.512, Average Loss: 4.497, avg. samples / sec: 1032.92
Iteration:   9020, Loss function: 4.707, Average Loss: 4.497, avg. samples / sec: 1030.52
Iteration:   9040, Loss function: 4.528, Average Loss: 4.495, avg. samples / sec: 1031.30
Iteration:   9060, Loss function: 4.181, Average Loss: 4.494, avg. samples / sec: 1031.22
Iteration:   9080, Loss function: 4.722, Average Loss: 4.493, avg. samples / sec: 1030.85
Iteration:   9100, Loss function: 4.269, Average Loss: 4.492, avg. samples / sec: 1032.60
Iteration:   9120, Loss function: 4.347, Average Loss: 4.491, avg. samples / sec: 1033.86
Iteration:   9140, Loss function: 4.594, Average Loss: 4.490, avg. samples / sec: 1034.70
Iteration:   9160, Loss function: 4.407, Average Loss: 4.488, avg. samples / sec: 1031.92
Iteration:   9180, Loss function: 4.248, Average Loss: 4.488, avg. samples / sec: 1032.55
Iteration:   9200, Loss function: 4.377, Average Loss: 4.487, avg. samples / sec: 1032.93
Iteration:   9220, Loss function: 4.301, Average Loss: 4.487, avg. samples / sec: 1031.22
Iteration:   9240, Loss function: 4.501, Average Loss: 4.487, avg. samples / sec: 1033.30
:::MLLOG {"namespace": "", "time_ms": 1639762642981, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639762642982, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.531, Average Loss: 4.484, avg. samples / sec: 1033.62
Iteration:   9280, Loss function: 4.311, Average Loss: 4.483, avg. samples / sec: 1033.94
Iteration:   9300, Loss function: 4.547, Average Loss: 4.480, avg. samples / sec: 1032.41
Iteration:   9320, Loss function: 4.435, Average Loss: 4.477, avg. samples / sec: 1033.59
Iteration:   9340, Loss function: 4.494, Average Loss: 4.476, avg. samples / sec: 1033.15
Iteration:   9360, Loss function: 4.020, Average Loss: 4.473, avg. samples / sec: 1033.37
Iteration:   9380, Loss function: 4.268, Average Loss: 4.471, avg. samples / sec: 1032.52
Iteration:   9400, Loss function: 4.330, Average Loss: 4.469, avg. samples / sec: 1032.90
Iteration:   9420, Loss function: 4.328, Average Loss: 4.468, avg. samples / sec: 1031.89
Iteration:   9440, Loss function: 4.473, Average Loss: 4.465, avg. samples / sec: 1032.96
Iteration:   9460, Loss function: 4.271, Average Loss: 4.464, avg. samples / sec: 1032.38
Iteration:   9480, Loss function: 4.500, Average Loss: 4.462, avg. samples / sec: 1032.93
Iteration:   9500, Loss function: 4.525, Average Loss: 4.460, avg. samples / sec: 1032.38
Iteration:   9520, Loss function: 4.466, Average Loss: 4.458, avg. samples / sec: 1031.87
Iteration:   9540, Loss function: 4.330, Average Loss: 4.456, avg. samples / sec: 1030.61
Iteration:   9560, Loss function: 4.571, Average Loss: 4.453, avg. samples / sec: 1032.63
Iteration:   9580, Loss function: 4.275, Average Loss: 4.452, avg. samples / sec: 1031.82
Iteration:   9600, Loss function: 4.117, Average Loss: 4.450, avg. samples / sec: 1030.85
Iteration:   9620, Loss function: 4.385, Average Loss: 4.449, avg. samples / sec: 1030.99
Iteration:   9640, Loss function: 4.566, Average Loss: 4.448, avg. samples / sec: 1031.49
Iteration:   9660, Loss function: 4.169, Average Loss: 4.448, avg. samples / sec: 1033.80
Iteration:   9680, Loss function: 4.292, Average Loss: 4.446, avg. samples / sec: 1030.16
Iteration:   9700, Loss function: 4.526, Average Loss: 4.446, avg. samples / sec: 1031.18
Iteration:   9720, Loss function: 4.455, Average Loss: 4.445, avg. samples / sec: 1031.24
Iteration:   9740, Loss function: 4.635, Average Loss: 4.444, avg. samples / sec: 1032.28
Iteration:   9760, Loss function: 4.306, Average Loss: 4.443, avg. samples / sec: 1033.81
Iteration:   9780, Loss function: 4.396, Average Loss: 4.441, avg. samples / sec: 1033.40
Iteration:   9800, Loss function: 4.397, Average Loss: 4.440, avg. samples / sec: 1031.16
Iteration:   9820, Loss function: 4.135, Average Loss: 4.437, avg. samples / sec: 1032.84
Iteration:   9840, Loss function: 4.439, Average Loss: 4.436, avg. samples / sec: 1033.52
Iteration:   9860, Loss function: 4.449, Average Loss: 4.435, avg. samples / sec: 1032.75
Iteration:   9880, Loss function: 4.225, Average Loss: 4.433, avg. samples / sec: 1032.90
Iteration:   9900, Loss function: 4.586, Average Loss: 4.432, avg. samples / sec: 1032.01
Iteration:   9920, Loss function: 4.911, Average Loss: 4.431, avg. samples / sec: 1029.34
Iteration:   9940, Loss function: 4.272, Average Loss: 4.429, avg. samples / sec: 1031.57
Iteration:   9960, Loss function: 4.338, Average Loss: 4.428, avg. samples / sec: 1032.93
Iteration:   9980, Loss function: 4.475, Average Loss: 4.428, avg. samples / sec: 1034.80
Iteration:  10000, Loss function: 4.093, Average Loss: 4.426, avg. samples / sec: 1033.63
Iteration:  10020, Loss function: 4.638, Average Loss: 4.426, avg. samples / sec: 1033.79
Iteration:  10040, Loss function: 4.405, Average Loss: 4.424, avg. samples / sec: 1032.83
Iteration:  10060, Loss function: 4.147, Average Loss: 4.422, avg. samples / sec: 1030.66
Iteration:  10080, Loss function: 4.363, Average Loss: 4.421, avg. samples / sec: 1031.45
Iteration:  10100, Loss function: 4.042, Average Loss: 4.420, avg. samples / sec: 1032.97
Iteration:  10120, Loss function: 4.198, Average Loss: 4.419, avg. samples / sec: 1033.09
Iteration:  10140, Loss function: 4.240, Average Loss: 4.417, avg. samples / sec: 1032.83
Iteration:  10160, Loss function: 4.442, Average Loss: 4.417, avg. samples / sec: 1031.66
Iteration:  10180, Loss function: 4.671, Average Loss: 4.415, avg. samples / sec: 1032.85
Iteration:  10200, Loss function: 4.218, Average Loss: 4.414, avg. samples / sec: 1032.82
Iteration:  10220, Loss function: 4.540, Average Loss: 4.413, avg. samples / sec: 1032.16
Iteration:  10240, Loss function: 4.098, Average Loss: 4.412, avg. samples / sec: 1031.16
Iteration:  10260, Loss function: 4.155, Average Loss: 4.411, avg. samples / sec: 1030.38
Iteration:  10280, Loss function: 4.698, Average Loss: 4.409, avg. samples / sec: 1027.48
:::MLLOG {"namespace": "", "time_ms": 1639762756633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
Predicting Ended, total time: 24.09 s
:::MLLOG {"namespace": "", "time_ms": 1639762780736, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639762780775, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 11, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762780775, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Loading and preparing results...
DONE (t=0.69s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  10300, Loss function: 4.478, Average Loss: 4.407, avg. samples / sec: 86.64
DONE (t=2.04s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.13928
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27102
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23070
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16135
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23952
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25342
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25342
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.13928 AP goal: 0.10000
Iteration:  10320, Loss function: 4.238, Average Loss: 4.406, avg. samples / sec: 1020.46
:::MLLOG {"namespace": "", "time_ms": 1639762784519, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784519, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.13928342923756157, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784520, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784655, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
+ [[ fast == \d\r\y ]]
++ date
Fri Dec 17 17:39:45 UTC 2021: done waiting for 1 executions
+ echo 'Fri Dec 17 17:39:45 UTC 2021: done waiting for 1 executions'
+ ls /tmp/benchmark_all.log
/tmp/benchmark_all.log
+ grep . /tmp/benchmark_all.log
:::MLLOG {"namespace": "", "time_ms": 1639761509041, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639761509172, "event_type": "POINT_IN_TIME", "key": "seed", "value": 493197917, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 493197917
:::MLLOG {"namespace": "", "time_ms": 1639761510718, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639761510718, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.
Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639761510722, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639761534587, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639761534587, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
:::MLLOG {"namespace": "", "time_ms": 1639761535799, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639761535800, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.12s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639761536033, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639761536033, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639761536034, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.521, Average Loss: 0.023, avg. samples / sec: 4.55
Iteration:     20, Loss function: 21.056, Average Loss: 0.454, avg. samples / sec: 926.55
Iteration:     40, Loss function: 20.858, Average Loss: 0.856, avg. samples / sec: 982.43
Iteration:     60, Loss function: 20.409, Average Loss: 1.247, avg. samples / sec: 930.54
Iteration:     80, Loss function: 20.301, Average Loss: 1.623, avg. samples / sec: 965.21
Iteration:    100, Loss function: 16.952, Average Loss: 1.964, avg. samples / sec: 957.47
Iteration:    120, Loss function: 12.147, Average Loss: 2.190, avg. samples / sec: 924.98
Iteration:    140, Loss function: 9.776, Average Loss: 2.354, avg. samples / sec: 948.21
Iteration:    160, Loss function: 9.389, Average Loss: 2.495, avg. samples / sec: 931.00
Iteration:    180, Loss function: 8.962, Average Loss: 2.625, avg. samples / sec: 943.06
Iteration:    200, Loss function: 8.620, Average Loss: 2.750, avg. samples / sec: 677.95
Iteration:    220, Loss function: 8.598, Average Loss: 2.870, avg. samples / sec: 940.60
Iteration:    240, Loss function: 8.739, Average Loss: 2.986, avg. samples / sec: 897.63
Iteration:    260, Loss function: 8.782, Average Loss: 3.100, avg. samples / sec: 959.73
Iteration:    280, Loss function: 8.532, Average Loss: 3.210, avg. samples / sec: 917.04
Iteration:    300, Loss function: 8.339, Average Loss: 3.313, avg. samples / sec: 957.48
Iteration:    320, Loss function: 8.182, Average Loss: 3.412, avg. samples / sec: 932.85
Iteration:    340, Loss function: 8.388, Average Loss: 3.509, avg. samples / sec: 946.19
Iteration:    360, Loss function: 8.190, Average Loss: 3.601, avg. samples / sec: 924.35
Iteration:    380, Loss function: 8.120, Average Loss: 3.691, avg. samples / sec: 938.18
Iteration:    400, Loss function: 7.986, Average Loss: 3.775, avg. samples / sec: 915.21
Iteration:    420, Loss function: 7.652, Average Loss: 3.856, avg. samples / sec: 947.16
Iteration:    440, Loss function: 7.698, Average Loss: 3.934, avg. samples / sec: 951.44
Iteration:    460, Loss function: 7.866, Average Loss: 4.011, avg. samples / sec: 968.05
Iteration:    480, Loss function: 7.472, Average Loss: 4.084, avg. samples / sec: 940.35
Iteration:    500, Loss function: 7.634, Average Loss: 4.156, avg. samples / sec: 910.89
Iteration:    520, Loss function: 7.576, Average Loss: 4.225, avg. samples / sec: 976.28
Iteration:    540, Loss function: 7.435, Average Loss: 4.288, avg. samples / sec: 964.29
Iteration:    560, Loss function: 7.165, Average Loss: 4.350, avg. samples / sec: 938.21
Iteration:    580, Loss function: 7.399, Average Loss: 4.410, avg. samples / sec: 982.89
Iteration:    600, Loss function: 7.334, Average Loss: 4.469, avg. samples / sec: 969.44
Iteration:    620, Loss function: 7.254, Average Loss: 4.524, avg. samples / sec: 966.16
Iteration:    640, Loss function: 6.810, Average Loss: 4.578, avg. samples / sec: 960.71
Iteration:    660, Loss function: 7.140, Average Loss: 4.630, avg. samples / sec: 938.66
Iteration:    680, Loss function: 7.194, Average Loss: 4.681, avg. samples / sec: 940.89
Iteration:    700, Loss function: 7.020, Average Loss: 4.730, avg. samples / sec: 729.96
Iteration:    720, Loss function: 7.152, Average Loss: 4.778, avg. samples / sec: 914.80
Iteration:    740, Loss function: 6.872, Average Loss: 4.822, avg. samples / sec: 974.00
Iteration:    760, Loss function: 6.987, Average Loss: 4.864, avg. samples / sec: 984.15
Iteration:    780, Loss function: 6.770, Average Loss: 4.906, avg. samples / sec: 936.95
Iteration:    800, Loss function: 7.135, Average Loss: 4.944, avg. samples / sec: 985.02
Iteration:    820, Loss function: 6.925, Average Loss: 4.981, avg. samples / sec: 955.24
Iteration:    840, Loss function: 6.787, Average Loss: 5.017, avg. samples / sec: 961.40
Iteration:    860, Loss function: 6.795, Average Loss: 5.050, avg. samples / sec: 979.19
Iteration:    880, Loss function: 6.669, Average Loss: 5.082, avg. samples / sec: 859.45
Iteration:    900, Loss function: 6.770, Average Loss: 5.112, avg. samples / sec: 971.36
Iteration:    920, Loss function: 6.551, Average Loss: 5.141, avg. samples / sec: 976.67
Iteration:    940, Loss function: 6.602, Average Loss: 5.171, avg. samples / sec: 894.11
Iteration:    960, Loss function: 6.218, Average Loss: 5.199, avg. samples / sec: 880.55
Iteration:    980, Loss function: 6.601, Average Loss: 5.226, avg. samples / sec: 946.66
Iteration:   1000, Loss function: 6.507, Average Loss: 5.251, avg. samples / sec: 976.33
Iteration:   1020, Loss function: 6.414, Average Loss: 5.274, avg. samples / sec: 911.21
:::MLLOG {"namespace": "", "time_ms": 1639761661933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639761661934, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.477, Average Loss: 5.297, avg. samples / sec: 933.25
Iteration:   1060, Loss function: 6.307, Average Loss: 5.319, avg. samples / sec: 924.09
Iteration:   1080, Loss function: 6.193, Average Loss: 5.340, avg. samples / sec: 885.57
Iteration:   1100, Loss function: 6.368, Average Loss: 5.360, avg. samples / sec: 933.17
Iteration:   1120, Loss function: 6.301, Average Loss: 5.379, avg. samples / sec: 964.38
Iteration:   1140, Loss function: 6.506, Average Loss: 5.398, avg. samples / sec: 982.64
Iteration:   1160, Loss function: 6.264, Average Loss: 5.414, avg. samples / sec: 985.64
Iteration:   1180, Loss function: 6.154, Average Loss: 5.430, avg. samples / sec: 943.17
Iteration:   1200, Loss function: 6.142, Average Loss: 5.446, avg. samples / sec: 929.47
Iteration:   1220, Loss function: 6.173, Average Loss: 5.460, avg. samples / sec: 928.04
Iteration:   1240, Loss function: 6.053, Average Loss: 5.473, avg. samples / sec: 960.38
Iteration:   1260, Loss function: 6.043, Average Loss: 5.484, avg. samples / sec: 970.27
Iteration:   1280, Loss function: 5.875, Average Loss: 5.496, avg. samples / sec: 952.03
Iteration:   1300, Loss function: 6.066, Average Loss: 5.508, avg. samples / sec: 962.64
Iteration:   1320, Loss function: 6.150, Average Loss: 5.519, avg. samples / sec: 973.30
Iteration:   1340, Loss function: 5.732, Average Loss: 5.528, avg. samples / sec: 977.65
Iteration:   1360, Loss function: 6.032, Average Loss: 5.539, avg. samples / sec: 914.67
Iteration:   1380, Loss function: 6.082, Average Loss: 5.548, avg. samples / sec: 952.69
Iteration:   1400, Loss function: 6.010, Average Loss: 5.557, avg. samples / sec: 986.16
Iteration:   1420, Loss function: 5.977, Average Loss: 5.564, avg. samples / sec: 974.58
Iteration:   1440, Loss function: 6.334, Average Loss: 5.573, avg. samples / sec: 954.26
Iteration:   1460, Loss function: 6.326, Average Loss: 5.581, avg. samples / sec: 899.81
Iteration:   1480, Loss function: 5.757, Average Loss: 5.588, avg. samples / sec: 969.44
Iteration:   1500, Loss function: 5.928, Average Loss: 5.596, avg. samples / sec: 976.47
Iteration:   1520, Loss function: 5.886, Average Loss: 5.601, avg. samples / sec: 992.22
Iteration:   1540, Loss function: 6.122, Average Loss: 5.605, avg. samples / sec: 978.51
Iteration:   1560, Loss function: 5.896, Average Loss: 5.609, avg. samples / sec: 965.27
Iteration:   1580, Loss function: 5.630, Average Loss: 5.615, avg. samples / sec: 993.99
Iteration:   1600, Loss function: 6.162, Average Loss: 5.620, avg. samples / sec: 963.78
Iteration:   1620, Loss function: 5.731, Average Loss: 5.624, avg. samples / sec: 975.86
Iteration:   1640, Loss function: 5.896, Average Loss: 5.628, avg. samples / sec: 985.25
Iteration:   1660, Loss function: 5.968, Average Loss: 5.631, avg. samples / sec: 911.72
Iteration:   1680, Loss function: 5.753, Average Loss: 5.634, avg. samples / sec: 931.79
Iteration:   1700, Loss function: 5.401, Average Loss: 5.637, avg. samples / sec: 990.79
Iteration:   1720, Loss function: 5.578, Average Loss: 5.639, avg. samples / sec: 968.29
Iteration:   1740, Loss function: 5.872, Average Loss: 5.641, avg. samples / sec: 958.37
Iteration:   1760, Loss function: 5.616, Average Loss: 5.642, avg. samples / sec: 967.21
Iteration:   1780, Loss function: 5.700, Average Loss: 5.643, avg. samples / sec: 878.38
Iteration:   1800, Loss function: 5.508, Average Loss: 5.647, avg. samples / sec: 907.40
Iteration:   1820, Loss function: 6.203, Average Loss: 5.648, avg. samples / sec: 990.40
Iteration:   1840, Loss function: 5.861, Average Loss: 5.649, avg. samples / sec: 956.59
Iteration:   1860, Loss function: 5.627, Average Loss: 5.649, avg. samples / sec: 893.66
Iteration:   1880, Loss function: 6.074, Average Loss: 5.651, avg. samples / sec: 970.19
Iteration:   1900, Loss function: 5.723, Average Loss: 5.651, avg. samples / sec: 961.07
Iteration:   1920, Loss function: 5.949, Average Loss: 5.651, avg. samples / sec: 978.15
Iteration:   1940, Loss function: 5.865, Average Loss: 5.651, avg. samples / sec: 983.52
Iteration:   1960, Loss function: 5.518, Average Loss: 5.651, avg. samples / sec: 834.74
Iteration:   1980, Loss function: 5.609, Average Loss: 5.650, avg. samples / sec: 933.70
Iteration:   2000, Loss function: 5.681, Average Loss: 5.649, avg. samples / sec: 951.97
Iteration:   2020, Loss function: 5.531, Average Loss: 5.647, avg. samples / sec: 953.96
Iteration:   2040, Loss function: 5.715, Average Loss: 5.647, avg. samples / sec: 897.55
:::MLLOG {"namespace": "", "time_ms": 1639761785481, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639761785483, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.462, Average Loss: 5.645, avg. samples / sec: 938.28
Iteration:   2080, Loss function: 5.118, Average Loss: 5.642, avg. samples / sec: 980.14
Iteration:   2100, Loss function: 5.468, Average Loss: 5.640, avg. samples / sec: 897.02
Iteration:   2120, Loss function: 5.335, Average Loss: 5.637, avg. samples / sec: 974.67
Iteration:   2140, Loss function: 5.471, Average Loss: 5.634, avg. samples / sec: 986.15
Iteration:   2160, Loss function: 5.441, Average Loss: 5.632, avg. samples / sec: 961.94
Iteration:   2180, Loss function: 5.505, Average Loss: 5.629, avg. samples / sec: 991.42
Iteration:   2200, Loss function: 5.663, Average Loss: 5.626, avg. samples / sec: 981.23
Iteration:   2220, Loss function: 5.651, Average Loss: 5.624, avg. samples / sec: 913.61
Iteration:   2240, Loss function: 5.482, Average Loss: 5.622, avg. samples / sec: 966.50
Iteration:   2260, Loss function: 5.332, Average Loss: 5.618, avg. samples / sec: 978.37
Iteration:   2280, Loss function: 5.256, Average Loss: 5.614, avg. samples / sec: 964.58
Iteration:   2300, Loss function: 5.089, Average Loss: 5.611, avg. samples / sec: 889.05
Iteration:   2320, Loss function: 5.350, Average Loss: 5.608, avg. samples / sec: 920.92
Iteration:   2340, Loss function: 5.448, Average Loss: 5.603, avg. samples / sec: 953.46
Iteration:   2360, Loss function: 5.270, Average Loss: 5.600, avg. samples / sec: 980.85
Iteration:   2380, Loss function: 5.425, Average Loss: 5.596, avg. samples / sec: 969.10
Iteration:   2400, Loss function: 5.649, Average Loss: 5.592, avg. samples / sec: 941.39
Iteration:   2420, Loss function: 5.448, Average Loss: 5.588, avg. samples / sec: 929.19
Iteration:   2440, Loss function: 5.489, Average Loss: 5.585, avg. samples / sec: 921.31
Iteration:   2460, Loss function: 5.187, Average Loss: 5.581, avg. samples / sec: 954.01
Iteration:   2480, Loss function: 5.442, Average Loss: 5.577, avg. samples / sec: 896.68
Iteration:   2500, Loss function: 5.347, Average Loss: 5.574, avg. samples / sec: 970.53
Iteration:   2520, Loss function: 5.240, Average Loss: 5.568, avg. samples / sec: 904.32
Iteration:   2540, Loss function: 5.476, Average Loss: 5.565, avg. samples / sec: 983.50
Iteration:   2560, Loss function: 5.285, Average Loss: 5.561, avg. samples / sec: 947.66
Iteration:   2580, Loss function: 5.186, Average Loss: 5.558, avg. samples / sec: 978.77
Iteration:   2600, Loss function: 5.392, Average Loss: 5.554, avg. samples / sec: 969.53
Iteration:   2620, Loss function: 5.391, Average Loss: 5.549, avg. samples / sec: 980.48
Iteration:   2640, Loss function: 5.311, Average Loss: 5.546, avg. samples / sec: 983.03
Iteration:   2660, Loss function: 5.217, Average Loss: 5.543, avg. samples / sec: 983.42
Iteration:   2680, Loss function: 5.315, Average Loss: 5.540, avg. samples / sec: 976.19
Iteration:   2700, Loss function: 5.228, Average Loss: 5.535, avg. samples / sec: 890.07
Iteration:   2720, Loss function: 5.323, Average Loss: 5.530, avg. samples / sec: 969.43
Iteration:   2740, Loss function: 5.173, Average Loss: 5.527, avg. samples / sec: 933.18
Iteration:   2760, Loss function: 5.032, Average Loss: 5.521, avg. samples / sec: 954.35
Iteration:   2780, Loss function: 5.490, Average Loss: 5.518, avg. samples / sec: 938.89
Iteration:   2800, Loss function: 5.240, Average Loss: 5.513, avg. samples / sec: 962.08
Iteration:   2820, Loss function: 5.517, Average Loss: 5.508, avg. samples / sec: 966.17
Iteration:   2840, Loss function: 5.029, Average Loss: 5.504, avg. samples / sec: 965.38
Iteration:   2860, Loss function: 5.073, Average Loss: 5.499, avg. samples / sec: 973.65
Iteration:   2880, Loss function: 5.111, Average Loss: 5.494, avg. samples / sec: 979.80
Iteration:   2900, Loss function: 4.898, Average Loss: 5.489, avg. samples / sec: 988.12
Iteration:   2920, Loss function: 5.221, Average Loss: 5.484, avg. samples / sec: 955.24
Iteration:   2940, Loss function: 4.853, Average Loss: 5.479, avg. samples / sec: 934.75
Iteration:   2960, Loss function: 5.333, Average Loss: 5.475, avg. samples / sec: 911.77
Iteration:   2980, Loss function: 5.323, Average Loss: 5.471, avg. samples / sec: 985.24
Iteration:   3000, Loss function: 5.339, Average Loss: 5.466, avg. samples / sec: 980.27
Iteration:   3020, Loss function: 5.325, Average Loss: 5.460, avg. samples / sec: 954.27
Iteration:   3040, Loss function: 5.240, Average Loss: 5.455, avg. samples / sec: 938.65
Iteration:   3060, Loss function: 4.932, Average Loss: 5.449, avg. samples / sec: 966.16
Iteration:   3080, Loss function: 4.961, Average Loss: 5.444, avg. samples / sec: 984.36
:::MLLOG {"namespace": "", "time_ms": 1639761908173, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639761908186, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.241, Average Loss: 5.439, avg. samples / sec: 968.55
Iteration:   3120, Loss function: 5.049, Average Loss: 5.433, avg. samples / sec: 956.37
Iteration:   3140, Loss function: 5.256, Average Loss: 5.429, avg. samples / sec: 978.43
Iteration:   3160, Loss function: 5.324, Average Loss: 5.422, avg. samples / sec: 977.15
Iteration:   3180, Loss function: 4.935, Average Loss: 5.416, avg. samples / sec: 972.92
Iteration:   3200, Loss function: 5.170, Average Loss: 5.410, avg. samples / sec: 968.65
Iteration:   3220, Loss function: 5.196, Average Loss: 5.404, avg. samples / sec: 974.76
Iteration:   3240, Loss function: 5.288, Average Loss: 5.399, avg. samples / sec: 918.54
Iteration:   3260, Loss function: 5.040, Average Loss: 5.394, avg. samples / sec: 945.25
Iteration:   3280, Loss function: 4.855, Average Loss: 5.388, avg. samples / sec: 878.82
Iteration:   3300, Loss function: 4.786, Average Loss: 5.382, avg. samples / sec: 923.04
Iteration:   3320, Loss function: 5.063, Average Loss: 5.376, avg. samples / sec: 951.71
Iteration:   3340, Loss function: 5.146, Average Loss: 5.373, avg. samples / sec: 973.40
Iteration:   3360, Loss function: 5.271, Average Loss: 5.366, avg. samples / sec: 967.87
Iteration:   3380, Loss function: 5.321, Average Loss: 5.360, avg. samples / sec: 948.76
Iteration:   3400, Loss function: 4.856, Average Loss: 5.355, avg. samples / sec: 979.87
Iteration:   3420, Loss function: 5.207, Average Loss: 5.349, avg. samples / sec: 961.59
Iteration:   3440, Loss function: 4.848, Average Loss: 5.344, avg. samples / sec: 905.45
Iteration:   3460, Loss function: 5.040, Average Loss: 5.339, avg. samples / sec: 966.13
Iteration:   3480, Loss function: 5.218, Average Loss: 5.333, avg. samples / sec: 962.95
Iteration:   3500, Loss function: 5.241, Average Loss: 5.329, avg. samples / sec: 967.35
Iteration:   3520, Loss function: 5.092, Average Loss: 5.326, avg. samples / sec: 976.71
Iteration:   3540, Loss function: 4.943, Average Loss: 5.321, avg. samples / sec: 981.61
Iteration:   3560, Loss function: 5.101, Average Loss: 5.317, avg. samples / sec: 974.56
Iteration:   3580, Loss function: 5.165, Average Loss: 5.314, avg. samples / sec: 990.25
Iteration:   3600, Loss function: 5.202, Average Loss: 5.307, avg. samples / sec: 992.60
Iteration:   3620, Loss function: 4.859, Average Loss: 5.303, avg. samples / sec: 955.75
Iteration:   3640, Loss function: 4.717, Average Loss: 5.298, avg. samples / sec: 972.78
Iteration:   3660, Loss function: 5.186, Average Loss: 5.293, avg. samples / sec: 928.70
Iteration:   3680, Loss function: 5.235, Average Loss: 5.288, avg. samples / sec: 973.06
Iteration:   3700, Loss function: 5.285, Average Loss: 5.283, avg. samples / sec: 887.88
Iteration:   3720, Loss function: 4.948, Average Loss: 5.276, avg. samples / sec: 958.41
Iteration:   3740, Loss function: 5.106, Average Loss: 5.272, avg. samples / sec: 883.81
Iteration:   3760, Loss function: 5.028, Average Loss: 5.267, avg. samples / sec: 927.86
Iteration:   3780, Loss function: 5.048, Average Loss: 5.263, avg. samples / sec: 970.01
Iteration:   3800, Loss function: 4.995, Average Loss: 5.259, avg. samples / sec: 940.52
Iteration:   3820, Loss function: 5.264, Average Loss: 5.254, avg. samples / sec: 987.47
Iteration:   3840, Loss function: 4.922, Average Loss: 5.249, avg. samples / sec: 920.81
Iteration:   3860, Loss function: 4.783, Average Loss: 5.244, avg. samples / sec: 958.07
Iteration:   3880, Loss function: 5.130, Average Loss: 5.239, avg. samples / sec: 954.78
Iteration:   3900, Loss function: 5.159, Average Loss: 5.234, avg. samples / sec: 990.32
Iteration:   3920, Loss function: 5.114, Average Loss: 5.228, avg. samples / sec: 966.12
Iteration:   3940, Loss function: 4.923, Average Loss: 5.223, avg. samples / sec: 963.46
Iteration:   3960, Loss function: 5.027, Average Loss: 5.218, avg. samples / sec: 983.12
Iteration:   3980, Loss function: 4.903, Average Loss: 5.213, avg. samples / sec: 974.56
Iteration:   4000, Loss function: 5.092, Average Loss: 5.209, avg. samples / sec: 965.03
Iteration:   4020, Loss function: 5.079, Average Loss: 5.204, avg. samples / sec: 878.64
Iteration:   4040, Loss function: 5.089, Average Loss: 5.200, avg. samples / sec: 894.37
Iteration:   4060, Loss function: 5.066, Average Loss: 5.197, avg. samples / sec: 899.66
Iteration:   4080, Loss function: 5.168, Average Loss: 5.192, avg. samples / sec: 924.17
Iteration:   4100, Loss function: 5.031, Average Loss: 5.190, avg. samples / sec: 961.74
:::MLLOG {"namespace": "", "time_ms": 1639762031566, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639762031567, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.088, Average Loss: 5.187, avg. samples / sec: 924.11
Iteration:   4140, Loss function: 4.896, Average Loss: 5.181, avg. samples / sec: 919.19
Iteration:   4160, Loss function: 4.918, Average Loss: 5.175, avg. samples / sec: 915.46
Iteration:   4180, Loss function: 5.081, Average Loss: 5.170, avg. samples / sec: 965.08
Iteration:   4200, Loss function: 4.723, Average Loss: 5.165, avg. samples / sec: 960.54
Iteration:   4220, Loss function: 4.830, Average Loss: 5.159, avg. samples / sec: 958.95
Iteration:   4240, Loss function: 4.834, Average Loss: 5.154, avg. samples / sec: 959.86
Iteration:   4260, Loss function: 5.074, Average Loss: 5.150, avg. samples / sec: 970.47
Iteration:   4280, Loss function: 4.988, Average Loss: 5.144, avg. samples / sec: 933.00
Iteration:   4300, Loss function: 4.811, Average Loss: 5.138, avg. samples / sec: 984.21
Iteration:   4320, Loss function: 4.839, Average Loss: 5.133, avg. samples / sec: 976.33
Iteration:   4340, Loss function: 4.829, Average Loss: 5.128, avg. samples / sec: 977.04
Iteration:   4360, Loss function: 4.868, Average Loss: 5.124, avg. samples / sec: 967.72
Iteration:   4380, Loss function: 5.041, Average Loss: 5.119, avg. samples / sec: 976.55
Iteration:   4400, Loss function: 4.836, Average Loss: 5.115, avg. samples / sec: 976.72
Iteration:   4420, Loss function: 4.682, Average Loss: 5.109, avg. samples / sec: 984.82
Iteration:   4440, Loss function: 4.656, Average Loss: 5.104, avg. samples / sec: 983.46
Iteration:   4460, Loss function: 5.201, Average Loss: 5.099, avg. samples / sec: 978.62
Iteration:   4480, Loss function: 4.975, Average Loss: 5.095, avg. samples / sec: 962.58
Iteration:   4500, Loss function: 4.817, Average Loss: 5.091, avg. samples / sec: 903.83
Iteration:   4520, Loss function: 4.726, Average Loss: 5.086, avg. samples / sec: 977.05
Iteration:   4540, Loss function: 5.180, Average Loss: 5.081, avg. samples / sec: 959.11
Iteration:   4560, Loss function: 4.758, Average Loss: 5.078, avg. samples / sec: 948.99
Iteration:   4580, Loss function: 4.785, Average Loss: 5.076, avg. samples / sec: 983.27
Iteration:   4600, Loss function: 4.846, Average Loss: 5.072, avg. samples / sec: 982.13
Iteration:   4620, Loss function: 4.784, Average Loss: 5.068, avg. samples / sec: 967.11
Iteration:   4640, Loss function: 4.838, Average Loss: 5.063, avg. samples / sec: 947.64
Iteration:   4660, Loss function: 4.583, Average Loss: 5.060, avg. samples / sec: 932.85
Iteration:   4680, Loss function: 5.318, Average Loss: 5.055, avg. samples / sec: 999.91
Iteration:   4700, Loss function: 4.656, Average Loss: 5.051, avg. samples / sec: 989.82
Iteration:   4720, Loss function: 4.965, Average Loss: 5.048, avg. samples / sec: 954.35
Iteration:   4740, Loss function: 4.872, Average Loss: 5.045, avg. samples / sec: 924.27
Iteration:   4760, Loss function: 4.801, Average Loss: 5.041, avg. samples / sec: 896.27
Iteration:   4780, Loss function: 5.088, Average Loss: 5.037, avg. samples / sec: 952.62
Iteration:   4800, Loss function: 5.002, Average Loss: 5.035, avg. samples / sec: 943.39
Iteration:   4820, Loss function: 4.820, Average Loss: 5.032, avg. samples / sec: 952.93
Iteration:   4840, Loss function: 5.098, Average Loss: 5.029, avg. samples / sec: 958.69
Iteration:   4860, Loss function: 4.716, Average Loss: 5.024, avg. samples / sec: 913.78
Iteration:   4880, Loss function: 5.043, Average Loss: 5.020, avg. samples / sec: 986.19
Iteration:   4900, Loss function: 4.492, Average Loss: 5.016, avg. samples / sec: 973.21
Iteration:   4920, Loss function: 4.731, Average Loss: 5.013, avg. samples / sec: 1000.73
Iteration:   4940, Loss function: 4.850, Average Loss: 5.009, avg. samples / sec: 914.02
Iteration:   4960, Loss function: 4.780, Average Loss: 5.005, avg. samples / sec: 974.02
Iteration:   4980, Loss function: 4.564, Average Loss: 5.001, avg. samples / sec: 977.94
Iteration:   5000, Loss function: 4.900, Average Loss: 4.998, avg. samples / sec: 938.17
Iteration:   5020, Loss function: 5.058, Average Loss: 4.994, avg. samples / sec: 978.08
Iteration:   5040, Loss function: 4.820, Average Loss: 4.991, avg. samples / sec: 940.20
Iteration:   5060, Loss function: 4.751, Average Loss: 4.987, avg. samples / sec: 864.67
Iteration:   5080, Loss function: 4.596, Average Loss: 4.984, avg. samples / sec: 959.42
Iteration:   5100, Loss function: 4.630, Average Loss: 4.981, avg. samples / sec: 959.46
Iteration:   5120, Loss function: 4.658, Average Loss: 4.978, avg. samples / sec: 991.71
Iteration:   5140, Loss function: 4.927, Average Loss: 4.974, avg. samples / sec: 969.00
:::MLLOG {"namespace": "", "time_ms": 1639762154154, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
Predicting Ended, total time: 32.61 s
:::MLLOG {"namespace": "", "time_ms": 1639762186839, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639762186900, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 6, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762186906, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Loading and preparing results...
DONE (t=0.86s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:   5160, Loss function: 4.851, Average Loss: 4.969, avg. samples / sec: 64.96
Iteration:   5180, Loss function: 4.901, Average Loss: 4.965, avg. samples / sec: 995.73
DONE (t=3.79s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09779
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.20151
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08450
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17410
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12863
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.18843
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20042
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20042
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.09779 AP goal: 0.10000
Iteration:   5200, Loss function: 4.480, Average Loss: 4.960, avg. samples / sec: 1014.20
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0977880025354279, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762193404, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 5}}
Iteration:   5220, Loss function: 4.675, Average Loss: 4.956, avg. samples / sec: 1010.59
Iteration:   5240, Loss function: 4.491, Average Loss: 4.951, avg. samples / sec: 990.47
Iteration:   5260, Loss function: 4.796, Average Loss: 4.947, avg. samples / sec: 987.50
Iteration:   5280, Loss function: 4.982, Average Loss: 4.946, avg. samples / sec: 999.22
Iteration:   5300, Loss function: 4.954, Average Loss: 4.942, avg. samples / sec: 1017.52
Iteration:   5320, Loss function: 4.918, Average Loss: 4.937, avg. samples / sec: 1025.20
Iteration:   5340, Loss function: 4.732, Average Loss: 4.932, avg. samples / sec: 1032.22
Iteration:   5360, Loss function: 5.052, Average Loss: 4.929, avg. samples / sec: 1033.57
Iteration:   5380, Loss function: 4.297, Average Loss: 4.925, avg. samples / sec: 1030.87
Iteration:   5400, Loss function: 4.396, Average Loss: 4.921, avg. samples / sec: 1034.12
Iteration:   5420, Loss function: 4.577, Average Loss: 4.917, avg. samples / sec: 1033.12
Iteration:   5440, Loss function: 4.826, Average Loss: 4.915, avg. samples / sec: 1034.38
Iteration:   5460, Loss function: 4.621, Average Loss: 4.912, avg. samples / sec: 1035.05
Iteration:   5480, Loss function: 4.594, Average Loss: 4.908, avg. samples / sec: 1034.04
Iteration:   5500, Loss function: 4.530, Average Loss: 4.905, avg. samples / sec: 1033.88
Iteration:   5520, Loss function: 4.642, Average Loss: 4.901, avg. samples / sec: 1035.18
Iteration:   5540, Loss function: 4.629, Average Loss: 4.898, avg. samples / sec: 1034.33
Iteration:   5560, Loss function: 4.869, Average Loss: 4.894, avg. samples / sec: 1033.02
Iteration:   5580, Loss function: 4.730, Average Loss: 4.890, avg. samples / sec: 1034.65
Iteration:   5600, Loss function: 4.511, Average Loss: 4.887, avg. samples / sec: 1032.49
Iteration:   5620, Loss function: 4.395, Average Loss: 4.884, avg. samples / sec: 1032.13
Iteration:   5640, Loss function: 4.447, Average Loss: 4.882, avg. samples / sec: 1033.95
Iteration:   5660, Loss function: 4.561, Average Loss: 4.879, avg. samples / sec: 1035.27
Iteration:   5680, Loss function: 4.987, Average Loss: 4.876, avg. samples / sec: 1031.43
Iteration:   5700, Loss function: 4.406, Average Loss: 4.871, avg. samples / sec: 1030.61
Iteration:   5720, Loss function: 4.661, Average Loss: 4.868, avg. samples / sec: 1035.20
Iteration:   5740, Loss function: 4.500, Average Loss: 4.864, avg. samples / sec: 1034.37
Iteration:   5760, Loss function: 4.786, Average Loss: 4.861, avg. samples / sec: 1034.60
Iteration:   5780, Loss function: 4.541, Average Loss: 4.858, avg. samples / sec: 1031.05
Iteration:   5800, Loss function: 5.029, Average Loss: 4.856, avg. samples / sec: 1033.29
Iteration:   5820, Loss function: 4.709, Average Loss: 4.853, avg. samples / sec: 1034.57
Iteration:   5840, Loss function: 4.567, Average Loss: 4.850, avg. samples / sec: 1033.83
Iteration:   5860, Loss function: 4.820, Average Loss: 4.847, avg. samples / sec: 1031.61
Iteration:   5880, Loss function: 4.605, Average Loss: 4.844, avg. samples / sec: 1034.15
Iteration:   5900, Loss function: 5.010, Average Loss: 4.841, avg. samples / sec: 1033.03
Iteration:   5920, Loss function: 4.508, Average Loss: 4.838, avg. samples / sec: 1032.30
Iteration:   5940, Loss function: 4.575, Average Loss: 4.835, avg. samples / sec: 1033.16
Iteration:   5960, Loss function: 4.775, Average Loss: 4.832, avg. samples / sec: 1034.64
Iteration:   5980, Loss function: 4.534, Average Loss: 4.828, avg. samples / sec: 1027.63
Iteration:   6000, Loss function: 4.582, Average Loss: 4.826, avg. samples / sec: 1021.52
Iteration:   6020, Loss function: 4.520, Average Loss: 4.823, avg. samples / sec: 1024.70
Iteration:   6040, Loss function: 4.522, Average Loss: 4.820, avg. samples / sec: 1017.72
Iteration:   6060, Loss function: 4.587, Average Loss: 4.819, avg. samples / sec: 1030.27
Iteration:   6080, Loss function: 4.474, Average Loss: 4.815, avg. samples / sec: 1034.83
Iteration:   6100, Loss function: 4.440, Average Loss: 4.812, avg. samples / sec: 1030.38
Iteration:   6120, Loss function: 4.743, Average Loss: 4.810, avg. samples / sec: 1033.47
Iteration:   6140, Loss function: 4.877, Average Loss: 4.808, avg. samples / sec: 1031.63
Iteration:   6160, Loss function: 4.820, Average Loss: 4.805, avg. samples / sec: 1033.21
:::MLLOG {"namespace": "", "time_ms": 1639762300993, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639762300994, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.468, Average Loss: 4.801, avg. samples / sec: 1030.76
Iteration:   6200, Loss function: 4.851, Average Loss: 4.797, avg. samples / sec: 1021.75
Iteration:   6220, Loss function: 4.431, Average Loss: 4.793, avg. samples / sec: 1021.95
Iteration:   6240, Loss function: 4.597, Average Loss: 4.789, avg. samples / sec: 1022.12
Iteration:   6260, Loss function: 4.549, Average Loss: 4.786, avg. samples / sec: 1023.50
Iteration:   6280, Loss function: 4.560, Average Loss: 4.783, avg. samples / sec: 1021.84
Iteration:   6300, Loss function: 4.748, Average Loss: 4.781, avg. samples / sec: 1024.09
Iteration:   6320, Loss function: 4.313, Average Loss: 4.776, avg. samples / sec: 1022.02
Iteration:   6340, Loss function: 4.600, Average Loss: 4.774, avg. samples / sec: 1032.32
Iteration:   6360, Loss function: 4.747, Average Loss: 4.769, avg. samples / sec: 1031.64
Iteration:   6380, Loss function: 4.483, Average Loss: 4.765, avg. samples / sec: 1030.41
Iteration:   6400, Loss function: 4.581, Average Loss: 4.763, avg. samples / sec: 1025.19
Iteration:   6420, Loss function: 4.576, Average Loss: 4.759, avg. samples / sec: 1031.23
Iteration:   6440, Loss function: 4.698, Average Loss: 4.757, avg. samples / sec: 1029.12
Iteration:   6460, Loss function: 4.741, Average Loss: 4.755, avg. samples / sec: 1030.36
Iteration:   6480, Loss function: 4.660, Average Loss: 4.753, avg. samples / sec: 1031.28
Iteration:   6500, Loss function: 4.726, Average Loss: 4.750, avg. samples / sec: 1032.08
Iteration:   6520, Loss function: 4.708, Average Loss: 4.749, avg. samples / sec: 1031.35
Iteration:   6540, Loss function: 4.647, Average Loss: 4.746, avg. samples / sec: 1033.23
Iteration:   6560, Loss function: 4.423, Average Loss: 4.744, avg. samples / sec: 1030.96
Iteration:   6580, Loss function: 4.798, Average Loss: 4.742, avg. samples / sec: 1034.09
Iteration:   6600, Loss function: 4.617, Average Loss: 4.740, avg. samples / sec: 1032.38
Iteration:   6620, Loss function: 4.680, Average Loss: 4.738, avg. samples / sec: 1032.75
Iteration:   6640, Loss function: 4.602, Average Loss: 4.735, avg. samples / sec: 1031.34
Iteration:   6660, Loss function: 4.861, Average Loss: 4.731, avg. samples / sec: 1021.69
Iteration:   6680, Loss function: 4.721, Average Loss: 4.729, avg. samples / sec: 1022.12
Iteration:   6700, Loss function: 4.426, Average Loss: 4.725, avg. samples / sec: 1022.90
Iteration:   6720, Loss function: 4.587, Average Loss: 4.723, avg. samples / sec: 1021.00
Iteration:   6740, Loss function: 4.320, Average Loss: 4.721, avg. samples / sec: 1016.94
Iteration:   6760, Loss function: 4.788, Average Loss: 4.719, avg. samples / sec: 1015.47
Iteration:   6780, Loss function: 4.689, Average Loss: 4.717, avg. samples / sec: 1019.30
Iteration:   6800, Loss function: 4.695, Average Loss: 4.713, avg. samples / sec: 1021.86
Iteration:   6820, Loss function: 4.768, Average Loss: 4.712, avg. samples / sec: 1022.53
Iteration:   6840, Loss function: 4.635, Average Loss: 4.710, avg. samples / sec: 1025.17
Iteration:   6860, Loss function: 4.511, Average Loss: 4.708, avg. samples / sec: 1026.34
Iteration:   6880, Loss function: 4.630, Average Loss: 4.705, avg. samples / sec: 1024.63
Iteration:   6900, Loss function: 4.640, Average Loss: 4.704, avg. samples / sec: 1023.91
Iteration:   6920, Loss function: 4.983, Average Loss: 4.700, avg. samples / sec: 1024.28
Iteration:   6940, Loss function: 4.492, Average Loss: 4.698, avg. samples / sec: 1021.74
Iteration:   6960, Loss function: 4.437, Average Loss: 4.695, avg. samples / sec: 1027.10
Iteration:   6980, Loss function: 4.421, Average Loss: 4.694, avg. samples / sec: 1031.84
Iteration:   7000, Loss function: 4.688, Average Loss: 4.692, avg. samples / sec: 1029.56
Iteration:   7020, Loss function: 4.682, Average Loss: 4.690, avg. samples / sec: 1031.02
Iteration:   7040, Loss function: 4.920, Average Loss: 4.688, avg. samples / sec: 1029.97
Iteration:   7060, Loss function: 4.746, Average Loss: 4.686, avg. samples / sec: 1030.38
Iteration:   7080, Loss function: 4.676, Average Loss: 4.684, avg. samples / sec: 1032.79
Iteration:   7100, Loss function: 4.290, Average Loss: 4.683, avg. samples / sec: 1032.35
Iteration:   7120, Loss function: 4.586, Average Loss: 4.680, avg. samples / sec: 1032.46
Iteration:   7140, Loss function: 4.654, Average Loss: 4.678, avg. samples / sec: 1033.10
Iteration:   7160, Loss function: 4.761, Average Loss: 4.676, avg. samples / sec: 1032.96
Iteration:   7180, Loss function: 4.875, Average Loss: 4.674, avg. samples / sec: 1031.53
Iteration:   7200, Loss function: 4.532, Average Loss: 4.673, avg. samples / sec: 1030.88
:::MLLOG {"namespace": "", "time_ms": 1639762415188, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639762415188, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.707, Average Loss: 4.670, avg. samples / sec: 1031.18
Iteration:   7240, Loss function: 4.461, Average Loss: 4.666, avg. samples / sec: 1030.93
Iteration:   7260, Loss function: 4.742, Average Loss: 4.664, avg. samples / sec: 1033.28
Iteration:   7280, Loss function: 4.677, Average Loss: 4.661, avg. samples / sec: 1033.39
Iteration:   7300, Loss function: 4.596, Average Loss: 4.658, avg. samples / sec: 1033.11
Iteration:   7320, Loss function: 4.462, Average Loss: 4.656, avg. samples / sec: 1032.56
Iteration:   7340, Loss function: 4.768, Average Loss: 4.653, avg. samples / sec: 1031.41
Iteration:   7360, Loss function: 4.445, Average Loss: 4.650, avg. samples / sec: 1021.39
Iteration:   7380, Loss function: 4.558, Average Loss: 4.648, avg. samples / sec: 1021.86
Iteration:   7400, Loss function: 4.474, Average Loss: 4.647, avg. samples / sec: 1023.03
Iteration:   7420, Loss function: 4.542, Average Loss: 4.643, avg. samples / sec: 1024.09
Iteration:   7440, Loss function: 4.524, Average Loss: 4.641, avg. samples / sec: 1020.54
Iteration:   7460, Loss function: 4.536, Average Loss: 4.639, avg. samples / sec: 1021.35
Iteration:   7480, Loss function: 4.511, Average Loss: 4.637, avg. samples / sec: 1020.64
Iteration:   7500, Loss function: 4.422, Average Loss: 4.634, avg. samples / sec: 1021.26
Iteration:   7520, Loss function: 4.406, Average Loss: 4.630, avg. samples / sec: 1028.42
Iteration:   7540, Loss function: 4.737, Average Loss: 4.628, avg. samples / sec: 1033.21
Iteration:   7560, Loss function: 4.409, Average Loss: 4.627, avg. samples / sec: 1029.35
Iteration:   7580, Loss function: 4.330, Average Loss: 4.625, avg. samples / sec: 1032.92
Iteration:   7600, Loss function: 4.562, Average Loss: 4.622, avg. samples / sec: 1033.26
Iteration:   7620, Loss function: 4.587, Average Loss: 4.621, avg. samples / sec: 1033.89
Iteration:   7640, Loss function: 4.274, Average Loss: 4.618, avg. samples / sec: 1030.07
Iteration:   7660, Loss function: 4.138, Average Loss: 4.616, avg. samples / sec: 1032.95
Iteration:   7680, Loss function: 4.625, Average Loss: 4.615, avg. samples / sec: 1033.63
Iteration:   7700, Loss function: 4.379, Average Loss: 4.612, avg. samples / sec: 1033.17
Iteration:   7720, Loss function: 4.520, Average Loss: 4.609, avg. samples / sec: 1032.29
Iteration:   7740, Loss function: 4.215, Average Loss: 4.607, avg. samples / sec: 1031.16
Iteration:   7760, Loss function: 4.461, Average Loss: 4.604, avg. samples / sec: 1032.53
Iteration:   7780, Loss function: 4.494, Average Loss: 4.602, avg. samples / sec: 1030.55
Iteration:   7800, Loss function: 4.396, Average Loss: 4.600, avg. samples / sec: 1031.71
Iteration:   7820, Loss function: 4.438, Average Loss: 4.599, avg. samples / sec: 1032.83
Iteration:   7840, Loss function: 4.434, Average Loss: 4.597, avg. samples / sec: 1034.09
Iteration:   7860, Loss function: 4.435, Average Loss: 4.595, avg. samples / sec: 1031.99
Iteration:   7880, Loss function: 4.471, Average Loss: 4.594, avg. samples / sec: 1032.68
Iteration:   7900, Loss function: 4.623, Average Loss: 4.593, avg. samples / sec: 1032.05
Iteration:   7920, Loss function: 4.296, Average Loss: 4.591, avg. samples / sec: 1033.30
Iteration:   7940, Loss function: 4.489, Average Loss: 4.588, avg. samples / sec: 1032.72
Iteration:   7960, Loss function: 4.268, Average Loss: 4.586, avg. samples / sec: 1029.41
Iteration:   7980, Loss function: 4.790, Average Loss: 4.585, avg. samples / sec: 1032.66
Iteration:   8000, Loss function: 4.708, Average Loss: 4.584, avg. samples / sec: 1032.08
Iteration:   8020, Loss function: 4.575, Average Loss: 4.583, avg. samples / sec: 1029.32
Iteration:   8040, Loss function: 4.708, Average Loss: 4.581, avg. samples / sec: 1032.07
Iteration:   8060, Loss function: 4.827, Average Loss: 4.580, avg. samples / sec: 1033.30
Iteration:   8080, Loss function: 4.490, Average Loss: 4.580, avg. samples / sec: 1033.41
Iteration:   8100, Loss function: 4.554, Average Loss: 4.578, avg. samples / sec: 1031.00
Iteration:   8120, Loss function: 4.548, Average Loss: 4.576, avg. samples / sec: 1034.31
Iteration:   8140, Loss function: 4.196, Average Loss: 4.575, avg. samples / sec: 1029.98
Iteration:   8160, Loss function: 4.240, Average Loss: 4.572, avg. samples / sec: 1033.45
Iteration:   8180, Loss function: 4.649, Average Loss: 4.571, avg. samples / sec: 1034.17
Iteration:   8200, Loss function: 4.587, Average Loss: 4.570, avg. samples / sec: 1028.23
Iteration:   8220, Loss function: 4.898, Average Loss: 4.570, avg. samples / sec: 1033.83
:::MLLOG {"namespace": "", "time_ms": 1639762529025, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639762529026, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.414, Average Loss: 4.567, avg. samples / sec: 1031.81
Iteration:   8260, Loss function: 4.434, Average Loss: 4.564, avg. samples / sec: 1032.34
Iteration:   8280, Loss function: 4.537, Average Loss: 4.561, avg. samples / sec: 1033.06
Iteration:   8300, Loss function: 4.164, Average Loss: 4.558, avg. samples / sec: 1033.62
Iteration:   8320, Loss function: 4.750, Average Loss: 4.555, avg. samples / sec: 1033.66
Iteration:   8340, Loss function: 4.575, Average Loss: 4.553, avg. samples / sec: 1031.56
Iteration:   8360, Loss function: 4.550, Average Loss: 4.550, avg. samples / sec: 1031.90
Iteration:   8380, Loss function: 4.560, Average Loss: 4.548, avg. samples / sec: 1033.22
Iteration:   8400, Loss function: 4.382, Average Loss: 4.546, avg. samples / sec: 1032.68
Iteration:   8420, Loss function: 4.260, Average Loss: 4.543, avg. samples / sec: 1031.40
Iteration:   8440, Loss function: 4.654, Average Loss: 4.542, avg. samples / sec: 1034.12
Iteration:   8460, Loss function: 4.623, Average Loss: 4.541, avg. samples / sec: 1034.18
Iteration:   8480, Loss function: 4.675, Average Loss: 4.539, avg. samples / sec: 1031.61
Iteration:   8500, Loss function: 4.137, Average Loss: 4.536, avg. samples / sec: 1032.20
Iteration:   8520, Loss function: 4.276, Average Loss: 4.533, avg. samples / sec: 1032.14
Iteration:   8540, Loss function: 4.734, Average Loss: 4.530, avg. samples / sec: 1028.88
Iteration:   8560, Loss function: 4.423, Average Loss: 4.528, avg. samples / sec: 1018.76
Iteration:   8580, Loss function: 4.515, Average Loss: 4.526, avg. samples / sec: 1020.30
Iteration:   8600, Loss function: 4.409, Average Loss: 4.525, avg. samples / sec: 1021.18
Iteration:   8620, Loss function: 4.354, Average Loss: 4.523, avg. samples / sec: 1017.62
Iteration:   8640, Loss function: 4.273, Average Loss: 4.522, avg. samples / sec: 1019.26
Iteration:   8660, Loss function: 4.283, Average Loss: 4.521, avg. samples / sec: 1021.73
Iteration:   8680, Loss function: 4.447, Average Loss: 4.519, avg. samples / sec: 1022.19
Iteration:   8700, Loss function: 4.487, Average Loss: 4.519, avg. samples / sec: 1016.84
Iteration:   8720, Loss function: 4.471, Average Loss: 4.517, avg. samples / sec: 1022.12
Iteration:   8740, Loss function: 4.403, Average Loss: 4.515, avg. samples / sec: 1022.70
Iteration:   8760, Loss function: 4.256, Average Loss: 4.515, avg. samples / sec: 1021.30
Iteration:   8780, Loss function: 4.443, Average Loss: 4.513, avg. samples / sec: 1021.63
Iteration:   8800, Loss function: 4.634, Average Loss: 4.512, avg. samples / sec: 1022.75
Iteration:   8820, Loss function: 4.191, Average Loss: 4.509, avg. samples / sec: 1020.76
Iteration:   8840, Loss function: 4.504, Average Loss: 4.508, avg. samples / sec: 1021.06
Iteration:   8860, Loss function: 4.782, Average Loss: 4.507, avg. samples / sec: 1020.98
Iteration:   8880, Loss function: 4.631, Average Loss: 4.505, avg. samples / sec: 1023.08
Iteration:   8900, Loss function: 4.466, Average Loss: 4.504, avg. samples / sec: 1027.73
Iteration:   8920, Loss function: 4.558, Average Loss: 4.502, avg. samples / sec: 1032.46
Iteration:   8940, Loss function: 4.363, Average Loss: 4.501, avg. samples / sec: 1030.99
Iteration:   8960, Loss function: 4.447, Average Loss: 4.500, avg. samples / sec: 1032.78
Iteration:   8980, Loss function: 4.260, Average Loss: 4.498, avg. samples / sec: 1032.59
Iteration:   9000, Loss function: 4.512, Average Loss: 4.497, avg. samples / sec: 1032.92
Iteration:   9020, Loss function: 4.707, Average Loss: 4.497, avg. samples / sec: 1030.52
Iteration:   9040, Loss function: 4.528, Average Loss: 4.495, avg. samples / sec: 1031.30
Iteration:   9060, Loss function: 4.181, Average Loss: 4.494, avg. samples / sec: 1031.22
Iteration:   9080, Loss function: 4.722, Average Loss: 4.493, avg. samples / sec: 1030.85
Iteration:   9100, Loss function: 4.269, Average Loss: 4.492, avg. samples / sec: 1032.60
Iteration:   9120, Loss function: 4.347, Average Loss: 4.491, avg. samples / sec: 1033.86
Iteration:   9140, Loss function: 4.594, Average Loss: 4.490, avg. samples / sec: 1034.70
Iteration:   9160, Loss function: 4.407, Average Loss: 4.488, avg. samples / sec: 1031.92
Iteration:   9180, Loss function: 4.248, Average Loss: 4.488, avg. samples / sec: 1032.55
Iteration:   9200, Loss function: 4.377, Average Loss: 4.487, avg. samples / sec: 1032.93
Iteration:   9220, Loss function: 4.301, Average Loss: 4.487, avg. samples / sec: 1031.22
Iteration:   9240, Loss function: 4.501, Average Loss: 4.487, avg. samples / sec: 1033.30
:::MLLOG {"namespace": "", "time_ms": 1639762642981, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639762642982, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.531, Average Loss: 4.484, avg. samples / sec: 1033.62
Iteration:   9280, Loss function: 4.311, Average Loss: 4.483, avg. samples / sec: 1033.94
Iteration:   9300, Loss function: 4.547, Average Loss: 4.480, avg. samples / sec: 1032.41
Iteration:   9320, Loss function: 4.435, Average Loss: 4.477, avg. samples / sec: 1033.59
Iteration:   9340, Loss function: 4.494, Average Loss: 4.476, avg. samples / sec: 1033.15
Iteration:   9360, Loss function: 4.020, Average Loss: 4.473, avg. samples / sec: 1033.37
Iteration:   9380, Loss function: 4.268, Average Loss: 4.471, avg. samples / sec: 1032.52
Iteration:   9400, Loss function: 4.330, Average Loss: 4.469, avg. samples / sec: 1032.90
Iteration:   9420, Loss function: 4.328, Average Loss: 4.468, avg. samples / sec: 1031.89
Iteration:   9440, Loss function: 4.473, Average Loss: 4.465, avg. samples / sec: 1032.96
Iteration:   9460, Loss function: 4.271, Average Loss: 4.464, avg. samples / sec: 1032.38
Iteration:   9480, Loss function: 4.500, Average Loss: 4.462, avg. samples / sec: 1032.93
Iteration:   9500, Loss function: 4.525, Average Loss: 4.460, avg. samples / sec: 1032.38
Iteration:   9520, Loss function: 4.466, Average Loss: 4.458, avg. samples / sec: 1031.87
Iteration:   9540, Loss function: 4.330, Average Loss: 4.456, avg. samples / sec: 1030.61
Iteration:   9560, Loss function: 4.571, Average Loss: 4.453, avg. samples / sec: 1032.63
Iteration:   9580, Loss function: 4.275, Average Loss: 4.452, avg. samples / sec: 1031.82
Iteration:   9600, Loss function: 4.117, Average Loss: 4.450, avg. samples / sec: 1030.85
Iteration:   9620, Loss function: 4.385, Average Loss: 4.449, avg. samples / sec: 1030.99
Iteration:   9640, Loss function: 4.566, Average Loss: 4.448, avg. samples / sec: 1031.49
Iteration:   9660, Loss function: 4.169, Average Loss: 4.448, avg. samples / sec: 1033.80
Iteration:   9680, Loss function: 4.292, Average Loss: 4.446, avg. samples / sec: 1030.16
Iteration:   9700, Loss function: 4.526, Average Loss: 4.446, avg. samples / sec: 1031.18
Iteration:   9720, Loss function: 4.455, Average Loss: 4.445, avg. samples / sec: 1031.24
Iteration:   9740, Loss function: 4.635, Average Loss: 4.444, avg. samples / sec: 1032.28
Iteration:   9760, Loss function: 4.306, Average Loss: 4.443, avg. samples / sec: 1033.81
Iteration:   9780, Loss function: 4.396, Average Loss: 4.441, avg. samples / sec: 1033.40
Iteration:   9800, Loss function: 4.397, Average Loss: 4.440, avg. samples / sec: 1031.16
Iteration:   9820, Loss function: 4.135, Average Loss: 4.437, avg. samples / sec: 1032.84
Iteration:   9840, Loss function: 4.439, Average Loss: 4.436, avg. samples / sec: 1033.52
Iteration:   9860, Loss function: 4.449, Average Loss: 4.435, avg. samples / sec: 1032.75
Iteration:   9880, Loss function: 4.225, Average Loss: 4.433, avg. samples / sec: 1032.90
Iteration:   9900, Loss function: 4.586, Average Loss: 4.432, avg. samples / sec: 1032.01
Iteration:   9920, Loss function: 4.911, Average Loss: 4.431, avg. samples / sec: 1029.34
Iteration:   9940, Loss function: 4.272, Average Loss: 4.429, avg. samples / sec: 1031.57
Iteration:   9960, Loss function: 4.338, Average Loss: 4.428, avg. samples / sec: 1032.93
Iteration:   9980, Loss function: 4.475, Average Loss: 4.428, avg. samples / sec: 1034.80
Iteration:  10000, Loss function: 4.093, Average Loss: 4.426, avg. samples / sec: 1033.63
Iteration:  10020, Loss function: 4.638, Average Loss: 4.426, avg. samples / sec: 1033.79
Iteration:  10040, Loss function: 4.405, Average Loss: 4.424, avg. samples / sec: 1032.83
Iteration:  10060, Loss function: 4.147, Average Loss: 4.422, avg. samples / sec: 1030.66
Iteration:  10080, Loss function: 4.363, Average Loss: 4.421, avg. samples / sec: 1031.45
Iteration:  10100, Loss function: 4.042, Average Loss: 4.420, avg. samples / sec: 1032.97
Iteration:  10120, Loss function: 4.198, Average Loss: 4.419, avg. samples / sec: 1033.09
Iteration:  10140, Loss function: 4.240, Average Loss: 4.417, avg. samples / sec: 1032.83
Iteration:  10160, Loss function: 4.442, Average Loss: 4.417, avg. samples / sec: 1031.66
Iteration:  10180, Loss function: 4.671, Average Loss: 4.415, avg. samples / sec: 1032.85
Iteration:  10200, Loss function: 4.218, Average Loss: 4.414, avg. samples / sec: 1032.82
Iteration:  10220, Loss function: 4.540, Average Loss: 4.413, avg. samples / sec: 1032.16
Iteration:  10240, Loss function: 4.098, Average Loss: 4.412, avg. samples / sec: 1031.16
Iteration:  10260, Loss function: 4.155, Average Loss: 4.411, avg. samples / sec: 1030.38
Iteration:  10280, Loss function: 4.698, Average Loss: 4.409, avg. samples / sec: 1027.48
:::MLLOG {"namespace": "", "time_ms": 1639762756633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
Predicting Ended, total time: 24.09 s
:::MLLOG {"namespace": "", "time_ms": 1639762780736, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639762780775, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 11, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639762780775, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Loading and preparing results...
DONE (t=0.69s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  10300, Loss function: 4.478, Average Loss: 4.407, avg. samples / sec: 86.64
DONE (t=2.04s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.13928
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27102
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23070
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16135
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23952
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25342
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25342
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.13928 AP goal: 0.10000
Iteration:  10320, Loss function: 4.238, Average Loss: 4.406, avg. samples / sec: 1020.46
:::MLLOG {"namespace": "", "time_ms": 1639762784519, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784519, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.13928342923756157, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784520, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639762784655, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
++ date +%s
+ end=1639762785
++ date '+%Y-%m-%d %r'
+ end_fmt='2021-12-17 05:39:45 PM'
START TIMING RUN WAS 2021-12-17 05:18:27 PM
+ echo 'START TIMING RUN WAS 2021-12-17 05:18:27 PM'
ENDING TIMING RUN AT 2021-12-17 05:39:45 PM
+ echo 'ENDING TIMING RUN AT 2021-12-17 05:39:45 PM'
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4fb17cd5-cad8-31a6-34d3-08434d926140)
  MIG 7g.40gb     Device  0: (UUID: MIG-e4b043ba-742f-5607-806e-29b77f044f60)
+ result=1278
+ [[ ssd == \s\s\d ]]
+ result_name=SINGLE_STAGE_DETECTOR
RESULT,SINGLE_STAGE_DETECTOR,,1278,nvidia,2021-12-17 05:18:27 PM
+ echo 'RESULT,SINGLE_STAGE_DETECTOR,,1278,nvidia,2021-12-17 05:18:27 PM'
+ echo 'ALL FINISHED GPU: 1 x 7g.40gb x 8 Pods'
ALL FINISHED GPU: 1 x 7g.40gb x 8 Pods
