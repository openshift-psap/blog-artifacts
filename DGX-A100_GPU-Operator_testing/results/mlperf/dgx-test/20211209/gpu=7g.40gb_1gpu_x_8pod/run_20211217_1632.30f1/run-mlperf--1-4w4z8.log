8<--8<--8<--8<--
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
  MIG 7g.40gb     Device  0: (UUID: MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169)
8<--8<--8<--8<--
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ wc -l
+ NB_GPUS=1
+ [[ 1 == 0 ]]
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ awk '{ printf $6"\n"}'
++ cut '-d)' -f1
+ ALL_GPUS=MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169
+ MIG_MODE=1
Found 1 MIG instances: MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169
+ [[ 7g.40gb == \f\u\l\l ]]
+ echo 'Found 1 MIG instances: MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169'
+ [[ 1 == 0 ]]
+ [[ 1 != 1 ]]
++ date +%s
+ start=1639755232
++ date '+%Y-%m-%d %r'
+ start_fmt='2021-12-17 03:33:52 PM'
STARTING TIMING RUN AT 2021-12-17 03:33:52 PM GPU: 1 x 7g.40gb x 8 Pods
+ echo 'STARTING TIMING RUN AT 2021-12-17 03:33:52 PM GPU: 1 x 7g.40gb x 8 Pods'
+ set -x
+ export NCCL_DEBUG=INFO
+ NCCL_DEBUG=INFO
running benchmark
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export TORCH_HOME=/data/coco2017/torchvision
+ TORCH_HOME=/data/coco2017/torchvision
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_val2017.json ']'
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_train2017.json ']'
+ [[ ssd == \m\a\s\k\r\c\n\n ]]
+ DGXNSOCKET=1
+ DGXSOCKETCORES=8
+ [[ 1 == \1 ]]
+ DGXNGPU=1
Running in parallel mode.
+ echo 'Running in parallel mode.'
+ declare -a CMD
+ CMD=('python' '-u' '-m' 'bind_launch' "--nsockets_per_node=${DGXNSOCKET}" "--ncores_per_socket=${DGXSOCKETCORES}" "--nproc_per_node=${DGXNGPU}")
+ declare -a ARGS
+ echo 'Patching '\''bind_launch.py'\'' to err-exit on failure ...'
Patching 'bind_launch.py' to err-exit on failure ...
+ sed 's/process.wait()$/if process.wait(): sys.exit(1)/' -i bind_launch.py
+ [[ ssd == \s\s\d ]]
+ echo 'Setting up the SSD benchmark...'
Setting up the SSD benchmark...
+ EXTRA_PARAMS='--batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4'
+ NUMEPOCHS=80
+ ARGS=(train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs "${NUMEPOCHS}" --warmup-factor 0 --no-save --threshold=${SSD_THRESHOLD} --data ${DATASET_DIR} ${EXTRA_PARAMS})
+ [[ fast == \f\a\s\t ]]
+ echo 'Running in FAST mode'
Running in FAST mode
+ ARGS+=(--evaluation 5 10 15 20 25 30 35 40 50 55 60 65 70 75 80 85)
+ [[ fast == \d\r\y ]]
+ trap 'date; echo failed; exit 1' ERR
+ [[ n != \y ]]
+ SYNC_DIR=/data/coco2017/sync
+ mkdir -p /data/coco2017/sync
+ for sync_f in "$SYNC_DIR/"*
+ [[ /data/coco2017/sync/2021-12-17_16-32-42 != \/\d\a\t\a\/\c\o\c\o\2\0\1\7\/\s\y\n\c\/\2\0\2\1\-\1\2\-\1\7\_\1\6\-\3\2\-\4\2 ]]
+ set +x
Fri Dec 17 15:33:52 UTC 2021 Waiting for all the 8 Pods to start ...
Adding run-mlperf--1-4w4z8 to the sync file ...
run-mlperf--1-4w4z8 Found 2 Pods, waiting to have 8 ...
     1	run-mlperf--1-lg9lr
     2	run-mlperf--1-4w4z8
Fri Dec 17 15:33:57 UTC 2021 All the 8 Pods are running, launch the GPU workload.
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
  MIG 7g.40gb     Device  0: (UUID: MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169)
+ [[ 1 == 1 ]]
+ [[ 1 != 1 ]]
+ dest=/tmp/benchmark_all.log
+ [[ 1 == 1 ]]
Running on the MIG GPU
+ echo 'Running on the MIG GPU'
+ python -u -m bind_launch --nsockets_per_node=1 --ncores_per_socket=8 --nproc_per_node=1 train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs 80 --warmup-factor 0 --no-save --threshold=0.1 --data /data/coco2017 --batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4 --evaluation 5 10 15 20 25 30 35 40 50 55 60 65 70 75 80 85
+ tee -a /tmp/benchmark_all.log
:::MLLOG {"namespace": "", "time_ms": 1639755239344, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639755239534, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4037933660, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 4037933660
/opt/conda/lib/python3.6/site-packages/torch/nn/_reduction.py:44: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
:::MLLOG {"namespace": "", "time_ms": 1639755241719, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639755241719, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639755265982, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639755265983, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
[/opt/dali/dali/operators/image/crop/bbox_crop.cc:348] WARNING: `ltrb` is deprecated. Please use `bbox_layout` to specify the format of the bounding box. E.g. For 2D bounding boxes, `ltrb=True`` is equivalent to `bbox_layout="xyXY"`, and `ltrb=False` is equivalent to `bbox_layout="xyWH"`
:::MLLOG {"namespace": "", "time_ms": 1639755267525, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639755267525, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.17s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639755268027, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639755268028, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755268030, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.792, Average Loss: 0.023, avg. samples / sec: 4.39
Iteration:     20, Loss function: 21.140, Average Loss: 0.456, avg. samples / sec: 890.46
Iteration:     40, Loss function: 20.821, Average Loss: 0.858, avg. samples / sec: 861.70
Iteration:     60, Loss function: 20.469, Average Loss: 1.247, avg. samples / sec: 873.56
Iteration:     80, Loss function: 20.137, Average Loss: 1.622, avg. samples / sec: 879.90
Iteration:    100, Loss function: 15.954, Average Loss: 1.954, avg. samples / sec: 892.12
Iteration:    120, Loss function: 11.601, Average Loss: 2.169, avg. samples / sec: 879.59
Iteration:    140, Loss function: 9.606, Average Loss: 2.325, avg. samples / sec: 903.51
Iteration:    160, Loss function: 9.103, Average Loss: 2.464, avg. samples / sec: 907.67
Iteration:    180, Loss function: 9.046, Average Loss: 2.593, avg. samples / sec: 939.34
Iteration:    200, Loss function: 8.725, Average Loss: 2.718, avg. samples / sec: 966.91
Iteration:    220, Loss function: 8.488, Average Loss: 2.838, avg. samples / sec: 958.12
Iteration:    240, Loss function: 8.775, Average Loss: 2.956, avg. samples / sec: 942.62
Iteration:    260, Loss function: 8.882, Average Loss: 3.074, avg. samples / sec: 964.13
Iteration:    280, Loss function: 8.470, Average Loss: 3.184, avg. samples / sec: 955.89
Iteration:    300, Loss function: 8.351, Average Loss: 3.289, avg. samples / sec: 998.75
Iteration:    320, Loss function: 8.392, Average Loss: 3.389, avg. samples / sec: 876.22
Iteration:    340, Loss function: 8.341, Average Loss: 3.486, avg. samples / sec: 959.03
Iteration:    360, Loss function: 8.181, Average Loss: 3.579, avg. samples / sec: 885.63
Iteration:    380, Loss function: 8.115, Average Loss: 3.668, avg. samples / sec: 929.19
Iteration:    400, Loss function: 8.229, Average Loss: 3.757, avg. samples / sec: 717.29
Iteration:    420, Loss function: 7.785, Average Loss: 3.840, avg. samples / sec: 970.70
Iteration:    440, Loss function: 7.820, Average Loss: 3.919, avg. samples / sec: 976.94
Iteration:    460, Loss function: 7.797, Average Loss: 3.994, avg. samples / sec: 995.01
Iteration:    480, Loss function: 7.603, Average Loss: 4.067, avg. samples / sec: 941.51
Iteration:    500, Loss function: 7.629, Average Loss: 4.137, avg. samples / sec: 863.70
Iteration:    520, Loss function: 7.425, Average Loss: 4.204, avg. samples / sec: 988.32
Iteration:    540, Loss function: 7.563, Average Loss: 4.270, avg. samples / sec: 992.15
Iteration:    560, Loss function: 7.166, Average Loss: 4.332, avg. samples / sec: 916.55
Iteration:    580, Loss function: 7.341, Average Loss: 4.393, avg. samples / sec: 888.88
Iteration:    600, Loss function: 7.304, Average Loss: 4.453, avg. samples / sec: 911.82
Iteration:    620, Loss function: 7.050, Average Loss: 4.509, avg. samples / sec: 964.09
Iteration:    640, Loss function: 6.921, Average Loss: 4.564, avg. samples / sec: 871.60
Iteration:    660, Loss function: 7.284, Average Loss: 4.618, avg. samples / sec: 952.77
Iteration:    680, Loss function: 7.438, Average Loss: 4.670, avg. samples / sec: 976.62
Iteration:    700, Loss function: 6.944, Average Loss: 4.719, avg. samples / sec: 998.76
Iteration:    720, Loss function: 7.048, Average Loss: 4.768, avg. samples / sec: 966.72
Iteration:    740, Loss function: 6.992, Average Loss: 4.814, avg. samples / sec: 954.21
Iteration:    760, Loss function: 6.943, Average Loss: 4.858, avg. samples / sec: 953.16
Iteration:    780, Loss function: 6.774, Average Loss: 4.900, avg. samples / sec: 988.93
Iteration:    800, Loss function: 7.366, Average Loss: 4.939, avg. samples / sec: 985.95
Iteration:    820, Loss function: 6.769, Average Loss: 4.976, avg. samples / sec: 1000.15
Iteration:    840, Loss function: 6.700, Average Loss: 5.012, avg. samples / sec: 963.58
Iteration:    860, Loss function: 6.806, Average Loss: 5.046, avg. samples / sec: 985.52
Iteration:    880, Loss function: 6.742, Average Loss: 5.079, avg. samples / sec: 994.58
Iteration:    900, Loss function: 6.852, Average Loss: 5.109, avg. samples / sec: 995.05
Iteration:    920, Loss function: 6.678, Average Loss: 5.138, avg. samples / sec: 964.56
Iteration:    940, Loss function: 6.903, Average Loss: 5.167, avg. samples / sec: 985.23
Iteration:    960, Loss function: 6.267, Average Loss: 5.195, avg. samples / sec: 972.03
Iteration:    980, Loss function: 6.566, Average Loss: 5.222, avg. samples / sec: 951.52
Iteration:   1000, Loss function: 6.560, Average Loss: 5.248, avg. samples / sec: 945.40
Iteration:   1020, Loss function: 6.439, Average Loss: 5.272, avg. samples / sec: 949.34
:::MLLOG {"namespace": "", "time_ms": 1639755393250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639755393253, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.535, Average Loss: 5.295, avg. samples / sec: 968.85
Iteration:   1060, Loss function: 6.370, Average Loss: 5.318, avg. samples / sec: 918.85
Iteration:   1080, Loss function: 6.354, Average Loss: 5.339, avg. samples / sec: 970.95
Iteration:   1100, Loss function: 6.237, Average Loss: 5.359, avg. samples / sec: 928.63
Iteration:   1120, Loss function: 6.388, Average Loss: 5.378, avg. samples / sec: 915.53
Iteration:   1140, Loss function: 6.404, Average Loss: 5.396, avg. samples / sec: 852.09
Iteration:   1160, Loss function: 6.179, Average Loss: 5.412, avg. samples / sec: 902.09
Iteration:   1180, Loss function: 6.332, Average Loss: 5.428, avg. samples / sec: 872.96
Iteration:   1200, Loss function: 6.318, Average Loss: 5.445, avg. samples / sec: 929.09
Iteration:   1220, Loss function: 6.242, Average Loss: 5.460, avg. samples / sec: 943.95
Iteration:   1240, Loss function: 6.041, Average Loss: 5.473, avg. samples / sec: 989.07
Iteration:   1260, Loss function: 5.923, Average Loss: 5.485, avg. samples / sec: 945.06
Iteration:   1280, Loss function: 5.883, Average Loss: 5.497, avg. samples / sec: 963.92
Iteration:   1300, Loss function: 6.179, Average Loss: 5.510, avg. samples / sec: 982.34
Iteration:   1320, Loss function: 6.112, Average Loss: 5.521, avg. samples / sec: 979.47
Iteration:   1340, Loss function: 5.973, Average Loss: 5.532, avg. samples / sec: 1003.78
Iteration:   1360, Loss function: 6.094, Average Loss: 5.542, avg. samples / sec: 945.11
Iteration:   1380, Loss function: 6.222, Average Loss: 5.552, avg. samples / sec: 963.09
Iteration:   1400, Loss function: 6.303, Average Loss: 5.560, avg. samples / sec: 959.87
Iteration:   1420, Loss function: 5.804, Average Loss: 5.568, avg. samples / sec: 922.00
Iteration:   1440, Loss function: 6.302, Average Loss: 5.576, avg. samples / sec: 988.66
Iteration:   1460, Loss function: 6.074, Average Loss: 5.583, avg. samples / sec: 986.23
Iteration:   1480, Loss function: 5.849, Average Loss: 5.592, avg. samples / sec: 984.50
Iteration:   1500, Loss function: 6.001, Average Loss: 5.601, avg. samples / sec: 985.52
Iteration:   1520, Loss function: 5.986, Average Loss: 5.607, avg. samples / sec: 974.79
Iteration:   1540, Loss function: 6.101, Average Loss: 5.611, avg. samples / sec: 980.00
Iteration:   1560, Loss function: 5.878, Average Loss: 5.615, avg. samples / sec: 978.61
Iteration:   1580, Loss function: 5.686, Average Loss: 5.619, avg. samples / sec: 971.28
Iteration:   1600, Loss function: 6.169, Average Loss: 5.624, avg. samples / sec: 950.01
Iteration:   1620, Loss function: 5.765, Average Loss: 5.629, avg. samples / sec: 944.38
Iteration:   1640, Loss function: 5.899, Average Loss: 5.632, avg. samples / sec: 916.27
Iteration:   1660, Loss function: 5.877, Average Loss: 5.637, avg. samples / sec: 995.75
Iteration:   1680, Loss function: 5.804, Average Loss: 5.640, avg. samples / sec: 987.09
Iteration:   1700, Loss function: 5.316, Average Loss: 5.643, avg. samples / sec: 992.19
Iteration:   1720, Loss function: 5.805, Average Loss: 5.645, avg. samples / sec: 961.87
Iteration:   1740, Loss function: 5.837, Average Loss: 5.648, avg. samples / sec: 976.53
Iteration:   1760, Loss function: 5.575, Average Loss: 5.650, avg. samples / sec: 973.35
Iteration:   1780, Loss function: 5.663, Average Loss: 5.651, avg. samples / sec: 922.64
Iteration:   1800, Loss function: 5.669, Average Loss: 5.654, avg. samples / sec: 982.08
Iteration:   1820, Loss function: 5.986, Average Loss: 5.655, avg. samples / sec: 953.11
Iteration:   1840, Loss function: 5.894, Average Loss: 5.655, avg. samples / sec: 957.65
Iteration:   1860, Loss function: 5.654, Average Loss: 5.654, avg. samples / sec: 949.96
Iteration:   1880, Loss function: 5.936, Average Loss: 5.655, avg. samples / sec: 915.67
Iteration:   1900, Loss function: 5.811, Average Loss: 5.655, avg. samples / sec: 989.91
Iteration:   1920, Loss function: 5.689, Average Loss: 5.655, avg. samples / sec: 987.22
Iteration:   1940, Loss function: 5.937, Average Loss: 5.655, avg. samples / sec: 930.24
Iteration:   1960, Loss function: 5.509, Average Loss: 5.654, avg. samples / sec: 924.37
Iteration:   1980, Loss function: 5.688, Average Loss: 5.653, avg. samples / sec: 928.78
Iteration:   2000, Loss function: 5.616, Average Loss: 5.652, avg. samples / sec: 954.36
Iteration:   2020, Loss function: 5.622, Average Loss: 5.652, avg. samples / sec: 894.76
Iteration:   2040, Loss function: 5.720, Average Loss: 5.652, avg. samples / sec: 915.24
:::MLLOG {"namespace": "", "time_ms": 1639755516453, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639755516454, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.556, Average Loss: 5.650, avg. samples / sec: 962.58
Iteration:   2080, Loss function: 5.127, Average Loss: 5.648, avg. samples / sec: 989.19
Iteration:   2100, Loss function: 5.614, Average Loss: 5.646, avg. samples / sec: 916.68
Iteration:   2120, Loss function: 5.257, Average Loss: 5.643, avg. samples / sec: 973.49
Iteration:   2140, Loss function: 5.510, Average Loss: 5.640, avg. samples / sec: 999.02
Iteration:   2160, Loss function: 5.402, Average Loss: 5.638, avg. samples / sec: 962.77
Iteration:   2180, Loss function: 5.408, Average Loss: 5.635, avg. samples / sec: 906.25
Iteration:   2200, Loss function: 5.369, Average Loss: 5.631, avg. samples / sec: 923.48
Iteration:   2220, Loss function: 5.639, Average Loss: 5.629, avg. samples / sec: 966.80
Iteration:   2240, Loss function: 5.407, Average Loss: 5.626, avg. samples / sec: 982.62
Iteration:   2260, Loss function: 5.307, Average Loss: 5.622, avg. samples / sec: 975.16
Iteration:   2280, Loss function: 5.290, Average Loss: 5.620, avg. samples / sec: 971.00
Iteration:   2300, Loss function: 5.226, Average Loss: 5.617, avg. samples / sec: 977.55
Iteration:   2320, Loss function: 5.438, Average Loss: 5.615, avg. samples / sec: 954.89
Iteration:   2340, Loss function: 5.578, Average Loss: 5.611, avg. samples / sec: 897.53
Iteration:   2360, Loss function: 5.339, Average Loss: 5.607, avg. samples / sec: 939.75
Iteration:   2380, Loss function: 5.492, Average Loss: 5.603, avg. samples / sec: 966.33
Iteration:   2400, Loss function: 5.548, Average Loss: 5.599, avg. samples / sec: 943.40
Iteration:   2420, Loss function: 5.496, Average Loss: 5.595, avg. samples / sec: 926.11
Iteration:   2440, Loss function: 5.456, Average Loss: 5.593, avg. samples / sec: 942.74
Iteration:   2460, Loss function: 5.415, Average Loss: 5.589, avg. samples / sec: 1004.43
Iteration:   2480, Loss function: 5.368, Average Loss: 5.585, avg. samples / sec: 955.50
Iteration:   2500, Loss function: 5.368, Average Loss: 5.581, avg. samples / sec: 1000.70
Iteration:   2520, Loss function: 5.538, Average Loss: 5.576, avg. samples / sec: 977.45
Iteration:   2540, Loss function: 5.324, Average Loss: 5.573, avg. samples / sec: 967.70
Iteration:   2560, Loss function: 5.228, Average Loss: 5.569, avg. samples / sec: 974.93
Iteration:   2580, Loss function: 5.345, Average Loss: 5.566, avg. samples / sec: 945.93
Iteration:   2600, Loss function: 5.422, Average Loss: 5.563, avg. samples / sec: 871.72
Iteration:   2620, Loss function: 5.576, Average Loss: 5.559, avg. samples / sec: 874.94
Iteration:   2640, Loss function: 5.254, Average Loss: 5.556, avg. samples / sec: 939.17
Iteration:   2660, Loss function: 5.096, Average Loss: 5.552, avg. samples / sec: 906.75
Iteration:   2680, Loss function: 5.241, Average Loss: 5.548, avg. samples / sec: 976.30
Iteration:   2700, Loss function: 5.062, Average Loss: 5.543, avg. samples / sec: 895.99
Iteration:   2720, Loss function: 5.429, Average Loss: 5.540, avg. samples / sec: 925.09
Iteration:   2740, Loss function: 4.990, Average Loss: 5.535, avg. samples / sec: 918.46
Iteration:   2760, Loss function: 5.098, Average Loss: 5.530, avg. samples / sec: 931.18
Iteration:   2780, Loss function: 5.588, Average Loss: 5.527, avg. samples / sec: 888.33
Iteration:   2800, Loss function: 5.316, Average Loss: 5.523, avg. samples / sec: 867.86
Iteration:   2820, Loss function: 5.448, Average Loss: 5.518, avg. samples / sec: 958.38
Iteration:   2840, Loss function: 5.299, Average Loss: 5.513, avg. samples / sec: 963.04
Iteration:   2860, Loss function: 5.087, Average Loss: 5.508, avg. samples / sec: 965.04
Iteration:   2880, Loss function: 5.240, Average Loss: 5.503, avg. samples / sec: 969.98
Iteration:   2900, Loss function: 5.115, Average Loss: 5.499, avg. samples / sec: 950.60
Iteration:   2920, Loss function: 5.321, Average Loss: 5.493, avg. samples / sec: 991.57
Iteration:   2940, Loss function: 5.123, Average Loss: 5.490, avg. samples / sec: 982.47
Iteration:   2960, Loss function: 5.310, Average Loss: 5.485, avg. samples / sec: 998.55
Iteration:   2980, Loss function: 5.489, Average Loss: 5.482, avg. samples / sec: 984.50
Iteration:   3000, Loss function: 5.305, Average Loss: 5.476, avg. samples / sec: 944.80
Iteration:   3020, Loss function: 5.363, Average Loss: 5.470, avg. samples / sec: 965.65
Iteration:   3040, Loss function: 5.339, Average Loss: 5.465, avg. samples / sec: 908.11
Iteration:   3060, Loss function: 5.063, Average Loss: 5.459, avg. samples / sec: 906.00
Iteration:   3080, Loss function: 4.944, Average Loss: 5.454, avg. samples / sec: 968.27
:::MLLOG {"namespace": "", "time_ms": 1639755640128, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639755640130, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.117, Average Loss: 5.448, avg. samples / sec: 991.70
Iteration:   3120, Loss function: 4.990, Average Loss: 5.442, avg. samples / sec: 958.82
Iteration:   3140, Loss function: 4.954, Average Loss: 5.436, avg. samples / sec: 976.80
Iteration:   3160, Loss function: 5.364, Average Loss: 5.431, avg. samples / sec: 996.99
Iteration:   3180, Loss function: 5.033, Average Loss: 5.427, avg. samples / sec: 986.44
Iteration:   3200, Loss function: 5.301, Average Loss: 5.422, avg. samples / sec: 916.79
Iteration:   3220, Loss function: 5.172, Average Loss: 5.416, avg. samples / sec: 976.07
Iteration:   3240, Loss function: 5.177, Average Loss: 5.410, avg. samples / sec: 988.50
Iteration:   3260, Loss function: 5.054, Average Loss: 5.405, avg. samples / sec: 985.48
Iteration:   3280, Loss function: 4.969, Average Loss: 5.400, avg. samples / sec: 980.78
Iteration:   3300, Loss function: 4.795, Average Loss: 5.393, avg. samples / sec: 989.34
Iteration:   3320, Loss function: 4.979, Average Loss: 5.388, avg. samples / sec: 976.25
Iteration:   3340, Loss function: 5.168, Average Loss: 5.384, avg. samples / sec: 972.09
Iteration:   3360, Loss function: 5.037, Average Loss: 5.377, avg. samples / sec: 996.96
Iteration:   3380, Loss function: 5.144, Average Loss: 5.371, avg. samples / sec: 989.50
Iteration:   3400, Loss function: 4.706, Average Loss: 5.365, avg. samples / sec: 967.45
Iteration:   3420, Loss function: 5.212, Average Loss: 5.359, avg. samples / sec: 929.62
Iteration:   3440, Loss function: 4.913, Average Loss: 5.354, avg. samples / sec: 926.14
Iteration:   3460, Loss function: 5.237, Average Loss: 5.349, avg. samples / sec: 949.19
Iteration:   3480, Loss function: 5.103, Average Loss: 5.344, avg. samples / sec: 996.68
Iteration:   3500, Loss function: 5.139, Average Loss: 5.341, avg. samples / sec: 964.25
Iteration:   3520, Loss function: 5.047, Average Loss: 5.337, avg. samples / sec: 912.07
Iteration:   3540, Loss function: 4.976, Average Loss: 5.332, avg. samples / sec: 981.74
Iteration:   3560, Loss function: 4.874, Average Loss: 5.328, avg. samples / sec: 973.29
Iteration:   3580, Loss function: 5.069, Average Loss: 5.323, avg. samples / sec: 869.07
Iteration:   3600, Loss function: 5.242, Average Loss: 5.317, avg. samples / sec: 966.70
Iteration:   3620, Loss function: 4.885, Average Loss: 5.312, avg. samples / sec: 989.52
Iteration:   3640, Loss function: 4.822, Average Loss: 5.307, avg. samples / sec: 916.16
Iteration:   3660, Loss function: 4.947, Average Loss: 5.303, avg. samples / sec: 989.23
Iteration:   3680, Loss function: 5.151, Average Loss: 5.298, avg. samples / sec: 993.56
Iteration:   3700, Loss function: 5.044, Average Loss: 5.293, avg. samples / sec: 911.05
Iteration:   3720, Loss function: 5.015, Average Loss: 5.286, avg. samples / sec: 943.01
Iteration:   3740, Loss function: 5.118, Average Loss: 5.281, avg. samples / sec: 988.11
Iteration:   3760, Loss function: 4.984, Average Loss: 5.277, avg. samples / sec: 958.47
Iteration:   3780, Loss function: 5.155, Average Loss: 5.272, avg. samples / sec: 941.47
Iteration:   3800, Loss function: 5.097, Average Loss: 5.268, avg. samples / sec: 966.47
Iteration:   3820, Loss function: 5.220, Average Loss: 5.263, avg. samples / sec: 994.80
Iteration:   3840, Loss function: 4.722, Average Loss: 5.258, avg. samples / sec: 965.04
Iteration:   3860, Loss function: 4.990, Average Loss: 5.252, avg. samples / sec: 992.46
Iteration:   3880, Loss function: 5.083, Average Loss: 5.246, avg. samples / sec: 983.44
Iteration:   3900, Loss function: 4.976, Average Loss: 5.241, avg. samples / sec: 979.23
Iteration:   3920, Loss function: 5.077, Average Loss: 5.235, avg. samples / sec: 983.84
Iteration:   3940, Loss function: 4.942, Average Loss: 5.230, avg. samples / sec: 992.87
Iteration:   3960, Loss function: 4.904, Average Loss: 5.227, avg. samples / sec: 955.32
Iteration:   3980, Loss function: 5.012, Average Loss: 5.221, avg. samples / sec: 907.99
Iteration:   4000, Loss function: 5.116, Average Loss: 5.217, avg. samples / sec: 931.61
Iteration:   4020, Loss function: 4.875, Average Loss: 5.211, avg. samples / sec: 950.97
Iteration:   4040, Loss function: 5.065, Average Loss: 5.208, avg. samples / sec: 918.69
Iteration:   4060, Loss function: 5.114, Average Loss: 5.204, avg. samples / sec: 953.96
Iteration:   4080, Loss function: 5.178, Average Loss: 5.199, avg. samples / sec: 990.10
Iteration:   4100, Loss function: 5.204, Average Loss: 5.195, avg. samples / sec: 981.30
:::MLLOG {"namespace": "", "time_ms": 1639755761929, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639755761930, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 4.983, Average Loss: 5.191, avg. samples / sec: 947.18
Iteration:   4140, Loss function: 5.000, Average Loss: 5.186, avg. samples / sec: 971.44
Iteration:   4160, Loss function: 4.992, Average Loss: 5.180, avg. samples / sec: 975.92
Iteration:   4180, Loss function: 4.898, Average Loss: 5.174, avg. samples / sec: 951.50
Iteration:   4200, Loss function: 4.816, Average Loss: 5.169, avg. samples / sec: 906.15
Iteration:   4220, Loss function: 4.694, Average Loss: 5.164, avg. samples / sec: 969.31
Iteration:   4240, Loss function: 4.901, Average Loss: 5.159, avg. samples / sec: 944.10
Iteration:   4260, Loss function: 5.167, Average Loss: 5.154, avg. samples / sec: 910.78
Iteration:   4280, Loss function: 5.022, Average Loss: 5.148, avg. samples / sec: 986.36
Iteration:   4300, Loss function: 4.820, Average Loss: 5.143, avg. samples / sec: 962.74
Iteration:   4320, Loss function: 4.685, Average Loss: 5.138, avg. samples / sec: 976.01
Iteration:   4340, Loss function: 4.705, Average Loss: 5.131, avg. samples / sec: 990.34
Iteration:   4360, Loss function: 4.778, Average Loss: 5.127, avg. samples / sec: 974.25
Iteration:   4380, Loss function: 5.074, Average Loss: 5.122, avg. samples / sec: 911.73
Iteration:   4400, Loss function: 4.925, Average Loss: 5.118, avg. samples / sec: 952.76
Iteration:   4420, Loss function: 4.823, Average Loss: 5.113, avg. samples / sec: 934.90
Iteration:   4440, Loss function: 4.912, Average Loss: 5.109, avg. samples / sec: 947.20
Iteration:   4460, Loss function: 5.340, Average Loss: 5.105, avg. samples / sec: 998.30
Iteration:   4480, Loss function: 5.087, Average Loss: 5.102, avg. samples / sec: 901.77
Iteration:   4500, Loss function: 4.863, Average Loss: 5.099, avg. samples / sec: 954.61
Iteration:   4520, Loss function: 4.630, Average Loss: 5.094, avg. samples / sec: 930.50
Iteration:   4540, Loss function: 5.215, Average Loss: 5.090, avg. samples / sec: 967.86
Iteration:   4560, Loss function: 4.700, Average Loss: 5.086, avg. samples / sec: 940.21
Iteration:   4580, Loss function: 5.047, Average Loss: 5.083, avg. samples / sec: 952.18
Iteration:   4600, Loss function: 4.838, Average Loss: 5.080, avg. samples / sec: 960.39
Iteration:   4620, Loss function: 4.735, Average Loss: 5.076, avg. samples / sec: 936.91
Iteration:   4640, Loss function: 4.635, Average Loss: 5.071, avg. samples / sec: 932.41
Iteration:   4660, Loss function: 4.803, Average Loss: 5.066, avg. samples / sec: 972.82
Iteration:   4680, Loss function: 5.155, Average Loss: 5.062, avg. samples / sec: 964.67
Iteration:   4700, Loss function: 4.778, Average Loss: 5.059, avg. samples / sec: 991.91
Iteration:   4720, Loss function: 4.863, Average Loss: 5.054, avg. samples / sec: 839.46
Iteration:   4740, Loss function: 4.841, Average Loss: 5.050, avg. samples / sec: 987.22
Iteration:   4760, Loss function: 4.755, Average Loss: 5.047, avg. samples / sec: 926.18
Iteration:   4780, Loss function: 4.958, Average Loss: 5.044, avg. samples / sec: 951.84
Iteration:   4800, Loss function: 4.854, Average Loss: 5.041, avg. samples / sec: 915.19
Iteration:   4820, Loss function: 4.717, Average Loss: 5.037, avg. samples / sec: 901.50
Iteration:   4840, Loss function: 4.982, Average Loss: 5.033, avg. samples / sec: 975.23
Iteration:   4860, Loss function: 4.677, Average Loss: 5.028, avg. samples / sec: 869.82
Iteration:   4880, Loss function: 5.176, Average Loss: 5.025, avg. samples / sec: 888.21
Iteration:   4900, Loss function: 4.661, Average Loss: 5.021, avg. samples / sec: 932.84
Iteration:   4920, Loss function: 4.649, Average Loss: 5.018, avg. samples / sec: 975.49
Iteration:   4940, Loss function: 4.734, Average Loss: 5.013, avg. samples / sec: 920.17
Iteration:   4960, Loss function: 4.614, Average Loss: 5.009, avg. samples / sec: 933.67
Iteration:   4980, Loss function: 4.797, Average Loss: 5.006, avg. samples / sec: 950.13
Iteration:   5000, Loss function: 4.873, Average Loss: 5.002, avg. samples / sec: 904.73
Iteration:   5020, Loss function: 4.952, Average Loss: 4.999, avg. samples / sec: 876.20
Iteration:   5040, Loss function: 4.947, Average Loss: 4.996, avg. samples / sec: 899.93
Iteration:   5060, Loss function: 4.816, Average Loss: 4.993, avg. samples / sec: 982.67
Iteration:   5080, Loss function: 4.605, Average Loss: 4.989, avg. samples / sec: 932.43
Iteration:   5100, Loss function: 4.769, Average Loss: 4.987, avg. samples / sec: 955.63
Iteration:   5120, Loss function: 4.678, Average Loss: 4.984, avg. samples / sec: 971.62
Iteration:   5140, Loss function: 4.820, Average Loss: 4.980, avg. samples / sec: 987.09
:::MLLOG {"namespace": "", "time_ms": 1639755886348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
Predicting Ended, total time: 32.84 s
:::MLLOG {"namespace": "", "time_ms": 1639755919279, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639755919294, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 6, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755919294, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Loading and preparing results...
DONE (t=1.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:   5160, Loss function: 4.874, Average Loss: 4.976, avg. samples / sec: 63.44
Iteration:   5180, Loss function: 4.611, Average Loss: 4.971, avg. samples / sec: 893.03
Iteration:   5200, Loss function: 4.671, Average Loss: 4.966, avg. samples / sec: 982.00
DONE (t=5.61s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09846
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.20115
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08759
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17681
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12903
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.19004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.09846 AP goal: 0.10000
Iteration:   5220, Loss function: 4.649, Average Loss: 4.963, avg. samples / sec: 1022.94
:::MLLOG {"namespace": "", "time_ms": 1639755929019, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755929020, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.09845608856343507, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755929020, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 5}}
Iteration:   5240, Loss function: 4.461, Average Loss: 4.957, avg. samples / sec: 1033.12
Iteration:   5260, Loss function: 4.824, Average Loss: 4.954, avg. samples / sec: 1036.08
Iteration:   5280, Loss function: 4.717, Average Loss: 4.950, avg. samples / sec: 1035.99
Iteration:   5300, Loss function: 4.986, Average Loss: 4.945, avg. samples / sec: 1035.07
Iteration:   5320, Loss function: 4.999, Average Loss: 4.940, avg. samples / sec: 1035.71
Iteration:   5340, Loss function: 4.930, Average Loss: 4.936, avg. samples / sec: 1034.30
Iteration:   5360, Loss function: 4.874, Average Loss: 4.934, avg. samples / sec: 1034.19
Iteration:   5380, Loss function: 4.550, Average Loss: 4.930, avg. samples / sec: 1036.38
Iteration:   5400, Loss function: 4.432, Average Loss: 4.926, avg. samples / sec: 1035.32
Iteration:   5420, Loss function: 4.686, Average Loss: 4.922, avg. samples / sec: 1036.35
Iteration:   5440, Loss function: 4.785, Average Loss: 4.919, avg. samples / sec: 1035.65
Iteration:   5460, Loss function: 4.579, Average Loss: 4.915, avg. samples / sec: 1037.06
Iteration:   5480, Loss function: 4.598, Average Loss: 4.912, avg. samples / sec: 1033.88
Iteration:   5500, Loss function: 4.498, Average Loss: 4.908, avg. samples / sec: 1035.02
Iteration:   5520, Loss function: 4.764, Average Loss: 4.905, avg. samples / sec: 1035.56
Iteration:   5540, Loss function: 4.639, Average Loss: 4.901, avg. samples / sec: 1035.55
Iteration:   5560, Loss function: 4.957, Average Loss: 4.899, avg. samples / sec: 1033.05
Iteration:   5580, Loss function: 4.694, Average Loss: 4.895, avg. samples / sec: 1034.15
Iteration:   5600, Loss function: 4.678, Average Loss: 4.892, avg. samples / sec: 1035.57
Iteration:   5620, Loss function: 4.359, Average Loss: 4.889, avg. samples / sec: 1035.41
Iteration:   5640, Loss function: 4.611, Average Loss: 4.886, avg. samples / sec: 1029.88
Iteration:   5660, Loss function: 4.703, Average Loss: 4.883, avg. samples / sec: 1026.84
Iteration:   5680, Loss function: 4.872, Average Loss: 4.880, avg. samples / sec: 1024.95
Iteration:   5700, Loss function: 4.555, Average Loss: 4.876, avg. samples / sec: 1030.22
Iteration:   5720, Loss function: 4.588, Average Loss: 4.874, avg. samples / sec: 1034.77
Iteration:   5740, Loss function: 4.551, Average Loss: 4.870, avg. samples / sec: 1034.46
Iteration:   5760, Loss function: 4.619, Average Loss: 4.866, avg. samples / sec: 1034.55
Iteration:   5780, Loss function: 4.690, Average Loss: 4.864, avg. samples / sec: 1035.69
Iteration:   5800, Loss function: 4.798, Average Loss: 4.860, avg. samples / sec: 1034.81
Iteration:   5820, Loss function: 4.970, Average Loss: 4.857, avg. samples / sec: 1036.24
Iteration:   5840, Loss function: 4.425, Average Loss: 4.854, avg. samples / sec: 1035.73
Iteration:   5860, Loss function: 4.888, Average Loss: 4.852, avg. samples / sec: 1035.70
Iteration:   5880, Loss function: 4.686, Average Loss: 4.849, avg. samples / sec: 1036.79
Iteration:   5900, Loss function: 4.785, Average Loss: 4.847, avg. samples / sec: 1034.44
Iteration:   5920, Loss function: 4.768, Average Loss: 4.844, avg. samples / sec: 1026.81
Iteration:   5940, Loss function: 4.693, Average Loss: 4.842, avg. samples / sec: 1023.22
Iteration:   5960, Loss function: 4.669, Average Loss: 4.839, avg. samples / sec: 1023.73
Iteration:   5980, Loss function: 4.555, Average Loss: 4.836, avg. samples / sec: 1025.08
Iteration:   6000, Loss function: 4.501, Average Loss: 4.833, avg. samples / sec: 1027.35
Iteration:   6020, Loss function: 4.547, Average Loss: 4.830, avg. samples / sec: 1021.91
Iteration:   6040, Loss function: 4.877, Average Loss: 4.827, avg. samples / sec: 1025.65
Iteration:   6060, Loss function: 4.636, Average Loss: 4.826, avg. samples / sec: 1026.80
Iteration:   6080, Loss function: 4.572, Average Loss: 4.822, avg. samples / sec: 1024.41
Iteration:   6100, Loss function: 4.512, Average Loss: 4.820, avg. samples / sec: 1023.39
Iteration:   6120, Loss function: 4.607, Average Loss: 4.818, avg. samples / sec: 1026.36
Iteration:   6140, Loss function: 4.922, Average Loss: 4.816, avg. samples / sec: 1026.55
Iteration:   6160, Loss function: 4.773, Average Loss: 4.812, avg. samples / sec: 1034.49
:::MLLOG {"namespace": "", "time_ms": 1639756034074, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639756034075, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.568, Average Loss: 4.808, avg. samples / sec: 1034.55
Iteration:   6200, Loss function: 4.992, Average Loss: 4.804, avg. samples / sec: 1036.09
Iteration:   6220, Loss function: 4.469, Average Loss: 4.800, avg. samples / sec: 1033.63
Iteration:   6240, Loss function: 4.588, Average Loss: 4.796, avg. samples / sec: 1036.35
Iteration:   6260, Loss function: 4.591, Average Loss: 4.792, avg. samples / sec: 1035.38
Iteration:   6280, Loss function: 4.478, Average Loss: 4.788, avg. samples / sec: 1036.88
Iteration:   6300, Loss function: 4.965, Average Loss: 4.785, avg. samples / sec: 1034.64
Iteration:   6320, Loss function: 4.499, Average Loss: 4.782, avg. samples / sec: 1035.26
Iteration:   6340, Loss function: 4.592, Average Loss: 4.779, avg. samples / sec: 1036.58
Iteration:   6360, Loss function: 4.706, Average Loss: 4.774, avg. samples / sec: 1036.78
Iteration:   6380, Loss function: 4.582, Average Loss: 4.770, avg. samples / sec: 1023.96
Iteration:   6400, Loss function: 4.460, Average Loss: 4.768, avg. samples / sec: 1023.60
Iteration:   6420, Loss function: 4.645, Average Loss: 4.764, avg. samples / sec: 1016.37
Iteration:   6440, Loss function: 4.638, Average Loss: 4.761, avg. samples / sec: 1024.29
Iteration:   6460, Loss function: 4.631, Average Loss: 4.760, avg. samples / sec: 1021.25
Iteration:   6480, Loss function: 4.639, Average Loss: 4.758, avg. samples / sec: 1024.30
Iteration:   6500, Loss function: 4.798, Average Loss: 4.754, avg. samples / sec: 1022.00
Iteration:   6520, Loss function: 4.628, Average Loss: 4.755, avg. samples / sec: 1024.44
Iteration:   6540, Loss function: 4.488, Average Loss: 4.751, avg. samples / sec: 1023.75
Iteration:   6560, Loss function: 4.515, Average Loss: 4.748, avg. samples / sec: 1025.67
Iteration:   6580, Loss function: 4.938, Average Loss: 4.746, avg. samples / sec: 1032.85
Iteration:   6600, Loss function: 4.686, Average Loss: 4.744, avg. samples / sec: 1035.00
Iteration:   6620, Loss function: 4.658, Average Loss: 4.741, avg. samples / sec: 1035.45
Iteration:   6640, Loss function: 4.555, Average Loss: 4.738, avg. samples / sec: 1034.19
Iteration:   6660, Loss function: 4.782, Average Loss: 4.736, avg. samples / sec: 1031.62
Iteration:   6680, Loss function: 4.777, Average Loss: 4.735, avg. samples / sec: 1034.38
Iteration:   6700, Loss function: 4.453, Average Loss: 4.733, avg. samples / sec: 1033.78
Iteration:   6720, Loss function: 4.511, Average Loss: 4.730, avg. samples / sec: 1023.14
Iteration:   6740, Loss function: 4.511, Average Loss: 4.729, avg. samples / sec: 1019.66
Iteration:   6760, Loss function: 4.725, Average Loss: 4.726, avg. samples / sec: 1020.01
Iteration:   6780, Loss function: 4.641, Average Loss: 4.725, avg. samples / sec: 1018.88
Iteration:   6800, Loss function: 4.670, Average Loss: 4.722, avg. samples / sec: 1026.07
Iteration:   6820, Loss function: 4.587, Average Loss: 4.720, avg. samples / sec: 1035.22
Iteration:   6840, Loss function: 4.560, Average Loss: 4.717, avg. samples / sec: 1025.73
Iteration:   6860, Loss function: 4.436, Average Loss: 4.715, avg. samples / sec: 1023.02
Iteration:   6880, Loss function: 4.442, Average Loss: 4.711, avg. samples / sec: 1023.74
Iteration:   6900, Loss function: 4.550, Average Loss: 4.708, avg. samples / sec: 1022.61
Iteration:   6920, Loss function: 4.781, Average Loss: 4.706, avg. samples / sec: 1028.65
Iteration:   6940, Loss function: 4.267, Average Loss: 4.703, avg. samples / sec: 1035.24
Iteration:   6960, Loss function: 4.599, Average Loss: 4.700, avg. samples / sec: 1035.38
Iteration:   6980, Loss function: 4.381, Average Loss: 4.698, avg. samples / sec: 1033.89
Iteration:   7000, Loss function: 4.676, Average Loss: 4.697, avg. samples / sec: 1036.46
Iteration:   7020, Loss function: 4.691, Average Loss: 4.695, avg. samples / sec: 1035.25
Iteration:   7040, Loss function: 4.919, Average Loss: 4.694, avg. samples / sec: 1034.81
Iteration:   7060, Loss function: 4.705, Average Loss: 4.691, avg. samples / sec: 1023.21
Iteration:   7080, Loss function: 4.642, Average Loss: 4.689, avg. samples / sec: 1022.68
Iteration:   7100, Loss function: 4.213, Average Loss: 4.687, avg. samples / sec: 1024.13
Iteration:   7120, Loss function: 4.680, Average Loss: 4.685, avg. samples / sec: 1022.64
Iteration:   7140, Loss function: 4.672, Average Loss: 4.683, avg. samples / sec: 1026.20
Iteration:   7160, Loss function: 4.543, Average Loss: 4.681, avg. samples / sec: 1023.43
Iteration:   7180, Loss function: 4.796, Average Loss: 4.679, avg. samples / sec: 1024.64
Iteration:   7200, Loss function: 4.509, Average Loss: 4.678, avg. samples / sec: 1026.86
:::MLLOG {"namespace": "", "time_ms": 1639756148116, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639756148117, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.581, Average Loss: 4.675, avg. samples / sec: 1034.49
Iteration:   7240, Loss function: 4.305, Average Loss: 4.670, avg. samples / sec: 1035.63
Iteration:   7260, Loss function: 4.767, Average Loss: 4.668, avg. samples / sec: 1035.82
Iteration:   7280, Loss function: 4.655, Average Loss: 4.664, avg. samples / sec: 1036.02
Iteration:   7300, Loss function: 4.634, Average Loss: 4.659, avg. samples / sec: 1035.06
Iteration:   7320, Loss function: 4.472, Average Loss: 4.656, avg. samples / sec: 1034.00
Iteration:   7340, Loss function: 4.560, Average Loss: 4.653, avg. samples / sec: 1035.83
Iteration:   7360, Loss function: 4.605, Average Loss: 4.652, avg. samples / sec: 1033.27
Iteration:   7380, Loss function: 4.596, Average Loss: 4.650, avg. samples / sec: 1027.51
Iteration:   7400, Loss function: 4.412, Average Loss: 4.648, avg. samples / sec: 1034.21
Iteration:   7420, Loss function: 4.615, Average Loss: 4.645, avg. samples / sec: 1032.19
Iteration:   7440, Loss function: 4.480, Average Loss: 4.643, avg. samples / sec: 1034.38
Iteration:   7460, Loss function: 4.567, Average Loss: 4.640, avg. samples / sec: 1035.37
Iteration:   7480, Loss function: 4.417, Average Loss: 4.637, avg. samples / sec: 1034.03
Iteration:   7500, Loss function: 4.293, Average Loss: 4.635, avg. samples / sec: 1033.95
Iteration:   7520, Loss function: 4.498, Average Loss: 4.632, avg. samples / sec: 1036.31
Iteration:   7540, Loss function: 4.621, Average Loss: 4.631, avg. samples / sec: 1035.06
Iteration:   7560, Loss function: 4.257, Average Loss: 4.629, avg. samples / sec: 1033.19
Iteration:   7580, Loss function: 4.369, Average Loss: 4.627, avg. samples / sec: 1035.74
Iteration:   7600, Loss function: 4.613, Average Loss: 4.624, avg. samples / sec: 1034.68
Iteration:   7620, Loss function: 4.660, Average Loss: 4.623, avg. samples / sec: 1034.12
Iteration:   7640, Loss function: 4.293, Average Loss: 4.621, avg. samples / sec: 1034.15
Iteration:   7660, Loss function: 4.414, Average Loss: 4.620, avg. samples / sec: 1034.79
Iteration:   7680, Loss function: 4.636, Average Loss: 4.618, avg. samples / sec: 1031.82
Iteration:   7700, Loss function: 4.380, Average Loss: 4.615, avg. samples / sec: 1034.04
Iteration:   7720, Loss function: 4.510, Average Loss: 4.613, avg. samples / sec: 1030.92
Iteration:   7740, Loss function: 4.257, Average Loss: 4.610, avg. samples / sec: 1033.52
Iteration:   7760, Loss function: 4.677, Average Loss: 4.608, avg. samples / sec: 1032.26
Iteration:   7780, Loss function: 4.523, Average Loss: 4.607, avg. samples / sec: 1020.78
Iteration:   7800, Loss function: 4.557, Average Loss: 4.606, avg. samples / sec: 1019.29
Iteration:   7820, Loss function: 4.553, Average Loss: 4.606, avg. samples / sec: 1022.36
Iteration:   7840, Loss function: 4.607, Average Loss: 4.604, avg. samples / sec: 1024.30
Iteration:   7860, Loss function: 4.564, Average Loss: 4.603, avg. samples / sec: 1022.52
Iteration:   7880, Loss function: 4.661, Average Loss: 4.602, avg. samples / sec: 1023.57
Iteration:   7900, Loss function: 4.802, Average Loss: 4.600, avg. samples / sec: 1022.68
Iteration:   7920, Loss function: 4.428, Average Loss: 4.597, avg. samples / sec: 1026.64
Iteration:   7940, Loss function: 4.763, Average Loss: 4.595, avg. samples / sec: 1031.06
Iteration:   7960, Loss function: 4.438, Average Loss: 4.593, avg. samples / sec: 1034.91
Iteration:   7980, Loss function: 4.729, Average Loss: 4.591, avg. samples / sec: 1034.16
Iteration:   8000, Loss function: 4.524, Average Loss: 4.589, avg. samples / sec: 1033.27
Iteration:   8020, Loss function: 4.537, Average Loss: 4.587, avg. samples / sec: 1035.29
Iteration:   8040, Loss function: 4.663, Average Loss: 4.587, avg. samples / sec: 1036.97
Iteration:   8060, Loss function: 4.859, Average Loss: 4.587, avg. samples / sec: 1034.81
Iteration:   8080, Loss function: 4.458, Average Loss: 4.585, avg. samples / sec: 1035.12
Iteration:   8100, Loss function: 4.814, Average Loss: 4.583, avg. samples / sec: 1034.81
Iteration:   8120, Loss function: 4.418, Average Loss: 4.581, avg. samples / sec: 1035.66
Iteration:   8140, Loss function: 4.105, Average Loss: 4.579, avg. samples / sec: 1034.01
Iteration:   8160, Loss function: 4.200, Average Loss: 4.577, avg. samples / sec: 1034.50
Iteration:   8180, Loss function: 4.792, Average Loss: 4.576, avg. samples / sec: 1034.28
Iteration:   8200, Loss function: 4.528, Average Loss: 4.577, avg. samples / sec: 1032.84
Iteration:   8220, Loss function: 4.808, Average Loss: 4.577, avg. samples / sec: 1035.17
:::MLLOG {"namespace": "", "time_ms": 1639756261746, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639756261747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.390, Average Loss: 4.574, avg. samples / sec: 1034.50
Iteration:   8260, Loss function: 4.444, Average Loss: 4.572, avg. samples / sec: 1036.34
Iteration:   8280, Loss function: 4.454, Average Loss: 4.570, avg. samples / sec: 1036.08
Iteration:   8300, Loss function: 4.172, Average Loss: 4.568, avg. samples / sec: 1036.76
Iteration:   8320, Loss function: 4.611, Average Loss: 4.564, avg. samples / sec: 1036.05
Iteration:   8340, Loss function: 4.481, Average Loss: 4.562, avg. samples / sec: 1034.36
Iteration:   8360, Loss function: 4.453, Average Loss: 4.559, avg. samples / sec: 1035.77
Iteration:   8380, Loss function: 4.318, Average Loss: 4.556, avg. samples / sec: 1031.88
Iteration:   8400, Loss function: 4.439, Average Loss: 4.554, avg. samples / sec: 1036.29
Iteration:   8420, Loss function: 4.389, Average Loss: 4.552, avg. samples / sec: 1035.35
Iteration:   8440, Loss function: 4.729, Average Loss: 4.551, avg. samples / sec: 1032.47
Iteration:   8460, Loss function: 4.346, Average Loss: 4.550, avg. samples / sec: 1036.14
Iteration:   8480, Loss function: 4.469, Average Loss: 4.548, avg. samples / sec: 1036.97
Iteration:   8500, Loss function: 4.143, Average Loss: 4.545, avg. samples / sec: 1035.39
Iteration:   8520, Loss function: 4.368, Average Loss: 4.542, avg. samples / sec: 1035.13
Iteration:   8540, Loss function: 4.398, Average Loss: 4.540, avg. samples / sec: 1032.32
Iteration:   8560, Loss function: 4.371, Average Loss: 4.539, avg. samples / sec: 1031.82
Iteration:   8580, Loss function: 4.525, Average Loss: 4.537, avg. samples / sec: 1035.37
Iteration:   8600, Loss function: 4.455, Average Loss: 4.535, avg. samples / sec: 1032.52
Iteration:   8620, Loss function: 4.402, Average Loss: 4.533, avg. samples / sec: 1034.08
Iteration:   8640, Loss function: 4.300, Average Loss: 4.532, avg. samples / sec: 1036.28
Iteration:   8660, Loss function: 4.343, Average Loss: 4.530, avg. samples / sec: 1032.71
Iteration:   8680, Loss function: 4.581, Average Loss: 4.528, avg. samples / sec: 1033.32
Iteration:   8700, Loss function: 4.565, Average Loss: 4.527, avg. samples / sec: 1035.77
Iteration:   8720, Loss function: 4.430, Average Loss: 4.525, avg. samples / sec: 1035.15
Iteration:   8740, Loss function: 4.344, Average Loss: 4.523, avg. samples / sec: 1036.30
Iteration:   8760, Loss function: 4.341, Average Loss: 4.522, avg. samples / sec: 1035.45
Iteration:   8780, Loss function: 4.604, Average Loss: 4.522, avg. samples / sec: 1034.90
Iteration:   8800, Loss function: 4.663, Average Loss: 4.520, avg. samples / sec: 1033.36
Iteration:   8820, Loss function: 4.234, Average Loss: 4.518, avg. samples / sec: 1035.12
Iteration:   8840, Loss function: 4.312, Average Loss: 4.516, avg. samples / sec: 1022.25
Iteration:   8860, Loss function: 4.590, Average Loss: 4.515, avg. samples / sec: 1019.85
Iteration:   8880, Loss function: 4.484, Average Loss: 4.513, avg. samples / sec: 1017.41
Iteration:   8900, Loss function: 4.523, Average Loss: 4.513, avg. samples / sec: 1022.28
Iteration:   8920, Loss function: 4.438, Average Loss: 4.510, avg. samples / sec: 1023.78
Iteration:   8940, Loss function: 4.332, Average Loss: 4.508, avg. samples / sec: 1019.31
Iteration:   8960, Loss function: 4.279, Average Loss: 4.506, avg. samples / sec: 1020.52
Iteration:   8980, Loss function: 4.434, Average Loss: 4.505, avg. samples / sec: 1025.87
Iteration:   9000, Loss function: 4.417, Average Loss: 4.503, avg. samples / sec: 1032.70
Iteration:   9020, Loss function: 4.717, Average Loss: 4.502, avg. samples / sec: 1033.29
Iteration:   9040, Loss function: 4.391, Average Loss: 4.502, avg. samples / sec: 1035.75
Iteration:   9060, Loss function: 4.172, Average Loss: 4.500, avg. samples / sec: 1035.57
Iteration:   9080, Loss function: 4.692, Average Loss: 4.500, avg. samples / sec: 1035.50
Iteration:   9100, Loss function: 4.362, Average Loss: 4.498, avg. samples / sec: 1035.04
Iteration:   9120, Loss function: 4.387, Average Loss: 4.497, avg. samples / sec: 1035.09
Iteration:   9140, Loss function: 4.316, Average Loss: 4.496, avg. samples / sec: 1034.02
Iteration:   9160, Loss function: 4.260, Average Loss: 4.496, avg. samples / sec: 1036.11
Iteration:   9180, Loss function: 4.043, Average Loss: 4.496, avg. samples / sec: 1033.68
Iteration:   9200, Loss function: 4.317, Average Loss: 4.495, avg. samples / sec: 1034.10
Iteration:   9220, Loss function: 4.393, Average Loss: 4.495, avg. samples / sec: 1033.19
Iteration:   9240, Loss function: 4.555, Average Loss: 4.494, avg. samples / sec: 1033.31
:::MLLOG {"namespace": "", "time_ms": 1639756375245, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639756375246, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.424, Average Loss: 4.492, avg. samples / sec: 1033.84
Iteration:   9280, Loss function: 4.164, Average Loss: 4.490, avg. samples / sec: 1033.31
Iteration:   9300, Loss function: 4.468, Average Loss: 4.487, avg. samples / sec: 1034.11
Iteration:   9320, Loss function: 4.128, Average Loss: 4.484, avg. samples / sec: 1034.23
Iteration:   9340, Loss function: 4.723, Average Loss: 4.482, avg. samples / sec: 1035.10
Iteration:   9360, Loss function: 4.358, Average Loss: 4.481, avg. samples / sec: 1036.03
Iteration:   9380, Loss function: 4.288, Average Loss: 4.479, avg. samples / sec: 1035.00
Iteration:   9400, Loss function: 4.246, Average Loss: 4.477, avg. samples / sec: 1035.86
Iteration:   9420, Loss function: 4.509, Average Loss: 4.475, avg. samples / sec: 1032.14
Iteration:   9440, Loss function: 4.465, Average Loss: 4.473, avg. samples / sec: 1031.27
Iteration:   9460, Loss function: 4.222, Average Loss: 4.472, avg. samples / sec: 1035.22
Iteration:   9480, Loss function: 4.521, Average Loss: 4.470, avg. samples / sec: 1034.53
Iteration:   9500, Loss function: 4.416, Average Loss: 4.467, avg. samples / sec: 1033.30
Iteration:   9520, Loss function: 4.260, Average Loss: 4.465, avg. samples / sec: 1032.70
Iteration:   9540, Loss function: 4.404, Average Loss: 4.463, avg. samples / sec: 1033.51
Iteration:   9560, Loss function: 4.561, Average Loss: 4.462, avg. samples / sec: 1034.39
Iteration:   9580, Loss function: 4.364, Average Loss: 4.461, avg. samples / sec: 1035.07
Iteration:   9600, Loss function: 4.072, Average Loss: 4.460, avg. samples / sec: 1034.67
Iteration:   9620, Loss function: 4.496, Average Loss: 4.459, avg. samples / sec: 1033.40
Iteration:   9640, Loss function: 4.409, Average Loss: 4.457, avg. samples / sec: 1034.60
Iteration:   9660, Loss function: 4.563, Average Loss: 4.456, avg. samples / sec: 1033.00
Iteration:   9680, Loss function: 4.550, Average Loss: 4.455, avg. samples / sec: 1034.20
Iteration:   9700, Loss function: 4.588, Average Loss: 4.455, avg. samples / sec: 1026.75
Iteration:   9720, Loss function: 4.173, Average Loss: 4.451, avg. samples / sec: 1029.45
Iteration:   9740, Loss function: 4.632, Average Loss: 4.451, avg. samples / sec: 1024.39
Iteration:   9760, Loss function: 4.157, Average Loss: 4.449, avg. samples / sec: 1021.47
Iteration:   9780, Loss function: 4.378, Average Loss: 4.448, avg. samples / sec: 1020.13
Iteration:   9800, Loss function: 4.307, Average Loss: 4.445, avg. samples / sec: 1032.89
Iteration:   9820, Loss function: 4.173, Average Loss: 4.444, avg. samples / sec: 1035.76
Iteration:   9840, Loss function: 4.548, Average Loss: 4.444, avg. samples / sec: 1035.00
Iteration:   9860, Loss function: 4.502, Average Loss: 4.441, avg. samples / sec: 1035.79
Iteration:   9880, Loss function: 4.201, Average Loss: 4.440, avg. samples / sec: 1034.68
Iteration:   9900, Loss function: 4.673, Average Loss: 4.440, avg. samples / sec: 1034.84
Iteration:   9920, Loss function: 4.611, Average Loss: 4.439, avg. samples / sec: 1036.15
Iteration:   9940, Loss function: 4.269, Average Loss: 4.436, avg. samples / sec: 1036.39
Iteration:   9960, Loss function: 4.508, Average Loss: 4.435, avg. samples / sec: 1032.51
Iteration:   9980, Loss function: 4.424, Average Loss: 4.435, avg. samples / sec: 1034.00
Iteration:  10000, Loss function: 3.854, Average Loss: 4.433, avg. samples / sec: 1034.86
Iteration:  10020, Loss function: 4.613, Average Loss: 4.433, avg. samples / sec: 1032.93
Iteration:  10040, Loss function: 4.406, Average Loss: 4.430, avg. samples / sec: 1035.59
Iteration:  10060, Loss function: 4.050, Average Loss: 4.429, avg. samples / sec: 1033.89
Iteration:  10080, Loss function: 4.517, Average Loss: 4.427, avg. samples / sec: 1021.58
Iteration:  10100, Loss function: 3.969, Average Loss: 4.426, avg. samples / sec: 1021.63
Iteration:  10120, Loss function: 4.361, Average Loss: 4.425, avg. samples / sec: 1019.79
Iteration:  10140, Loss function: 4.455, Average Loss: 4.422, avg. samples / sec: 1023.16
Iteration:  10160, Loss function: 4.532, Average Loss: 4.422, avg. samples / sec: 1023.86
Iteration:  10180, Loss function: 4.708, Average Loss: 4.420, avg. samples / sec: 1021.98
Iteration:  10200, Loss function: 4.122, Average Loss: 4.419, avg. samples / sec: 1022.59
Iteration:  10220, Loss function: 4.553, Average Loss: 4.418, avg. samples / sec: 1030.39
Iteration:  10240, Loss function: 4.279, Average Loss: 4.417, avg. samples / sec: 1035.85
Iteration:  10260, Loss function: 4.041, Average Loss: 4.416, avg. samples / sec: 1034.85
Iteration:  10280, Loss function: 4.644, Average Loss: 4.415, avg. samples / sec: 1035.32
:::MLLOG {"namespace": "", "time_ms": 1639756488957, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
Predicting Ended, total time: 22.18 s
:::MLLOG {"namespace": "", "time_ms": 1639756511150, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639756511185, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 11, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639756511185, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Loading and preparing results...
DONE (t=0.57s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  10300, Loss function: 4.591, Average Loss: 4.413, avg. samples / sec: 93.50
DONE (t=1.77s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14384
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27907
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13586
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23587
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16421
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.24304
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25710
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25710
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.14384 AP goal: 0.10000
Iteration:  10320, Loss function: 4.343, Average Loss: 4.411, avg. samples / sec: 1028.73
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1438377203050285, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756515039, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
+ [[ fast == \d\r\y ]]
++ date
Fri Dec 17 15:55:16 UTC 2021: done waiting for 1 executions
+ echo 'Fri Dec 17 15:55:16 UTC 2021: done waiting for 1 executions'
+ ls /tmp/benchmark_all.log
/tmp/benchmark_all.log
+ grep . /tmp/benchmark_all.log
:::MLLOG {"namespace": "", "time_ms": 1639755239344, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639755239534, "event_type": "POINT_IN_TIME", "key": "seed", "value": 4037933660, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 4037933660
:::MLLOG {"namespace": "", "time_ms": 1639755241719, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639755241719, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.
Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639755241723, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639755241724, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639755265982, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639755265983, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
:::MLLOG {"namespace": "", "time_ms": 1639755267525, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639755267525, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.17s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639755268027, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639755268028, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755268030, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.792, Average Loss: 0.023, avg. samples / sec: 4.39
Iteration:     20, Loss function: 21.140, Average Loss: 0.456, avg. samples / sec: 890.46
Iteration:     40, Loss function: 20.821, Average Loss: 0.858, avg. samples / sec: 861.70
Iteration:     60, Loss function: 20.469, Average Loss: 1.247, avg. samples / sec: 873.56
Iteration:     80, Loss function: 20.137, Average Loss: 1.622, avg. samples / sec: 879.90
Iteration:    100, Loss function: 15.954, Average Loss: 1.954, avg. samples / sec: 892.12
Iteration:    120, Loss function: 11.601, Average Loss: 2.169, avg. samples / sec: 879.59
Iteration:    140, Loss function: 9.606, Average Loss: 2.325, avg. samples / sec: 903.51
Iteration:    160, Loss function: 9.103, Average Loss: 2.464, avg. samples / sec: 907.67
Iteration:    180, Loss function: 9.046, Average Loss: 2.593, avg. samples / sec: 939.34
Iteration:    200, Loss function: 8.725, Average Loss: 2.718, avg. samples / sec: 966.91
Iteration:    220, Loss function: 8.488, Average Loss: 2.838, avg. samples / sec: 958.12
Iteration:    240, Loss function: 8.775, Average Loss: 2.956, avg. samples / sec: 942.62
Iteration:    260, Loss function: 8.882, Average Loss: 3.074, avg. samples / sec: 964.13
Iteration:    280, Loss function: 8.470, Average Loss: 3.184, avg. samples / sec: 955.89
Iteration:    300, Loss function: 8.351, Average Loss: 3.289, avg. samples / sec: 998.75
Iteration:    320, Loss function: 8.392, Average Loss: 3.389, avg. samples / sec: 876.22
Iteration:    340, Loss function: 8.341, Average Loss: 3.486, avg. samples / sec: 959.03
Iteration:    360, Loss function: 8.181, Average Loss: 3.579, avg. samples / sec: 885.63
Iteration:    380, Loss function: 8.115, Average Loss: 3.668, avg. samples / sec: 929.19
Iteration:    400, Loss function: 8.229, Average Loss: 3.757, avg. samples / sec: 717.29
Iteration:    420, Loss function: 7.785, Average Loss: 3.840, avg. samples / sec: 970.70
Iteration:    440, Loss function: 7.820, Average Loss: 3.919, avg. samples / sec: 976.94
Iteration:    460, Loss function: 7.797, Average Loss: 3.994, avg. samples / sec: 995.01
Iteration:    480, Loss function: 7.603, Average Loss: 4.067, avg. samples / sec: 941.51
Iteration:    500, Loss function: 7.629, Average Loss: 4.137, avg. samples / sec: 863.70
Iteration:    520, Loss function: 7.425, Average Loss: 4.204, avg. samples / sec: 988.32
Iteration:    540, Loss function: 7.563, Average Loss: 4.270, avg. samples / sec: 992.15
Iteration:    560, Loss function: 7.166, Average Loss: 4.332, avg. samples / sec: 916.55
Iteration:    580, Loss function: 7.341, Average Loss: 4.393, avg. samples / sec: 888.88
Iteration:    600, Loss function: 7.304, Average Loss: 4.453, avg. samples / sec: 911.82
Iteration:    620, Loss function: 7.050, Average Loss: 4.509, avg. samples / sec: 964.09
Iteration:    640, Loss function: 6.921, Average Loss: 4.564, avg. samples / sec: 871.60
Iteration:    660, Loss function: 7.284, Average Loss: 4.618, avg. samples / sec: 952.77
Iteration:    680, Loss function: 7.438, Average Loss: 4.670, avg. samples / sec: 976.62
Iteration:    700, Loss function: 6.944, Average Loss: 4.719, avg. samples / sec: 998.76
Iteration:    720, Loss function: 7.048, Average Loss: 4.768, avg. samples / sec: 966.72
Iteration:    740, Loss function: 6.992, Average Loss: 4.814, avg. samples / sec: 954.21
Iteration:    760, Loss function: 6.943, Average Loss: 4.858, avg. samples / sec: 953.16
Iteration:    780, Loss function: 6.774, Average Loss: 4.900, avg. samples / sec: 988.93
Iteration:    800, Loss function: 7.366, Average Loss: 4.939, avg. samples / sec: 985.95
Iteration:    820, Loss function: 6.769, Average Loss: 4.976, avg. samples / sec: 1000.15
Iteration:    840, Loss function: 6.700, Average Loss: 5.012, avg. samples / sec: 963.58
Iteration:    860, Loss function: 6.806, Average Loss: 5.046, avg. samples / sec: 985.52
Iteration:    880, Loss function: 6.742, Average Loss: 5.079, avg. samples / sec: 994.58
Iteration:    900, Loss function: 6.852, Average Loss: 5.109, avg. samples / sec: 995.05
Iteration:    920, Loss function: 6.678, Average Loss: 5.138, avg. samples / sec: 964.56
Iteration:    940, Loss function: 6.903, Average Loss: 5.167, avg. samples / sec: 985.23
Iteration:    960, Loss function: 6.267, Average Loss: 5.195, avg. samples / sec: 972.03
Iteration:    980, Loss function: 6.566, Average Loss: 5.222, avg. samples / sec: 951.52
Iteration:   1000, Loss function: 6.560, Average Loss: 5.248, avg. samples / sec: 945.40
Iteration:   1020, Loss function: 6.439, Average Loss: 5.272, avg. samples / sec: 949.34
:::MLLOG {"namespace": "", "time_ms": 1639755393250, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639755393253, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.535, Average Loss: 5.295, avg. samples / sec: 968.85
Iteration:   1060, Loss function: 6.370, Average Loss: 5.318, avg. samples / sec: 918.85
Iteration:   1080, Loss function: 6.354, Average Loss: 5.339, avg. samples / sec: 970.95
Iteration:   1100, Loss function: 6.237, Average Loss: 5.359, avg. samples / sec: 928.63
Iteration:   1120, Loss function: 6.388, Average Loss: 5.378, avg. samples / sec: 915.53
Iteration:   1140, Loss function: 6.404, Average Loss: 5.396, avg. samples / sec: 852.09
Iteration:   1160, Loss function: 6.179, Average Loss: 5.412, avg. samples / sec: 902.09
Iteration:   1180, Loss function: 6.332, Average Loss: 5.428, avg. samples / sec: 872.96
Iteration:   1200, Loss function: 6.318, Average Loss: 5.445, avg. samples / sec: 929.09
Iteration:   1220, Loss function: 6.242, Average Loss: 5.460, avg. samples / sec: 943.95
Iteration:   1240, Loss function: 6.041, Average Loss: 5.473, avg. samples / sec: 989.07
Iteration:   1260, Loss function: 5.923, Average Loss: 5.485, avg. samples / sec: 945.06
Iteration:   1280, Loss function: 5.883, Average Loss: 5.497, avg. samples / sec: 963.92
Iteration:   1300, Loss function: 6.179, Average Loss: 5.510, avg. samples / sec: 982.34
Iteration:   1320, Loss function: 6.112, Average Loss: 5.521, avg. samples / sec: 979.47
Iteration:   1340, Loss function: 5.973, Average Loss: 5.532, avg. samples / sec: 1003.78
Iteration:   1360, Loss function: 6.094, Average Loss: 5.542, avg. samples / sec: 945.11
Iteration:   1380, Loss function: 6.222, Average Loss: 5.552, avg. samples / sec: 963.09
Iteration:   1400, Loss function: 6.303, Average Loss: 5.560, avg. samples / sec: 959.87
Iteration:   1420, Loss function: 5.804, Average Loss: 5.568, avg. samples / sec: 922.00
Iteration:   1440, Loss function: 6.302, Average Loss: 5.576, avg. samples / sec: 988.66
Iteration:   1460, Loss function: 6.074, Average Loss: 5.583, avg. samples / sec: 986.23
Iteration:   1480, Loss function: 5.849, Average Loss: 5.592, avg. samples / sec: 984.50
Iteration:   1500, Loss function: 6.001, Average Loss: 5.601, avg. samples / sec: 985.52
Iteration:   1520, Loss function: 5.986, Average Loss: 5.607, avg. samples / sec: 974.79
Iteration:   1540, Loss function: 6.101, Average Loss: 5.611, avg. samples / sec: 980.00
Iteration:   1560, Loss function: 5.878, Average Loss: 5.615, avg. samples / sec: 978.61
Iteration:   1580, Loss function: 5.686, Average Loss: 5.619, avg. samples / sec: 971.28
Iteration:   1600, Loss function: 6.169, Average Loss: 5.624, avg. samples / sec: 950.01
Iteration:   1620, Loss function: 5.765, Average Loss: 5.629, avg. samples / sec: 944.38
Iteration:   1640, Loss function: 5.899, Average Loss: 5.632, avg. samples / sec: 916.27
Iteration:   1660, Loss function: 5.877, Average Loss: 5.637, avg. samples / sec: 995.75
Iteration:   1680, Loss function: 5.804, Average Loss: 5.640, avg. samples / sec: 987.09
Iteration:   1700, Loss function: 5.316, Average Loss: 5.643, avg. samples / sec: 992.19
Iteration:   1720, Loss function: 5.805, Average Loss: 5.645, avg. samples / sec: 961.87
Iteration:   1740, Loss function: 5.837, Average Loss: 5.648, avg. samples / sec: 976.53
Iteration:   1760, Loss function: 5.575, Average Loss: 5.650, avg. samples / sec: 973.35
Iteration:   1780, Loss function: 5.663, Average Loss: 5.651, avg. samples / sec: 922.64
Iteration:   1800, Loss function: 5.669, Average Loss: 5.654, avg. samples / sec: 982.08
Iteration:   1820, Loss function: 5.986, Average Loss: 5.655, avg. samples / sec: 953.11
Iteration:   1840, Loss function: 5.894, Average Loss: 5.655, avg. samples / sec: 957.65
Iteration:   1860, Loss function: 5.654, Average Loss: 5.654, avg. samples / sec: 949.96
Iteration:   1880, Loss function: 5.936, Average Loss: 5.655, avg. samples / sec: 915.67
Iteration:   1900, Loss function: 5.811, Average Loss: 5.655, avg. samples / sec: 989.91
Iteration:   1920, Loss function: 5.689, Average Loss: 5.655, avg. samples / sec: 987.22
Iteration:   1940, Loss function: 5.937, Average Loss: 5.655, avg. samples / sec: 930.24
Iteration:   1960, Loss function: 5.509, Average Loss: 5.654, avg. samples / sec: 924.37
Iteration:   1980, Loss function: 5.688, Average Loss: 5.653, avg. samples / sec: 928.78
Iteration:   2000, Loss function: 5.616, Average Loss: 5.652, avg. samples / sec: 954.36
Iteration:   2020, Loss function: 5.622, Average Loss: 5.652, avg. samples / sec: 894.76
Iteration:   2040, Loss function: 5.720, Average Loss: 5.652, avg. samples / sec: 915.24
:::MLLOG {"namespace": "", "time_ms": 1639755516453, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639755516454, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.556, Average Loss: 5.650, avg. samples / sec: 962.58
Iteration:   2080, Loss function: 5.127, Average Loss: 5.648, avg. samples / sec: 989.19
Iteration:   2100, Loss function: 5.614, Average Loss: 5.646, avg. samples / sec: 916.68
Iteration:   2120, Loss function: 5.257, Average Loss: 5.643, avg. samples / sec: 973.49
Iteration:   2140, Loss function: 5.510, Average Loss: 5.640, avg. samples / sec: 999.02
Iteration:   2160, Loss function: 5.402, Average Loss: 5.638, avg. samples / sec: 962.77
Iteration:   2180, Loss function: 5.408, Average Loss: 5.635, avg. samples / sec: 906.25
Iteration:   2200, Loss function: 5.369, Average Loss: 5.631, avg. samples / sec: 923.48
Iteration:   2220, Loss function: 5.639, Average Loss: 5.629, avg. samples / sec: 966.80
Iteration:   2240, Loss function: 5.407, Average Loss: 5.626, avg. samples / sec: 982.62
Iteration:   2260, Loss function: 5.307, Average Loss: 5.622, avg. samples / sec: 975.16
Iteration:   2280, Loss function: 5.290, Average Loss: 5.620, avg. samples / sec: 971.00
Iteration:   2300, Loss function: 5.226, Average Loss: 5.617, avg. samples / sec: 977.55
Iteration:   2320, Loss function: 5.438, Average Loss: 5.615, avg. samples / sec: 954.89
Iteration:   2340, Loss function: 5.578, Average Loss: 5.611, avg. samples / sec: 897.53
Iteration:   2360, Loss function: 5.339, Average Loss: 5.607, avg. samples / sec: 939.75
Iteration:   2380, Loss function: 5.492, Average Loss: 5.603, avg. samples / sec: 966.33
Iteration:   2400, Loss function: 5.548, Average Loss: 5.599, avg. samples / sec: 943.40
Iteration:   2420, Loss function: 5.496, Average Loss: 5.595, avg. samples / sec: 926.11
Iteration:   2440, Loss function: 5.456, Average Loss: 5.593, avg. samples / sec: 942.74
Iteration:   2460, Loss function: 5.415, Average Loss: 5.589, avg. samples / sec: 1004.43
Iteration:   2480, Loss function: 5.368, Average Loss: 5.585, avg. samples / sec: 955.50
Iteration:   2500, Loss function: 5.368, Average Loss: 5.581, avg. samples / sec: 1000.70
Iteration:   2520, Loss function: 5.538, Average Loss: 5.576, avg. samples / sec: 977.45
Iteration:   2540, Loss function: 5.324, Average Loss: 5.573, avg. samples / sec: 967.70
Iteration:   2560, Loss function: 5.228, Average Loss: 5.569, avg. samples / sec: 974.93
Iteration:   2580, Loss function: 5.345, Average Loss: 5.566, avg. samples / sec: 945.93
Iteration:   2600, Loss function: 5.422, Average Loss: 5.563, avg. samples / sec: 871.72
Iteration:   2620, Loss function: 5.576, Average Loss: 5.559, avg. samples / sec: 874.94
Iteration:   2640, Loss function: 5.254, Average Loss: 5.556, avg. samples / sec: 939.17
Iteration:   2660, Loss function: 5.096, Average Loss: 5.552, avg. samples / sec: 906.75
Iteration:   2680, Loss function: 5.241, Average Loss: 5.548, avg. samples / sec: 976.30
Iteration:   2700, Loss function: 5.062, Average Loss: 5.543, avg. samples / sec: 895.99
Iteration:   2720, Loss function: 5.429, Average Loss: 5.540, avg. samples / sec: 925.09
Iteration:   2740, Loss function: 4.990, Average Loss: 5.535, avg. samples / sec: 918.46
Iteration:   2760, Loss function: 5.098, Average Loss: 5.530, avg. samples / sec: 931.18
Iteration:   2780, Loss function: 5.588, Average Loss: 5.527, avg. samples / sec: 888.33
Iteration:   2800, Loss function: 5.316, Average Loss: 5.523, avg. samples / sec: 867.86
Iteration:   2820, Loss function: 5.448, Average Loss: 5.518, avg. samples / sec: 958.38
Iteration:   2840, Loss function: 5.299, Average Loss: 5.513, avg. samples / sec: 963.04
Iteration:   2860, Loss function: 5.087, Average Loss: 5.508, avg. samples / sec: 965.04
Iteration:   2880, Loss function: 5.240, Average Loss: 5.503, avg. samples / sec: 969.98
Iteration:   2900, Loss function: 5.115, Average Loss: 5.499, avg. samples / sec: 950.60
Iteration:   2920, Loss function: 5.321, Average Loss: 5.493, avg. samples / sec: 991.57
Iteration:   2940, Loss function: 5.123, Average Loss: 5.490, avg. samples / sec: 982.47
Iteration:   2960, Loss function: 5.310, Average Loss: 5.485, avg. samples / sec: 998.55
Iteration:   2980, Loss function: 5.489, Average Loss: 5.482, avg. samples / sec: 984.50
Iteration:   3000, Loss function: 5.305, Average Loss: 5.476, avg. samples / sec: 944.80
Iteration:   3020, Loss function: 5.363, Average Loss: 5.470, avg. samples / sec: 965.65
Iteration:   3040, Loss function: 5.339, Average Loss: 5.465, avg. samples / sec: 908.11
Iteration:   3060, Loss function: 5.063, Average Loss: 5.459, avg. samples / sec: 906.00
Iteration:   3080, Loss function: 4.944, Average Loss: 5.454, avg. samples / sec: 968.27
:::MLLOG {"namespace": "", "time_ms": 1639755640128, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639755640130, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.117, Average Loss: 5.448, avg. samples / sec: 991.70
Iteration:   3120, Loss function: 4.990, Average Loss: 5.442, avg. samples / sec: 958.82
Iteration:   3140, Loss function: 4.954, Average Loss: 5.436, avg. samples / sec: 976.80
Iteration:   3160, Loss function: 5.364, Average Loss: 5.431, avg. samples / sec: 996.99
Iteration:   3180, Loss function: 5.033, Average Loss: 5.427, avg. samples / sec: 986.44
Iteration:   3200, Loss function: 5.301, Average Loss: 5.422, avg. samples / sec: 916.79
Iteration:   3220, Loss function: 5.172, Average Loss: 5.416, avg. samples / sec: 976.07
Iteration:   3240, Loss function: 5.177, Average Loss: 5.410, avg. samples / sec: 988.50
Iteration:   3260, Loss function: 5.054, Average Loss: 5.405, avg. samples / sec: 985.48
Iteration:   3280, Loss function: 4.969, Average Loss: 5.400, avg. samples / sec: 980.78
Iteration:   3300, Loss function: 4.795, Average Loss: 5.393, avg. samples / sec: 989.34
Iteration:   3320, Loss function: 4.979, Average Loss: 5.388, avg. samples / sec: 976.25
Iteration:   3340, Loss function: 5.168, Average Loss: 5.384, avg. samples / sec: 972.09
Iteration:   3360, Loss function: 5.037, Average Loss: 5.377, avg. samples / sec: 996.96
Iteration:   3380, Loss function: 5.144, Average Loss: 5.371, avg. samples / sec: 989.50
Iteration:   3400, Loss function: 4.706, Average Loss: 5.365, avg. samples / sec: 967.45
Iteration:   3420, Loss function: 5.212, Average Loss: 5.359, avg. samples / sec: 929.62
Iteration:   3440, Loss function: 4.913, Average Loss: 5.354, avg. samples / sec: 926.14
Iteration:   3460, Loss function: 5.237, Average Loss: 5.349, avg. samples / sec: 949.19
Iteration:   3480, Loss function: 5.103, Average Loss: 5.344, avg. samples / sec: 996.68
Iteration:   3500, Loss function: 5.139, Average Loss: 5.341, avg. samples / sec: 964.25
Iteration:   3520, Loss function: 5.047, Average Loss: 5.337, avg. samples / sec: 912.07
Iteration:   3540, Loss function: 4.976, Average Loss: 5.332, avg. samples / sec: 981.74
Iteration:   3560, Loss function: 4.874, Average Loss: 5.328, avg. samples / sec: 973.29
Iteration:   3580, Loss function: 5.069, Average Loss: 5.323, avg. samples / sec: 869.07
Iteration:   3600, Loss function: 5.242, Average Loss: 5.317, avg. samples / sec: 966.70
Iteration:   3620, Loss function: 4.885, Average Loss: 5.312, avg. samples / sec: 989.52
Iteration:   3640, Loss function: 4.822, Average Loss: 5.307, avg. samples / sec: 916.16
Iteration:   3660, Loss function: 4.947, Average Loss: 5.303, avg. samples / sec: 989.23
Iteration:   3680, Loss function: 5.151, Average Loss: 5.298, avg. samples / sec: 993.56
Iteration:   3700, Loss function: 5.044, Average Loss: 5.293, avg. samples / sec: 911.05
Iteration:   3720, Loss function: 5.015, Average Loss: 5.286, avg. samples / sec: 943.01
Iteration:   3740, Loss function: 5.118, Average Loss: 5.281, avg. samples / sec: 988.11
Iteration:   3760, Loss function: 4.984, Average Loss: 5.277, avg. samples / sec: 958.47
Iteration:   3780, Loss function: 5.155, Average Loss: 5.272, avg. samples / sec: 941.47
Iteration:   3800, Loss function: 5.097, Average Loss: 5.268, avg. samples / sec: 966.47
Iteration:   3820, Loss function: 5.220, Average Loss: 5.263, avg. samples / sec: 994.80
Iteration:   3840, Loss function: 4.722, Average Loss: 5.258, avg. samples / sec: 965.04
Iteration:   3860, Loss function: 4.990, Average Loss: 5.252, avg. samples / sec: 992.46
Iteration:   3880, Loss function: 5.083, Average Loss: 5.246, avg. samples / sec: 983.44
Iteration:   3900, Loss function: 4.976, Average Loss: 5.241, avg. samples / sec: 979.23
Iteration:   3920, Loss function: 5.077, Average Loss: 5.235, avg. samples / sec: 983.84
Iteration:   3940, Loss function: 4.942, Average Loss: 5.230, avg. samples / sec: 992.87
Iteration:   3960, Loss function: 4.904, Average Loss: 5.227, avg. samples / sec: 955.32
Iteration:   3980, Loss function: 5.012, Average Loss: 5.221, avg. samples / sec: 907.99
Iteration:   4000, Loss function: 5.116, Average Loss: 5.217, avg. samples / sec: 931.61
Iteration:   4020, Loss function: 4.875, Average Loss: 5.211, avg. samples / sec: 950.97
Iteration:   4040, Loss function: 5.065, Average Loss: 5.208, avg. samples / sec: 918.69
Iteration:   4060, Loss function: 5.114, Average Loss: 5.204, avg. samples / sec: 953.96
Iteration:   4080, Loss function: 5.178, Average Loss: 5.199, avg. samples / sec: 990.10
Iteration:   4100, Loss function: 5.204, Average Loss: 5.195, avg. samples / sec: 981.30
:::MLLOG {"namespace": "", "time_ms": 1639755761929, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639755761930, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 4.983, Average Loss: 5.191, avg. samples / sec: 947.18
Iteration:   4140, Loss function: 5.000, Average Loss: 5.186, avg. samples / sec: 971.44
Iteration:   4160, Loss function: 4.992, Average Loss: 5.180, avg. samples / sec: 975.92
Iteration:   4180, Loss function: 4.898, Average Loss: 5.174, avg. samples / sec: 951.50
Iteration:   4200, Loss function: 4.816, Average Loss: 5.169, avg. samples / sec: 906.15
Iteration:   4220, Loss function: 4.694, Average Loss: 5.164, avg. samples / sec: 969.31
Iteration:   4240, Loss function: 4.901, Average Loss: 5.159, avg. samples / sec: 944.10
Iteration:   4260, Loss function: 5.167, Average Loss: 5.154, avg. samples / sec: 910.78
Iteration:   4280, Loss function: 5.022, Average Loss: 5.148, avg. samples / sec: 986.36
Iteration:   4300, Loss function: 4.820, Average Loss: 5.143, avg. samples / sec: 962.74
Iteration:   4320, Loss function: 4.685, Average Loss: 5.138, avg. samples / sec: 976.01
Iteration:   4340, Loss function: 4.705, Average Loss: 5.131, avg. samples / sec: 990.34
Iteration:   4360, Loss function: 4.778, Average Loss: 5.127, avg. samples / sec: 974.25
Iteration:   4380, Loss function: 5.074, Average Loss: 5.122, avg. samples / sec: 911.73
Iteration:   4400, Loss function: 4.925, Average Loss: 5.118, avg. samples / sec: 952.76
Iteration:   4420, Loss function: 4.823, Average Loss: 5.113, avg. samples / sec: 934.90
Iteration:   4440, Loss function: 4.912, Average Loss: 5.109, avg. samples / sec: 947.20
Iteration:   4460, Loss function: 5.340, Average Loss: 5.105, avg. samples / sec: 998.30
Iteration:   4480, Loss function: 5.087, Average Loss: 5.102, avg. samples / sec: 901.77
Iteration:   4500, Loss function: 4.863, Average Loss: 5.099, avg. samples / sec: 954.61
Iteration:   4520, Loss function: 4.630, Average Loss: 5.094, avg. samples / sec: 930.50
Iteration:   4540, Loss function: 5.215, Average Loss: 5.090, avg. samples / sec: 967.86
Iteration:   4560, Loss function: 4.700, Average Loss: 5.086, avg. samples / sec: 940.21
Iteration:   4580, Loss function: 5.047, Average Loss: 5.083, avg. samples / sec: 952.18
Iteration:   4600, Loss function: 4.838, Average Loss: 5.080, avg. samples / sec: 960.39
Iteration:   4620, Loss function: 4.735, Average Loss: 5.076, avg. samples / sec: 936.91
Iteration:   4640, Loss function: 4.635, Average Loss: 5.071, avg. samples / sec: 932.41
Iteration:   4660, Loss function: 4.803, Average Loss: 5.066, avg. samples / sec: 972.82
Iteration:   4680, Loss function: 5.155, Average Loss: 5.062, avg. samples / sec: 964.67
Iteration:   4700, Loss function: 4.778, Average Loss: 5.059, avg. samples / sec: 991.91
Iteration:   4720, Loss function: 4.863, Average Loss: 5.054, avg. samples / sec: 839.46
Iteration:   4740, Loss function: 4.841, Average Loss: 5.050, avg. samples / sec: 987.22
Iteration:   4760, Loss function: 4.755, Average Loss: 5.047, avg. samples / sec: 926.18
Iteration:   4780, Loss function: 4.958, Average Loss: 5.044, avg. samples / sec: 951.84
Iteration:   4800, Loss function: 4.854, Average Loss: 5.041, avg. samples / sec: 915.19
Iteration:   4820, Loss function: 4.717, Average Loss: 5.037, avg. samples / sec: 901.50
Iteration:   4840, Loss function: 4.982, Average Loss: 5.033, avg. samples / sec: 975.23
Iteration:   4860, Loss function: 4.677, Average Loss: 5.028, avg. samples / sec: 869.82
Iteration:   4880, Loss function: 5.176, Average Loss: 5.025, avg. samples / sec: 888.21
Iteration:   4900, Loss function: 4.661, Average Loss: 5.021, avg. samples / sec: 932.84
Iteration:   4920, Loss function: 4.649, Average Loss: 5.018, avg. samples / sec: 975.49
Iteration:   4940, Loss function: 4.734, Average Loss: 5.013, avg. samples / sec: 920.17
Iteration:   4960, Loss function: 4.614, Average Loss: 5.009, avg. samples / sec: 933.67
Iteration:   4980, Loss function: 4.797, Average Loss: 5.006, avg. samples / sec: 950.13
Iteration:   5000, Loss function: 4.873, Average Loss: 5.002, avg. samples / sec: 904.73
Iteration:   5020, Loss function: 4.952, Average Loss: 4.999, avg. samples / sec: 876.20
Iteration:   5040, Loss function: 4.947, Average Loss: 4.996, avg. samples / sec: 899.93
Iteration:   5060, Loss function: 4.816, Average Loss: 4.993, avg. samples / sec: 982.67
Iteration:   5080, Loss function: 4.605, Average Loss: 4.989, avg. samples / sec: 932.43
Iteration:   5100, Loss function: 4.769, Average Loss: 4.987, avg. samples / sec: 955.63
Iteration:   5120, Loss function: 4.678, Average Loss: 4.984, avg. samples / sec: 971.62
Iteration:   5140, Loss function: 4.820, Average Loss: 4.980, avg. samples / sec: 987.09
:::MLLOG {"namespace": "", "time_ms": 1639755886348, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
Predicting Ended, total time: 32.84 s
:::MLLOG {"namespace": "", "time_ms": 1639755919279, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639755919294, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 6, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755919294, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Loading and preparing results...
DONE (t=1.32s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:   5160, Loss function: 4.874, Average Loss: 4.976, avg. samples / sec: 63.44
Iteration:   5180, Loss function: 4.611, Average Loss: 4.971, avg. samples / sec: 893.03
Iteration:   5200, Loss function: 4.671, Average Loss: 4.966, avg. samples / sec: 982.00
DONE (t=5.61s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09846
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.20115
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08759
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17681
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12903
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.19004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20169
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.09846 AP goal: 0.10000
Iteration:   5220, Loss function: 4.649, Average Loss: 4.963, avg. samples / sec: 1022.94
:::MLLOG {"namespace": "", "time_ms": 1639755929019, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755929020, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.09845608856343507, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639755929020, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 5}}
Iteration:   5240, Loss function: 4.461, Average Loss: 4.957, avg. samples / sec: 1033.12
Iteration:   5260, Loss function: 4.824, Average Loss: 4.954, avg. samples / sec: 1036.08
Iteration:   5280, Loss function: 4.717, Average Loss: 4.950, avg. samples / sec: 1035.99
Iteration:   5300, Loss function: 4.986, Average Loss: 4.945, avg. samples / sec: 1035.07
Iteration:   5320, Loss function: 4.999, Average Loss: 4.940, avg. samples / sec: 1035.71
Iteration:   5340, Loss function: 4.930, Average Loss: 4.936, avg. samples / sec: 1034.30
Iteration:   5360, Loss function: 4.874, Average Loss: 4.934, avg. samples / sec: 1034.19
Iteration:   5380, Loss function: 4.550, Average Loss: 4.930, avg. samples / sec: 1036.38
Iteration:   5400, Loss function: 4.432, Average Loss: 4.926, avg. samples / sec: 1035.32
Iteration:   5420, Loss function: 4.686, Average Loss: 4.922, avg. samples / sec: 1036.35
Iteration:   5440, Loss function: 4.785, Average Loss: 4.919, avg. samples / sec: 1035.65
Iteration:   5460, Loss function: 4.579, Average Loss: 4.915, avg. samples / sec: 1037.06
Iteration:   5480, Loss function: 4.598, Average Loss: 4.912, avg. samples / sec: 1033.88
Iteration:   5500, Loss function: 4.498, Average Loss: 4.908, avg. samples / sec: 1035.02
Iteration:   5520, Loss function: 4.764, Average Loss: 4.905, avg. samples / sec: 1035.56
Iteration:   5540, Loss function: 4.639, Average Loss: 4.901, avg. samples / sec: 1035.55
Iteration:   5560, Loss function: 4.957, Average Loss: 4.899, avg. samples / sec: 1033.05
Iteration:   5580, Loss function: 4.694, Average Loss: 4.895, avg. samples / sec: 1034.15
Iteration:   5600, Loss function: 4.678, Average Loss: 4.892, avg. samples / sec: 1035.57
Iteration:   5620, Loss function: 4.359, Average Loss: 4.889, avg. samples / sec: 1035.41
Iteration:   5640, Loss function: 4.611, Average Loss: 4.886, avg. samples / sec: 1029.88
Iteration:   5660, Loss function: 4.703, Average Loss: 4.883, avg. samples / sec: 1026.84
Iteration:   5680, Loss function: 4.872, Average Loss: 4.880, avg. samples / sec: 1024.95
Iteration:   5700, Loss function: 4.555, Average Loss: 4.876, avg. samples / sec: 1030.22
Iteration:   5720, Loss function: 4.588, Average Loss: 4.874, avg. samples / sec: 1034.77
Iteration:   5740, Loss function: 4.551, Average Loss: 4.870, avg. samples / sec: 1034.46
Iteration:   5760, Loss function: 4.619, Average Loss: 4.866, avg. samples / sec: 1034.55
Iteration:   5780, Loss function: 4.690, Average Loss: 4.864, avg. samples / sec: 1035.69
Iteration:   5800, Loss function: 4.798, Average Loss: 4.860, avg. samples / sec: 1034.81
Iteration:   5820, Loss function: 4.970, Average Loss: 4.857, avg. samples / sec: 1036.24
Iteration:   5840, Loss function: 4.425, Average Loss: 4.854, avg. samples / sec: 1035.73
Iteration:   5860, Loss function: 4.888, Average Loss: 4.852, avg. samples / sec: 1035.70
Iteration:   5880, Loss function: 4.686, Average Loss: 4.849, avg. samples / sec: 1036.79
Iteration:   5900, Loss function: 4.785, Average Loss: 4.847, avg. samples / sec: 1034.44
Iteration:   5920, Loss function: 4.768, Average Loss: 4.844, avg. samples / sec: 1026.81
Iteration:   5940, Loss function: 4.693, Average Loss: 4.842, avg. samples / sec: 1023.22
Iteration:   5960, Loss function: 4.669, Average Loss: 4.839, avg. samples / sec: 1023.73
Iteration:   5980, Loss function: 4.555, Average Loss: 4.836, avg. samples / sec: 1025.08
Iteration:   6000, Loss function: 4.501, Average Loss: 4.833, avg. samples / sec: 1027.35
Iteration:   6020, Loss function: 4.547, Average Loss: 4.830, avg. samples / sec: 1021.91
Iteration:   6040, Loss function: 4.877, Average Loss: 4.827, avg. samples / sec: 1025.65
Iteration:   6060, Loss function: 4.636, Average Loss: 4.826, avg. samples / sec: 1026.80
Iteration:   6080, Loss function: 4.572, Average Loss: 4.822, avg. samples / sec: 1024.41
Iteration:   6100, Loss function: 4.512, Average Loss: 4.820, avg. samples / sec: 1023.39
Iteration:   6120, Loss function: 4.607, Average Loss: 4.818, avg. samples / sec: 1026.36
Iteration:   6140, Loss function: 4.922, Average Loss: 4.816, avg. samples / sec: 1026.55
Iteration:   6160, Loss function: 4.773, Average Loss: 4.812, avg. samples / sec: 1034.49
:::MLLOG {"namespace": "", "time_ms": 1639756034074, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639756034075, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.568, Average Loss: 4.808, avg. samples / sec: 1034.55
Iteration:   6200, Loss function: 4.992, Average Loss: 4.804, avg. samples / sec: 1036.09
Iteration:   6220, Loss function: 4.469, Average Loss: 4.800, avg. samples / sec: 1033.63
Iteration:   6240, Loss function: 4.588, Average Loss: 4.796, avg. samples / sec: 1036.35
Iteration:   6260, Loss function: 4.591, Average Loss: 4.792, avg. samples / sec: 1035.38
Iteration:   6280, Loss function: 4.478, Average Loss: 4.788, avg. samples / sec: 1036.88
Iteration:   6300, Loss function: 4.965, Average Loss: 4.785, avg. samples / sec: 1034.64
Iteration:   6320, Loss function: 4.499, Average Loss: 4.782, avg. samples / sec: 1035.26
Iteration:   6340, Loss function: 4.592, Average Loss: 4.779, avg. samples / sec: 1036.58
Iteration:   6360, Loss function: 4.706, Average Loss: 4.774, avg. samples / sec: 1036.78
Iteration:   6380, Loss function: 4.582, Average Loss: 4.770, avg. samples / sec: 1023.96
Iteration:   6400, Loss function: 4.460, Average Loss: 4.768, avg. samples / sec: 1023.60
Iteration:   6420, Loss function: 4.645, Average Loss: 4.764, avg. samples / sec: 1016.37
Iteration:   6440, Loss function: 4.638, Average Loss: 4.761, avg. samples / sec: 1024.29
Iteration:   6460, Loss function: 4.631, Average Loss: 4.760, avg. samples / sec: 1021.25
Iteration:   6480, Loss function: 4.639, Average Loss: 4.758, avg. samples / sec: 1024.30
Iteration:   6500, Loss function: 4.798, Average Loss: 4.754, avg. samples / sec: 1022.00
Iteration:   6520, Loss function: 4.628, Average Loss: 4.755, avg. samples / sec: 1024.44
Iteration:   6540, Loss function: 4.488, Average Loss: 4.751, avg. samples / sec: 1023.75
Iteration:   6560, Loss function: 4.515, Average Loss: 4.748, avg. samples / sec: 1025.67
Iteration:   6580, Loss function: 4.938, Average Loss: 4.746, avg. samples / sec: 1032.85
Iteration:   6600, Loss function: 4.686, Average Loss: 4.744, avg. samples / sec: 1035.00
Iteration:   6620, Loss function: 4.658, Average Loss: 4.741, avg. samples / sec: 1035.45
Iteration:   6640, Loss function: 4.555, Average Loss: 4.738, avg. samples / sec: 1034.19
Iteration:   6660, Loss function: 4.782, Average Loss: 4.736, avg. samples / sec: 1031.62
Iteration:   6680, Loss function: 4.777, Average Loss: 4.735, avg. samples / sec: 1034.38
Iteration:   6700, Loss function: 4.453, Average Loss: 4.733, avg. samples / sec: 1033.78
Iteration:   6720, Loss function: 4.511, Average Loss: 4.730, avg. samples / sec: 1023.14
Iteration:   6740, Loss function: 4.511, Average Loss: 4.729, avg. samples / sec: 1019.66
Iteration:   6760, Loss function: 4.725, Average Loss: 4.726, avg. samples / sec: 1020.01
Iteration:   6780, Loss function: 4.641, Average Loss: 4.725, avg. samples / sec: 1018.88
Iteration:   6800, Loss function: 4.670, Average Loss: 4.722, avg. samples / sec: 1026.07
Iteration:   6820, Loss function: 4.587, Average Loss: 4.720, avg. samples / sec: 1035.22
Iteration:   6840, Loss function: 4.560, Average Loss: 4.717, avg. samples / sec: 1025.73
Iteration:   6860, Loss function: 4.436, Average Loss: 4.715, avg. samples / sec: 1023.02
Iteration:   6880, Loss function: 4.442, Average Loss: 4.711, avg. samples / sec: 1023.74
Iteration:   6900, Loss function: 4.550, Average Loss: 4.708, avg. samples / sec: 1022.61
Iteration:   6920, Loss function: 4.781, Average Loss: 4.706, avg. samples / sec: 1028.65
Iteration:   6940, Loss function: 4.267, Average Loss: 4.703, avg. samples / sec: 1035.24
Iteration:   6960, Loss function: 4.599, Average Loss: 4.700, avg. samples / sec: 1035.38
Iteration:   6980, Loss function: 4.381, Average Loss: 4.698, avg. samples / sec: 1033.89
Iteration:   7000, Loss function: 4.676, Average Loss: 4.697, avg. samples / sec: 1036.46
Iteration:   7020, Loss function: 4.691, Average Loss: 4.695, avg. samples / sec: 1035.25
Iteration:   7040, Loss function: 4.919, Average Loss: 4.694, avg. samples / sec: 1034.81
Iteration:   7060, Loss function: 4.705, Average Loss: 4.691, avg. samples / sec: 1023.21
Iteration:   7080, Loss function: 4.642, Average Loss: 4.689, avg. samples / sec: 1022.68
Iteration:   7100, Loss function: 4.213, Average Loss: 4.687, avg. samples / sec: 1024.13
Iteration:   7120, Loss function: 4.680, Average Loss: 4.685, avg. samples / sec: 1022.64
Iteration:   7140, Loss function: 4.672, Average Loss: 4.683, avg. samples / sec: 1026.20
Iteration:   7160, Loss function: 4.543, Average Loss: 4.681, avg. samples / sec: 1023.43
Iteration:   7180, Loss function: 4.796, Average Loss: 4.679, avg. samples / sec: 1024.64
Iteration:   7200, Loss function: 4.509, Average Loss: 4.678, avg. samples / sec: 1026.86
:::MLLOG {"namespace": "", "time_ms": 1639756148116, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639756148117, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.581, Average Loss: 4.675, avg. samples / sec: 1034.49
Iteration:   7240, Loss function: 4.305, Average Loss: 4.670, avg. samples / sec: 1035.63
Iteration:   7260, Loss function: 4.767, Average Loss: 4.668, avg. samples / sec: 1035.82
Iteration:   7280, Loss function: 4.655, Average Loss: 4.664, avg. samples / sec: 1036.02
Iteration:   7300, Loss function: 4.634, Average Loss: 4.659, avg. samples / sec: 1035.06
Iteration:   7320, Loss function: 4.472, Average Loss: 4.656, avg. samples / sec: 1034.00
Iteration:   7340, Loss function: 4.560, Average Loss: 4.653, avg. samples / sec: 1035.83
Iteration:   7360, Loss function: 4.605, Average Loss: 4.652, avg. samples / sec: 1033.27
Iteration:   7380, Loss function: 4.596, Average Loss: 4.650, avg. samples / sec: 1027.51
Iteration:   7400, Loss function: 4.412, Average Loss: 4.648, avg. samples / sec: 1034.21
Iteration:   7420, Loss function: 4.615, Average Loss: 4.645, avg. samples / sec: 1032.19
Iteration:   7440, Loss function: 4.480, Average Loss: 4.643, avg. samples / sec: 1034.38
Iteration:   7460, Loss function: 4.567, Average Loss: 4.640, avg. samples / sec: 1035.37
Iteration:   7480, Loss function: 4.417, Average Loss: 4.637, avg. samples / sec: 1034.03
Iteration:   7500, Loss function: 4.293, Average Loss: 4.635, avg. samples / sec: 1033.95
Iteration:   7520, Loss function: 4.498, Average Loss: 4.632, avg. samples / sec: 1036.31
Iteration:   7540, Loss function: 4.621, Average Loss: 4.631, avg. samples / sec: 1035.06
Iteration:   7560, Loss function: 4.257, Average Loss: 4.629, avg. samples / sec: 1033.19
Iteration:   7580, Loss function: 4.369, Average Loss: 4.627, avg. samples / sec: 1035.74
Iteration:   7600, Loss function: 4.613, Average Loss: 4.624, avg. samples / sec: 1034.68
Iteration:   7620, Loss function: 4.660, Average Loss: 4.623, avg. samples / sec: 1034.12
Iteration:   7640, Loss function: 4.293, Average Loss: 4.621, avg. samples / sec: 1034.15
Iteration:   7660, Loss function: 4.414, Average Loss: 4.620, avg. samples / sec: 1034.79
Iteration:   7680, Loss function: 4.636, Average Loss: 4.618, avg. samples / sec: 1031.82
Iteration:   7700, Loss function: 4.380, Average Loss: 4.615, avg. samples / sec: 1034.04
Iteration:   7720, Loss function: 4.510, Average Loss: 4.613, avg. samples / sec: 1030.92
Iteration:   7740, Loss function: 4.257, Average Loss: 4.610, avg. samples / sec: 1033.52
Iteration:   7760, Loss function: 4.677, Average Loss: 4.608, avg. samples / sec: 1032.26
Iteration:   7780, Loss function: 4.523, Average Loss: 4.607, avg. samples / sec: 1020.78
Iteration:   7800, Loss function: 4.557, Average Loss: 4.606, avg. samples / sec: 1019.29
Iteration:   7820, Loss function: 4.553, Average Loss: 4.606, avg. samples / sec: 1022.36
Iteration:   7840, Loss function: 4.607, Average Loss: 4.604, avg. samples / sec: 1024.30
Iteration:   7860, Loss function: 4.564, Average Loss: 4.603, avg. samples / sec: 1022.52
Iteration:   7880, Loss function: 4.661, Average Loss: 4.602, avg. samples / sec: 1023.57
Iteration:   7900, Loss function: 4.802, Average Loss: 4.600, avg. samples / sec: 1022.68
Iteration:   7920, Loss function: 4.428, Average Loss: 4.597, avg. samples / sec: 1026.64
Iteration:   7940, Loss function: 4.763, Average Loss: 4.595, avg. samples / sec: 1031.06
Iteration:   7960, Loss function: 4.438, Average Loss: 4.593, avg. samples / sec: 1034.91
Iteration:   7980, Loss function: 4.729, Average Loss: 4.591, avg. samples / sec: 1034.16
Iteration:   8000, Loss function: 4.524, Average Loss: 4.589, avg. samples / sec: 1033.27
Iteration:   8020, Loss function: 4.537, Average Loss: 4.587, avg. samples / sec: 1035.29
Iteration:   8040, Loss function: 4.663, Average Loss: 4.587, avg. samples / sec: 1036.97
Iteration:   8060, Loss function: 4.859, Average Loss: 4.587, avg. samples / sec: 1034.81
Iteration:   8080, Loss function: 4.458, Average Loss: 4.585, avg. samples / sec: 1035.12
Iteration:   8100, Loss function: 4.814, Average Loss: 4.583, avg. samples / sec: 1034.81
Iteration:   8120, Loss function: 4.418, Average Loss: 4.581, avg. samples / sec: 1035.66
Iteration:   8140, Loss function: 4.105, Average Loss: 4.579, avg. samples / sec: 1034.01
Iteration:   8160, Loss function: 4.200, Average Loss: 4.577, avg. samples / sec: 1034.50
Iteration:   8180, Loss function: 4.792, Average Loss: 4.576, avg. samples / sec: 1034.28
Iteration:   8200, Loss function: 4.528, Average Loss: 4.577, avg. samples / sec: 1032.84
Iteration:   8220, Loss function: 4.808, Average Loss: 4.577, avg. samples / sec: 1035.17
:::MLLOG {"namespace": "", "time_ms": 1639756261746, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639756261747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.390, Average Loss: 4.574, avg. samples / sec: 1034.50
Iteration:   8260, Loss function: 4.444, Average Loss: 4.572, avg. samples / sec: 1036.34
Iteration:   8280, Loss function: 4.454, Average Loss: 4.570, avg. samples / sec: 1036.08
Iteration:   8300, Loss function: 4.172, Average Loss: 4.568, avg. samples / sec: 1036.76
Iteration:   8320, Loss function: 4.611, Average Loss: 4.564, avg. samples / sec: 1036.05
Iteration:   8340, Loss function: 4.481, Average Loss: 4.562, avg. samples / sec: 1034.36
Iteration:   8360, Loss function: 4.453, Average Loss: 4.559, avg. samples / sec: 1035.77
Iteration:   8380, Loss function: 4.318, Average Loss: 4.556, avg. samples / sec: 1031.88
Iteration:   8400, Loss function: 4.439, Average Loss: 4.554, avg. samples / sec: 1036.29
Iteration:   8420, Loss function: 4.389, Average Loss: 4.552, avg. samples / sec: 1035.35
Iteration:   8440, Loss function: 4.729, Average Loss: 4.551, avg. samples / sec: 1032.47
Iteration:   8460, Loss function: 4.346, Average Loss: 4.550, avg. samples / sec: 1036.14
Iteration:   8480, Loss function: 4.469, Average Loss: 4.548, avg. samples / sec: 1036.97
Iteration:   8500, Loss function: 4.143, Average Loss: 4.545, avg. samples / sec: 1035.39
Iteration:   8520, Loss function: 4.368, Average Loss: 4.542, avg. samples / sec: 1035.13
Iteration:   8540, Loss function: 4.398, Average Loss: 4.540, avg. samples / sec: 1032.32
Iteration:   8560, Loss function: 4.371, Average Loss: 4.539, avg. samples / sec: 1031.82
Iteration:   8580, Loss function: 4.525, Average Loss: 4.537, avg. samples / sec: 1035.37
Iteration:   8600, Loss function: 4.455, Average Loss: 4.535, avg. samples / sec: 1032.52
Iteration:   8620, Loss function: 4.402, Average Loss: 4.533, avg. samples / sec: 1034.08
Iteration:   8640, Loss function: 4.300, Average Loss: 4.532, avg. samples / sec: 1036.28
Iteration:   8660, Loss function: 4.343, Average Loss: 4.530, avg. samples / sec: 1032.71
Iteration:   8680, Loss function: 4.581, Average Loss: 4.528, avg. samples / sec: 1033.32
Iteration:   8700, Loss function: 4.565, Average Loss: 4.527, avg. samples / sec: 1035.77
Iteration:   8720, Loss function: 4.430, Average Loss: 4.525, avg. samples / sec: 1035.15
Iteration:   8740, Loss function: 4.344, Average Loss: 4.523, avg. samples / sec: 1036.30
Iteration:   8760, Loss function: 4.341, Average Loss: 4.522, avg. samples / sec: 1035.45
Iteration:   8780, Loss function: 4.604, Average Loss: 4.522, avg. samples / sec: 1034.90
Iteration:   8800, Loss function: 4.663, Average Loss: 4.520, avg. samples / sec: 1033.36
Iteration:   8820, Loss function: 4.234, Average Loss: 4.518, avg. samples / sec: 1035.12
Iteration:   8840, Loss function: 4.312, Average Loss: 4.516, avg. samples / sec: 1022.25
Iteration:   8860, Loss function: 4.590, Average Loss: 4.515, avg. samples / sec: 1019.85
Iteration:   8880, Loss function: 4.484, Average Loss: 4.513, avg. samples / sec: 1017.41
Iteration:   8900, Loss function: 4.523, Average Loss: 4.513, avg. samples / sec: 1022.28
Iteration:   8920, Loss function: 4.438, Average Loss: 4.510, avg. samples / sec: 1023.78
Iteration:   8940, Loss function: 4.332, Average Loss: 4.508, avg. samples / sec: 1019.31
Iteration:   8960, Loss function: 4.279, Average Loss: 4.506, avg. samples / sec: 1020.52
Iteration:   8980, Loss function: 4.434, Average Loss: 4.505, avg. samples / sec: 1025.87
Iteration:   9000, Loss function: 4.417, Average Loss: 4.503, avg. samples / sec: 1032.70
Iteration:   9020, Loss function: 4.717, Average Loss: 4.502, avg. samples / sec: 1033.29
Iteration:   9040, Loss function: 4.391, Average Loss: 4.502, avg. samples / sec: 1035.75
Iteration:   9060, Loss function: 4.172, Average Loss: 4.500, avg. samples / sec: 1035.57
Iteration:   9080, Loss function: 4.692, Average Loss: 4.500, avg. samples / sec: 1035.50
Iteration:   9100, Loss function: 4.362, Average Loss: 4.498, avg. samples / sec: 1035.04
Iteration:   9120, Loss function: 4.387, Average Loss: 4.497, avg. samples / sec: 1035.09
Iteration:   9140, Loss function: 4.316, Average Loss: 4.496, avg. samples / sec: 1034.02
Iteration:   9160, Loss function: 4.260, Average Loss: 4.496, avg. samples / sec: 1036.11
Iteration:   9180, Loss function: 4.043, Average Loss: 4.496, avg. samples / sec: 1033.68
Iteration:   9200, Loss function: 4.317, Average Loss: 4.495, avg. samples / sec: 1034.10
Iteration:   9220, Loss function: 4.393, Average Loss: 4.495, avg. samples / sec: 1033.19
Iteration:   9240, Loss function: 4.555, Average Loss: 4.494, avg. samples / sec: 1033.31
:::MLLOG {"namespace": "", "time_ms": 1639756375245, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639756375246, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.424, Average Loss: 4.492, avg. samples / sec: 1033.84
Iteration:   9280, Loss function: 4.164, Average Loss: 4.490, avg. samples / sec: 1033.31
Iteration:   9300, Loss function: 4.468, Average Loss: 4.487, avg. samples / sec: 1034.11
Iteration:   9320, Loss function: 4.128, Average Loss: 4.484, avg. samples / sec: 1034.23
Iteration:   9340, Loss function: 4.723, Average Loss: 4.482, avg. samples / sec: 1035.10
Iteration:   9360, Loss function: 4.358, Average Loss: 4.481, avg. samples / sec: 1036.03
Iteration:   9380, Loss function: 4.288, Average Loss: 4.479, avg. samples / sec: 1035.00
Iteration:   9400, Loss function: 4.246, Average Loss: 4.477, avg. samples / sec: 1035.86
Iteration:   9420, Loss function: 4.509, Average Loss: 4.475, avg. samples / sec: 1032.14
Iteration:   9440, Loss function: 4.465, Average Loss: 4.473, avg. samples / sec: 1031.27
Iteration:   9460, Loss function: 4.222, Average Loss: 4.472, avg. samples / sec: 1035.22
Iteration:   9480, Loss function: 4.521, Average Loss: 4.470, avg. samples / sec: 1034.53
Iteration:   9500, Loss function: 4.416, Average Loss: 4.467, avg. samples / sec: 1033.30
Iteration:   9520, Loss function: 4.260, Average Loss: 4.465, avg. samples / sec: 1032.70
Iteration:   9540, Loss function: 4.404, Average Loss: 4.463, avg. samples / sec: 1033.51
Iteration:   9560, Loss function: 4.561, Average Loss: 4.462, avg. samples / sec: 1034.39
Iteration:   9580, Loss function: 4.364, Average Loss: 4.461, avg. samples / sec: 1035.07
Iteration:   9600, Loss function: 4.072, Average Loss: 4.460, avg. samples / sec: 1034.67
Iteration:   9620, Loss function: 4.496, Average Loss: 4.459, avg. samples / sec: 1033.40
Iteration:   9640, Loss function: 4.409, Average Loss: 4.457, avg. samples / sec: 1034.60
Iteration:   9660, Loss function: 4.563, Average Loss: 4.456, avg. samples / sec: 1033.00
Iteration:   9680, Loss function: 4.550, Average Loss: 4.455, avg. samples / sec: 1034.20
Iteration:   9700, Loss function: 4.588, Average Loss: 4.455, avg. samples / sec: 1026.75
Iteration:   9720, Loss function: 4.173, Average Loss: 4.451, avg. samples / sec: 1029.45
Iteration:   9740, Loss function: 4.632, Average Loss: 4.451, avg. samples / sec: 1024.39
Iteration:   9760, Loss function: 4.157, Average Loss: 4.449, avg. samples / sec: 1021.47
Iteration:   9780, Loss function: 4.378, Average Loss: 4.448, avg. samples / sec: 1020.13
Iteration:   9800, Loss function: 4.307, Average Loss: 4.445, avg. samples / sec: 1032.89
Iteration:   9820, Loss function: 4.173, Average Loss: 4.444, avg. samples / sec: 1035.76
Iteration:   9840, Loss function: 4.548, Average Loss: 4.444, avg. samples / sec: 1035.00
Iteration:   9860, Loss function: 4.502, Average Loss: 4.441, avg. samples / sec: 1035.79
Iteration:   9880, Loss function: 4.201, Average Loss: 4.440, avg. samples / sec: 1034.68
Iteration:   9900, Loss function: 4.673, Average Loss: 4.440, avg. samples / sec: 1034.84
Iteration:   9920, Loss function: 4.611, Average Loss: 4.439, avg. samples / sec: 1036.15
Iteration:   9940, Loss function: 4.269, Average Loss: 4.436, avg. samples / sec: 1036.39
Iteration:   9960, Loss function: 4.508, Average Loss: 4.435, avg. samples / sec: 1032.51
Iteration:   9980, Loss function: 4.424, Average Loss: 4.435, avg. samples / sec: 1034.00
Iteration:  10000, Loss function: 3.854, Average Loss: 4.433, avg. samples / sec: 1034.86
Iteration:  10020, Loss function: 4.613, Average Loss: 4.433, avg. samples / sec: 1032.93
Iteration:  10040, Loss function: 4.406, Average Loss: 4.430, avg. samples / sec: 1035.59
Iteration:  10060, Loss function: 4.050, Average Loss: 4.429, avg. samples / sec: 1033.89
Iteration:  10080, Loss function: 4.517, Average Loss: 4.427, avg. samples / sec: 1021.58
Iteration:  10100, Loss function: 3.969, Average Loss: 4.426, avg. samples / sec: 1021.63
Iteration:  10120, Loss function: 4.361, Average Loss: 4.425, avg. samples / sec: 1019.79
Iteration:  10140, Loss function: 4.455, Average Loss: 4.422, avg. samples / sec: 1023.16
Iteration:  10160, Loss function: 4.532, Average Loss: 4.422, avg. samples / sec: 1023.86
Iteration:  10180, Loss function: 4.708, Average Loss: 4.420, avg. samples / sec: 1021.98
Iteration:  10200, Loss function: 4.122, Average Loss: 4.419, avg. samples / sec: 1022.59
Iteration:  10220, Loss function: 4.553, Average Loss: 4.418, avg. samples / sec: 1030.39
Iteration:  10240, Loss function: 4.279, Average Loss: 4.417, avg. samples / sec: 1035.85
Iteration:  10260, Loss function: 4.041, Average Loss: 4.416, avg. samples / sec: 1034.85
Iteration:  10280, Loss function: 4.644, Average Loss: 4.415, avg. samples / sec: 1035.32
:::MLLOG {"namespace": "", "time_ms": 1639756488957, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
Predicting Ended, total time: 22.18 s
:::MLLOG {"namespace": "", "time_ms": 1639756511150, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639756511185, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 11, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639756511185, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Loading and preparing results...
DONE (t=0.57s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  10300, Loss function: 4.591, Average Loss: 4.413, avg. samples / sec: 93.50
DONE (t=1.77s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14384
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27907
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13586
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.23587
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16421
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.24304
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25710
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25710
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.14384 AP goal: 0.10000
Iteration:  10320, Loss function: 4.343, Average Loss: 4.411, avg. samples / sec: 1028.73
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1438377203050285, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756514900, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639756515039, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
++ date +%s
+ end=1639756516
++ date '+%Y-%m-%d %r'
+ end_fmt='2021-12-17 03:55:16 PM'
START TIMING RUN WAS 2021-12-17 03:33:52 PM
+ echo 'START TIMING RUN WAS 2021-12-17 03:33:52 PM'
ENDING TIMING RUN AT 2021-12-17 03:55:16 PM
+ echo 'ENDING TIMING RUN AT 2021-12-17 03:55:16 PM'
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
  MIG 7g.40gb     Device  0: (UUID: MIG-7008cac5-5da7-5b37-9ddd-3f44ece79169)
+ result=1284
+ [[ ssd == \s\s\d ]]
+ result_name=SINGLE_STAGE_DETECTOR
RESULT,SINGLE_STAGE_DETECTOR,,1284,nvidia,2021-12-17 03:33:52 PM
+ echo 'RESULT,SINGLE_STAGE_DETECTOR,,1284,nvidia,2021-12-17 03:33:52 PM'
ALL FINISHED GPU: 1 x 7g.40gb x 8 Pods
+ echo 'ALL FINISHED GPU: 1 x 7g.40gb x 8 Pods'
