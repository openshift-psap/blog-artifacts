+ test -f /etc/shinit_v2
+ source /etc/shinit_v2
+++ sed -n 's/^NVRM.*Kernel Module *\([^() ]*\).*$/\1/p' /proc/driver/nvidia/version
+++ sed 's/^$/unknown/'
++ NV_DRIVER_VERS=470.82.01
++ export _CUDA_COMPAT_PATH=/usr/local/cuda/compat
++ _CUDA_COMPAT_PATH=/usr/local/cuda/compat
+++ hostname
++ _CUDA_COMPAT_CHECKFILE=/usr/local/cuda/compat/.470.82.01.run-ssd--1-fjclf.checked
++ _CUDA_COMPAT_REALLIB=/usr/local/cuda/compat/lib.real
++ _CUDA_COMPAT_SYMLINK=/usr/local/cuda/compat/lib
++ '[' -n 470.82.01 -a -e /dev/nvidiactl -a '!' -e /usr/local/cuda/compat/.470.82.01.run-ssd--1-fjclf.checked ']'
++ touch /usr/local/cuda/compat/.470.82.01.run-ssd--1-fjclf.checked
++ rm -f /usr/local/cuda/compat/lib
++ TIMEOUT=35
+++ LD_LIBRARY_PATH=/usr/local/cuda/compat/lib.real
+++ timeout -s KILL 35 /usr/local/bin/cudaCheck
++ export '_CUDA_COMPAT_STATUS=CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ _CUDA_COMPAT_STATUS='CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ export '_CUDA_COMPAT_STATUS=CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ _CUDA_COMPAT_STATUS='CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ '[' 'CUDA Driver UNAVAILABLE (cuInit(0) returned 100)' = 'CUDA Driver OK' ']'
++ unset _CUDA_COMPAT_CHECKFILE
++ unset _CUDA_COMPAT_REALLIB
++ unset _CUDA_COMPAT_SYMLINK
+ '[' -z '' ']'
+ return
+ export NCCL_DEBUG=INFO
+ NCCL_DEBUG=INFO
+ set -e
+ set -x
+ set -o pipefail
+ set -o nounset
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ wc -l
++ true
+ NB_GPUS=0
+ [[ 0 == 0 ]]
++ nvidia-smi -L
++ grep 'UUID: GPU'
++ cut '-d ' -f6
++ cut '-d)' -f1
+ ALL_GPUS=GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab
++ nvidia-smi -L
++ grep 'UUID: GPU'
++ wc -l
+ NB_GPUS=1
+ MIG_MODE=0
No MIG GPU available, using the full GPUs (GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab).
+ [[ full != \f\u\l\l ]]
+ echo 'No MIG GPU available, using the full GPUs (GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab).'
+ [[ 1 != 1 ]]
+ SSD_THRESHOLD=0.23
++ date +%s
+ start=1639472189
++ date '+%Y-%m-%d %r'
+ start_fmt='2021-12-14 08:56:29 AM'
STARTING TIMING RUN AT 2021-12-14 08:56:29 AM GPU: 1 x full x 8 Pods
+ echo 'STARTING TIMING RUN AT 2021-12-14 08:56:29 AM GPU: 1 x full x 8 Pods'
+ set -x
+ NUMEPOCHS=80
+ echo 'running benchmark'
running benchmark
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export TORCH_HOME=/data/coco2017/torchvision
+ TORCH_HOME=/data/coco2017/torchvision
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_val2017.json ']'
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_train2017.json ']'
+ EXTRA_PARAMS='--batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4'
+ DGXNSOCKET=1
+ DGXSOCKETCORES=8
+ [[ 0 == \1 ]]
+ DGXNGPU=1
Running in multi-gpu mode.
+ echo 'Running in multi-gpu mode.'
+ declare -a CMD
Patching 'bind_launch.py' to err-exit on failure ...
+ echo 'Patching '\''bind_launch.py'\'' to err-exit on failure ...'
+ sed 's/process.wait()/if process.wait(): sys.exit(1)/' -i bind_launch.py
+ CMD=('python' '-u' '-m' 'bind_launch' "--nsockets_per_node=${DGXNSOCKET}" "--ncores_per_socket=${DGXSOCKETCORES}" "--nproc_per_node=${DGXNGPU}")
+ declare -a ARGS
+ ARGS=(train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs "${NUMEPOCHS}" --warmup-factor 0 --no-save --threshold=${SSD_THRESHOLD} --data ${DATASET_DIR} ${EXTRA_PARAMS})
+ [[ run == \f\a\s\t ]]
+ [[ run == \d\r\y ]]
+ trap 'date; echo failed; exit 1' ERR
+ [[ n != \y ]]
+ SYNC_DIR=/data/coco2017/sync
+ mkdir -p /data/coco2017/sync
+ for sync_f in "$SYNC_DIR/"*
+ [[ /data/coco2017/sync/2021-12-14_03-55-59 != \/\d\a\t\a\/\c\o\c\o\2\0\1\7\/\s\y\n\c\/\2\0\2\1\-\1\2\-\1\4\_\0\3\-\5\5\-\5\9 ]]
+ set +x
Tue Dec 14 08:56:29 UTC 2021 Waiting for all the 8 Pods to start ...
Adding run-ssd--1-fjclf to the sync file ...
run-ssd--1-fjclf Found 5 Pods, waiting to have 8 ...
     1	run-ssd--1-4vxsg
     2	run-ssd--1-gkgk4
     3	run-ssd--1-xdlmn
     4	run-ssd--1-gzwrm
     5	run-ssd--1-fjclf
run-ssd--1-fjclf Found 6 Pods, waiting to have 8 ...
     1	run-ssd--1-4vxsg
     2	run-ssd--1-gkgk4
     3	run-ssd--1-xdlmn
     4	run-ssd--1-gzwrm
     5	run-ssd--1-fjclf
     6	run-ssd--1-htrfp
Tue Dec 14 08:56:39 UTC 2021 All the 8 Pods are running, launch the GPU workload.
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
+ [[ 0 == 1 ]]
+ dest=/tmp/ssd_all.log
+ [[ 0 == 1 ]]
+ echo 'Running on all the 1 GPUs '
Running on all the 1 GPUs 
+ python -u -m bind_launch --nsockets_per_node=1 --ncores_per_socket=8 --nproc_per_node=1 train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs 80 --warmup-factor 0 --no-save --threshold=0.23 --data /data/coco2017 --batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4
+ tee -a /tmp/ssd_all.log
:::MLLOG {"namespace": "", "time_ms": 1639472203026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639472203408, "event_type": "POINT_IN_TIME", "key": "seed", "value": 2535675634, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 2535675634
/opt/conda/lib/python3.6/site-packages/torch/nn/_reduction.py:44: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
:::MLLOG {"namespace": "", "time_ms": 1639472205413, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639472205413, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639472228293, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639472228293, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
[/opt/dali/dali/operators/image/crop/bbox_crop.cc:348] WARNING: `ltrb` is deprecated. Please use `bbox_layout` to specify the format of the bounding box. E.g. For 2D bounding boxes, `ltrb=True`` is equivalent to `bbox_layout="xyXY"`, and `ltrb=False` is equivalent to `bbox_layout="xyWH"`
:::MLLOG {"namespace": "", "time_ms": 1639472230295, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639472230296, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.20s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639472230744, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639472230745, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639472230751, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.489, Average Loss: 0.022, avg. samples / sec: 4.56
Iteration:     20, Loss function: 20.913, Average Loss: 0.455, avg. samples / sec: 850.64
Iteration:     40, Loss function: 20.815, Average Loss: 0.857, avg. samples / sec: 901.91
Iteration:     60, Loss function: 20.398, Average Loss: 1.247, avg. samples / sec: 934.67
Iteration:     80, Loss function: 20.092, Average Loss: 1.622, avg. samples / sec: 978.10
Iteration:    100, Loss function: 16.391, Average Loss: 1.958, avg. samples / sec: 957.74
Iteration:    120, Loss function: 11.981, Average Loss: 2.176, avg. samples / sec: 915.66
Iteration:    140, Loss function: 9.754, Average Loss: 2.339, avg. samples / sec: 1017.22
Iteration:    160, Loss function: 9.418, Average Loss: 2.481, avg. samples / sec: 980.47
Iteration:    180, Loss function: 9.188, Average Loss: 2.612, avg. samples / sec: 960.70
Iteration:    200, Loss function: 8.599, Average Loss: 2.737, avg. samples / sec: 965.63
Iteration:    220, Loss function: 8.539, Average Loss: 2.856, avg. samples / sec: 1026.15
Iteration:    240, Loss function: 8.519, Average Loss: 2.972, avg. samples / sec: 1036.95
Iteration:    260, Loss function: 8.926, Average Loss: 3.086, avg. samples / sec: 1116.91
Iteration:    280, Loss function: 8.636, Average Loss: 3.198, avg. samples / sec: 757.89
Iteration:    300, Loss function: 8.336, Average Loss: 3.302, avg. samples / sec: 922.85
Iteration:    320, Loss function: 8.352, Average Loss: 3.402, avg. samples / sec: 947.47
Iteration:    340, Loss function: 8.218, Average Loss: 3.498, avg. samples / sec: 995.37
Iteration:    360, Loss function: 7.994, Average Loss: 3.591, avg. samples / sec: 1027.74
Iteration:    380, Loss function: 7.908, Average Loss: 3.680, avg. samples / sec: 890.11
Iteration:    400, Loss function: 7.997, Average Loss: 3.763, avg. samples / sec: 963.21
Iteration:    420, Loss function: 7.901, Average Loss: 3.848, avg. samples / sec: 1028.34
Iteration:    440, Loss function: 7.830, Average Loss: 3.928, avg. samples / sec: 967.73
Iteration:    460, Loss function: 7.786, Average Loss: 4.003, avg. samples / sec: 1021.39
Iteration:    480, Loss function: 7.526, Average Loss: 4.076, avg. samples / sec: 1036.78
Iteration:    500, Loss function: 7.565, Average Loss: 4.146, avg. samples / sec: 972.01
Iteration:    520, Loss function: 7.410, Average Loss: 4.213, avg. samples / sec: 974.85
Iteration:    540, Loss function: 7.388, Average Loss: 4.277, avg. samples / sec: 998.85
Iteration:    560, Loss function: 7.066, Average Loss: 4.337, avg. samples / sec: 981.96
Iteration:    580, Loss function: 7.244, Average Loss: 4.397, avg. samples / sec: 943.98
Iteration:    600, Loss function: 7.202, Average Loss: 4.454, avg. samples / sec: 1037.50
Iteration:    620, Loss function: 7.033, Average Loss: 4.509, avg. samples / sec: 1007.50
Iteration:    640, Loss function: 6.762, Average Loss: 4.562, avg. samples / sec: 1013.42
Iteration:    660, Loss function: 7.262, Average Loss: 4.615, avg. samples / sec: 1006.08
Iteration:    680, Loss function: 7.158, Average Loss: 4.666, avg. samples / sec: 976.12
Iteration:    700, Loss function: 6.692, Average Loss: 4.713, avg. samples / sec: 1027.08
Iteration:    720, Loss function: 7.050, Average Loss: 4.762, avg. samples / sec: 1034.63
Iteration:    740, Loss function: 6.817, Average Loss: 4.806, avg. samples / sec: 1009.74
Iteration:    760, Loss function: 7.090, Average Loss: 4.850, avg. samples / sec: 1036.78
Iteration:    780, Loss function: 6.718, Average Loss: 4.891, avg. samples / sec: 1004.05
Iteration:    800, Loss function: 7.169, Average Loss: 4.930, avg. samples / sec: 1079.87
Iteration:    820, Loss function: 6.858, Average Loss: 4.967, avg. samples / sec: 1130.09
Iteration:    840, Loss function: 6.675, Average Loss: 5.003, avg. samples / sec: 1001.97
Iteration:    860, Loss function: 6.943, Average Loss: 5.038, avg. samples / sec: 1032.19
Iteration:    880, Loss function: 6.720, Average Loss: 5.071, avg. samples / sec: 1026.61
Iteration:    900, Loss function: 6.858, Average Loss: 5.101, avg. samples / sec: 1017.99
Iteration:    920, Loss function: 6.558, Average Loss: 5.131, avg. samples / sec: 1008.16
Iteration:    940, Loss function: 6.810, Average Loss: 5.160, avg. samples / sec: 1004.55
Iteration:    960, Loss function: 6.301, Average Loss: 5.189, avg. samples / sec: 1015.27
Iteration:    980, Loss function: 6.641, Average Loss: 5.216, avg. samples / sec: 973.61
Iteration:   1000, Loss function: 6.485, Average Loss: 5.242, avg. samples / sec: 1048.12
Iteration:   1020, Loss function: 6.344, Average Loss: 5.266, avg. samples / sec: 1028.46
:::MLLOG {"namespace": "", "time_ms": 1639472349460, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639472349462, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.403, Average Loss: 5.288, avg. samples / sec: 1026.32
Iteration:   1060, Loss function: 6.372, Average Loss: 5.311, avg. samples / sec: 955.12
Iteration:   1080, Loss function: 6.315, Average Loss: 5.332, avg. samples / sec: 991.80
Iteration:   1100, Loss function: 6.209, Average Loss: 5.352, avg. samples / sec: 955.75
Iteration:   1120, Loss function: 6.200, Average Loss: 5.372, avg. samples / sec: 931.90
Iteration:   1140, Loss function: 6.313, Average Loss: 5.391, avg. samples / sec: 965.49
Iteration:   1160, Loss function: 6.294, Average Loss: 5.408, avg. samples / sec: 998.54
Iteration:   1180, Loss function: 6.208, Average Loss: 5.424, avg. samples / sec: 1007.93
Iteration:   1200, Loss function: 6.357, Average Loss: 5.441, avg. samples / sec: 1000.42
Iteration:   1220, Loss function: 6.100, Average Loss: 5.455, avg. samples / sec: 941.06
Iteration:   1240, Loss function: 6.208, Average Loss: 5.467, avg. samples / sec: 1061.21
Iteration:   1260, Loss function: 6.120, Average Loss: 5.479, avg. samples / sec: 1042.81
Iteration:   1280, Loss function: 5.992, Average Loss: 5.492, avg. samples / sec: 1048.59
Iteration:   1300, Loss function: 6.168, Average Loss: 5.504, avg. samples / sec: 983.72
Iteration:   1320, Loss function: 6.204, Average Loss: 5.516, avg. samples / sec: 1080.99
Iteration:   1340, Loss function: 5.844, Average Loss: 5.525, avg. samples / sec: 753.54
Iteration:   1360, Loss function: 6.100, Average Loss: 5.536, avg. samples / sec: 1016.68
Iteration:   1380, Loss function: 6.016, Average Loss: 5.546, avg. samples / sec: 1012.74
Iteration:   1400, Loss function: 6.041, Average Loss: 5.555, avg. samples / sec: 1051.30
Iteration:   1420, Loss function: 5.672, Average Loss: 5.562, avg. samples / sec: 1003.52
Iteration:   1440, Loss function: 6.294, Average Loss: 5.570, avg. samples / sec: 1034.75
Iteration:   1460, Loss function: 6.203, Average Loss: 5.579, avg. samples / sec: 1017.33
Iteration:   1480, Loss function: 5.889, Average Loss: 5.587, avg. samples / sec: 1037.50
Iteration:   1500, Loss function: 6.118, Average Loss: 5.594, avg. samples / sec: 981.88
Iteration:   1520, Loss function: 6.173, Average Loss: 5.600, avg. samples / sec: 1004.76
Iteration:   1540, Loss function: 6.137, Average Loss: 5.604, avg. samples / sec: 1032.44
Iteration:   1560, Loss function: 5.768, Average Loss: 5.609, avg. samples / sec: 924.77
Iteration:   1580, Loss function: 5.559, Average Loss: 5.613, avg. samples / sec: 1022.15
Iteration:   1600, Loss function: 6.051, Average Loss: 5.618, avg. samples / sec: 1031.18
Iteration:   1620, Loss function: 5.749, Average Loss: 5.622, avg. samples / sec: 995.16
Iteration:   1640, Loss function: 5.833, Average Loss: 5.626, avg. samples / sec: 1028.00
Iteration:   1660, Loss function: 5.929, Average Loss: 5.631, avg. samples / sec: 1057.97
Iteration:   1680, Loss function: 5.635, Average Loss: 5.634, avg. samples / sec: 1063.17
Iteration:   1700, Loss function: 5.318, Average Loss: 5.638, avg. samples / sec: 999.86
Iteration:   1720, Loss function: 5.747, Average Loss: 5.641, avg. samples / sec: 935.89
Iteration:   1740, Loss function: 5.962, Average Loss: 5.643, avg. samples / sec: 945.78
Iteration:   1760, Loss function: 5.440, Average Loss: 5.645, avg. samples / sec: 1042.88
Iteration:   1780, Loss function: 5.720, Average Loss: 5.647, avg. samples / sec: 998.43
Iteration:   1800, Loss function: 5.778, Average Loss: 5.650, avg. samples / sec: 1070.20
Iteration:   1820, Loss function: 6.075, Average Loss: 5.652, avg. samples / sec: 987.46
Iteration:   1840, Loss function: 6.011, Average Loss: 5.653, avg. samples / sec: 1018.23
Iteration:   1860, Loss function: 5.827, Average Loss: 5.653, avg. samples / sec: 955.88
Iteration:   1880, Loss function: 5.947, Average Loss: 5.654, avg. samples / sec: 975.96
Iteration:   1900, Loss function: 5.926, Average Loss: 5.655, avg. samples / sec: 1058.94
Iteration:   1920, Loss function: 5.668, Average Loss: 5.654, avg. samples / sec: 961.08
Iteration:   1940, Loss function: 5.785, Average Loss: 5.653, avg. samples / sec: 952.09
Iteration:   1960, Loss function: 5.557, Average Loss: 5.653, avg. samples / sec: 987.36
Iteration:   1980, Loss function: 5.595, Average Loss: 5.652, avg. samples / sec: 967.32
Iteration:   2000, Loss function: 5.592, Average Loss: 5.651, avg. samples / sec: 1052.89
Iteration:   2020, Loss function: 5.578, Average Loss: 5.649, avg. samples / sec: 1042.89
Iteration:   2040, Loss function: 5.681, Average Loss: 5.649, avg. samples / sec: 1033.73
:::MLLOG {"namespace": "", "time_ms": 1639472466942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639472466943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.547, Average Loss: 5.646, avg. samples / sec: 1064.92
Iteration:   2080, Loss function: 5.220, Average Loss: 5.644, avg. samples / sec: 1001.20
Iteration:   2100, Loss function: 5.535, Average Loss: 5.641, avg. samples / sec: 1008.70
Iteration:   2120, Loss function: 5.489, Average Loss: 5.637, avg. samples / sec: 1004.10
Iteration:   2140, Loss function: 5.540, Average Loss: 5.634, avg. samples / sec: 1016.42
Iteration:   2160, Loss function: 5.372, Average Loss: 5.633, avg. samples / sec: 973.43
Iteration:   2180, Loss function: 5.146, Average Loss: 5.630, avg. samples / sec: 971.53
Iteration:   2200, Loss function: 5.630, Average Loss: 5.627, avg. samples / sec: 1017.43
Iteration:   2220, Loss function: 5.697, Average Loss: 5.625, avg. samples / sec: 978.39
Iteration:   2240, Loss function: 5.415, Average Loss: 5.622, avg. samples / sec: 975.18
Iteration:   2260, Loss function: 5.240, Average Loss: 5.618, avg. samples / sec: 928.49
Iteration:   2280, Loss function: 5.235, Average Loss: 5.615, avg. samples / sec: 966.07
Iteration:   2300, Loss function: 5.170, Average Loss: 5.612, avg. samples / sec: 990.77
Iteration:   2320, Loss function: 5.375, Average Loss: 5.610, avg. samples / sec: 940.08
Iteration:   2340, Loss function: 5.570, Average Loss: 5.606, avg. samples / sec: 1010.07
Iteration:   2360, Loss function: 5.452, Average Loss: 5.602, avg. samples / sec: 1013.68
Iteration:   2380, Loss function: 5.522, Average Loss: 5.599, avg. samples / sec: 1061.31
Iteration:   2400, Loss function: 5.629, Average Loss: 5.595, avg. samples / sec: 1065.58
Iteration:   2420, Loss function: 5.462, Average Loss: 5.591, avg. samples / sec: 978.04
Iteration:   2440, Loss function: 5.426, Average Loss: 5.588, avg. samples / sec: 1061.76
Iteration:   2460, Loss function: 5.122, Average Loss: 5.584, avg. samples / sec: 1017.59
Iteration:   2480, Loss function: 5.339, Average Loss: 5.580, avg. samples / sec: 990.85
Iteration:   2500, Loss function: 5.455, Average Loss: 5.576, avg. samples / sec: 982.58
Iteration:   2520, Loss function: 5.555, Average Loss: 5.572, avg. samples / sec: 957.01
Iteration:   2540, Loss function: 5.542, Average Loss: 5.568, avg. samples / sec: 1087.44
Iteration:   2560, Loss function: 5.372, Average Loss: 5.564, avg. samples / sec: 1009.96
Iteration:   2580, Loss function: 5.248, Average Loss: 5.560, avg. samples / sec: 990.61
Iteration:   2600, Loss function: 5.515, Average Loss: 5.558, avg. samples / sec: 968.27
Iteration:   2620, Loss function: 5.692, Average Loss: 5.553, avg. samples / sec: 1012.43
Iteration:   2640, Loss function: 5.165, Average Loss: 5.550, avg. samples / sec: 1049.39
Iteration:   2660, Loss function: 5.206, Average Loss: 5.546, avg. samples / sec: 951.66
Iteration:   2680, Loss function: 5.233, Average Loss: 5.542, avg. samples / sec: 936.27
Iteration:   2700, Loss function: 5.258, Average Loss: 5.537, avg. samples / sec: 951.56
Iteration:   2720, Loss function: 5.185, Average Loss: 5.534, avg. samples / sec: 919.03
Iteration:   2740, Loss function: 5.030, Average Loss: 5.530, avg. samples / sec: 1029.22
Iteration:   2760, Loss function: 4.973, Average Loss: 5.524, avg. samples / sec: 941.70
Iteration:   2780, Loss function: 5.511, Average Loss: 5.520, avg. samples / sec: 1068.80
Iteration:   2800, Loss function: 5.250, Average Loss: 5.516, avg. samples / sec: 977.85
Iteration:   2820, Loss function: 5.590, Average Loss: 5.511, avg. samples / sec: 1007.05
Iteration:   2840, Loss function: 5.183, Average Loss: 5.506, avg. samples / sec: 1033.15
Iteration:   2860, Loss function: 5.221, Average Loss: 5.500, avg. samples / sec: 1012.72
Iteration:   2880, Loss function: 5.203, Average Loss: 5.496, avg. samples / sec: 1020.25
Iteration:   2900, Loss function: 5.015, Average Loss: 5.492, avg. samples / sec: 988.52
Iteration:   2920, Loss function: 5.099, Average Loss: 5.485, avg. samples / sec: 975.92
Iteration:   2940, Loss function: 4.971, Average Loss: 5.481, avg. samples / sec: 1017.83
Iteration:   2960, Loss function: 5.494, Average Loss: 5.477, avg. samples / sec: 998.09
Iteration:   2980, Loss function: 5.314, Average Loss: 5.473, avg. samples / sec: 987.15
Iteration:   3000, Loss function: 5.516, Average Loss: 5.468, avg. samples / sec: 952.28
Iteration:   3020, Loss function: 5.204, Average Loss: 5.461, avg. samples / sec: 970.99
Iteration:   3040, Loss function: 5.218, Average Loss: 5.456, avg. samples / sec: 969.53
Iteration:   3060, Loss function: 4.937, Average Loss: 5.451, avg. samples / sec: 992.36
Iteration:   3080, Loss function: 4.980, Average Loss: 5.446, avg. samples / sec: 982.78
:::MLLOG {"namespace": "", "time_ms": 1639472584941, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639472584942, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.273, Average Loss: 5.441, avg. samples / sec: 998.09
Iteration:   3120, Loss function: 4.917, Average Loss: 5.435, avg. samples / sec: 1079.19
Iteration:   3140, Loss function: 5.119, Average Loss: 5.430, avg. samples / sec: 945.44
Iteration:   3160, Loss function: 5.603, Average Loss: 5.425, avg. samples / sec: 982.44
Iteration:   3180, Loss function: 5.000, Average Loss: 5.420, avg. samples / sec: 1022.09
Iteration:   3200, Loss function: 5.260, Average Loss: 5.414, avg. samples / sec: 1014.65
Iteration:   3220, Loss function: 5.200, Average Loss: 5.408, avg. samples / sec: 1020.88
Iteration:   3240, Loss function: 5.013, Average Loss: 5.401, avg. samples / sec: 1071.33
Iteration:   3260, Loss function: 5.026, Average Loss: 5.394, avg. samples / sec: 973.24
Iteration:   3280, Loss function: 4.920, Average Loss: 5.388, avg. samples / sec: 1009.19
Iteration:   3300, Loss function: 4.852, Average Loss: 5.383, avg. samples / sec: 1017.52
Iteration:   3320, Loss function: 5.114, Average Loss: 5.378, avg. samples / sec: 988.03
Iteration:   3340, Loss function: 5.020, Average Loss: 5.373, avg. samples / sec: 982.46
Iteration:   3360, Loss function: 5.006, Average Loss: 5.366, avg. samples / sec: 1004.17
Iteration:   3380, Loss function: 5.063, Average Loss: 5.360, avg. samples / sec: 1018.97
Iteration:   3400, Loss function: 4.998, Average Loss: 5.354, avg. samples / sec: 984.63
Iteration:   3420, Loss function: 5.079, Average Loss: 5.350, avg. samples / sec: 955.84
Iteration:   3440, Loss function: 4.724, Average Loss: 5.344, avg. samples / sec: 947.04
Iteration:   3460, Loss function: 5.129, Average Loss: 5.339, avg. samples / sec: 948.29
Iteration:   3480, Loss function: 5.370, Average Loss: 5.334, avg. samples / sec: 979.02
Iteration:   3500, Loss function: 5.152, Average Loss: 5.330, avg. samples / sec: 1024.02
Iteration:   3520, Loss function: 4.951, Average Loss: 5.326, avg. samples / sec: 996.74
Iteration:   3540, Loss function: 5.025, Average Loss: 5.321, avg. samples / sec: 982.82
Iteration:   3560, Loss function: 4.824, Average Loss: 5.316, avg. samples / sec: 938.05
Iteration:   3580, Loss function: 5.148, Average Loss: 5.312, avg. samples / sec: 932.24
Iteration:   3600, Loss function: 5.263, Average Loss: 5.307, avg. samples / sec: 989.07
Iteration:   3620, Loss function: 4.777, Average Loss: 5.302, avg. samples / sec: 1006.41
Iteration:   3640, Loss function: 4.766, Average Loss: 5.297, avg. samples / sec: 987.34
Iteration:   3660, Loss function: 4.850, Average Loss: 5.291, avg. samples / sec: 1067.58
Iteration:   3680, Loss function: 5.143, Average Loss: 5.285, avg. samples / sec: 994.73
Iteration:   3700, Loss function: 4.834, Average Loss: 5.280, avg. samples / sec: 994.00
Iteration:   3720, Loss function: 4.983, Average Loss: 5.275, avg. samples / sec: 927.79
Iteration:   3740, Loss function: 5.079, Average Loss: 5.271, avg. samples / sec: 1000.03
Iteration:   3760, Loss function: 4.865, Average Loss: 5.266, avg. samples / sec: 1058.95
Iteration:   3780, Loss function: 5.053, Average Loss: 5.261, avg. samples / sec: 1009.57
Iteration:   3800, Loss function: 5.081, Average Loss: 5.256, avg. samples / sec: 987.92
Iteration:   3820, Loss function: 5.301, Average Loss: 5.251, avg. samples / sec: 1056.37
Iteration:   3840, Loss function: 4.889, Average Loss: 5.247, avg. samples / sec: 972.73
Iteration:   3860, Loss function: 4.957, Average Loss: 5.242, avg. samples / sec: 968.61
Iteration:   3880, Loss function: 5.173, Average Loss: 5.237, avg. samples / sec: 1015.01
Iteration:   3900, Loss function: 4.999, Average Loss: 5.233, avg. samples / sec: 1038.49
Iteration:   3920, Loss function: 4.994, Average Loss: 5.227, avg. samples / sec: 989.21
Iteration:   3940, Loss function: 4.850, Average Loss: 5.221, avg. samples / sec: 1013.99
Iteration:   3960, Loss function: 5.021, Average Loss: 5.218, avg. samples / sec: 1018.57
Iteration:   3980, Loss function: 4.785, Average Loss: 5.213, avg. samples / sec: 1023.74
Iteration:   4000, Loss function: 5.169, Average Loss: 5.208, avg. samples / sec: 945.34
Iteration:   4020, Loss function: 5.010, Average Loss: 5.204, avg. samples / sec: 1010.10
Iteration:   4040, Loss function: 4.901, Average Loss: 5.199, avg. samples / sec: 994.22
Iteration:   4060, Loss function: 5.375, Average Loss: 5.195, avg. samples / sec: 1018.10
Iteration:   4080, Loss function: 4.869, Average Loss: 5.191, avg. samples / sec: 1010.04
Iteration:   4100, Loss function: 4.867, Average Loss: 5.187, avg. samples / sec: 1048.14
:::MLLOG {"namespace": "", "time_ms": 1639472702548, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639472702549, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.114, Average Loss: 5.184, avg. samples / sec: 949.75
Iteration:   4140, Loss function: 4.952, Average Loss: 5.179, avg. samples / sec: 1011.75
Iteration:   4160, Loss function: 4.918, Average Loss: 5.172, avg. samples / sec: 965.51
Iteration:   4180, Loss function: 4.909, Average Loss: 5.165, avg. samples / sec: 1084.80
Iteration:   4200, Loss function: 4.779, Average Loss: 5.161, avg. samples / sec: 974.01
Iteration:   4220, Loss function: 4.800, Average Loss: 5.157, avg. samples / sec: 1032.35
Iteration:   4240, Loss function: 5.004, Average Loss: 5.153, avg. samples / sec: 1043.53
Iteration:   4260, Loss function: 4.972, Average Loss: 5.148, avg. samples / sec: 1044.73
Iteration:   4280, Loss function: 5.019, Average Loss: 5.143, avg. samples / sec: 1046.44
Iteration:   4300, Loss function: 4.792, Average Loss: 5.138, avg. samples / sec: 1025.08
Iteration:   4320, Loss function: 4.827, Average Loss: 5.134, avg. samples / sec: 1005.67
Iteration:   4340, Loss function: 4.804, Average Loss: 5.129, avg. samples / sec: 928.23
Iteration:   4360, Loss function: 4.981, Average Loss: 5.125, avg. samples / sec: 1013.33
Iteration:   4380, Loss function: 5.069, Average Loss: 5.120, avg. samples / sec: 1036.51
Iteration:   4400, Loss function: 4.954, Average Loss: 5.116, avg. samples / sec: 1075.20
Iteration:   4420, Loss function: 5.028, Average Loss: 5.111, avg. samples / sec: 916.14
Iteration:   4440, Loss function: 4.722, Average Loss: 5.106, avg. samples / sec: 997.12
Iteration:   4460, Loss function: 5.100, Average Loss: 5.101, avg. samples / sec: 1048.99
Iteration:   4480, Loss function: 4.949, Average Loss: 5.098, avg. samples / sec: 978.91
Iteration:   4500, Loss function: 4.817, Average Loss: 5.094, avg. samples / sec: 986.12
Iteration:   4520, Loss function: 4.648, Average Loss: 5.089, avg. samples / sec: 1018.36
Iteration:   4540, Loss function: 5.110, Average Loss: 5.085, avg. samples / sec: 975.27
Iteration:   4560, Loss function: 4.523, Average Loss: 5.080, avg. samples / sec: 914.59
Iteration:   4580, Loss function: 4.729, Average Loss: 5.079, avg. samples / sec: 1037.21
Iteration:   4600, Loss function: 4.861, Average Loss: 5.074, avg. samples / sec: 1022.70
Iteration:   4620, Loss function: 4.999, Average Loss: 5.069, avg. samples / sec: 1007.79
Iteration:   4640, Loss function: 4.720, Average Loss: 5.065, avg. samples / sec: 1002.32
Iteration:   4660, Loss function: 4.800, Average Loss: 5.062, avg. samples / sec: 1000.33
Iteration:   4680, Loss function: 5.205, Average Loss: 5.057, avg. samples / sec: 1047.76
Iteration:   4700, Loss function: 4.746, Average Loss: 5.053, avg. samples / sec: 1038.26
Iteration:   4720, Loss function: 4.567, Average Loss: 5.047, avg. samples / sec: 1078.05
Iteration:   4740, Loss function: 4.797, Average Loss: 5.043, avg. samples / sec: 1007.70
Iteration:   4760, Loss function: 4.641, Average Loss: 5.039, avg. samples / sec: 1018.74
Iteration:   4780, Loss function: 4.968, Average Loss: 5.035, avg. samples / sec: 940.49
Iteration:   4800, Loss function: 4.770, Average Loss: 5.033, avg. samples / sec: 1019.44
Iteration:   4820, Loss function: 4.655, Average Loss: 5.030, avg. samples / sec: 964.74
Iteration:   4840, Loss function: 5.036, Average Loss: 5.026, avg. samples / sec: 1042.83
Iteration:   4860, Loss function: 4.690, Average Loss: 5.021, avg. samples / sec: 922.38
Iteration:   4880, Loss function: 5.119, Average Loss: 5.017, avg. samples / sec: 945.41
Iteration:   4900, Loss function: 4.743, Average Loss: 5.013, avg. samples / sec: 972.22
Iteration:   4920, Loss function: 4.786, Average Loss: 5.009, avg. samples / sec: 989.45
Iteration:   4940, Loss function: 4.643, Average Loss: 5.005, avg. samples / sec: 958.10
Iteration:   4960, Loss function: 4.765, Average Loss: 5.003, avg. samples / sec: 990.16
Iteration:   4980, Loss function: 4.629, Average Loss: 5.000, avg. samples / sec: 976.68
Iteration:   5000, Loss function: 4.980, Average Loss: 4.997, avg. samples / sec: 1013.26
Iteration:   5020, Loss function: 5.263, Average Loss: 4.994, avg. samples / sec: 992.70
Iteration:   5040, Loss function: 4.939, Average Loss: 4.992, avg. samples / sec: 985.74
Iteration:   5060, Loss function: 4.724, Average Loss: 4.989, avg. samples / sec: 1001.46
Iteration:   5080, Loss function: 4.390, Average Loss: 4.985, avg. samples / sec: 1040.72
Iteration:   5100, Loss function: 4.844, Average Loss: 4.983, avg. samples / sec: 975.05
Iteration:   5120, Loss function: 4.532, Average Loss: 4.979, avg. samples / sec: 980.40
Iteration:   5140, Loss function: 5.078, Average Loss: 4.975, avg. samples / sec: 991.14
:::MLLOG {"namespace": "", "time_ms": 1639472819965, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639472819966, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Iteration:   5160, Loss function: 4.744, Average Loss: 4.971, avg. samples / sec: 1024.65
Iteration:   5180, Loss function: 4.849, Average Loss: 4.966, avg. samples / sec: 976.73
Iteration:   5200, Loss function: 4.596, Average Loss: 4.962, avg. samples / sec: 994.54
Iteration:   5220, Loss function: 4.508, Average Loss: 4.958, avg. samples / sec: 968.12
Iteration:   5240, Loss function: 4.743, Average Loss: 4.953, avg. samples / sec: 1061.73
Iteration:   5260, Loss function: 4.542, Average Loss: 4.949, avg. samples / sec: 934.27
Iteration:   5280, Loss function: 4.853, Average Loss: 4.946, avg. samples / sec: 1006.21
Iteration:   5300, Loss function: 5.140, Average Loss: 4.943, avg. samples / sec: 1018.32
Iteration:   5320, Loss function: 5.091, Average Loss: 4.938, avg. samples / sec: 1059.56
Iteration:   5340, Loss function: 4.702, Average Loss: 4.934, avg. samples / sec: 980.03
Iteration:   5360, Loss function: 5.155, Average Loss: 4.931, avg. samples / sec: 928.27
Iteration:   5380, Loss function: 4.484, Average Loss: 4.927, avg. samples / sec: 989.36
Iteration:   5400, Loss function: 4.380, Average Loss: 4.923, avg. samples / sec: 1003.42
Iteration:   5420, Loss function: 4.658, Average Loss: 4.920, avg. samples / sec: 1025.54
Iteration:   5440, Loss function: 4.810, Average Loss: 4.917, avg. samples / sec: 1016.34
Iteration:   5460, Loss function: 4.585, Average Loss: 4.914, avg. samples / sec: 947.27
Iteration:   5480, Loss function: 4.715, Average Loss: 4.911, avg. samples / sec: 924.36
Iteration:   5500, Loss function: 4.718, Average Loss: 4.907, avg. samples / sec: 1001.42
Iteration:   5520, Loss function: 4.785, Average Loss: 4.904, avg. samples / sec: 938.97
Iteration:   5540, Loss function: 4.681, Average Loss: 4.899, avg. samples / sec: 1003.58
Iteration:   5560, Loss function: 4.706, Average Loss: 4.896, avg. samples / sec: 1033.54
Iteration:   5580, Loss function: 4.853, Average Loss: 4.892, avg. samples / sec: 1050.18
Iteration:   5600, Loss function: 4.472, Average Loss: 4.888, avg. samples / sec: 1032.77
Iteration:   5620, Loss function: 4.337, Average Loss: 4.885, avg. samples / sec: 1024.65
Iteration:   5640, Loss function: 4.578, Average Loss: 4.882, avg. samples / sec: 978.53
Iteration:   5660, Loss function: 4.718, Average Loss: 4.880, avg. samples / sec: 1015.82
Iteration:   5680, Loss function: 4.840, Average Loss: 4.876, avg. samples / sec: 992.17
Iteration:   5700, Loss function: 4.539, Average Loss: 4.872, avg. samples / sec: 1036.84
Iteration:   5720, Loss function: 4.604, Average Loss: 4.870, avg. samples / sec: 982.32
Iteration:   5740, Loss function: 4.440, Average Loss: 4.866, avg. samples / sec: 993.95
Iteration:   5760, Loss function: 4.657, Average Loss: 4.862, avg. samples / sec: 985.58
Iteration:   5780, Loss function: 4.645, Average Loss: 4.860, avg. samples / sec: 1016.06
Iteration:   5800, Loss function: 5.036, Average Loss: 4.857, avg. samples / sec: 1024.68
Iteration:   5820, Loss function: 4.648, Average Loss: 4.854, avg. samples / sec: 1033.04
Iteration:   5840, Loss function: 4.567, Average Loss: 4.851, avg. samples / sec: 989.13
Iteration:   5860, Loss function: 4.850, Average Loss: 4.848, avg. samples / sec: 1007.29
Iteration:   5880, Loss function: 4.789, Average Loss: 4.845, avg. samples / sec: 927.78
Iteration:   5900, Loss function: 4.710, Average Loss: 4.841, avg. samples / sec: 1040.25
Iteration:   5920, Loss function: 4.788, Average Loss: 4.838, avg. samples / sec: 1046.07
Iteration:   5940, Loss function: 4.446, Average Loss: 4.835, avg. samples / sec: 1095.59
Iteration:   5960, Loss function: 5.038, Average Loss: 4.832, avg. samples / sec: 1002.56
Iteration:   5980, Loss function: 4.673, Average Loss: 4.829, avg. samples / sec: 1011.29
Iteration:   6000, Loss function: 4.456, Average Loss: 4.826, avg. samples / sec: 1099.47
Iteration:   6020, Loss function: 4.847, Average Loss: 4.824, avg. samples / sec: 998.74
Iteration:   6040, Loss function: 4.617, Average Loss: 4.821, avg. samples / sec: 985.10
Iteration:   6060, Loss function: 4.404, Average Loss: 4.820, avg. samples / sec: 1033.41
Iteration:   6080, Loss function: 4.540, Average Loss: 4.816, avg. samples / sec: 1060.75
Iteration:   6100, Loss function: 4.542, Average Loss: 4.814, avg. samples / sec: 1004.54
Iteration:   6120, Loss function: 4.562, Average Loss: 4.811, avg. samples / sec: 1014.94
Iteration:   6140, Loss function: 4.958, Average Loss: 4.808, avg. samples / sec: 981.81
Iteration:   6160, Loss function: 4.795, Average Loss: 4.806, avg. samples / sec: 948.75
:::MLLOG {"namespace": "", "time_ms": 1639472936854, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639472936856, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.690, Average Loss: 4.802, avg. samples / sec: 995.89
Iteration:   6200, Loss function: 4.873, Average Loss: 4.798, avg. samples / sec: 1068.77
Iteration:   6220, Loss function: 4.532, Average Loss: 4.794, avg. samples / sec: 1037.48
Iteration:   6240, Loss function: 4.520, Average Loss: 4.791, avg. samples / sec: 957.64
Iteration:   6260, Loss function: 4.443, Average Loss: 4.787, avg. samples / sec: 1037.98
Iteration:   6280, Loss function: 4.571, Average Loss: 4.784, avg. samples / sec: 994.91
Iteration:   6300, Loss function: 4.846, Average Loss: 4.781, avg. samples / sec: 1045.68
Iteration:   6320, Loss function: 4.368, Average Loss: 4.776, avg. samples / sec: 975.87
Iteration:   6340, Loss function: 4.639, Average Loss: 4.774, avg. samples / sec: 1021.82
Iteration:   6360, Loss function: 4.653, Average Loss: 4.769, avg. samples / sec: 1008.81
Iteration:   6380, Loss function: 4.460, Average Loss: 4.766, avg. samples / sec: 1021.38
Iteration:   6400, Loss function: 4.554, Average Loss: 4.764, avg. samples / sec: 945.58
Iteration:   6420, Loss function: 4.442, Average Loss: 4.761, avg. samples / sec: 951.62
Iteration:   6440, Loss function: 4.561, Average Loss: 4.757, avg. samples / sec: 1025.66
Iteration:   6460, Loss function: 4.765, Average Loss: 4.756, avg. samples / sec: 993.83
Iteration:   6480, Loss function: 4.529, Average Loss: 4.754, avg. samples / sec: 1067.08
Iteration:   6500, Loss function: 4.745, Average Loss: 4.751, avg. samples / sec: 992.22
Iteration:   6520, Loss function: 4.464, Average Loss: 4.750, avg. samples / sec: 1034.61
Iteration:   6540, Loss function: 4.680, Average Loss: 4.748, avg. samples / sec: 1013.29
Iteration:   6560, Loss function: 4.435, Average Loss: 4.746, avg. samples / sec: 1000.46
Iteration:   6580, Loss function: 4.825, Average Loss: 4.744, avg. samples / sec: 1020.60
Iteration:   6600, Loss function: 4.857, Average Loss: 4.741, avg. samples / sec: 992.92
Iteration:   6620, Loss function: 4.679, Average Loss: 4.739, avg. samples / sec: 993.53
Iteration:   6640, Loss function: 4.282, Average Loss: 4.735, avg. samples / sec: 1033.60
Iteration:   6660, Loss function: 4.779, Average Loss: 4.733, avg. samples / sec: 972.71
Iteration:   6680, Loss function: 4.605, Average Loss: 4.732, avg. samples / sec: 927.64
Iteration:   6700, Loss function: 4.441, Average Loss: 4.727, avg. samples / sec: 1054.94
Iteration:   6720, Loss function: 4.583, Average Loss: 4.726, avg. samples / sec: 982.47
Iteration:   6740, Loss function: 4.378, Average Loss: 4.725, avg. samples / sec: 900.63
Iteration:   6760, Loss function: 4.698, Average Loss: 4.722, avg. samples / sec: 1020.65
Iteration:   6780, Loss function: 4.631, Average Loss: 4.720, avg. samples / sec: 986.66
Iteration:   6800, Loss function: 4.425, Average Loss: 4.716, avg. samples / sec: 968.99
Iteration:   6820, Loss function: 4.687, Average Loss: 4.713, avg. samples / sec: 1002.55
Iteration:   6840, Loss function: 4.539, Average Loss: 4.711, avg. samples / sec: 969.86
Iteration:   6860, Loss function: 4.520, Average Loss: 4.709, avg. samples / sec: 983.28
Iteration:   6880, Loss function: 4.446, Average Loss: 4.706, avg. samples / sec: 963.73
Iteration:   6900, Loss function: 4.669, Average Loss: 4.704, avg. samples / sec: 1026.23
Iteration:   6920, Loss function: 4.787, Average Loss: 4.702, avg. samples / sec: 984.04
Iteration:   6940, Loss function: 4.233, Average Loss: 4.699, avg. samples / sec: 935.20
Iteration:   6960, Loss function: 4.306, Average Loss: 4.696, avg. samples / sec: 1014.41
Iteration:   6980, Loss function: 4.228, Average Loss: 4.695, avg. samples / sec: 1016.06
Iteration:   7000, Loss function: 4.392, Average Loss: 4.692, avg. samples / sec: 971.62
Iteration:   7020, Loss function: 4.672, Average Loss: 4.689, avg. samples / sec: 999.60
Iteration:   7040, Loss function: 4.820, Average Loss: 4.687, avg. samples / sec: 990.57
Iteration:   7060, Loss function: 4.718, Average Loss: 4.684, avg. samples / sec: 965.51
Iteration:   7080, Loss function: 4.685, Average Loss: 4.682, avg. samples / sec: 1071.99
Iteration:   7100, Loss function: 4.424, Average Loss: 4.682, avg. samples / sec: 1012.27
Iteration:   7120, Loss function: 4.592, Average Loss: 4.680, avg. samples / sec: 981.15
Iteration:   7140, Loss function: 4.634, Average Loss: 4.678, avg. samples / sec: 919.53
Iteration:   7160, Loss function: 4.487, Average Loss: 4.675, avg. samples / sec: 1050.84
Iteration:   7180, Loss function: 4.860, Average Loss: 4.673, avg. samples / sec: 1056.82
Iteration:   7200, Loss function: 4.550, Average Loss: 4.672, avg. samples / sec: 1032.97
:::MLLOG {"namespace": "", "time_ms": 1639473054296, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639473054299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.694, Average Loss: 4.668, avg. samples / sec: 976.88
Iteration:   7240, Loss function: 4.487, Average Loss: 4.665, avg. samples / sec: 1034.97
Iteration:   7260, Loss function: 4.750, Average Loss: 4.663, avg. samples / sec: 1048.55
Iteration:   7280, Loss function: 4.683, Average Loss: 4.660, avg. samples / sec: 956.11
Iteration:   7300, Loss function: 4.706, Average Loss: 4.657, avg. samples / sec: 993.38
Iteration:   7320, Loss function: 4.520, Average Loss: 4.655, avg. samples / sec: 937.26
Iteration:   7340, Loss function: 4.489, Average Loss: 4.652, avg. samples / sec: 993.58
Iteration:   7360, Loss function: 4.332, Average Loss: 4.651, avg. samples / sec: 983.49
Iteration:   7380, Loss function: 4.618, Average Loss: 4.648, avg. samples / sec: 1020.75
Iteration:   7400, Loss function: 4.598, Average Loss: 4.646, avg. samples / sec: 1066.40
Iteration:   7420, Loss function: 4.715, Average Loss: 4.644, avg. samples / sec: 1076.49
Iteration:   7440, Loss function: 4.535, Average Loss: 4.643, avg. samples / sec: 1014.69
Iteration:   7460, Loss function: 4.569, Average Loss: 4.640, avg. samples / sec: 1067.42
Iteration:   7480, Loss function: 4.652, Average Loss: 4.637, avg. samples / sec: 1015.53
Iteration:   7500, Loss function: 4.469, Average Loss: 4.634, avg. samples / sec: 989.52
Iteration:   7520, Loss function: 4.441, Average Loss: 4.630, avg. samples / sec: 1068.35
Iteration:   7540, Loss function: 4.649, Average Loss: 4.629, avg. samples / sec: 1072.58
Iteration:   7560, Loss function: 4.608, Average Loss: 4.629, avg. samples / sec: 942.84
Iteration:   7580, Loss function: 4.425, Average Loss: 4.625, avg. samples / sec: 965.19
Iteration:   7600, Loss function: 4.786, Average Loss: 4.622, avg. samples / sec: 968.88
Iteration:   7620, Loss function: 4.362, Average Loss: 4.620, avg. samples / sec: 1027.53
Iteration:   7640, Loss function: 4.348, Average Loss: 4.617, avg. samples / sec: 1042.35
Iteration:   7660, Loss function: 4.430, Average Loss: 4.616, avg. samples / sec: 1028.30
Iteration:   7680, Loss function: 4.540, Average Loss: 4.613, avg. samples / sec: 1054.65
Iteration:   7700, Loss function: 4.392, Average Loss: 4.611, avg. samples / sec: 1030.72
Iteration:   7720, Loss function: 4.376, Average Loss: 4.608, avg. samples / sec: 1032.13
Iteration:   7740, Loss function: 4.354, Average Loss: 4.605, avg. samples / sec: 1048.16
Iteration:   7760, Loss function: 4.570, Average Loss: 4.603, avg. samples / sec: 1011.41
Iteration:   7780, Loss function: 4.728, Average Loss: 4.602, avg. samples / sec: 949.37
Iteration:   7800, Loss function: 4.614, Average Loss: 4.601, avg. samples / sec: 1037.78
Iteration:   7820, Loss function: 4.248, Average Loss: 4.600, avg. samples / sec: 1041.95
Iteration:   7840, Loss function: 4.282, Average Loss: 4.598, avg. samples / sec: 1022.08
Iteration:   7860, Loss function: 4.434, Average Loss: 4.597, avg. samples / sec: 959.66
Iteration:   7880, Loss function: 4.500, Average Loss: 4.596, avg. samples / sec: 1040.80
Iteration:   7900, Loss function: 4.650, Average Loss: 4.595, avg. samples / sec: 1003.67
Iteration:   7920, Loss function: 4.469, Average Loss: 4.595, avg. samples / sec: 993.43
Iteration:   7940, Loss function: 4.698, Average Loss: 4.592, avg. samples / sec: 984.77
Iteration:   7960, Loss function: 4.235, Average Loss: 4.590, avg. samples / sec: 942.66
Iteration:   7980, Loss function: 4.603, Average Loss: 4.589, avg. samples / sec: 1040.58
Iteration:   8000, Loss function: 4.583, Average Loss: 4.588, avg. samples / sec: 1002.73
Iteration:   8020, Loss function: 4.625, Average Loss: 4.586, avg. samples / sec: 991.32
Iteration:   8040, Loss function: 4.626, Average Loss: 4.585, avg. samples / sec: 934.68
Iteration:   8060, Loss function: 4.878, Average Loss: 4.585, avg. samples / sec: 977.16
Iteration:   8080, Loss function: 4.467, Average Loss: 4.583, avg. samples / sec: 971.77
Iteration:   8100, Loss function: 4.902, Average Loss: 4.583, avg. samples / sec: 1102.77
Iteration:   8120, Loss function: 4.593, Average Loss: 4.581, avg. samples / sec: 1003.43
Iteration:   8140, Loss function: 4.208, Average Loss: 4.579, avg. samples / sec: 1005.30
Iteration:   8160, Loss function: 4.374, Average Loss: 4.578, avg. samples / sec: 1028.38
Iteration:   8180, Loss function: 4.733, Average Loss: 4.577, avg. samples / sec: 945.90
Iteration:   8200, Loss function: 4.427, Average Loss: 4.578, avg. samples / sec: 1079.13
Iteration:   8220, Loss function: 4.937, Average Loss: 4.576, avg. samples / sec: 985.80
:::MLLOG {"namespace": "", "time_ms": 1639473170699, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639473170701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.368, Average Loss: 4.573, avg. samples / sec: 955.70
Iteration:   8260, Loss function: 4.314, Average Loss: 4.570, avg. samples / sec: 931.83
Iteration:   8280, Loss function: 4.533, Average Loss: 4.568, avg. samples / sec: 989.72
Iteration:   8300, Loss function: 4.179, Average Loss: 4.565, avg. samples / sec: 1078.55
Iteration:   8320, Loss function: 4.764, Average Loss: 4.561, avg. samples / sec: 1066.42
Iteration:   8340, Loss function: 4.522, Average Loss: 4.558, avg. samples / sec: 1000.52
Iteration:   8360, Loss function: 4.178, Average Loss: 4.555, avg. samples / sec: 1047.55
Iteration:   8380, Loss function: 4.726, Average Loss: 4.553, avg. samples / sec: 1013.09
Iteration:   8400, Loss function: 4.540, Average Loss: 4.551, avg. samples / sec: 1028.92
Iteration:   8420, Loss function: 4.577, Average Loss: 4.549, avg. samples / sec: 1006.41
Iteration:   8440, Loss function: 4.736, Average Loss: 4.548, avg. samples / sec: 1011.11
Iteration:   8460, Loss function: 4.664, Average Loss: 4.547, avg. samples / sec: 963.03
Iteration:   8480, Loss function: 4.456, Average Loss: 4.544, avg. samples / sec: 996.58
Iteration:   8500, Loss function: 4.150, Average Loss: 4.542, avg. samples / sec: 1017.36
Iteration:   8520, Loss function: 4.249, Average Loss: 4.538, avg. samples / sec: 998.22
Iteration:   8540, Loss function: 4.507, Average Loss: 4.536, avg. samples / sec: 1024.36
Iteration:   8560, Loss function: 4.577, Average Loss: 4.534, avg. samples / sec: 1013.82
Iteration:   8580, Loss function: 4.647, Average Loss: 4.532, avg. samples / sec: 1067.73
Iteration:   8600, Loss function: 4.449, Average Loss: 4.530, avg. samples / sec: 951.92
Iteration:   8620, Loss function: 4.284, Average Loss: 4.529, avg. samples / sec: 1047.93
Iteration:   8640, Loss function: 4.366, Average Loss: 4.528, avg. samples / sec: 1026.93
Iteration:   8660, Loss function: 4.349, Average Loss: 4.527, avg. samples / sec: 902.47
Iteration:   8680, Loss function: 4.489, Average Loss: 4.526, avg. samples / sec: 1009.43
Iteration:   8700, Loss function: 4.651, Average Loss: 4.525, avg. samples / sec: 1046.12
Iteration:   8720, Loss function: 4.272, Average Loss: 4.523, avg. samples / sec: 1081.26
Iteration:   8740, Loss function: 4.326, Average Loss: 4.520, avg. samples / sec: 1003.86
Iteration:   8760, Loss function: 4.527, Average Loss: 4.521, avg. samples / sec: 982.81
Iteration:   8780, Loss function: 4.285, Average Loss: 4.519, avg. samples / sec: 1014.17
Iteration:   8800, Loss function: 4.595, Average Loss: 4.518, avg. samples / sec: 1036.42
Iteration:   8820, Loss function: 4.247, Average Loss: 4.515, avg. samples / sec: 1031.13
Iteration:   8840, Loss function: 4.496, Average Loss: 4.512, avg. samples / sec: 998.51
Iteration:   8860, Loss function: 4.769, Average Loss: 4.511, avg. samples / sec: 1005.19
Iteration:   8880, Loss function: 4.566, Average Loss: 4.509, avg. samples / sec: 1041.44
Iteration:   8900, Loss function: 4.584, Average Loss: 4.508, avg. samples / sec: 1100.79
Iteration:   8920, Loss function: 4.532, Average Loss: 4.506, avg. samples / sec: 1061.27
Iteration:   8940, Loss function: 4.439, Average Loss: 4.505, avg. samples / sec: 1021.19
Iteration:   8960, Loss function: 4.418, Average Loss: 4.503, avg. samples / sec: 954.30
Iteration:   8980, Loss function: 4.323, Average Loss: 4.502, avg. samples / sec: 1001.81
Iteration:   9000, Loss function: 4.375, Average Loss: 4.500, avg. samples / sec: 1026.77
Iteration:   9020, Loss function: 4.759, Average Loss: 4.499, avg. samples / sec: 999.92
Iteration:   9040, Loss function: 4.453, Average Loss: 4.499, avg. samples / sec: 951.02
Iteration:   9060, Loss function: 4.091, Average Loss: 4.497, avg. samples / sec: 1009.16
Iteration:   9080, Loss function: 4.685, Average Loss: 4.496, avg. samples / sec: 1054.21
Iteration:   9100, Loss function: 4.356, Average Loss: 4.494, avg. samples / sec: 998.47
Iteration:   9120, Loss function: 4.293, Average Loss: 4.492, avg. samples / sec: 968.79
Iteration:   9140, Loss function: 4.247, Average Loss: 4.491, avg. samples / sec: 974.17
Iteration:   9160, Loss function: 4.365, Average Loss: 4.490, avg. samples / sec: 1017.46
Iteration:   9180, Loss function: 4.222, Average Loss: 4.489, avg. samples / sec: 942.88
Iteration:   9200, Loss function: 4.520, Average Loss: 4.489, avg. samples / sec: 992.01
Iteration:   9220, Loss function: 4.273, Average Loss: 4.489, avg. samples / sec: 1020.36
Iteration:   9240, Loss function: 4.412, Average Loss: 4.488, avg. samples / sec: 970.97
:::MLLOG {"namespace": "", "time_ms": 1639473287060, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639473287061, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.381, Average Loss: 4.486, avg. samples / sec: 984.32
Iteration:   9280, Loss function: 4.310, Average Loss: 4.484, avg. samples / sec: 958.54
Iteration:   9300, Loss function: 4.345, Average Loss: 4.480, avg. samples / sec: 987.80
Iteration:   9320, Loss function: 4.263, Average Loss: 4.478, avg. samples / sec: 1002.63
Iteration:   9340, Loss function: 4.743, Average Loss: 4.476, avg. samples / sec: 978.33
Iteration:   9360, Loss function: 4.308, Average Loss: 4.473, avg. samples / sec: 954.91
Iteration:   9380, Loss function: 4.359, Average Loss: 4.471, avg. samples / sec: 1042.46
Iteration:   9400, Loss function: 4.349, Average Loss: 4.469, avg. samples / sec: 1034.69
Iteration:   9420, Loss function: 4.464, Average Loss: 4.467, avg. samples / sec: 1039.21
Iteration:   9440, Loss function: 4.513, Average Loss: 4.465, avg. samples / sec: 928.43
Iteration:   9460, Loss function: 4.189, Average Loss: 4.465, avg. samples / sec: 986.91
Iteration:   9480, Loss function: 4.511, Average Loss: 4.462, avg. samples / sec: 980.50
Iteration:   9500, Loss function: 4.698, Average Loss: 4.461, avg. samples / sec: 1002.45
Iteration:   9520, Loss function: 4.392, Average Loss: 4.458, avg. samples / sec: 1017.64
Iteration:   9540, Loss function: 4.210, Average Loss: 4.455, avg. samples / sec: 1025.73
Iteration:   9560, Loss function: 4.246, Average Loss: 4.453, avg. samples / sec: 1017.85
Iteration:   9580, Loss function: 4.339, Average Loss: 4.453, avg. samples / sec: 978.29
Iteration:   9600, Loss function: 4.084, Average Loss: 4.452, avg. samples / sec: 1065.02
Iteration:   9620, Loss function: 4.336, Average Loss: 4.451, avg. samples / sec: 955.95
Iteration:   9640, Loss function: 4.353, Average Loss: 4.450, avg. samples / sec: 1031.96
Iteration:   9660, Loss function: 4.288, Average Loss: 4.449, avg. samples / sec: 947.95
Iteration:   9680, Loss function: 4.436, Average Loss: 4.448, avg. samples / sec: 1006.37
Iteration:   9700, Loss function: 4.548, Average Loss: 4.446, avg. samples / sec: 1033.50
Iteration:   9720, Loss function: 4.418, Average Loss: 4.444, avg. samples / sec: 1032.28
Iteration:   9740, Loss function: 4.463, Average Loss: 4.443, avg. samples / sec: 1008.87
Iteration:   9760, Loss function: 4.069, Average Loss: 4.442, avg. samples / sec: 980.74
Iteration:   9780, Loss function: 4.382, Average Loss: 4.441, avg. samples / sec: 1056.20
Iteration:   9800, Loss function: 4.390, Average Loss: 4.440, avg. samples / sec: 964.05
Iteration:   9820, Loss function: 4.134, Average Loss: 4.438, avg. samples / sec: 1022.92
Iteration:   9840, Loss function: 4.248, Average Loss: 4.436, avg. samples / sec: 1009.35
Iteration:   9860, Loss function: 4.424, Average Loss: 4.434, avg. samples / sec: 964.70
Iteration:   9880, Loss function: 4.351, Average Loss: 4.433, avg. samples / sec: 1044.25
Iteration:   9900, Loss function: 4.670, Average Loss: 4.432, avg. samples / sec: 978.27
Iteration:   9920, Loss function: 4.844, Average Loss: 4.431, avg. samples / sec: 1014.98
Iteration:   9940, Loss function: 4.186, Average Loss: 4.429, avg. samples / sec: 984.39
Iteration:   9960, Loss function: 4.718, Average Loss: 4.429, avg. samples / sec: 1021.15
Iteration:   9980, Loss function: 4.509, Average Loss: 4.428, avg. samples / sec: 1025.21
Iteration:  10000, Loss function: 4.046, Average Loss: 4.425, avg. samples / sec: 1062.01
Iteration:  10020, Loss function: 4.336, Average Loss: 4.424, avg. samples / sec: 1006.22
Iteration:  10040, Loss function: 4.402, Average Loss: 4.422, avg. samples / sec: 1007.48
Iteration:  10060, Loss function: 4.124, Average Loss: 4.420, avg. samples / sec: 989.41
Iteration:  10080, Loss function: 4.533, Average Loss: 4.418, avg. samples / sec: 989.32
Iteration:  10100, Loss function: 4.052, Average Loss: 4.418, avg. samples / sec: 1052.58
Iteration:  10120, Loss function: 4.232, Average Loss: 4.417, avg. samples / sec: 884.39
Iteration:  10140, Loss function: 4.435, Average Loss: 4.415, avg. samples / sec: 1029.46
Iteration:  10160, Loss function: 4.397, Average Loss: 4.414, avg. samples / sec: 910.00
Iteration:  10180, Loss function: 4.633, Average Loss: 4.413, avg. samples / sec: 996.52
Iteration:  10200, Loss function: 4.034, Average Loss: 4.411, avg. samples / sec: 999.75
Iteration:  10220, Loss function: 4.509, Average Loss: 4.410, avg. samples / sec: 1052.04
Iteration:  10240, Loss function: 4.383, Average Loss: 4.409, avg. samples / sec: 1026.78
Iteration:  10260, Loss function: 4.129, Average Loss: 4.408, avg. samples / sec: 995.00
Iteration:  10280, Loss function: 4.505, Average Loss: 4.407, avg. samples / sec: 1076.30
:::MLLOG {"namespace": "", "time_ms": 1639473404235, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639473404236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Iteration:  10300, Loss function: 4.671, Average Loss: 4.406, avg. samples / sec: 961.66
Iteration:  10320, Loss function: 4.411, Average Loss: 4.406, avg. samples / sec: 1041.29
Iteration:  10340, Loss function: 4.152, Average Loss: 4.402, avg. samples / sec: 1078.92
Iteration:  10360, Loss function: 4.132, Average Loss: 4.401, avg. samples / sec: 986.97
Iteration:  10380, Loss function: 4.246, Average Loss: 4.398, avg. samples / sec: 1016.37
Iteration:  10400, Loss function: 4.165, Average Loss: 4.395, avg. samples / sec: 939.79
Iteration:  10420, Loss function: 3.863, Average Loss: 4.393, avg. samples / sec: 969.57
Iteration:  10440, Loss function: 4.447, Average Loss: 4.391, avg. samples / sec: 1020.23
Iteration:  10460, Loss function: 4.390, Average Loss: 4.390, avg. samples / sec: 1026.48
Iteration:  10480, Loss function: 4.363, Average Loss: 4.389, avg. samples / sec: 969.26
Iteration:  10500, Loss function: 4.227, Average Loss: 4.388, avg. samples / sec: 1055.97
Iteration:  10520, Loss function: 4.472, Average Loss: 4.386, avg. samples / sec: 1004.44
Iteration:  10540, Loss function: 4.159, Average Loss: 4.384, avg. samples / sec: 1043.40
Iteration:  10560, Loss function: 4.193, Average Loss: 4.382, avg. samples / sec: 1014.47
Iteration:  10580, Loss function: 4.185, Average Loss: 4.381, avg. samples / sec: 1029.65
Iteration:  10600, Loss function: 4.101, Average Loss: 4.380, avg. samples / sec: 1026.90
Iteration:  10620, Loss function: 4.297, Average Loss: 4.379, avg. samples / sec: 1000.38
Iteration:  10640, Loss function: 4.125, Average Loss: 4.378, avg. samples / sec: 981.75
Iteration:  10660, Loss function: 4.826, Average Loss: 4.378, avg. samples / sec: 980.08
Iteration:  10680, Loss function: 4.290, Average Loss: 4.377, avg. samples / sec: 998.72
Iteration:  10700, Loss function: 4.055, Average Loss: 4.377, avg. samples / sec: 987.36
Iteration:  10720, Loss function: 4.548, Average Loss: 4.375, avg. samples / sec: 945.05
Iteration:  10740, Loss function: 4.309, Average Loss: 4.374, avg. samples / sec: 976.63
Iteration:  10760, Loss function: 4.324, Average Loss: 4.372, avg. samples / sec: 1002.81
Iteration:  10780, Loss function: 4.644, Average Loss: 4.372, avg. samples / sec: 999.07
Iteration:  10800, Loss function: 4.206, Average Loss: 4.372, avg. samples / sec: 979.21
Iteration:  10820, Loss function: 4.300, Average Loss: 4.372, avg. samples / sec: 1054.58
Iteration:  10840, Loss function: 4.180, Average Loss: 4.370, avg. samples / sec: 1032.96
Iteration:  10860, Loss function: 4.380, Average Loss: 4.369, avg. samples / sec: 998.48
Iteration:  10880, Loss function: 4.529, Average Loss: 4.367, avg. samples / sec: 980.26
Iteration:  10900, Loss function: 4.088, Average Loss: 4.365, avg. samples / sec: 1018.40
Iteration:  10920, Loss function: 4.308, Average Loss: 4.364, avg. samples / sec: 1004.98
Iteration:  10940, Loss function: 4.192, Average Loss: 4.362, avg. samples / sec: 1060.47
Iteration:  10960, Loss function: 4.427, Average Loss: 4.361, avg. samples / sec: 997.64
Iteration:  10980, Loss function: 4.326, Average Loss: 4.361, avg. samples / sec: 977.01
Iteration:  11000, Loss function: 4.730, Average Loss: 4.360, avg. samples / sec: 1062.06
Iteration:  11020, Loss function: 3.964, Average Loss: 4.358, avg. samples / sec: 1027.14
Iteration:  11040, Loss function: 4.290, Average Loss: 4.359, avg. samples / sec: 1025.32
Iteration:  11060, Loss function: 4.435, Average Loss: 4.357, avg. samples / sec: 1050.03
Iteration:  11080, Loss function: 4.204, Average Loss: 4.356, avg. samples / sec: 1012.35
Iteration:  11100, Loss function: 4.210, Average Loss: 4.355, avg. samples / sec: 995.41
Iteration:  11120, Loss function: 4.357, Average Loss: 4.355, avg. samples / sec: 1070.97
Iteration:  11140, Loss function: 4.416, Average Loss: 4.355, avg. samples / sec: 1006.44
Iteration:  11160, Loss function: 4.160, Average Loss: 4.355, avg. samples / sec: 962.48
Iteration:  11180, Loss function: 4.330, Average Loss: 4.353, avg. samples / sec: 1045.36
Iteration:  11200, Loss function: 4.068, Average Loss: 4.352, avg. samples / sec: 950.78
Iteration:  11220, Loss function: 4.655, Average Loss: 4.351, avg. samples / sec: 1020.86
Iteration:  11240, Loss function: 4.526, Average Loss: 4.352, avg. samples / sec: 969.71
Iteration:  11260, Loss function: 4.318, Average Loss: 4.352, avg. samples / sec: 1006.86
Iteration:  11280, Loss function: 4.589, Average Loss: 4.351, avg. samples / sec: 932.52
Iteration:  11300, Loss function: 4.230, Average Loss: 4.351, avg. samples / sec: 939.14
:::MLLOG {"namespace": "", "time_ms": 1639473521239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1639473521241, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 12, "current_iter_num": 11316}}
Iteration:  11320, Loss function: 4.181, Average Loss: 4.350, avg. samples / sec: 964.50
Iteration:  11340, Loss function: 4.413, Average Loss: 4.347, avg. samples / sec: 1029.62
Iteration:  11360, Loss function: 4.103, Average Loss: 4.345, avg. samples / sec: 986.30
Iteration:  11380, Loss function: 4.710, Average Loss: 4.344, avg. samples / sec: 1025.78
Iteration:  11400, Loss function: 4.299, Average Loss: 4.343, avg. samples / sec: 1014.83
Iteration:  11420, Loss function: 4.363, Average Loss: 4.343, avg. samples / sec: 970.12
Iteration:  11440, Loss function: 4.322, Average Loss: 4.342, avg. samples / sec: 1056.03
Iteration:  11460, Loss function: 4.188, Average Loss: 4.340, avg. samples / sec: 1092.90
Iteration:  11480, Loss function: 4.460, Average Loss: 4.339, avg. samples / sec: 1022.90
Iteration:  11500, Loss function: 4.480, Average Loss: 4.338, avg. samples / sec: 1017.48
Iteration:  11520, Loss function: 4.359, Average Loss: 4.336, avg. samples / sec: 1008.40
Iteration:  11540, Loss function: 4.274, Average Loss: 4.338, avg. samples / sec: 1014.33
Iteration:  11560, Loss function: 4.128, Average Loss: 4.338, avg. samples / sec: 1004.73
Iteration:  11580, Loss function: 4.215, Average Loss: 4.337, avg. samples / sec: 901.60
Iteration:  11600, Loss function: 4.413, Average Loss: 4.337, avg. samples / sec: 1001.23
Iteration:  11620, Loss function: 4.390, Average Loss: 4.337, avg. samples / sec: 965.71
Iteration:  11640, Loss function: 4.429, Average Loss: 4.335, avg. samples / sec: 937.49
Iteration:  11660, Loss function: 4.276, Average Loss: 4.335, avg. samples / sec: 989.83
Iteration:  11680, Loss function: 4.223, Average Loss: 4.333, avg. samples / sec: 939.77
Iteration:  11700, Loss function: 4.188, Average Loss: 4.331, avg. samples / sec: 1062.06
Iteration:  11720, Loss function: 4.142, Average Loss: 4.330, avg. samples / sec: 1020.69
Iteration:  11740, Loss function: 4.361, Average Loss: 4.328, avg. samples / sec: 963.66
Iteration:  11760, Loss function: 4.252, Average Loss: 4.326, avg. samples / sec: 958.97
Iteration:  11780, Loss function: 4.379, Average Loss: 4.325, avg. samples / sec: 1040.69
Iteration:  11800, Loss function: 4.295, Average Loss: 4.322, avg. samples / sec: 1009.35
Iteration:  11820, Loss function: 4.261, Average Loss: 4.322, avg. samples / sec: 1051.64
Iteration:  11840, Loss function: 4.733, Average Loss: 4.320, avg. samples / sec: 1035.75
Iteration:  11860, Loss function: 4.656, Average Loss: 4.320, avg. samples / sec: 1055.36
Iteration:  11880, Loss function: 4.130, Average Loss: 4.318, avg. samples / sec: 1030.94
Iteration:  11900, Loss function: 4.486, Average Loss: 4.317, avg. samples / sec: 1062.28
Iteration:  11920, Loss function: 4.056, Average Loss: 4.315, avg. samples / sec: 1063.72
Iteration:  11940, Loss function: 4.415, Average Loss: 4.314, avg. samples / sec: 1051.79
Iteration:  11960, Loss function: 4.096, Average Loss: 4.313, avg. samples / sec: 1005.54
Iteration:  11980, Loss function: 4.418, Average Loss: 4.312, avg. samples / sec: 982.25
Iteration:  12000, Loss function: 4.274, Average Loss: 4.310, avg. samples / sec: 1060.03
Iteration:  12020, Loss function: 4.353, Average Loss: 4.310, avg. samples / sec: 1030.06
Iteration:  12040, Loss function: 4.401, Average Loss: 4.310, avg. samples / sec: 960.10
Iteration:  12060, Loss function: 4.213, Average Loss: 4.307, avg. samples / sec: 970.77
Iteration:  12080, Loss function: 4.143, Average Loss: 4.307, avg. samples / sec: 994.10
Iteration:  12100, Loss function: 4.113, Average Loss: 4.304, avg. samples / sec: 1006.16
Iteration:  12120, Loss function: 4.329, Average Loss: 4.304, avg. samples / sec: 1019.00
Iteration:  12140, Loss function: 4.249, Average Loss: 4.303, avg. samples / sec: 1015.82
Iteration:  12160, Loss function: 4.034, Average Loss: 4.299, avg. samples / sec: 957.62
Iteration:  12180, Loss function: 4.087, Average Loss: 4.300, avg. samples / sec: 993.96
Iteration:  12200, Loss function: 4.057, Average Loss: 4.299, avg. samples / sec: 1013.61
Iteration:  12220, Loss function: 4.242, Average Loss: 4.298, avg. samples / sec: 988.59
Iteration:  12240, Loss function: 4.176, Average Loss: 4.298, avg. samples / sec: 1073.54
Iteration:  12260, Loss function: 4.096, Average Loss: 4.297, avg. samples / sec: 1041.10
Iteration:  12280, Loss function: 4.312, Average Loss: 4.295, avg. samples / sec: 1075.85
Iteration:  12300, Loss function: 4.261, Average Loss: 4.296, avg. samples / sec: 1027.25
Iteration:  12320, Loss function: 4.228, Average Loss: 4.295, avg. samples / sec: 972.65
Iteration:  12340, Loss function: 4.066, Average Loss: 4.294, avg. samples / sec: 989.61
:::MLLOG {"namespace": "", "time_ms": 1639473637344, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1639473637346, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 13, "current_iter_num": 12344}}
Iteration:  12360, Loss function: 4.211, Average Loss: 4.292, avg. samples / sec: 1014.46
Iteration:  12380, Loss function: 4.628, Average Loss: 4.292, avg. samples / sec: 1008.49
Iteration:  12400, Loss function: 4.030, Average Loss: 4.290, avg. samples / sec: 1037.07
Iteration:  12420, Loss function: 4.284, Average Loss: 4.289, avg. samples / sec: 1000.89
Iteration:  12440, Loss function: 3.941, Average Loss: 4.288, avg. samples / sec: 989.23
Iteration:  12460, Loss function: 4.167, Average Loss: 4.285, avg. samples / sec: 948.15
Iteration:  12480, Loss function: 4.272, Average Loss: 4.283, avg. samples / sec: 980.79
Iteration:  12500, Loss function: 4.438, Average Loss: 4.281, avg. samples / sec: 980.32
Iteration:  12520, Loss function: 4.389, Average Loss: 4.280, avg. samples / sec: 994.41
Iteration:  12540, Loss function: 4.404, Average Loss: 4.279, avg. samples / sec: 1008.28
Iteration:  12560, Loss function: 4.295, Average Loss: 4.277, avg. samples / sec: 1059.05
Iteration:  12580, Loss function: 3.864, Average Loss: 4.274, avg. samples / sec: 1010.25
Iteration:  12600, Loss function: 4.339, Average Loss: 4.273, avg. samples / sec: 1068.77
Iteration:  12620, Loss function: 4.095, Average Loss: 4.271, avg. samples / sec: 971.61
Iteration:  12640, Loss function: 4.296, Average Loss: 4.271, avg. samples / sec: 965.11
Iteration:  12660, Loss function: 4.235, Average Loss: 4.269, avg. samples / sec: 1016.09
Iteration:  12680, Loss function: 3.863, Average Loss: 4.267, avg. samples / sec: 1041.57
Iteration:  12700, Loss function: 4.031, Average Loss: 4.266, avg. samples / sec: 961.21
Iteration:  12720, Loss function: 4.170, Average Loss: 4.264, avg. samples / sec: 1036.75
Iteration:  12740, Loss function: 3.757, Average Loss: 4.263, avg. samples / sec: 962.06
Iteration:  12760, Loss function: 4.115, Average Loss: 4.261, avg. samples / sec: 1017.94
Iteration:  12780, Loss function: 4.476, Average Loss: 4.262, avg. samples / sec: 995.06
Iteration:  12800, Loss function: 4.360, Average Loss: 4.260, avg. samples / sec: 953.17
Iteration:  12820, Loss function: 4.615, Average Loss: 4.261, avg. samples / sec: 951.63
Iteration:  12840, Loss function: 4.455, Average Loss: 4.263, avg. samples / sec: 1018.35
Iteration:  12860, Loss function: 4.196, Average Loss: 4.264, avg. samples / sec: 1045.36
Iteration:  12880, Loss function: 4.164, Average Loss: 4.264, avg. samples / sec: 955.80
Iteration:  12900, Loss function: 4.620, Average Loss: 4.262, avg. samples / sec: 1069.95
Iteration:  12920, Loss function: 4.405, Average Loss: 4.261, avg. samples / sec: 986.59
Iteration:  12940, Loss function: 4.181, Average Loss: 4.260, avg. samples / sec: 995.48
Iteration:  12960, Loss function: 4.408, Average Loss: 4.259, avg. samples / sec: 1062.53
Iteration:  12980, Loss function: 4.072, Average Loss: 4.258, avg. samples / sec: 995.99
Iteration:  13000, Loss function: 4.358, Average Loss: 4.258, avg. samples / sec: 964.13
Iteration:  13020, Loss function: 3.985, Average Loss: 4.257, avg. samples / sec: 991.41
Iteration:  13040, Loss function: 4.371, Average Loss: 4.255, avg. samples / sec: 1005.10
Iteration:  13060, Loss function: 4.235, Average Loss: 4.254, avg. samples / sec: 934.46
Iteration:  13080, Loss function: 4.032, Average Loss: 4.253, avg. samples / sec: 925.05
Iteration:  13100, Loss function: 4.304, Average Loss: 4.251, avg. samples / sec: 979.52
Iteration:  13120, Loss function: 4.310, Average Loss: 4.251, avg. samples / sec: 906.54
Iteration:  13140, Loss function: 4.471, Average Loss: 4.251, avg. samples / sec: 1064.41
Iteration:  13160, Loss function: 4.030, Average Loss: 4.249, avg. samples / sec: 959.55
Iteration:  13180, Loss function: 3.844, Average Loss: 4.248, avg. samples / sec: 1011.61
Iteration:  13200, Loss function: 4.408, Average Loss: 4.247, avg. samples / sec: 1058.63
Iteration:  13220, Loss function: 4.372, Average Loss: 4.247, avg. samples / sec: 1006.89
Iteration:  13240, Loss function: 4.153, Average Loss: 4.248, avg. samples / sec: 1040.00
Iteration:  13260, Loss function: 4.330, Average Loss: 4.248, avg. samples / sec: 981.13
Iteration:  13280, Loss function: 3.963, Average Loss: 4.246, avg. samples / sec: 988.08
Iteration:  13300, Loss function: 4.052, Average Loss: 4.246, avg. samples / sec: 1030.35
Iteration:  13320, Loss function: 4.211, Average Loss: 4.245, avg. samples / sec: 973.99
Iteration:  13340, Loss function: 4.231, Average Loss: 4.244, avg. samples / sec: 940.37
Iteration:  13360, Loss function: 4.055, Average Loss: 4.244, avg. samples / sec: 1004.78
:::MLLOG {"namespace": "", "time_ms": 1639473755146, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1639473755148, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 14, "current_iter_num": 13373}}
Iteration:  13380, Loss function: 4.113, Average Loss: 4.243, avg. samples / sec: 996.96
Iteration:  13400, Loss function: 3.921, Average Loss: 4.241, avg. samples / sec: 1027.68
Iteration:  13420, Loss function: 4.340, Average Loss: 4.239, avg. samples / sec: 1085.42
Iteration:  13440, Loss function: 4.375, Average Loss: 4.238, avg. samples / sec: 977.13
Iteration:  13460, Loss function: 4.454, Average Loss: 4.238, avg. samples / sec: 986.24
Iteration:  13480, Loss function: 4.161, Average Loss: 4.237, avg. samples / sec: 1028.39
Iteration:  13500, Loss function: 4.359, Average Loss: 4.236, avg. samples / sec: 961.92
Iteration:  13520, Loss function: 4.121, Average Loss: 4.234, avg. samples / sec: 1051.70
Iteration:  13540, Loss function: 4.084, Average Loss: 4.233, avg. samples / sec: 1079.47
Iteration:  13560, Loss function: 4.436, Average Loss: 4.233, avg. samples / sec: 990.32
Iteration:  13580, Loss function: 4.077, Average Loss: 4.231, avg. samples / sec: 901.26
Iteration:  13600, Loss function: 4.428, Average Loss: 4.230, avg. samples / sec: 1024.83
Iteration:  13620, Loss function: 4.074, Average Loss: 4.228, avg. samples / sec: 948.05
Iteration:  13640, Loss function: 4.080, Average Loss: 4.227, avg. samples / sec: 991.36
Iteration:  13660, Loss function: 3.963, Average Loss: 4.226, avg. samples / sec: 1044.81
Iteration:  13680, Loss function: 4.094, Average Loss: 4.225, avg. samples / sec: 962.06
Iteration:  13700, Loss function: 4.547, Average Loss: 4.225, avg. samples / sec: 985.43
Iteration:  13720, Loss function: 3.832, Average Loss: 4.224, avg. samples / sec: 1001.39
Iteration:  13740, Loss function: 4.045, Average Loss: 4.223, avg. samples / sec: 1051.35
Iteration:  13760, Loss function: 4.314, Average Loss: 4.221, avg. samples / sec: 936.45
Iteration:  13780, Loss function: 4.042, Average Loss: 4.220, avg. samples / sec: 1051.74
Iteration:  13800, Loss function: 4.362, Average Loss: 4.219, avg. samples / sec: 1041.42
Iteration:  13820, Loss function: 3.965, Average Loss: 4.219, avg. samples / sec: 997.69
Iteration:  13840, Loss function: 4.303, Average Loss: 4.218, avg. samples / sec: 1065.94
Iteration:  13860, Loss function: 4.377, Average Loss: 4.218, avg. samples / sec: 1048.90
Iteration:  13880, Loss function: 4.365, Average Loss: 4.217, avg. samples / sec: 992.26
Iteration:  13900, Loss function: 4.212, Average Loss: 4.217, avg. samples / sec: 1008.98
Iteration:  13920, Loss function: 3.977, Average Loss: 4.216, avg. samples / sec: 996.36
Iteration:  13940, Loss function: 4.020, Average Loss: 4.217, avg. samples / sec: 937.43
Iteration:  13960, Loss function: 4.405, Average Loss: 4.217, avg. samples / sec: 938.15
Iteration:  13980, Loss function: 3.978, Average Loss: 4.215, avg. samples / sec: 985.02
Iteration:  14000, Loss function: 4.364, Average Loss: 4.215, avg. samples / sec: 1031.56
Iteration:  14020, Loss function: 4.073, Average Loss: 4.215, avg. samples / sec: 1004.54
Iteration:  14040, Loss function: 4.324, Average Loss: 4.215, avg. samples / sec: 1012.67
Iteration:  14060, Loss function: 3.724, Average Loss: 4.212, avg. samples / sec: 1081.04
Iteration:  14080, Loss function: 4.229, Average Loss: 4.212, avg. samples / sec: 1029.88
Iteration:  14100, Loss function: 4.237, Average Loss: 4.212, avg. samples / sec: 1050.44
Iteration:  14120, Loss function: 4.154, Average Loss: 4.212, avg. samples / sec: 1002.52
Iteration:  14140, Loss function: 4.102, Average Loss: 4.210, avg. samples / sec: 995.25
Iteration:  14160, Loss function: 4.286, Average Loss: 4.209, avg. samples / sec: 1021.52
Iteration:  14180, Loss function: 4.142, Average Loss: 4.208, avg. samples / sec: 990.55
Iteration:  14200, Loss function: 4.435, Average Loss: 4.208, avg. samples / sec: 956.27
Iteration:  14220, Loss function: 4.254, Average Loss: 4.207, avg. samples / sec: 1031.99
Iteration:  14240, Loss function: 3.945, Average Loss: 4.206, avg. samples / sec: 927.41
Iteration:  14260, Loss function: 4.491, Average Loss: 4.207, avg. samples / sec: 1014.07
Iteration:  14280, Loss function: 3.988, Average Loss: 4.205, avg. samples / sec: 991.35
Iteration:  14300, Loss function: 4.328, Average Loss: 4.206, avg. samples / sec: 971.45
Iteration:  14320, Loss function: 4.189, Average Loss: 4.204, avg. samples / sec: 996.82
Iteration:  14340, Loss function: 4.193, Average Loss: 4.204, avg. samples / sec: 1023.91
Iteration:  14360, Loss function: 4.195, Average Loss: 4.203, avg. samples / sec: 978.92
Iteration:  14380, Loss function: 4.500, Average Loss: 4.204, avg. samples / sec: 950.32
Iteration:  14400, Loss function: 4.073, Average Loss: 4.203, avg. samples / sec: 951.57
:::MLLOG {"namespace": "", "time_ms": 1639473872444, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1639473872446, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 15, "current_iter_num": 14402}}
Iteration:  14420, Loss function: 4.216, Average Loss: 4.201, avg. samples / sec: 1117.46
Iteration:  14440, Loss function: 4.075, Average Loss: 4.198, avg. samples / sec: 1033.04
Iteration:  14460, Loss function: 4.085, Average Loss: 4.197, avg. samples / sec: 1026.12
Iteration:  14480, Loss function: 3.785, Average Loss: 4.195, avg. samples / sec: 999.43
Iteration:  14500, Loss function: 4.017, Average Loss: 4.194, avg. samples / sec: 1041.18
Iteration:  14520, Loss function: 4.216, Average Loss: 4.193, avg. samples / sec: 1027.52
Iteration:  14540, Loss function: 4.256, Average Loss: 4.192, avg. samples / sec: 1013.65
Iteration:  14560, Loss function: 4.103, Average Loss: 4.192, avg. samples / sec: 1084.75
Iteration:  14580, Loss function: 4.182, Average Loss: 4.190, avg. samples / sec: 1016.57
Iteration:  14600, Loss function: 4.073, Average Loss: 4.189, avg. samples / sec: 1057.61
Iteration:  14620, Loss function: 4.482, Average Loss: 4.189, avg. samples / sec: 1004.78
Iteration:  14640, Loss function: 4.057, Average Loss: 4.188, avg. samples / sec: 977.08
Iteration:  14660, Loss function: 3.682, Average Loss: 4.186, avg. samples / sec: 974.62
Iteration:  14680, Loss function: 4.143, Average Loss: 4.185, avg. samples / sec: 982.80
Iteration:  14700, Loss function: 4.180, Average Loss: 4.184, avg. samples / sec: 1014.85
Iteration:  14720, Loss function: 4.094, Average Loss: 4.184, avg. samples / sec: 1041.61
Iteration:  14740, Loss function: 4.220, Average Loss: 4.183, avg. samples / sec: 1012.81
Iteration:  14760, Loss function: 4.085, Average Loss: 4.183, avg. samples / sec: 1000.18
Iteration:  14780, Loss function: 4.397, Average Loss: 4.183, avg. samples / sec: 972.19
Iteration:  14800, Loss function: 4.089, Average Loss: 4.182, avg. samples / sec: 1021.69
Iteration:  14820, Loss function: 4.036, Average Loss: 4.181, avg. samples / sec: 996.97
Iteration:  14840, Loss function: 4.182, Average Loss: 4.180, avg. samples / sec: 992.46
Iteration:  14860, Loss function: 4.180, Average Loss: 4.179, avg. samples / sec: 1004.90
Iteration:  14880, Loss function: 4.089, Average Loss: 4.178, avg. samples / sec: 885.08
Iteration:  14900, Loss function: 4.132, Average Loss: 4.178, avg. samples / sec: 979.60
Iteration:  14920, Loss function: 4.163, Average Loss: 4.178, avg. samples / sec: 957.17
Iteration:  14940, Loss function: 4.063, Average Loss: 4.176, avg. samples / sec: 992.00
Iteration:  14960, Loss function: 3.928, Average Loss: 4.177, avg. samples / sec: 956.18
Iteration:  14980, Loss function: 4.245, Average Loss: 4.176, avg. samples / sec: 954.47
Iteration:  15000, Loss function: 4.271, Average Loss: 4.175, avg. samples / sec: 979.52
Iteration:  15020, Loss function: 3.946, Average Loss: 4.175, avg. samples / sec: 1012.20
Iteration:  15040, Loss function: 4.260, Average Loss: 4.175, avg. samples / sec: 971.57
Iteration:  15060, Loss function: 3.777, Average Loss: 4.174, avg. samples / sec: 1064.38
Iteration:  15080, Loss function: 4.218, Average Loss: 4.173, avg. samples / sec: 1022.18
Iteration:  15100, Loss function: 4.191, Average Loss: 4.172, avg. samples / sec: 967.28
Iteration:  15120, Loss function: 4.213, Average Loss: 4.171, avg. samples / sec: 992.13
Iteration:  15140, Loss function: 4.067, Average Loss: 4.171, avg. samples / sec: 998.21
Iteration:  15160, Loss function: 4.227, Average Loss: 4.171, avg. samples / sec: 1004.11
Iteration:  15180, Loss function: 3.955, Average Loss: 4.171, avg. samples / sec: 979.23
Iteration:  15200, Loss function: 4.035, Average Loss: 4.170, avg. samples / sec: 1042.41
Iteration:  15220, Loss function: 4.290, Average Loss: 4.170, avg. samples / sec: 1040.63
Iteration:  15240, Loss function: 4.119, Average Loss: 4.169, avg. samples / sec: 1057.28
Iteration:  15260, Loss function: 3.903, Average Loss: 4.168, avg. samples / sec: 1012.88
Iteration:  15280, Loss function: 4.052, Average Loss: 4.167, avg. samples / sec: 965.06
Iteration:  15300, Loss function: 4.197, Average Loss: 4.167, avg. samples / sec: 1045.06
Iteration:  15320, Loss function: 4.288, Average Loss: 4.165, avg. samples / sec: 899.01
Iteration:  15340, Loss function: 4.119, Average Loss: 4.165, avg. samples / sec: 952.14
Iteration:  15360, Loss function: 4.121, Average Loss: 4.164, avg. samples / sec: 983.31
Iteration:  15380, Loss function: 3.935, Average Loss: 4.163, avg. samples / sec: 976.80
Iteration:  15400, Loss function: 4.522, Average Loss: 4.163, avg. samples / sec: 968.72
Iteration:  15420, Loss function: 4.198, Average Loss: 4.163, avg. samples / sec: 1016.06
:::MLLOG {"namespace": "", "time_ms": 1639473989666, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1639473989668, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 16, "current_iter_num": 15430}}
Iteration:  15440, Loss function: 4.237, Average Loss: 4.162, avg. samples / sec: 1023.90
Iteration:  15460, Loss function: 4.200, Average Loss: 4.160, avg. samples / sec: 1050.09
Iteration:  15480, Loss function: 4.160, Average Loss: 4.160, avg. samples / sec: 963.34
Iteration:  15500, Loss function: 4.159, Average Loss: 4.158, avg. samples / sec: 1008.60
Iteration:  15520, Loss function: 3.928, Average Loss: 4.157, avg. samples / sec: 981.89
Iteration:  15540, Loss function: 4.557, Average Loss: 4.156, avg. samples / sec: 1020.60
Iteration:  15560, Loss function: 4.220, Average Loss: 4.156, avg. samples / sec: 985.11
Iteration:  15580, Loss function: 4.332, Average Loss: 4.155, avg. samples / sec: 931.68
Iteration:  15600, Loss function: 4.511, Average Loss: 4.154, avg. samples / sec: 952.44
Iteration:  15620, Loss function: 4.151, Average Loss: 4.153, avg. samples / sec: 1005.27
Iteration:  15640, Loss function: 4.114, Average Loss: 4.152, avg. samples / sec: 999.21
Iteration:  15660, Loss function: 4.046, Average Loss: 4.150, avg. samples / sec: 1004.17
Iteration:  15680, Loss function: 4.299, Average Loss: 4.150, avg. samples / sec: 994.50
Iteration:  15700, Loss function: 4.178, Average Loss: 4.150, avg. samples / sec: 1008.32
Iteration:  15720, Loss function: 3.807, Average Loss: 4.149, avg. samples / sec: 1010.26
Iteration:  15740, Loss function: 4.053, Average Loss: 4.146, avg. samples / sec: 1010.51
Iteration:  15760, Loss function: 3.674, Average Loss: 4.145, avg. samples / sec: 1027.80
Iteration:  15780, Loss function: 4.241, Average Loss: 4.145, avg. samples / sec: 989.11
Iteration:  15800, Loss function: 3.938, Average Loss: 4.143, avg. samples / sec: 1020.99
Iteration:  15820, Loss function: 4.379, Average Loss: 4.144, avg. samples / sec: 1058.03
Iteration:  15840, Loss function: 4.304, Average Loss: 4.142, avg. samples / sec: 999.27
Iteration:  15860, Loss function: 4.109, Average Loss: 4.141, avg. samples / sec: 937.00
Iteration:  15880, Loss function: 4.029, Average Loss: 4.139, avg. samples / sec: 992.08
Iteration:  15900, Loss function: 3.942, Average Loss: 4.138, avg. samples / sec: 1008.09
Iteration:  15920, Loss function: 4.168, Average Loss: 4.137, avg. samples / sec: 999.86
Iteration:  15940, Loss function: 4.015, Average Loss: 4.137, avg. samples / sec: 968.14
Iteration:  15960, Loss function: 3.870, Average Loss: 4.134, avg. samples / sec: 1000.51
Iteration:  15980, Loss function: 4.151, Average Loss: 4.133, avg. samples / sec: 1030.77
Iteration:  16000, Loss function: 4.005, Average Loss: 4.132, avg. samples / sec: 1022.74
Iteration:  16020, Loss function: 4.225, Average Loss: 4.130, avg. samples / sec: 948.24
Iteration:  16040, Loss function: 3.921, Average Loss: 4.129, avg. samples / sec: 1065.70
Iteration:  16060, Loss function: 3.955, Average Loss: 4.129, avg. samples / sec: 967.08
Iteration:  16080, Loss function: 3.939, Average Loss: 4.129, avg. samples / sec: 1048.77
Iteration:  16100, Loss function: 4.379, Average Loss: 4.129, avg. samples / sec: 1016.41
Iteration:  16120, Loss function: 4.344, Average Loss: 4.129, avg. samples / sec: 994.48
Iteration:  16140, Loss function: 3.933, Average Loss: 4.128, avg. samples / sec: 976.01
Iteration:  16160, Loss function: 4.145, Average Loss: 4.127, avg. samples / sec: 948.63
Iteration:  16180, Loss function: 4.090, Average Loss: 4.126, avg. samples / sec: 997.35
Iteration:  16200, Loss function: 3.942, Average Loss: 4.127, avg. samples / sec: 1020.47
Iteration:  16220, Loss function: 4.152, Average Loss: 4.128, avg. samples / sec: 981.45
Iteration:  16240, Loss function: 4.065, Average Loss: 4.127, avg. samples / sec: 989.80
Iteration:  16260, Loss function: 4.217, Average Loss: 4.126, avg. samples / sec: 1001.35
Iteration:  16280, Loss function: 4.361, Average Loss: 4.128, avg. samples / sec: 994.15
Iteration:  16300, Loss function: 4.138, Average Loss: 4.127, avg. samples / sec: 944.45
Iteration:  16320, Loss function: 4.434, Average Loss: 4.130, avg. samples / sec: 929.47
Iteration:  16340, Loss function: 4.134, Average Loss: 4.129, avg. samples / sec: 1028.38
Iteration:  16360, Loss function: 3.938, Average Loss: 4.127, avg. samples / sec: 1062.49
Iteration:  16380, Loss function: 3.996, Average Loss: 4.127, avg. samples / sec: 1057.09
Iteration:  16400, Loss function: 4.054, Average Loss: 4.127, avg. samples / sec: 1064.35
Iteration:  16420, Loss function: 3.790, Average Loss: 4.127, avg. samples / sec: 1093.09
Iteration:  16440, Loss function: 4.078, Average Loss: 4.127, avg. samples / sec: 952.01
:::MLLOG {"namespace": "", "time_ms": 1639474107053, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1639474107055, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 17, "current_iter_num": 16459}}
Iteration:  16460, Loss function: 4.262, Average Loss: 4.127, avg. samples / sec: 961.18
Iteration:  16480, Loss function: 3.968, Average Loss: 4.126, avg. samples / sec: 1039.98
Iteration:  16500, Loss function: 4.146, Average Loss: 4.125, avg. samples / sec: 997.58
Iteration:  16520, Loss function: 3.917, Average Loss: 4.124, avg. samples / sec: 1070.16
Iteration:  16540, Loss function: 4.012, Average Loss: 4.122, avg. samples / sec: 1013.93
Iteration:  16560, Loss function: 4.005, Average Loss: 4.120, avg. samples / sec: 980.33
Iteration:  16580, Loss function: 3.927, Average Loss: 4.118, avg. samples / sec: 1046.05
Iteration:  16600, Loss function: 4.163, Average Loss: 4.118, avg. samples / sec: 1028.14
Iteration:  16620, Loss function: 4.281, Average Loss: 4.118, avg. samples / sec: 1080.39
Iteration:  16640, Loss function: 4.152, Average Loss: 4.117, avg. samples / sec: 986.00
Iteration:  16660, Loss function: 4.431, Average Loss: 4.117, avg. samples / sec: 1032.09
Iteration:  16680, Loss function: 4.103, Average Loss: 4.115, avg. samples / sec: 1007.21
Iteration:  16700, Loss function: 4.065, Average Loss: 4.114, avg. samples / sec: 1013.42
Iteration:  16720, Loss function: 3.837, Average Loss: 4.114, avg. samples / sec: 993.42
Iteration:  16740, Loss function: 4.353, Average Loss: 4.113, avg. samples / sec: 966.43
Iteration:  16760, Loss function: 3.794, Average Loss: 4.110, avg. samples / sec: 1060.42
Iteration:  16780, Loss function: 3.985, Average Loss: 4.109, avg. samples / sec: 1017.47
Iteration:  16800, Loss function: 4.036, Average Loss: 4.108, avg. samples / sec: 989.13
Iteration:  16820, Loss function: 4.012, Average Loss: 4.106, avg. samples / sec: 1031.39
Iteration:  16840, Loss function: 4.229, Average Loss: 4.106, avg. samples / sec: 1057.58
Iteration:  16860, Loss function: 4.238, Average Loss: 4.106, avg. samples / sec: 1056.16
Iteration:  16880, Loss function: 3.825, Average Loss: 4.104, avg. samples / sec: 982.03
Iteration:  16900, Loss function: 4.273, Average Loss: 4.104, avg. samples / sec: 1054.68
Iteration:  16920, Loss function: 4.096, Average Loss: 4.103, avg. samples / sec: 1030.36
Iteration:  16940, Loss function: 4.050, Average Loss: 4.102, avg. samples / sec: 962.24
Iteration:  16960, Loss function: 4.271, Average Loss: 4.101, avg. samples / sec: 1070.94
Iteration:  16980, Loss function: 4.384, Average Loss: 4.101, avg. samples / sec: 1005.23
Iteration:  17000, Loss function: 4.313, Average Loss: 4.101, avg. samples / sec: 975.25
Iteration:  17020, Loss function: 4.342, Average Loss: 4.101, avg. samples / sec: 953.23
Iteration:  17040, Loss function: 4.064, Average Loss: 4.101, avg. samples / sec: 1013.50
Iteration:  17060, Loss function: 4.218, Average Loss: 4.102, avg. samples / sec: 995.51
Iteration:  17080, Loss function: 4.292, Average Loss: 4.102, avg. samples / sec: 990.04
Iteration:  17100, Loss function: 4.111, Average Loss: 4.102, avg. samples / sec: 959.37
Iteration:  17120, Loss function: 4.228, Average Loss: 4.099, avg. samples / sec: 1035.60
Iteration:  17140, Loss function: 3.959, Average Loss: 4.099, avg. samples / sec: 1079.60
Iteration:  17160, Loss function: 3.798, Average Loss: 4.098, avg. samples / sec: 1032.92
Iteration:  17180, Loss function: 4.190, Average Loss: 4.098, avg. samples / sec: 1060.22
Iteration:  17200, Loss function: 4.600, Average Loss: 4.100, avg. samples / sec: 972.54
Iteration:  17220, Loss function: 4.097, Average Loss: 4.099, avg. samples / sec: 970.65
Iteration:  17240, Loss function: 3.956, Average Loss: 4.097, avg. samples / sec: 1098.35
Iteration:  17260, Loss function: 4.374, Average Loss: 4.097, avg. samples / sec: 971.27
Iteration:  17280, Loss function: 4.408, Average Loss: 4.097, avg. samples / sec: 1038.86
Iteration:  17300, Loss function: 4.075, Average Loss: 4.096, avg. samples / sec: 980.72
Iteration:  17320, Loss function: 4.049, Average Loss: 4.096, avg. samples / sec: 988.34
Iteration:  17340, Loss function: 3.896, Average Loss: 4.096, avg. samples / sec: 965.23
Iteration:  17360, Loss function: 4.154, Average Loss: 4.096, avg. samples / sec: 967.00
Iteration:  17380, Loss function: 3.996, Average Loss: 4.096, avg. samples / sec: 1006.85
Iteration:  17400, Loss function: 3.997, Average Loss: 4.097, avg. samples / sec: 1033.48
Iteration:  17420, Loss function: 4.054, Average Loss: 4.096, avg. samples / sec: 1002.61
Iteration:  17440, Loss function: 3.927, Average Loss: 4.095, avg. samples / sec: 950.21
Iteration:  17460, Loss function: 4.507, Average Loss: 4.096, avg. samples / sec: 1015.35
Iteration:  17480, Loss function: 4.088, Average Loss: 4.095, avg. samples / sec: 1002.75
:::MLLOG {"namespace": "", "time_ms": 1639474223156, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1639474223158, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 18, "current_iter_num": 17488}}
Iteration:  17500, Loss function: 3.805, Average Loss: 4.094, avg. samples / sec: 989.79
Iteration:  17520, Loss function: 4.023, Average Loss: 4.094, avg. samples / sec: 1045.93
Iteration:  17540, Loss function: 4.087, Average Loss: 4.093, avg. samples / sec: 1033.47
Iteration:  17560, Loss function: 4.060, Average Loss: 4.092, avg. samples / sec: 992.23
Iteration:  17580, Loss function: 3.599, Average Loss: 4.091, avg. samples / sec: 979.01
Iteration:  17600, Loss function: 4.038, Average Loss: 4.090, avg. samples / sec: 1075.75
Iteration:  17620, Loss function: 3.858, Average Loss: 4.089, avg. samples / sec: 1025.83
Iteration:  17640, Loss function: 4.150, Average Loss: 4.088, avg. samples / sec: 1052.50
Iteration:  17660, Loss function: 4.152, Average Loss: 4.087, avg. samples / sec: 951.88
Iteration:  17680, Loss function: 3.822, Average Loss: 4.085, avg. samples / sec: 1078.20
Iteration:  17700, Loss function: 4.201, Average Loss: 4.084, avg. samples / sec: 1026.68
Iteration:  17720, Loss function: 3.708, Average Loss: 4.082, avg. samples / sec: 1046.59
Iteration:  17740, Loss function: 4.167, Average Loss: 4.081, avg. samples / sec: 1011.38
Iteration:  17760, Loss function: 4.004, Average Loss: 4.079, avg. samples / sec: 964.85
Iteration:  17780, Loss function: 4.345, Average Loss: 4.080, avg. samples / sec: 998.70
Iteration:  17800, Loss function: 3.968, Average Loss: 4.080, avg. samples / sec: 1050.30
Iteration:  17820, Loss function: 3.947, Average Loss: 4.080, avg. samples / sec: 1055.27
Iteration:  17840, Loss function: 3.882, Average Loss: 4.079, avg. samples / sec: 1021.91
Iteration:  17860, Loss function: 4.142, Average Loss: 4.079, avg. samples / sec: 1000.31
Iteration:  17880, Loss function: 4.042, Average Loss: 4.079, avg. samples / sec: 1037.98
Iteration:  17900, Loss function: 4.259, Average Loss: 4.078, avg. samples / sec: 997.49
Iteration:  17920, Loss function: 4.096, Average Loss: 4.075, avg. samples / sec: 980.62
Iteration:  17940, Loss function: 3.992, Average Loss: 4.074, avg. samples / sec: 987.18
Iteration:  17960, Loss function: 3.860, Average Loss: 4.073, avg. samples / sec: 1053.21
Iteration:  17980, Loss function: 4.091, Average Loss: 4.072, avg. samples / sec: 962.43
Iteration:  18000, Loss function: 4.012, Average Loss: 4.072, avg. samples / sec: 969.01
Iteration:  18020, Loss function: 4.128, Average Loss: 4.071, avg. samples / sec: 957.03
Iteration:  18040, Loss function: 4.486, Average Loss: 4.070, avg. samples / sec: 977.70
Iteration:  18060, Loss function: 4.279, Average Loss: 4.070, avg. samples / sec: 1053.52
Iteration:  18080, Loss function: 4.251, Average Loss: 4.070, avg. samples / sec: 1013.87
Iteration:  18100, Loss function: 3.916, Average Loss: 4.071, avg. samples / sec: 1034.13
Iteration:  18120, Loss function: 4.184, Average Loss: 4.071, avg. samples / sec: 1020.49
Iteration:  18140, Loss function: 4.279, Average Loss: 4.070, avg. samples / sec: 1046.29
Iteration:  18160, Loss function: 4.193, Average Loss: 4.072, avg. samples / sec: 1011.59
Iteration:  18180, Loss function: 3.870, Average Loss: 4.070, avg. samples / sec: 1005.66
Iteration:  18200, Loss function: 4.141, Average Loss: 4.069, avg. samples / sec: 1006.69
Iteration:  18220, Loss function: 4.046, Average Loss: 4.069, avg. samples / sec: 990.90
Iteration:  18240, Loss function: 3.756, Average Loss: 4.069, avg. samples / sec: 963.16
Iteration:  18260, Loss function: 3.930, Average Loss: 4.068, avg. samples / sec: 957.93
Iteration:  18280, Loss function: 4.214, Average Loss: 4.068, avg. samples / sec: 1062.80
Iteration:  18300, Loss function: 4.267, Average Loss: 4.067, avg. samples / sec: 1034.43
Iteration:  18320, Loss function: 4.358, Average Loss: 4.068, avg. samples / sec: 1085.77
Iteration:  18340, Loss function: 3.754, Average Loss: 4.066, avg. samples / sec: 983.87
Iteration:  18360, Loss function: 3.934, Average Loss: 4.066, avg. samples / sec: 1103.07
Iteration:  18380, Loss function: 3.951, Average Loss: 4.066, avg. samples / sec: 1038.51
Iteration:  18400, Loss function: 4.218, Average Loss: 4.066, avg. samples / sec: 923.43
Iteration:  18420, Loss function: 4.165, Average Loss: 4.066, avg. samples / sec: 1032.81
Iteration:  18440, Loss function: 4.324, Average Loss: 4.066, avg. samples / sec: 1031.48
Iteration:  18460, Loss function: 3.961, Average Loss: 4.066, avg. samples / sec: 952.72
Iteration:  18480, Loss function: 4.036, Average Loss: 4.066, avg. samples / sec: 1025.96
Iteration:  18500, Loss function: 4.023, Average Loss: 4.065, avg. samples / sec: 963.16
:::MLLOG {"namespace": "", "time_ms": 1639474339096, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1639474339098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 19, "current_iter_num": 18516}}
Iteration:  18520, Loss function: 4.258, Average Loss: 4.065, avg. samples / sec: 957.69
Iteration:  18540, Loss function: 4.171, Average Loss: 4.064, avg. samples / sec: 1022.60
Iteration:  18560, Loss function: 3.872, Average Loss: 4.062, avg. samples / sec: 972.79
Iteration:  18580, Loss function: 3.982, Average Loss: 4.062, avg. samples / sec: 953.33
Iteration:  18600, Loss function: 4.000, Average Loss: 4.060, avg. samples / sec: 951.91
Iteration:  18620, Loss function: 4.056, Average Loss: 4.060, avg. samples / sec: 1037.90
Iteration:  18640, Loss function: 4.032, Average Loss: 4.058, avg. samples / sec: 1004.61
Iteration:  18660, Loss function: 4.038, Average Loss: 4.058, avg. samples / sec: 1112.11
Iteration:  18680, Loss function: 4.072, Average Loss: 4.057, avg. samples / sec: 991.21
Iteration:  18700, Loss function: 4.256, Average Loss: 4.057, avg. samples / sec: 1030.41
Iteration:  18720, Loss function: 4.036, Average Loss: 4.056, avg. samples / sec: 1050.89
Iteration:  18740, Loss function: 3.895, Average Loss: 4.056, avg. samples / sec: 1008.04
Iteration:  18760, Loss function: 3.807, Average Loss: 4.055, avg. samples / sec: 1008.25
Iteration:  18780, Loss function: 4.217, Average Loss: 4.055, avg. samples / sec: 998.69
Iteration:  18800, Loss function: 4.348, Average Loss: 4.055, avg. samples / sec: 1006.82
Iteration:  18820, Loss function: 4.327, Average Loss: 4.055, avg. samples / sec: 999.10
Iteration:  18840, Loss function: 4.136, Average Loss: 4.056, avg. samples / sec: 1060.45
Iteration:  18860, Loss function: 4.138, Average Loss: 4.054, avg. samples / sec: 1004.87
Iteration:  18880, Loss function: 4.125, Average Loss: 4.054, avg. samples / sec: 1074.01
Iteration:  18900, Loss function: 4.044, Average Loss: 4.053, avg. samples / sec: 950.39
Iteration:  18920, Loss function: 3.980, Average Loss: 4.053, avg. samples / sec: 997.40
Iteration:  18940, Loss function: 3.915, Average Loss: 4.052, avg. samples / sec: 1035.90
Iteration:  18960, Loss function: 4.218, Average Loss: 4.050, avg. samples / sec: 955.66
Iteration:  18980, Loss function: 4.035, Average Loss: 4.049, avg. samples / sec: 1002.50
Iteration:  19000, Loss function: 4.027, Average Loss: 4.048, avg. samples / sec: 1009.10
Iteration:  19020, Loss function: 4.218, Average Loss: 4.046, avg. samples / sec: 1035.23
Iteration:  19040, Loss function: 4.108, Average Loss: 4.046, avg. samples / sec: 1031.19
Iteration:  19060, Loss function: 3.994, Average Loss: 4.045, avg. samples / sec: 989.58
Iteration:  19080, Loss function: 4.191, Average Loss: 4.045, avg. samples / sec: 935.99
Iteration:  19100, Loss function: 4.084, Average Loss: 4.044, avg. samples / sec: 946.60
Iteration:  19120, Loss function: 4.108, Average Loss: 4.045, avg. samples / sec: 1052.23
Iteration:  19140, Loss function: 3.968, Average Loss: 4.045, avg. samples / sec: 1013.85
Iteration:  19160, Loss function: 4.083, Average Loss: 4.045, avg. samples / sec: 981.59
Iteration:  19180, Loss function: 3.744, Average Loss: 4.042, avg. samples / sec: 962.98
Iteration:  19200, Loss function: 3.837, Average Loss: 4.041, avg. samples / sec: 999.40
Iteration:  19220, Loss function: 3.955, Average Loss: 4.040, avg. samples / sec: 1045.28
Iteration:  19240, Loss function: 3.864, Average Loss: 4.039, avg. samples / sec: 1021.77
Iteration:  19260, Loss function: 4.012, Average Loss: 4.039, avg. samples / sec: 1083.15
Iteration:  19280, Loss function: 4.201, Average Loss: 4.039, avg. samples / sec: 981.77
Iteration:  19300, Loss function: 4.218, Average Loss: 4.038, avg. samples / sec: 1032.49
Iteration:  19320, Loss function: 3.782, Average Loss: 4.037, avg. samples / sec: 951.05
Iteration:  19340, Loss function: 3.869, Average Loss: 4.039, avg. samples / sec: 990.82
Iteration:  19360, Loss function: 4.049, Average Loss: 4.039, avg. samples / sec: 1051.99
Iteration:  19380, Loss function: 3.840, Average Loss: 4.038, avg. samples / sec: 1029.77
Iteration:  19400, Loss function: 3.903, Average Loss: 4.039, avg. samples / sec: 1062.16
Iteration:  19420, Loss function: 4.031, Average Loss: 4.038, avg. samples / sec: 987.60
Iteration:  19440, Loss function: 4.214, Average Loss: 4.037, avg. samples / sec: 993.09
Iteration:  19460, Loss function: 3.976, Average Loss: 4.038, avg. samples / sec: 973.70
Iteration:  19480, Loss function: 3.875, Average Loss: 4.038, avg. samples / sec: 1002.69
Iteration:  19500, Loss function: 3.904, Average Loss: 4.038, avg. samples / sec: 968.59
Iteration:  19520, Loss function: 4.094, Average Loss: 4.039, avg. samples / sec: 954.61
Iteration:  19540, Loss function: 3.896, Average Loss: 4.038, avg. samples / sec: 1022.11
:::MLLOG {"namespace": "", "time_ms": 1639474455888, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1639474455889, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 20, "current_iter_num": 19545}}
Iteration:  19560, Loss function: 3.670, Average Loss: 4.035, avg. samples / sec: 1015.62
Iteration:  19580, Loss function: 3.812, Average Loss: 4.034, avg. samples / sec: 945.39
Iteration:  19600, Loss function: 4.141, Average Loss: 4.033, avg. samples / sec: 1037.67
Iteration:  19620, Loss function: 4.108, Average Loss: 4.031, avg. samples / sec: 1019.74
Iteration:  19640, Loss function: 3.879, Average Loss: 4.030, avg. samples / sec: 1010.84
Iteration:  19660, Loss function: 3.869, Average Loss: 4.027, avg. samples / sec: 998.81
Iteration:  19680, Loss function: 4.204, Average Loss: 4.027, avg. samples / sec: 990.36
Iteration:  19700, Loss function: 4.208, Average Loss: 4.025, avg. samples / sec: 1013.86
Iteration:  19720, Loss function: 3.939, Average Loss: 4.025, avg. samples / sec: 977.76
Iteration:  19740, Loss function: 3.863, Average Loss: 4.025, avg. samples / sec: 1001.98
Iteration:  19760, Loss function: 4.121, Average Loss: 4.025, avg. samples / sec: 990.53
Iteration:  19780, Loss function: 4.052, Average Loss: 4.024, avg. samples / sec: 955.82
Iteration:  19800, Loss function: 4.227, Average Loss: 4.023, avg. samples / sec: 955.12
Iteration:  19820, Loss function: 3.951, Average Loss: 4.022, avg. samples / sec: 948.95
Iteration:  19840, Loss function: 4.026, Average Loss: 4.021, avg. samples / sec: 1007.21
Iteration:  19860, Loss function: 3.779, Average Loss: 4.020, avg. samples / sec: 1002.04
Iteration:  19880, Loss function: 3.816, Average Loss: 4.019, avg. samples / sec: 1088.31
Iteration:  19900, Loss function: 4.088, Average Loss: 4.018, avg. samples / sec: 989.21
Iteration:  19920, Loss function: 3.911, Average Loss: 4.018, avg. samples / sec: 998.33
Iteration:  19940, Loss function: 3.864, Average Loss: 4.018, avg. samples / sec: 976.37
Iteration:  19960, Loss function: 3.891, Average Loss: 4.018, avg. samples / sec: 971.51
Iteration:  19980, Loss function: 3.829, Average Loss: 4.018, avg. samples / sec: 988.44
Iteration:  20000, Loss function: 3.650, Average Loss: 4.017, avg. samples / sec: 1044.01
Iteration:  20020, Loss function: 3.837, Average Loss: 4.016, avg. samples / sec: 1053.32
Iteration:  20040, Loss function: 4.053, Average Loss: 4.015, avg. samples / sec: 1013.93
Iteration:  20060, Loss function: 3.862, Average Loss: 4.013, avg. samples / sec: 934.63
Iteration:  20080, Loss function: 3.926, Average Loss: 4.013, avg. samples / sec: 1042.58
Iteration:  20100, Loss function: 4.082, Average Loss: 4.012, avg. samples / sec: 961.36
Iteration:  20120, Loss function: 4.136, Average Loss: 4.012, avg. samples / sec: 1001.75
Iteration:  20140, Loss function: 4.115, Average Loss: 4.011, avg. samples / sec: 1014.87
Iteration:  20160, Loss function: 3.806, Average Loss: 4.011, avg. samples / sec: 1028.59
Iteration:  20180, Loss function: 3.949, Average Loss: 4.012, avg. samples / sec: 1025.28
Iteration:  20200, Loss function: 4.122, Average Loss: 4.012, avg. samples / sec: 1014.55
Iteration:  20220, Loss function: 4.130, Average Loss: 4.012, avg. samples / sec: 993.28
Iteration:  20240, Loss function: 3.954, Average Loss: 4.012, avg. samples / sec: 1033.42
Iteration:  20260, Loss function: 3.841, Average Loss: 4.011, avg. samples / sec: 966.83
Iteration:  20280, Loss function: 3.791, Average Loss: 4.011, avg. samples / sec: 1002.57
Iteration:  20300, Loss function: 4.202, Average Loss: 4.010, avg. samples / sec: 1044.16
Iteration:  20320, Loss function: 4.067, Average Loss: 4.010, avg. samples / sec: 948.83
Iteration:  20340, Loss function: 4.171, Average Loss: 4.012, avg. samples / sec: 1000.55
Iteration:  20360, Loss function: 3.839, Average Loss: 4.010, avg. samples / sec: 930.99
Iteration:  20380, Loss function: 4.093, Average Loss: 4.010, avg. samples / sec: 1000.62
Iteration:  20400, Loss function: 3.832, Average Loss: 4.011, avg. samples / sec: 973.12
Iteration:  20420, Loss function: 4.031, Average Loss: 4.012, avg. samples / sec: 1019.58
Iteration:  20440, Loss function: 4.056, Average Loss: 4.013, avg. samples / sec: 960.63
Iteration:  20460, Loss function: 4.006, Average Loss: 4.014, avg. samples / sec: 999.49
Iteration:  20480, Loss function: 4.075, Average Loss: 4.014, avg. samples / sec: 1013.13
Iteration:  20500, Loss function: 3.752, Average Loss: 4.014, avg. samples / sec: 990.95
Iteration:  20520, Loss function: 3.803, Average Loss: 4.013, avg. samples / sec: 956.96
Iteration:  20540, Loss function: 3.883, Average Loss: 4.011, avg. samples / sec: 1015.27
Iteration:  20560, Loss function: 4.173, Average Loss: 4.012, avg. samples / sec: 1006.34
:::MLLOG {"namespace": "", "time_ms": 1639474573443, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1639474573444, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 21, "current_iter_num": 20573}}
Iteration:  20580, Loss function: 4.049, Average Loss: 4.012, avg. samples / sec: 1039.13
Iteration:  20600, Loss function: 3.912, Average Loss: 4.011, avg. samples / sec: 1045.53
Iteration:  20620, Loss function: 3.868, Average Loss: 4.010, avg. samples / sec: 1037.87
Iteration:  20640, Loss function: 4.138, Average Loss: 4.009, avg. samples / sec: 982.56
Iteration:  20660, Loss function: 3.930, Average Loss: 4.007, avg. samples / sec: 961.17
Iteration:  20680, Loss function: 4.112, Average Loss: 4.005, avg. samples / sec: 964.37
Iteration:  20700, Loss function: 3.700, Average Loss: 4.003, avg. samples / sec: 944.95
Iteration:  20720, Loss function: 3.896, Average Loss: 4.003, avg. samples / sec: 994.98
Iteration:  20740, Loss function: 4.027, Average Loss: 4.003, avg. samples / sec: 1003.10
Iteration:  20760, Loss function: 4.023, Average Loss: 4.002, avg. samples / sec: 1030.01
Iteration:  20780, Loss function: 4.097, Average Loss: 4.001, avg. samples / sec: 1002.86
Iteration:  20800, Loss function: 3.968, Average Loss: 4.000, avg. samples / sec: 1045.33
Iteration:  20820, Loss function: 4.193, Average Loss: 3.999, avg. samples / sec: 1018.51
Iteration:  20840, Loss function: 3.866, Average Loss: 3.998, avg. samples / sec: 964.79
Iteration:  20860, Loss function: 4.037, Average Loss: 3.997, avg. samples / sec: 1027.78
Iteration:  20880, Loss function: 4.038, Average Loss: 3.997, avg. samples / sec: 947.69
Iteration:  20900, Loss function: 4.094, Average Loss: 3.997, avg. samples / sec: 969.58
Iteration:  20920, Loss function: 4.187, Average Loss: 3.997, avg. samples / sec: 1019.20
Iteration:  20940, Loss function: 3.845, Average Loss: 3.995, avg. samples / sec: 906.69
Iteration:  20960, Loss function: 3.777, Average Loss: 3.994, avg. samples / sec: 1063.38
Iteration:  20980, Loss function: 4.099, Average Loss: 3.993, avg. samples / sec: 1040.67
Iteration:  21000, Loss function: 4.258, Average Loss: 3.994, avg. samples / sec: 944.07
Iteration:  21020, Loss function: 3.973, Average Loss: 3.993, avg. samples / sec: 1029.55
Iteration:  21040, Loss function: 3.803, Average Loss: 3.992, avg. samples / sec: 991.65
Iteration:  21060, Loss function: 3.852, Average Loss: 3.990, avg. samples / sec: 997.61
Iteration:  21080, Loss function: 4.062, Average Loss: 3.990, avg. samples / sec: 995.96
Iteration:  21100, Loss function: 4.179, Average Loss: 3.991, avg. samples / sec: 1036.53
Iteration:  21120, Loss function: 3.998, Average Loss: 3.990, avg. samples / sec: 985.94
Iteration:  21140, Loss function: 3.883, Average Loss: 3.989, avg. samples / sec: 996.39
Iteration:  21160, Loss function: 4.108, Average Loss: 3.989, avg. samples / sec: 905.47
Iteration:  21180, Loss function: 3.929, Average Loss: 3.988, avg. samples / sec: 1046.11
Iteration:  21200, Loss function: 4.106, Average Loss: 3.987, avg. samples / sec: 1001.08
Iteration:  21220, Loss function: 3.408, Average Loss: 3.986, avg. samples / sec: 989.40
Iteration:  21240, Loss function: 3.872, Average Loss: 3.987, avg. samples / sec: 931.31
Iteration:  21260, Loss function: 4.065, Average Loss: 3.988, avg. samples / sec: 1021.17
Iteration:  21280, Loss function: 4.111, Average Loss: 3.988, avg. samples / sec: 1001.62
Iteration:  21300, Loss function: 3.779, Average Loss: 3.988, avg. samples / sec: 1039.08
Iteration:  21320, Loss function: 3.883, Average Loss: 3.988, avg. samples / sec: 963.42
Iteration:  21340, Loss function: 4.054, Average Loss: 3.986, avg. samples / sec: 990.21
Iteration:  21360, Loss function: 3.832, Average Loss: 3.986, avg. samples / sec: 966.02
Iteration:  21380, Loss function: 4.352, Average Loss: 3.987, avg. samples / sec: 1032.60
Iteration:  21400, Loss function: 4.193, Average Loss: 3.987, avg. samples / sec: 948.11
Iteration:  21420, Loss function: 3.867, Average Loss: 3.986, avg. samples / sec: 990.51
Iteration:  21440, Loss function: 4.061, Average Loss: 3.988, avg. samples / sec: 1002.59
Iteration:  21460, Loss function: 3.893, Average Loss: 3.988, avg. samples / sec: 1053.60
Iteration:  21480, Loss function: 3.759, Average Loss: 3.987, avg. samples / sec: 1028.72
Iteration:  21500, Loss function: 3.781, Average Loss: 3.988, avg. samples / sec: 1037.51
Iteration:  21520, Loss function: 3.933, Average Loss: 3.988, avg. samples / sec: 996.67
Iteration:  21540, Loss function: 4.076, Average Loss: 3.987, avg. samples / sec: 945.78
Iteration:  21560, Loss function: 4.013, Average Loss: 3.988, avg. samples / sec: 975.39
Iteration:  21580, Loss function: 3.943, Average Loss: 3.988, avg. samples / sec: 937.24
Iteration:  21600, Loss function: 3.811, Average Loss: 3.987, avg. samples / sec: 992.09
:::MLLOG {"namespace": "", "time_ms": 1639474691486, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1639474691487, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 22, "current_iter_num": 21602}}
Iteration:  21620, Loss function: 3.823, Average Loss: 3.985, avg. samples / sec: 998.18
Iteration:  21640, Loss function: 3.563, Average Loss: 3.983, avg. samples / sec: 1008.81
Iteration:  21660, Loss function: 4.171, Average Loss: 3.983, avg. samples / sec: 1010.99
Iteration:  21680, Loss function: 4.059, Average Loss: 3.983, avg. samples / sec: 990.77
Iteration:  21700, Loss function: 4.119, Average Loss: 3.982, avg. samples / sec: 1022.51
Iteration:  21720, Loss function: 3.821, Average Loss: 3.982, avg. samples / sec: 966.15
Iteration:  21740, Loss function: 3.600, Average Loss: 3.980, avg. samples / sec: 1083.62
Iteration:  21760, Loss function: 3.876, Average Loss: 3.978, avg. samples / sec: 1053.02
Iteration:  21780, Loss function: 3.753, Average Loss: 3.976, avg. samples / sec: 964.37
Iteration:  21800, Loss function: 3.920, Average Loss: 3.976, avg. samples / sec: 1005.30
Iteration:  21820, Loss function: 3.704, Average Loss: 3.975, avg. samples / sec: 1025.84
Iteration:  21840, Loss function: 3.802, Average Loss: 3.975, avg. samples / sec: 1034.27
Iteration:  21860, Loss function: 4.096, Average Loss: 3.974, avg. samples / sec: 1038.33
Iteration:  21880, Loss function: 4.446, Average Loss: 3.974, avg. samples / sec: 1035.44
Iteration:  21900, Loss function: 4.016, Average Loss: 3.975, avg. samples / sec: 1002.26
Iteration:  21920, Loss function: 3.890, Average Loss: 3.974, avg. samples / sec: 940.22
Iteration:  21940, Loss function: 4.037, Average Loss: 3.975, avg. samples / sec: 1009.13
Iteration:  21960, Loss function: 3.985, Average Loss: 3.974, avg. samples / sec: 1071.16
Iteration:  21980, Loss function: 4.133, Average Loss: 3.973, avg. samples / sec: 1017.37
Iteration:  22000, Loss function: 3.745, Average Loss: 3.972, avg. samples / sec: 973.32
Iteration:  22020, Loss function: 3.799, Average Loss: 3.972, avg. samples / sec: 1039.61
Iteration:  22040, Loss function: 3.669, Average Loss: 3.971, avg. samples / sec: 1040.93
Iteration:  22060, Loss function: 3.773, Average Loss: 3.971, avg. samples / sec: 1041.25
Iteration:  22080, Loss function: 4.072, Average Loss: 3.972, avg. samples / sec: 1027.94
Iteration:  22100, Loss function: 4.056, Average Loss: 3.972, avg. samples / sec: 1021.04
Iteration:  22120, Loss function: 3.769, Average Loss: 3.971, avg. samples / sec: 927.42
Iteration:  22140, Loss function: 3.687, Average Loss: 3.971, avg. samples / sec: 1075.20
Iteration:  22160, Loss function: 3.984, Average Loss: 3.971, avg. samples / sec: 1045.88
Iteration:  22180, Loss function: 3.822, Average Loss: 3.971, avg. samples / sec: 1074.92
Iteration:  22200, Loss function: 3.985, Average Loss: 3.970, avg. samples / sec: 976.30
Iteration:  22220, Loss function: 4.140, Average Loss: 3.969, avg. samples / sec: 984.62
Iteration:  22240, Loss function: 3.737, Average Loss: 3.968, avg. samples / sec: 996.54
Iteration:  22260, Loss function: 3.648, Average Loss: 3.968, avg. samples / sec: 984.12
Iteration:  22280, Loss function: 4.028, Average Loss: 3.967, avg. samples / sec: 992.75
Iteration:  22300, Loss function: 3.809, Average Loss: 3.966, avg. samples / sec: 1015.48
Iteration:  22320, Loss function: 3.996, Average Loss: 3.967, avg. samples / sec: 976.77
Iteration:  22340, Loss function: 3.972, Average Loss: 3.966, avg. samples / sec: 1080.08
Iteration:  22360, Loss function: 3.901, Average Loss: 3.964, avg. samples / sec: 891.30
Iteration:  22380, Loss function: 3.844, Average Loss: 3.964, avg. samples / sec: 1041.01
Iteration:  22400, Loss function: 3.974, Average Loss: 3.964, avg. samples / sec: 1037.96
Iteration:  22420, Loss function: 3.953, Average Loss: 3.964, avg. samples / sec: 1068.30
Iteration:  22440, Loss function: 4.003, Average Loss: 3.963, avg. samples / sec: 1014.32
Iteration:  22460, Loss function: 3.733, Average Loss: 3.962, avg. samples / sec: 996.08
Iteration:  22480, Loss function: 4.161, Average Loss: 3.962, avg. samples / sec: 992.66
Iteration:  22500, Loss function: 3.998, Average Loss: 3.962, avg. samples / sec: 1058.47
Iteration:  22520, Loss function: 4.044, Average Loss: 3.962, avg. samples / sec: 989.55
Iteration:  22540, Loss function: 3.904, Average Loss: 3.961, avg. samples / sec: 1024.47
Iteration:  22560, Loss function: 3.828, Average Loss: 3.961, avg. samples / sec: 976.13
Iteration:  22580, Loss function: 3.825, Average Loss: 3.961, avg. samples / sec: 1004.11
Iteration:  22600, Loss function: 4.219, Average Loss: 3.961, avg. samples / sec: 995.57
Iteration:  22620, Loss function: 3.980, Average Loss: 3.961, avg. samples / sec: 1068.46
:::MLLOG {"namespace": "", "time_ms": 1639474807559, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1639474807560, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 23, "current_iter_num": 22631}}
Iteration:  22640, Loss function: 3.800, Average Loss: 3.961, avg. samples / sec: 937.50
Iteration:  22660, Loss function: 4.007, Average Loss: 3.959, avg. samples / sec: 974.94
Iteration:  22680, Loss function: 3.676, Average Loss: 3.958, avg. samples / sec: 989.30
Iteration:  22700, Loss function: 4.093, Average Loss: 3.959, avg. samples / sec: 1027.14
Iteration:  22720, Loss function: 3.574, Average Loss: 3.957, avg. samples / sec: 1018.74
Iteration:  22740, Loss function: 3.669, Average Loss: 3.956, avg. samples / sec: 1004.53
Iteration:  22760, Loss function: 4.020, Average Loss: 3.955, avg. samples / sec: 955.92
Iteration:  22780, Loss function: 3.526, Average Loss: 3.954, avg. samples / sec: 1026.33
Iteration:  22800, Loss function: 3.890, Average Loss: 3.953, avg. samples / sec: 999.93
Iteration:  22820, Loss function: 3.817, Average Loss: 3.952, avg. samples / sec: 941.99
Iteration:  22840, Loss function: 4.002, Average Loss: 3.951, avg. samples / sec: 1017.69
Iteration:  22860, Loss function: 3.833, Average Loss: 3.952, avg. samples / sec: 1029.33
Iteration:  22880, Loss function: 3.861, Average Loss: 3.951, avg. samples / sec: 996.14
Iteration:  22900, Loss function: 3.983, Average Loss: 3.951, avg. samples / sec: 977.53
Iteration:  22920, Loss function: 3.683, Average Loss: 3.950, avg. samples / sec: 965.70
Iteration:  22940, Loss function: 3.690, Average Loss: 3.949, avg. samples / sec: 941.25
Iteration:  22960, Loss function: 4.190, Average Loss: 3.949, avg. samples / sec: 979.31
Iteration:  22980, Loss function: 3.979, Average Loss: 3.946, avg. samples / sec: 967.68
Iteration:  23000, Loss function: 4.188, Average Loss: 3.946, avg. samples / sec: 921.14
Iteration:  23020, Loss function: 4.268, Average Loss: 3.948, avg. samples / sec: 1039.33
Iteration:  23040, Loss function: 3.996, Average Loss: 3.948, avg. samples / sec: 1055.26
Iteration:  23060, Loss function: 4.108, Average Loss: 3.948, avg. samples / sec: 1050.24
Iteration:  23080, Loss function: 4.037, Average Loss: 3.948, avg. samples / sec: 995.23
Iteration:  23100, Loss function: 4.068, Average Loss: 3.947, avg. samples / sec: 1041.86
Iteration:  23120, Loss function: 4.157, Average Loss: 3.947, avg. samples / sec: 1094.58
Iteration:  23140, Loss function: 3.869, Average Loss: 3.946, avg. samples / sec: 1059.44
Iteration:  23160, Loss function: 3.929, Average Loss: 3.945, avg. samples / sec: 970.37
Iteration:  23180, Loss function: 3.871, Average Loss: 3.945, avg. samples / sec: 990.11
Iteration:  23200, Loss function: 4.080, Average Loss: 3.946, avg. samples / sec: 976.81
Iteration:  23220, Loss function: 3.804, Average Loss: 3.946, avg. samples / sec: 948.56
Iteration:  23240, Loss function: 3.821, Average Loss: 3.945, avg. samples / sec: 953.77
Iteration:  23260, Loss function: 4.262, Average Loss: 3.944, avg. samples / sec: 1073.42
Iteration:  23280, Loss function: 3.963, Average Loss: 3.944, avg. samples / sec: 1118.62
Iteration:  23300, Loss function: 3.779, Average Loss: 3.942, avg. samples / sec: 1020.28
Iteration:  23320, Loss function: 3.900, Average Loss: 3.944, avg. samples / sec: 1063.13
Iteration:  23340, Loss function: 4.304, Average Loss: 3.943, avg. samples / sec: 953.01
Iteration:  23360, Loss function: 3.750, Average Loss: 3.942, avg. samples / sec: 994.72
Iteration:  23380, Loss function: 3.995, Average Loss: 3.943, avg. samples / sec: 992.82
Iteration:  23400, Loss function: 3.746, Average Loss: 3.942, avg. samples / sec: 1001.59
Iteration:  23420, Loss function: 3.880, Average Loss: 3.943, avg. samples / sec: 1024.37
Iteration:  23440, Loss function: 3.839, Average Loss: 3.944, avg. samples / sec: 965.31
Iteration:  23460, Loss function: 4.023, Average Loss: 3.943, avg. samples / sec: 950.88
Iteration:  23480, Loss function: 3.890, Average Loss: 3.943, avg. samples / sec: 999.25
Iteration:  23500, Loss function: 3.770, Average Loss: 3.943, avg. samples / sec: 1064.20
Iteration:  23520, Loss function: 4.016, Average Loss: 3.942, avg. samples / sec: 1012.82
Iteration:  23540, Loss function: 3.894, Average Loss: 3.942, avg. samples / sec: 1030.24
Iteration:  23560, Loss function: 3.879, Average Loss: 3.940, avg. samples / sec: 1014.41
Iteration:  23580, Loss function: 3.737, Average Loss: 3.940, avg. samples / sec: 933.78
Iteration:  23600, Loss function: 3.844, Average Loss: 3.940, avg. samples / sec: 893.66
Iteration:  23620, Loss function: 3.923, Average Loss: 3.940, avg. samples / sec: 963.89
Iteration:  23640, Loss function: 3.990, Average Loss: 3.940, avg. samples / sec: 1016.51
:::MLLOG {"namespace": "", "time_ms": 1639474924936, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1639474924939, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 24, "current_iter_num": 23659}}
Iteration:  23660, Loss function: 3.705, Average Loss: 3.940, avg. samples / sec: 1057.02
Iteration:  23680, Loss function: 3.773, Average Loss: 3.938, avg. samples / sec: 1011.84
Iteration:  23700, Loss function: 3.912, Average Loss: 3.938, avg. samples / sec: 978.82
Iteration:  23720, Loss function: 4.086, Average Loss: 3.937, avg. samples / sec: 984.10
Iteration:  23740, Loss function: 3.826, Average Loss: 3.935, avg. samples / sec: 1014.74
Iteration:  23760, Loss function: 3.690, Average Loss: 3.933, avg. samples / sec: 977.72
Iteration:  23780, Loss function: 3.872, Average Loss: 3.932, avg. samples / sec: 1054.56
Iteration:  23800, Loss function: 3.805, Average Loss: 3.931, avg. samples / sec: 1055.85
Iteration:  23820, Loss function: 3.926, Average Loss: 3.931, avg. samples / sec: 1044.66
Iteration:  23840, Loss function: 4.025, Average Loss: 3.930, avg. samples / sec: 989.14
Iteration:  23860, Loss function: 4.323, Average Loss: 3.931, avg. samples / sec: 991.86
Iteration:  23880, Loss function: 4.046, Average Loss: 3.930, avg. samples / sec: 1001.33
Iteration:  23900, Loss function: 3.763, Average Loss: 3.929, avg. samples / sec: 1019.87
Iteration:  23920, Loss function: 3.979, Average Loss: 3.929, avg. samples / sec: 1041.90
Iteration:  23940, Loss function: 3.717, Average Loss: 3.926, avg. samples / sec: 989.13
Iteration:  23960, Loss function: 3.529, Average Loss: 3.926, avg. samples / sec: 1021.87
Iteration:  23980, Loss function: 4.161, Average Loss: 3.925, avg. samples / sec: 988.68
Iteration:  24000, Loss function: 3.973, Average Loss: 3.924, avg. samples / sec: 1011.49
Iteration:  24020, Loss function: 4.113, Average Loss: 3.925, avg. samples / sec: 1002.60
Iteration:  24040, Loss function: 3.874, Average Loss: 3.924, avg. samples / sec: 1022.56
Iteration:  24060, Loss function: 4.118, Average Loss: 3.923, avg. samples / sec: 1057.74
Iteration:  24080, Loss function: 3.737, Average Loss: 3.922, avg. samples / sec: 1043.86
Iteration:  24100, Loss function: 3.780, Average Loss: 3.921, avg. samples / sec: 1040.63
Iteration:  24120, Loss function: 3.928, Average Loss: 3.921, avg. samples / sec: 979.14
Iteration:  24140, Loss function: 4.252, Average Loss: 3.921, avg. samples / sec: 1001.58
Iteration:  24160, Loss function: 4.163, Average Loss: 3.921, avg. samples / sec: 965.86
Iteration:  24180, Loss function: 3.918, Average Loss: 3.921, avg. samples / sec: 965.35
Iteration:  24200, Loss function: 3.746, Average Loss: 3.919, avg. samples / sec: 964.99
Iteration:  24220, Loss function: 3.911, Average Loss: 3.919, avg. samples / sec: 970.05
Iteration:  24240, Loss function: 3.717, Average Loss: 3.918, avg. samples / sec: 1022.81
Iteration:  24260, Loss function: 3.882, Average Loss: 3.919, avg. samples / sec: 963.49
Iteration:  24280, Loss function: 3.911, Average Loss: 3.919, avg. samples / sec: 942.22
Iteration:  24300, Loss function: 3.826, Average Loss: 3.919, avg. samples / sec: 1011.66
Iteration:  24320, Loss function: 3.816, Average Loss: 3.917, avg. samples / sec: 1022.99
Iteration:  24340, Loss function: 4.120, Average Loss: 3.917, avg. samples / sec: 990.37
Iteration:  24360, Loss function: 3.995, Average Loss: 3.918, avg. samples / sec: 949.57
Iteration:  24380, Loss function: 3.723, Average Loss: 3.919, avg. samples / sec: 1006.17
Iteration:  24400, Loss function: 4.042, Average Loss: 3.919, avg. samples / sec: 981.80
Iteration:  24420, Loss function: 3.898, Average Loss: 3.918, avg. samples / sec: 1044.39
Iteration:  24440, Loss function: 3.666, Average Loss: 3.919, avg. samples / sec: 966.29
Iteration:  24460, Loss function: 4.147, Average Loss: 3.919, avg. samples / sec: 973.14
Iteration:  24480, Loss function: 4.018, Average Loss: 3.921, avg. samples / sec: 986.15
Iteration:  24500, Loss function: 3.758, Average Loss: 3.920, avg. samples / sec: 990.64
Iteration:  24520, Loss function: 3.978, Average Loss: 3.921, avg. samples / sec: 956.13
Iteration:  24540, Loss function: 3.907, Average Loss: 3.920, avg. samples / sec: 969.34
Iteration:  24560, Loss function: 4.196, Average Loss: 3.921, avg. samples / sec: 1039.59
Iteration:  24580, Loss function: 4.090, Average Loss: 3.921, avg. samples / sec: 1036.73
Iteration:  24600, Loss function: 3.789, Average Loss: 3.920, avg. samples / sec: 1015.72
Iteration:  24620, Loss function: 4.018, Average Loss: 3.920, avg. samples / sec: 981.16
Iteration:  24640, Loss function: 4.048, Average Loss: 3.921, avg. samples / sec: 1067.53
Iteration:  24660, Loss function: 4.102, Average Loss: 3.921, avg. samples / sec: 1038.43
Iteration:  24680, Loss function: 3.815, Average Loss: 3.922, avg. samples / sec: 1087.07
:::MLLOG {"namespace": "", "time_ms": 1639475041823, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1639475041824, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 25, "current_iter_num": 24688}}
Iteration:  24700, Loss function: 3.984, Average Loss: 3.922, avg. samples / sec: 1004.07
Iteration:  24720, Loss function: 3.929, Average Loss: 3.920, avg. samples / sec: 995.02
Iteration:  24740, Loss function: 3.878, Average Loss: 3.920, avg. samples / sec: 962.67
Iteration:  24760, Loss function: 3.678, Average Loss: 3.918, avg. samples / sec: 1006.32
Iteration:  24780, Loss function: 4.041, Average Loss: 3.917, avg. samples / sec: 938.37
Iteration:  24800, Loss function: 3.860, Average Loss: 3.916, avg. samples / sec: 976.86
Iteration:  24820, Loss function: 3.663, Average Loss: 3.916, avg. samples / sec: 965.70
Iteration:  24840, Loss function: 3.704, Average Loss: 3.916, avg. samples / sec: 915.52
Iteration:  24860, Loss function: 4.126, Average Loss: 3.916, avg. samples / sec: 994.33
Iteration:  24880, Loss function: 3.742, Average Loss: 3.916, avg. samples / sec: 976.25
Iteration:  24900, Loss function: 3.823, Average Loss: 3.916, avg. samples / sec: 981.06
Iteration:  24920, Loss function: 3.650, Average Loss: 3.913, avg. samples / sec: 1034.87
Iteration:  24940, Loss function: 3.709, Average Loss: 3.911, avg. samples / sec: 1027.53
Iteration:  24960, Loss function: 3.895, Average Loss: 3.910, avg. samples / sec: 1057.64
Iteration:  24980, Loss function: 3.801, Average Loss: 3.910, avg. samples / sec: 985.58
Iteration:  25000, Loss function: 3.701, Average Loss: 3.910, avg. samples / sec: 989.82
Iteration:  25020, Loss function: 3.825, Average Loss: 3.910, avg. samples / sec: 973.90
Iteration:  25040, Loss function: 4.141, Average Loss: 3.908, avg. samples / sec: 1060.17
Iteration:  25060, Loss function: 3.811, Average Loss: 3.908, avg. samples / sec: 1074.38
Iteration:  25080, Loss function: 4.159, Average Loss: 3.908, avg. samples / sec: 1020.67
Iteration:  25100, Loss function: 4.006, Average Loss: 3.908, avg. samples / sec: 952.86
Iteration:  25120, Loss function: 3.951, Average Loss: 3.909, avg. samples / sec: 943.51
Iteration:  25140, Loss function: 4.148, Average Loss: 3.908, avg. samples / sec: 1033.95
Iteration:  25160, Loss function: 3.649, Average Loss: 3.909, avg. samples / sec: 1040.56
Iteration:  25180, Loss function: 4.097, Average Loss: 3.909, avg. samples / sec: 1061.25
Iteration:  25200, Loss function: 3.655, Average Loss: 3.908, avg. samples / sec: 1068.31
Iteration:  25220, Loss function: 3.845, Average Loss: 3.906, avg. samples / sec: 1051.30
Iteration:  25240, Loss function: 3.700, Average Loss: 3.906, avg. samples / sec: 1057.77
Iteration:  25260, Loss function: 3.807, Average Loss: 3.906, avg. samples / sec: 1043.82
Iteration:  25280, Loss function: 4.093, Average Loss: 3.907, avg. samples / sec: 984.10
Iteration:  25300, Loss function: 3.780, Average Loss: 3.908, avg. samples / sec: 1005.28
Iteration:  25320, Loss function: 3.701, Average Loss: 3.908, avg. samples / sec: 987.33
Iteration:  25340, Loss function: 3.910, Average Loss: 3.908, avg. samples / sec: 973.92
Iteration:  25360, Loss function: 3.696, Average Loss: 3.905, avg. samples / sec: 1038.79
Iteration:  25380, Loss function: 3.729, Average Loss: 3.906, avg. samples / sec: 990.15
Iteration:  25400, Loss function: 3.755, Average Loss: 3.903, avg. samples / sec: 1014.04
Iteration:  25420, Loss function: 3.774, Average Loss: 3.903, avg. samples / sec: 1015.45
Iteration:  25440, Loss function: 4.181, Average Loss: 3.903, avg. samples / sec: 986.95
Iteration:  25460, Loss function: 3.890, Average Loss: 3.902, avg. samples / sec: 995.31
Iteration:  25480, Loss function: 3.866, Average Loss: 3.901, avg. samples / sec: 939.08
Iteration:  25500, Loss function: 4.008, Average Loss: 3.903, avg. samples / sec: 972.29
Iteration:  25520, Loss function: 4.179, Average Loss: 3.903, avg. samples / sec: 1004.62
Iteration:  25540, Loss function: 3.907, Average Loss: 3.904, avg. samples / sec: 991.97
Iteration:  25560, Loss function: 3.438, Average Loss: 3.902, avg. samples / sec: 1004.51
Iteration:  25580, Loss function: 3.686, Average Loss: 3.901, avg. samples / sec: 991.33
Iteration:  25600, Loss function: 4.016, Average Loss: 3.902, avg. samples / sec: 961.69
Iteration:  25620, Loss function: 3.892, Average Loss: 3.902, avg. samples / sec: 1036.93
Iteration:  25640, Loss function: 3.973, Average Loss: 3.902, avg. samples / sec: 1028.13
Iteration:  25660, Loss function: 3.799, Average Loss: 3.903, avg. samples / sec: 991.47
Iteration:  25680, Loss function: 3.720, Average Loss: 3.902, avg. samples / sec: 953.42
Iteration:  25700, Loss function: 3.972, Average Loss: 3.903, avg. samples / sec: 1007.75
:::MLLOG {"namespace": "", "time_ms": 1639475159114, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1639475159116, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 26, "current_iter_num": 25717}}
Iteration:  25720, Loss function: 3.864, Average Loss: 3.902, avg. samples / sec: 1028.41
Iteration:  25740, Loss function: 3.897, Average Loss: 3.901, avg. samples / sec: 979.04
Iteration:  25760, Loss function: 4.019, Average Loss: 3.901, avg. samples / sec: 991.57
Iteration:  25780, Loss function: 3.999, Average Loss: 3.900, avg. samples / sec: 983.30
Iteration:  25800, Loss function: 3.604, Average Loss: 3.898, avg. samples / sec: 963.95
Iteration:  25820, Loss function: 3.797, Average Loss: 3.897, avg. samples / sec: 997.31
Iteration:  25840, Loss function: 3.837, Average Loss: 3.896, avg. samples / sec: 997.10
Iteration:  25860, Loss function: 3.713, Average Loss: 3.894, avg. samples / sec: 1022.23
Iteration:  25880, Loss function: 3.857, Average Loss: 3.892, avg. samples / sec: 989.83
Iteration:  25900, Loss function: 3.612, Average Loss: 3.891, avg. samples / sec: 1016.13
Iteration:  25920, Loss function: 3.728, Average Loss: 3.890, avg. samples / sec: 971.02
Iteration:  25940, Loss function: 3.965, Average Loss: 3.889, avg. samples / sec: 1035.58
Iteration:  25960, Loss function: 3.714, Average Loss: 3.887, avg. samples / sec: 952.11
Iteration:  25980, Loss function: 3.859, Average Loss: 3.886, avg. samples / sec: 921.31
Iteration:  26000, Loss function: 3.619, Average Loss: 3.885, avg. samples / sec: 1001.26
Iteration:  26020, Loss function: 4.092, Average Loss: 3.885, avg. samples / sec: 1017.30
Iteration:  26040, Loss function: 4.018, Average Loss: 3.884, avg. samples / sec: 1009.32
Iteration:  26060, Loss function: 4.024, Average Loss: 3.884, avg. samples / sec: 953.27
Iteration:  26080, Loss function: 4.009, Average Loss: 3.885, avg. samples / sec: 1005.11
Iteration:  26100, Loss function: 4.027, Average Loss: 3.886, avg. samples / sec: 997.02
Iteration:  26120, Loss function: 3.698, Average Loss: 3.887, avg. samples / sec: 1010.97
Iteration:  26140, Loss function: 3.906, Average Loss: 3.887, avg. samples / sec: 931.63
Iteration:  26160, Loss function: 3.782, Average Loss: 3.888, avg. samples / sec: 998.66
Iteration:  26180, Loss function: 3.595, Average Loss: 3.888, avg. samples / sec: 993.87
Iteration:  26200, Loss function: 3.930, Average Loss: 3.888, avg. samples / sec: 1011.54
Iteration:  26220, Loss function: 3.845, Average Loss: 3.887, avg. samples / sec: 1046.96
Iteration:  26240, Loss function: 4.053, Average Loss: 3.887, avg. samples / sec: 955.98
Iteration:  26260, Loss function: 3.951, Average Loss: 3.887, avg. samples / sec: 1017.65
Iteration:  26280, Loss function: 3.846, Average Loss: 3.887, avg. samples / sec: 1036.63
Iteration:  26300, Loss function: 3.569, Average Loss: 3.887, avg. samples / sec: 1024.22
Iteration:  26320, Loss function: 3.835, Average Loss: 3.887, avg. samples / sec: 986.85
Iteration:  26340, Loss function: 3.921, Average Loss: 3.885, avg. samples / sec: 971.91
Iteration:  26360, Loss function: 3.984, Average Loss: 3.887, avg. samples / sec: 1011.34
Iteration:  26380, Loss function: 3.764, Average Loss: 3.886, avg. samples / sec: 1010.28
Iteration:  26400, Loss function: 3.847, Average Loss: 3.886, avg. samples / sec: 996.59
Iteration:  26420, Loss function: 3.807, Average Loss: 3.884, avg. samples / sec: 1039.10
Iteration:  26440, Loss function: 3.991, Average Loss: 3.884, avg. samples / sec: 1077.83
Iteration:  26460, Loss function: 3.843, Average Loss: 3.884, avg. samples / sec: 1049.36
Iteration:  26480, Loss function: 3.952, Average Loss: 3.884, avg. samples / sec: 976.70
Iteration:  26500, Loss function: 4.060, Average Loss: 3.886, avg. samples / sec: 1075.81
Iteration:  26520, Loss function: 3.816, Average Loss: 3.886, avg. samples / sec: 1045.78
Iteration:  26540, Loss function: 4.049, Average Loss: 3.886, avg. samples / sec: 1079.31
Iteration:  26560, Loss function: 4.152, Average Loss: 3.886, avg. samples / sec: 1036.13
Iteration:  26580, Loss function: 3.717, Average Loss: 3.886, avg. samples / sec: 1012.17
Iteration:  26600, Loss function: 4.037, Average Loss: 3.885, avg. samples / sec: 995.44
Iteration:  26620, Loss function: 4.084, Average Loss: 3.885, avg. samples / sec: 986.75
Iteration:  26640, Loss function: 4.107, Average Loss: 3.884, avg. samples / sec: 956.34
Iteration:  26660, Loss function: 3.893, Average Loss: 3.883, avg. samples / sec: 1081.30
Iteration:  26680, Loss function: 3.911, Average Loss: 3.883, avg. samples / sec: 966.02
Iteration:  26700, Loss function: 3.758, Average Loss: 3.883, avg. samples / sec: 1036.28
Iteration:  26720, Loss function: 3.956, Average Loss: 3.883, avg. samples / sec: 1022.94
Iteration:  26740, Loss function: 3.927, Average Loss: 3.883, avg. samples / sec: 1042.75
:::MLLOG {"namespace": "", "time_ms": 1639475275813, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1639475275818, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 27, "current_iter_num": 26745}}
Iteration:  26760, Loss function: 3.913, Average Loss: 3.882, avg. samples / sec: 1067.84
Iteration:  26780, Loss function: 3.786, Average Loss: 3.880, avg. samples / sec: 1036.46
Iteration:  26800, Loss function: 3.618, Average Loss: 3.877, avg. samples / sec: 960.11
Iteration:  26820, Loss function: 3.662, Average Loss: 3.876, avg. samples / sec: 1092.31
Iteration:  26840, Loss function: 3.827, Average Loss: 3.876, avg. samples / sec: 961.19
Iteration:  26860, Loss function: 3.826, Average Loss: 3.875, avg. samples / sec: 991.93
Iteration:  26880, Loss function: 3.825, Average Loss: 3.874, avg. samples / sec: 997.59
Iteration:  26900, Loss function: 3.727, Average Loss: 3.873, avg. samples / sec: 1052.20
Iteration:  26920, Loss function: 4.086, Average Loss: 3.873, avg. samples / sec: 1019.16
Iteration:  26940, Loss function: 3.932, Average Loss: 3.872, avg. samples / sec: 1003.14
Iteration:  26960, Loss function: 4.145, Average Loss: 3.873, avg. samples / sec: 1041.93
Iteration:  26980, Loss function: 3.724, Average Loss: 3.874, avg. samples / sec: 1041.84
Iteration:  27000, Loss function: 3.929, Average Loss: 3.873, avg. samples / sec: 1048.92
Iteration:  27020, Loss function: 3.697, Average Loss: 3.872, avg. samples / sec: 1017.23
Iteration:  27040, Loss function: 4.174, Average Loss: 3.873, avg. samples / sec: 998.61
Iteration:  27060, Loss function: 3.909, Average Loss: 3.872, avg. samples / sec: 979.54
Iteration:  27080, Loss function: 3.856, Average Loss: 3.872, avg. samples / sec: 1005.60
Iteration:  27100, Loss function: 3.964, Average Loss: 3.872, avg. samples / sec: 1033.08
Iteration:  27120, Loss function: 3.631, Average Loss: 3.873, avg. samples / sec: 985.21
Iteration:  27140, Loss function: 3.577, Average Loss: 3.872, avg. samples / sec: 1043.07
Iteration:  27160, Loss function: 4.106, Average Loss: 3.870, avg. samples / sec: 953.72
Iteration:  27180, Loss function: 3.984, Average Loss: 3.871, avg. samples / sec: 1038.85
Iteration:  27200, Loss function: 4.155, Average Loss: 3.870, avg. samples / sec: 1017.77
Iteration:  27220, Loss function: 3.844, Average Loss: 3.870, avg. samples / sec: 1008.66
Iteration:  27240, Loss function: 3.943, Average Loss: 3.870, avg. samples / sec: 1028.98
Iteration:  27260, Loss function: 3.729, Average Loss: 3.869, avg. samples / sec: 1006.22
Iteration:  27280, Loss function: 3.862, Average Loss: 3.868, avg. samples / sec: 1028.66
Iteration:  27300, Loss function: 3.688, Average Loss: 3.868, avg. samples / sec: 992.60
Iteration:  27320, Loss function: 3.627, Average Loss: 3.868, avg. samples / sec: 956.76
Iteration:  27340, Loss function: 3.759, Average Loss: 3.868, avg. samples / sec: 956.37
Iteration:  27360, Loss function: 3.564, Average Loss: 3.867, avg. samples / sec: 1018.85
Iteration:  27380, Loss function: 4.011, Average Loss: 3.868, avg. samples / sec: 1055.16
Iteration:  27400, Loss function: 3.741, Average Loss: 3.867, avg. samples / sec: 1100.30
Iteration:  27420, Loss function: 3.827, Average Loss: 3.867, avg. samples / sec: 965.11
Iteration:  27440, Loss function: 3.961, Average Loss: 3.867, avg. samples / sec: 989.34
Iteration:  27460, Loss function: 3.697, Average Loss: 3.867, avg. samples / sec: 1022.51
Iteration:  27480, Loss function: 4.160, Average Loss: 3.866, avg. samples / sec: 1009.66
Iteration:  27500, Loss function: 3.772, Average Loss: 3.866, avg. samples / sec: 1024.55
Iteration:  27520, Loss function: 4.107, Average Loss: 3.867, avg. samples / sec: 1028.16
Iteration:  27540, Loss function: 4.086, Average Loss: 3.867, avg. samples / sec: 1041.68
Iteration:  27560, Loss function: 4.008, Average Loss: 3.868, avg. samples / sec: 940.34
Iteration:  27580, Loss function: 3.718, Average Loss: 3.867, avg. samples / sec: 972.76
Iteration:  27600, Loss function: 4.010, Average Loss: 3.866, avg. samples / sec: 1024.16
Iteration:  27620, Loss function: 3.870, Average Loss: 3.866, avg. samples / sec: 939.77
Iteration:  27640, Loss function: 3.755, Average Loss: 3.866, avg. samples / sec: 1026.77
Iteration:  27660, Loss function: 3.879, Average Loss: 3.866, avg. samples / sec: 973.41
Iteration:  27680, Loss function: 3.950, Average Loss: 3.866, avg. samples / sec: 1031.63
Iteration:  27700, Loss function: 4.043, Average Loss: 3.867, avg. samples / sec: 1021.53
Iteration:  27720, Loss function: 3.965, Average Loss: 3.867, avg. samples / sec: 961.44
Iteration:  27740, Loss function: 4.131, Average Loss: 3.867, avg. samples / sec: 1036.72
Iteration:  27760, Loss function: 3.870, Average Loss: 3.869, avg. samples / sec: 1002.32
:::MLLOG {"namespace": "", "time_ms": 1639475392126, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1639475392127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 28, "current_iter_num": 27774}}
Iteration:  27780, Loss function: 4.000, Average Loss: 3.869, avg. samples / sec: 978.47
Iteration:  27800, Loss function: 4.313, Average Loss: 3.867, avg. samples / sec: 1034.99
Iteration:  27820, Loss function: 3.762, Average Loss: 3.866, avg. samples / sec: 997.60
Iteration:  27840, Loss function: 3.696, Average Loss: 3.865, avg. samples / sec: 936.59
Iteration:  27860, Loss function: 3.888, Average Loss: 3.863, avg. samples / sec: 971.28
Iteration:  27880, Loss function: 3.841, Average Loss: 3.863, avg. samples / sec: 1008.50
Iteration:  27900, Loss function: 3.796, Average Loss: 3.862, avg. samples / sec: 995.48
Iteration:  27920, Loss function: 3.695, Average Loss: 3.860, avg. samples / sec: 1050.93
Iteration:  27940, Loss function: 3.498, Average Loss: 3.859, avg. samples / sec: 1055.85
Iteration:  27960, Loss function: 3.956, Average Loss: 3.858, avg. samples / sec: 1032.77
Iteration:  27980, Loss function: 3.644, Average Loss: 3.856, avg. samples / sec: 1026.14
Iteration:  28000, Loss function: 3.727, Average Loss: 3.856, avg. samples / sec: 1058.53
Iteration:  28020, Loss function: 4.099, Average Loss: 3.856, avg. samples / sec: 1024.78
Iteration:  28040, Loss function: 4.095, Average Loss: 3.855, avg. samples / sec: 1052.16
Iteration:  28060, Loss function: 3.851, Average Loss: 3.856, avg. samples / sec: 960.58
Iteration:  28080, Loss function: 3.564, Average Loss: 3.855, avg. samples / sec: 1046.46
Iteration:  28100, Loss function: 3.996, Average Loss: 3.857, avg. samples / sec: 1092.73
Iteration:  28120, Loss function: 3.673, Average Loss: 3.857, avg. samples / sec: 1022.88
Iteration:  28140, Loss function: 3.860, Average Loss: 3.856, avg. samples / sec: 948.77
Iteration:  28160, Loss function: 3.913, Average Loss: 3.854, avg. samples / sec: 966.65
Iteration:  28180, Loss function: 3.690, Average Loss: 3.854, avg. samples / sec: 938.60
Iteration:  28200, Loss function: 3.427, Average Loss: 3.854, avg. samples / sec: 975.90
Iteration:  28220, Loss function: 3.996, Average Loss: 3.854, avg. samples / sec: 994.76
Iteration:  28240, Loss function: 4.063, Average Loss: 3.854, avg. samples / sec: 1003.90
Iteration:  28260, Loss function: 4.015, Average Loss: 3.854, avg. samples / sec: 978.57
Iteration:  28280, Loss function: 4.175, Average Loss: 3.854, avg. samples / sec: 1029.97
Iteration:  28300, Loss function: 3.872, Average Loss: 3.853, avg. samples / sec: 1032.97
Iteration:  28320, Loss function: 3.633, Average Loss: 3.853, avg. samples / sec: 988.70
Iteration:  28340, Loss function: 3.384, Average Loss: 3.852, avg. samples / sec: 931.00
Iteration:  28360, Loss function: 3.740, Average Loss: 3.852, avg. samples / sec: 1029.76
Iteration:  28380, Loss function: 3.912, Average Loss: 3.852, avg. samples / sec: 1033.01
Iteration:  28400, Loss function: 3.646, Average Loss: 3.852, avg. samples / sec: 982.76
Iteration:  28420, Loss function: 3.994, Average Loss: 3.851, avg. samples / sec: 1000.06
Iteration:  28440, Loss function: 3.861, Average Loss: 3.852, avg. samples / sec: 1035.68
Iteration:  28460, Loss function: 3.561, Average Loss: 3.852, avg. samples / sec: 942.97
Iteration:  28480, Loss function: 3.998, Average Loss: 3.851, avg. samples / sec: 1016.04
Iteration:  28500, Loss function: 3.759, Average Loss: 3.851, avg. samples / sec: 1065.08
Iteration:  28520, Loss function: 3.653, Average Loss: 3.850, avg. samples / sec: 1029.62
Iteration:  28540, Loss function: 3.848, Average Loss: 3.849, avg. samples / sec: 946.29
Iteration:  28560, Loss function: 4.069, Average Loss: 3.849, avg. samples / sec: 970.99
Iteration:  28580, Loss function: 3.436, Average Loss: 3.848, avg. samples / sec: 953.99
Iteration:  28600, Loss function: 3.987, Average Loss: 3.847, avg. samples / sec: 978.36
Iteration:  28620, Loss function: 4.021, Average Loss: 3.848, avg. samples / sec: 1007.10
Iteration:  28640, Loss function: 3.831, Average Loss: 3.848, avg. samples / sec: 995.42
Iteration:  28660, Loss function: 3.858, Average Loss: 3.847, avg. samples / sec: 1034.74
Iteration:  28680, Loss function: 3.655, Average Loss: 3.846, avg. samples / sec: 1002.98
Iteration:  28700, Loss function: 4.012, Average Loss: 3.848, avg. samples / sec: 1017.90
Iteration:  28720, Loss function: 3.916, Average Loss: 3.848, avg. samples / sec: 998.23
Iteration:  28740, Loss function: 3.832, Average Loss: 3.847, avg. samples / sec: 1054.48
Iteration:  28760, Loss function: 3.751, Average Loss: 3.848, avg. samples / sec: 1019.78
Iteration:  28780, Loss function: 4.026, Average Loss: 3.848, avg. samples / sec: 1001.37
Iteration:  28800, Loss function: 3.806, Average Loss: 3.849, avg. samples / sec: 1034.80
:::MLLOG {"namespace": "", "time_ms": 1639475508895, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1639475508897, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 29, "current_iter_num": 28803}}
Iteration:  28820, Loss function: 3.644, Average Loss: 3.849, avg. samples / sec: 1038.38
Iteration:  28840, Loss function: 3.855, Average Loss: 3.849, avg. samples / sec: 1014.00
Iteration:  28860, Loss function: 4.006, Average Loss: 3.849, avg. samples / sec: 1003.88
Iteration:  28880, Loss function: 3.734, Average Loss: 3.848, avg. samples / sec: 963.35
Iteration:  28900, Loss function: 3.825, Average Loss: 3.847, avg. samples / sec: 1020.55
Iteration:  28920, Loss function: 3.792, Average Loss: 3.847, avg. samples / sec: 1039.09
Iteration:  28940, Loss function: 3.638, Average Loss: 3.846, avg. samples / sec: 989.10
Iteration:  28960, Loss function: 3.697, Average Loss: 3.846, avg. samples / sec: 988.23
Iteration:  28980, Loss function: 3.726, Average Loss: 3.846, avg. samples / sec: 998.24
Iteration:  29000, Loss function: 3.506, Average Loss: 3.845, avg. samples / sec: 1001.93
Iteration:  29020, Loss function: 3.997, Average Loss: 3.845, avg. samples / sec: 1013.31
Iteration:  29040, Loss function: 3.734, Average Loss: 3.844, avg. samples / sec: 1010.49
Iteration:  29060, Loss function: 3.984, Average Loss: 3.844, avg. samples / sec: 992.12
Iteration:  29080, Loss function: 3.778, Average Loss: 3.844, avg. samples / sec: 1087.05
Iteration:  29100, Loss function: 3.865, Average Loss: 3.843, avg. samples / sec: 1004.20
Iteration:  29120, Loss function: 3.810, Average Loss: 3.843, avg. samples / sec: 1038.03
Iteration:  29140, Loss function: 3.836, Average Loss: 3.843, avg. samples / sec: 1021.69
Iteration:  29160, Loss function: 3.883, Average Loss: 3.843, avg. samples / sec: 1007.51
Iteration:  29180, Loss function: 3.972, Average Loss: 3.842, avg. samples / sec: 988.62
Iteration:  29200, Loss function: 3.699, Average Loss: 3.841, avg. samples / sec: 1009.97
Iteration:  29220, Loss function: 3.648, Average Loss: 3.841, avg. samples / sec: 967.49
Iteration:  29240, Loss function: 3.874, Average Loss: 3.841, avg. samples / sec: 1066.22
Iteration:  29260, Loss function: 3.707, Average Loss: 3.841, avg. samples / sec: 954.80
Iteration:  29280, Loss function: 4.036, Average Loss: 3.842, avg. samples / sec: 911.77
Iteration:  29300, Loss function: 3.904, Average Loss: 3.843, avg. samples / sec: 982.97
Iteration:  29320, Loss function: 3.736, Average Loss: 3.843, avg. samples / sec: 935.76
Iteration:  29340, Loss function: 3.449, Average Loss: 3.842, avg. samples / sec: 983.89
Iteration:  29360, Loss function: 3.691, Average Loss: 3.841, avg. samples / sec: 1034.29
Iteration:  29380, Loss function: 4.100, Average Loss: 3.841, avg. samples / sec: 1031.45
Iteration:  29400, Loss function: 3.570, Average Loss: 3.840, avg. samples / sec: 970.85
Iteration:  29420, Loss function: 3.477, Average Loss: 3.839, avg. samples / sec: 954.47
Iteration:  29440, Loss function: 3.904, Average Loss: 3.839, avg. samples / sec: 962.29
Iteration:  29460, Loss function: 4.025, Average Loss: 3.839, avg. samples / sec: 1018.50
Iteration:  29480, Loss function: 3.791, Average Loss: 3.839, avg. samples / sec: 946.27
Iteration:  29500, Loss function: 4.082, Average Loss: 3.839, avg. samples / sec: 953.64
Iteration:  29520, Loss function: 3.915, Average Loss: 3.839, avg. samples / sec: 1020.86
Iteration:  29540, Loss function: 3.743, Average Loss: 3.839, avg. samples / sec: 998.51
Iteration:  29560, Loss function: 3.869, Average Loss: 3.838, avg. samples / sec: 1002.32
Iteration:  29580, Loss function: 3.625, Average Loss: 3.836, avg. samples / sec: 975.93
Iteration:  29600, Loss function: 3.835, Average Loss: 3.835, avg. samples / sec: 930.15
Iteration:  29620, Loss function: 3.652, Average Loss: 3.835, avg. samples / sec: 968.87
Iteration:  29640, Loss function: 3.728, Average Loss: 3.835, avg. samples / sec: 953.97
Iteration:  29660, Loss function: 3.864, Average Loss: 3.834, avg. samples / sec: 930.61
Iteration:  29680, Loss function: 3.702, Average Loss: 3.835, avg. samples / sec: 1016.16
Iteration:  29700, Loss function: 3.939, Average Loss: 3.836, avg. samples / sec: 1020.76
Iteration:  29720, Loss function: 3.591, Average Loss: 3.835, avg. samples / sec: 991.18
Iteration:  29740, Loss function: 3.721, Average Loss: 3.835, avg. samples / sec: 1005.65
Iteration:  29760, Loss function: 3.892, Average Loss: 3.834, avg. samples / sec: 1009.62
Iteration:  29780, Loss function: 3.677, Average Loss: 3.833, avg. samples / sec: 968.24
Iteration:  29800, Loss function: 3.834, Average Loss: 3.833, avg. samples / sec: 957.63
Iteration:  29820, Loss function: 3.649, Average Loss: 3.833, avg. samples / sec: 1005.46
:::MLLOG {"namespace": "", "time_ms": 1639475626968, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1639475626970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 30, "current_iter_num": 29831}}
Iteration:  29840, Loss function: 3.880, Average Loss: 3.830, avg. samples / sec: 1054.57
Iteration:  29860, Loss function: 3.607, Average Loss: 3.829, avg. samples / sec: 1054.22
Iteration:  29880, Loss function: 3.662, Average Loss: 3.828, avg. samples / sec: 1053.15
Iteration:  29900, Loss function: 3.787, Average Loss: 3.825, avg. samples / sec: 983.32
Iteration:  29920, Loss function: 3.810, Average Loss: 3.823, avg. samples / sec: 942.86
Iteration:  29940, Loss function: 3.898, Average Loss: 3.822, avg. samples / sec: 976.95
Iteration:  29960, Loss function: 3.942, Average Loss: 3.822, avg. samples / sec: 1009.25
Iteration:  29980, Loss function: 3.694, Average Loss: 3.822, avg. samples / sec: 1064.44
Iteration:  30000, Loss function: 3.751, Average Loss: 3.820, avg. samples / sec: 1049.54
Iteration:  30020, Loss function: 3.864, Average Loss: 3.820, avg. samples / sec: 990.73
Iteration:  30040, Loss function: 3.883, Average Loss: 3.820, avg. samples / sec: 1048.73
Iteration:  30060, Loss function: 3.694, Average Loss: 3.821, avg. samples / sec: 1033.54
Iteration:  30080, Loss function: 3.579, Average Loss: 3.820, avg. samples / sec: 1002.23
Iteration:  30100, Loss function: 3.872, Average Loss: 3.821, avg. samples / sec: 995.15
Iteration:  30120, Loss function: 3.851, Average Loss: 3.821, avg. samples / sec: 995.75
Iteration:  30140, Loss function: 4.104, Average Loss: 3.821, avg. samples / sec: 1034.31
Iteration:  30160, Loss function: 3.832, Average Loss: 3.821, avg. samples / sec: 1031.74
Iteration:  30180, Loss function: 3.611, Average Loss: 3.822, avg. samples / sec: 1058.81
Iteration:  30200, Loss function: 3.709, Average Loss: 3.821, avg. samples / sec: 1035.49
Iteration:  30220, Loss function: 3.780, Average Loss: 3.820, avg. samples / sec: 1063.46
Iteration:  30240, Loss function: 3.707, Average Loss: 3.821, avg. samples / sec: 902.91
Iteration:  30260, Loss function: 3.860, Average Loss: 3.821, avg. samples / sec: 1007.03
Iteration:  30280, Loss function: 3.583, Average Loss: 3.821, avg. samples / sec: 1021.68
Iteration:  30300, Loss function: 3.753, Average Loss: 3.820, avg. samples / sec: 968.23
Iteration:  30320, Loss function: 3.732, Average Loss: 3.819, avg. samples / sec: 1084.86
Iteration:  30340, Loss function: 3.843, Average Loss: 3.819, avg. samples / sec: 1075.91
Iteration:  30360, Loss function: 3.941, Average Loss: 3.819, avg. samples / sec: 980.63
Iteration:  30380, Loss function: 3.677, Average Loss: 3.818, avg. samples / sec: 1067.19
Iteration:  30400, Loss function: 3.839, Average Loss: 3.818, avg. samples / sec: 1015.92
Iteration:  30420, Loss function: 3.676, Average Loss: 3.816, avg. samples / sec: 969.48
Iteration:  30440, Loss function: 3.604, Average Loss: 3.815, avg. samples / sec: 1004.41
Iteration:  30460, Loss function: 3.750, Average Loss: 3.815, avg. samples / sec: 1028.43
Iteration:  30480, Loss function: 3.704, Average Loss: 3.816, avg. samples / sec: 1024.90
Iteration:  30500, Loss function: 3.875, Average Loss: 3.816, avg. samples / sec: 1050.54
Iteration:  30520, Loss function: 3.922, Average Loss: 3.818, avg. samples / sec: 1015.99
Iteration:  30540, Loss function: 3.750, Average Loss: 3.817, avg. samples / sec: 1025.56
Iteration:  30560, Loss function: 3.874, Average Loss: 3.818, avg. samples / sec: 1037.74
Iteration:  30580, Loss function: 4.082, Average Loss: 3.819, avg. samples / sec: 911.11
Iteration:  30600, Loss function: 3.395, Average Loss: 3.817, avg. samples / sec: 1072.66
Iteration:  30620, Loss function: 3.628, Average Loss: 3.817, avg. samples / sec: 1021.57
Iteration:  30640, Loss function: 3.576, Average Loss: 3.816, avg. samples / sec: 1044.30
Iteration:  30660, Loss function: 3.661, Average Loss: 3.815, avg. samples / sec: 1061.39
Iteration:  30680, Loss function: 3.913, Average Loss: 3.816, avg. samples / sec: 989.25
Iteration:  30700, Loss function: 3.909, Average Loss: 3.816, avg. samples / sec: 958.21
Iteration:  30720, Loss function: 3.622, Average Loss: 3.816, avg. samples / sec: 1048.01
Iteration:  30740, Loss function: 3.699, Average Loss: 3.816, avg. samples / sec: 983.08
Iteration:  30760, Loss function: 3.841, Average Loss: 3.816, avg. samples / sec: 1027.59
Iteration:  30780, Loss function: 3.812, Average Loss: 3.815, avg. samples / sec: 1054.98
Iteration:  30800, Loss function: 3.704, Average Loss: 3.815, avg. samples / sec: 995.00
Iteration:  30820, Loss function: 3.887, Average Loss: 3.815, avg. samples / sec: 962.31
Iteration:  30840, Loss function: 3.656, Average Loss: 3.814, avg. samples / sec: 984.36
:::MLLOG {"namespace": "", "time_ms": 1639475742601, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1639475742605, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 31, "current_iter_num": 30860}}
Iteration:  30860, Loss function: 3.562, Average Loss: 3.814, avg. samples / sec: 1020.16
Iteration:  30880, Loss function: 3.678, Average Loss: 3.813, avg. samples / sec: 981.06
Iteration:  30900, Loss function: 3.701, Average Loss: 3.810, avg. samples / sec: 1022.13
Iteration:  30920, Loss function: 4.030, Average Loss: 3.810, avg. samples / sec: 1069.59
Iteration:  30940, Loss function: 3.913, Average Loss: 3.810, avg. samples / sec: 1042.97
Iteration:  30960, Loss function: 4.184, Average Loss: 3.809, avg. samples / sec: 1121.10
Iteration:  30980, Loss function: 3.765, Average Loss: 3.809, avg. samples / sec: 1018.10
Iteration:  31000, Loss function: 3.753, Average Loss: 3.809, avg. samples / sec: 1018.29
Iteration:  31020, Loss function: 3.741, Average Loss: 3.809, avg. samples / sec: 968.66
Iteration:  31040, Loss function: 3.858, Average Loss: 3.808, avg. samples / sec: 997.40
Iteration:  31060, Loss function: 4.030, Average Loss: 3.809, avg. samples / sec: 986.84
Iteration:  31080, Loss function: 4.102, Average Loss: 3.808, avg. samples / sec: 1002.70
Iteration:  31100, Loss function: 3.673, Average Loss: 3.806, avg. samples / sec: 992.14
Iteration:  31120, Loss function: 3.479, Average Loss: 3.805, avg. samples / sec: 970.92
Iteration:  31140, Loss function: 3.763, Average Loss: 3.804, avg. samples / sec: 959.72
Iteration:  31160, Loss function: 3.814, Average Loss: 3.804, avg. samples / sec: 988.23
Iteration:  31180, Loss function: 3.767, Average Loss: 3.806, avg. samples / sec: 1013.52
Iteration:  31200, Loss function: 3.937, Average Loss: 3.805, avg. samples / sec: 1072.71
Iteration:  31220, Loss function: 3.809, Average Loss: 3.806, avg. samples / sec: 1047.09
Iteration:  31240, Loss function: 3.767, Average Loss: 3.805, avg. samples / sec: 1051.44
Iteration:  31260, Loss function: 3.834, Average Loss: 3.803, avg. samples / sec: 980.67
Iteration:  31280, Loss function: 3.642, Average Loss: 3.803, avg. samples / sec: 1032.43
Iteration:  31300, Loss function: 3.546, Average Loss: 3.803, avg. samples / sec: 1075.56
Iteration:  31320, Loss function: 3.807, Average Loss: 3.802, avg. samples / sec: 1082.21
Iteration:  31340, Loss function: 3.761, Average Loss: 3.802, avg. samples / sec: 1025.84
Iteration:  31360, Loss function: 3.815, Average Loss: 3.801, avg. samples / sec: 925.75
Iteration:  31380, Loss function: 4.143, Average Loss: 3.800, avg. samples / sec: 1038.31
Iteration:  31400, Loss function: 3.965, Average Loss: 3.800, avg. samples / sec: 989.51
Iteration:  31420, Loss function: 3.794, Average Loss: 3.799, avg. samples / sec: 1036.53
Iteration:  31440, Loss function: 3.600, Average Loss: 3.797, avg. samples / sec: 983.97
Iteration:  31460, Loss function: 3.726, Average Loss: 3.797, avg. samples / sec: 979.45
Iteration:  31480, Loss function: 3.578, Average Loss: 3.796, avg. samples / sec: 1015.91
Iteration:  31500, Loss function: 3.829, Average Loss: 3.795, avg. samples / sec: 988.29
Iteration:  31520, Loss function: 3.619, Average Loss: 3.795, avg. samples / sec: 956.83
Iteration:  31540, Loss function: 4.005, Average Loss: 3.794, avg. samples / sec: 994.96
Iteration:  31560, Loss function: 3.883, Average Loss: 3.794, avg. samples / sec: 1019.18
Iteration:  31580, Loss function: 3.878, Average Loss: 3.792, avg. samples / sec: 1070.07
Iteration:  31600, Loss function: 3.681, Average Loss: 3.792, avg. samples / sec: 1025.68
Iteration:  31620, Loss function: 3.824, Average Loss: 3.793, avg. samples / sec: 1010.62
Iteration:  31640, Loss function: 3.615, Average Loss: 3.794, avg. samples / sec: 1007.33
Iteration:  31660, Loss function: 3.946, Average Loss: 3.794, avg. samples / sec: 1016.90
Iteration:  31680, Loss function: 3.749, Average Loss: 3.794, avg. samples / sec: 993.23
Iteration:  31700, Loss function: 3.794, Average Loss: 3.792, avg. samples / sec: 1085.99
Iteration:  31720, Loss function: 3.818, Average Loss: 3.793, avg. samples / sec: 960.86
Iteration:  31740, Loss function: 3.850, Average Loss: 3.792, avg. samples / sec: 1019.20
Iteration:  31760, Loss function: 4.070, Average Loss: 3.792, avg. samples / sec: 1003.31
Iteration:  31780, Loss function: 3.615, Average Loss: 3.792, avg. samples / sec: 1032.53
Iteration:  31800, Loss function: 3.834, Average Loss: 3.793, avg. samples / sec: 966.57
Iteration:  31820, Loss function: 3.996, Average Loss: 3.794, avg. samples / sec: 1014.88
Iteration:  31840, Loss function: 3.786, Average Loss: 3.794, avg. samples / sec: 964.90
Iteration:  31860, Loss function: 4.027, Average Loss: 3.795, avg. samples / sec: 978.91
Iteration:  31880, Loss function: 3.748, Average Loss: 3.796, avg. samples / sec: 988.19
:::MLLOG {"namespace": "", "time_ms": 1639475858775, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1639475858777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 32, "current_iter_num": 31889}}
Iteration:  31900, Loss function: 3.598, Average Loss: 3.795, avg. samples / sec: 996.72
Iteration:  31920, Loss function: 3.401, Average Loss: 3.794, avg. samples / sec: 1034.46
Iteration:  31940, Loss function: 4.231, Average Loss: 3.794, avg. samples / sec: 1003.13
Iteration:  31960, Loss function: 3.933, Average Loss: 3.793, avg. samples / sec: 980.79
Iteration:  31980, Loss function: 3.584, Average Loss: 3.792, avg. samples / sec: 972.34
Iteration:  32000, Loss function: 3.742, Average Loss: 3.791, avg. samples / sec: 992.61
Iteration:  32020, Loss function: 3.548, Average Loss: 3.790, avg. samples / sec: 992.65
Iteration:  32040, Loss function: 3.842, Average Loss: 3.789, avg. samples / sec: 1046.36
Iteration:  32060, Loss function: 3.679, Average Loss: 3.787, avg. samples / sec: 1047.29
Iteration:  32080, Loss function: 3.838, Average Loss: 3.787, avg. samples / sec: 981.80
Iteration:  32100, Loss function: 4.063, Average Loss: 3.787, avg. samples / sec: 993.88
Iteration:  32120, Loss function: 4.112, Average Loss: 3.786, avg. samples / sec: 1010.94
Iteration:  32140, Loss function: 3.556, Average Loss: 3.784, avg. samples / sec: 1015.42
Iteration:  32160, Loss function: 3.735, Average Loss: 3.783, avg. samples / sec: 963.43
Iteration:  32180, Loss function: 3.680, Average Loss: 3.783, avg. samples / sec: 987.50
Iteration:  32200, Loss function: 3.790, Average Loss: 3.783, avg. samples / sec: 1005.92
Iteration:  32220, Loss function: 3.775, Average Loss: 3.783, avg. samples / sec: 995.80
Iteration:  32240, Loss function: 3.557, Average Loss: 3.784, avg. samples / sec: 990.11
Iteration:  32260, Loss function: 3.643, Average Loss: 3.784, avg. samples / sec: 1007.61
Iteration:  32280, Loss function: 3.508, Average Loss: 3.784, avg. samples / sec: 1057.25
Iteration:  32300, Loss function: 3.613, Average Loss: 3.783, avg. samples / sec: 1022.05
Iteration:  32320, Loss function: 4.008, Average Loss: 3.783, avg. samples / sec: 959.77
Iteration:  32340, Loss function: 3.879, Average Loss: 3.782, avg. samples / sec: 937.34
Iteration:  32360, Loss function: 3.892, Average Loss: 3.782, avg. samples / sec: 1007.43
Iteration:  32380, Loss function: 3.772, Average Loss: 3.783, avg. samples / sec: 988.83
Iteration:  32400, Loss function: 3.635, Average Loss: 3.784, avg. samples / sec: 1088.39
Iteration:  32420, Loss function: 3.680, Average Loss: 3.785, avg. samples / sec: 1039.02
Iteration:  32440, Loss function: 3.557, Average Loss: 3.784, avg. samples / sec: 989.41
Iteration:  32460, Loss function: 3.676, Average Loss: 3.784, avg. samples / sec: 973.72
Iteration:  32480, Loss function: 3.787, Average Loss: 3.785, avg. samples / sec: 1024.78
Iteration:  32500, Loss function: 3.535, Average Loss: 3.785, avg. samples / sec: 1011.51
Iteration:  32520, Loss function: 3.793, Average Loss: 3.785, avg. samples / sec: 979.76
Iteration:  32540, Loss function: 3.762, Average Loss: 3.786, avg. samples / sec: 970.82
Iteration:  32560, Loss function: 3.689, Average Loss: 3.786, avg. samples / sec: 997.82
Iteration:  32580, Loss function: 3.797, Average Loss: 3.787, avg. samples / sec: 1064.34
Iteration:  32600, Loss function: 3.654, Average Loss: 3.786, avg. samples / sec: 979.77
Iteration:  32620, Loss function: 3.816, Average Loss: 3.787, avg. samples / sec: 980.33
Iteration:  32640, Loss function: 3.817, Average Loss: 3.787, avg. samples / sec: 969.51
Iteration:  32660, Loss function: 4.129, Average Loss: 3.788, avg. samples / sec: 1050.93
Iteration:  32680, Loss function: 3.938, Average Loss: 3.789, avg. samples / sec: 1023.07
Iteration:  32700, Loss function: 4.031, Average Loss: 3.789, avg. samples / sec: 987.48
Iteration:  32720, Loss function: 3.798, Average Loss: 3.788, avg. samples / sec: 964.38
Iteration:  32740, Loss function: 3.914, Average Loss: 3.787, avg. samples / sec: 952.01
Iteration:  32760, Loss function: 3.616, Average Loss: 3.785, avg. samples / sec: 1006.20
Iteration:  32780, Loss function: 3.788, Average Loss: 3.785, avg. samples / sec: 1016.66
Iteration:  32800, Loss function: 4.126, Average Loss: 3.786, avg. samples / sec: 979.48
Iteration:  32820, Loss function: 3.717, Average Loss: 3.786, avg. samples / sec: 1004.83
Iteration:  32840, Loss function: 3.872, Average Loss: 3.786, avg. samples / sec: 1026.20
Iteration:  32860, Loss function: 3.945, Average Loss: 3.787, avg. samples / sec: 982.02
Iteration:  32880, Loss function: 3.725, Average Loss: 3.787, avg. samples / sec: 1025.12
Iteration:  32900, Loss function: 3.839, Average Loss: 3.787, avg. samples / sec: 1055.38
:::MLLOG {"namespace": "", "time_ms": 1639475975913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1639475975915, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 33, "current_iter_num": 32917}}
Iteration:  32920, Loss function: 3.677, Average Loss: 3.785, avg. samples / sec: 955.51
Iteration:  32940, Loss function: 3.813, Average Loss: 3.784, avg. samples / sec: 1039.96
Iteration:  32960, Loss function: 4.089, Average Loss: 3.785, avg. samples / sec: 1017.06
Iteration:  32980, Loss function: 3.795, Average Loss: 3.784, avg. samples / sec: 938.93
Iteration:  33000, Loss function: 3.786, Average Loss: 3.784, avg. samples / sec: 980.92
Iteration:  33020, Loss function: 3.769, Average Loss: 3.782, avg. samples / sec: 947.05
Iteration:  33040, Loss function: 4.073, Average Loss: 3.782, avg. samples / sec: 1031.83
Iteration:  33060, Loss function: 3.870, Average Loss: 3.782, avg. samples / sec: 970.95
Iteration:  33080, Loss function: 3.651, Average Loss: 3.781, avg. samples / sec: 1005.85
Iteration:  33100, Loss function: 3.808, Average Loss: 3.779, avg. samples / sec: 1034.61
Iteration:  33120, Loss function: 3.920, Average Loss: 3.777, avg. samples / sec: 1058.92
Iteration:  33140, Loss function: 3.640, Average Loss: 3.777, avg. samples / sec: 1053.93
Iteration:  33160, Loss function: 3.735, Average Loss: 3.776, avg. samples / sec: 969.60
Iteration:  33180, Loss function: 3.740, Average Loss: 3.776, avg. samples / sec: 1014.08
Iteration:  33200, Loss function: 3.308, Average Loss: 3.776, avg. samples / sec: 1023.67
Iteration:  33220, Loss function: 3.777, Average Loss: 3.776, avg. samples / sec: 1051.52
Iteration:  33240, Loss function: 4.004, Average Loss: 3.775, avg. samples / sec: 1018.57
Iteration:  33260, Loss function: 3.745, Average Loss: 3.775, avg. samples / sec: 1012.87
Iteration:  33280, Loss function: 3.938, Average Loss: 3.774, avg. samples / sec: 1040.54
Iteration:  33300, Loss function: 3.613, Average Loss: 3.773, avg. samples / sec: 1000.32
Iteration:  33320, Loss function: 3.770, Average Loss: 3.772, avg. samples / sec: 1042.48
Iteration:  33340, Loss function: 3.691, Average Loss: 3.770, avg. samples / sec: 986.95
Iteration:  33360, Loss function: 3.655, Average Loss: 3.770, avg. samples / sec: 987.03
Iteration:  33380, Loss function: 3.625, Average Loss: 3.770, avg. samples / sec: 1024.26
Iteration:  33400, Loss function: 3.890, Average Loss: 3.769, avg. samples / sec: 1025.25
Iteration:  33420, Loss function: 3.948, Average Loss: 3.770, avg. samples / sec: 1024.96
Iteration:  33440, Loss function: 3.915, Average Loss: 3.770, avg. samples / sec: 1016.86
Iteration:  33460, Loss function: 3.579, Average Loss: 3.771, avg. samples / sec: 1029.63
Iteration:  33480, Loss function: 3.952, Average Loss: 3.771, avg. samples / sec: 1039.67
Iteration:  33500, Loss function: 3.573, Average Loss: 3.771, avg. samples / sec: 961.85
Iteration:  33520, Loss function: 4.089, Average Loss: 3.772, avg. samples / sec: 1017.71
Iteration:  33540, Loss function: 3.907, Average Loss: 3.772, avg. samples / sec: 1082.03
Iteration:  33560, Loss function: 4.020, Average Loss: 3.772, avg. samples / sec: 976.18
Iteration:  33580, Loss function: 3.793, Average Loss: 3.772, avg. samples / sec: 992.64
Iteration:  33600, Loss function: 3.672, Average Loss: 3.773, avg. samples / sec: 1007.86
Iteration:  33620, Loss function: 3.553, Average Loss: 3.772, avg. samples / sec: 996.32
Iteration:  33640, Loss function: 3.594, Average Loss: 3.772, avg. samples / sec: 1010.43
Iteration:  33660, Loss function: 4.060, Average Loss: 3.773, avg. samples / sec: 990.89
Iteration:  33680, Loss function: 3.946, Average Loss: 3.774, avg. samples / sec: 1060.83
Iteration:  33700, Loss function: 3.692, Average Loss: 3.774, avg. samples / sec: 1011.70
Iteration:  33720, Loss function: 3.525, Average Loss: 3.773, avg. samples / sec: 967.53
Iteration:  33740, Loss function: 3.582, Average Loss: 3.774, avg. samples / sec: 1044.44
Iteration:  33760, Loss function: 3.813, Average Loss: 3.774, avg. samples / sec: 959.15
Iteration:  33780, Loss function: 3.778, Average Loss: 3.774, avg. samples / sec: 994.98
Iteration:  33800, Loss function: 3.959, Average Loss: 3.775, avg. samples / sec: 1038.86
Iteration:  33820, Loss function: 3.686, Average Loss: 3.775, avg. samples / sec: 1066.05
Iteration:  33840, Loss function: 3.807, Average Loss: 3.776, avg. samples / sec: 1000.08
Iteration:  33860, Loss function: 3.690, Average Loss: 3.776, avg. samples / sec: 993.75
Iteration:  33880, Loss function: 3.812, Average Loss: 3.778, avg. samples / sec: 977.31
Iteration:  33900, Loss function: 3.916, Average Loss: 3.777, avg. samples / sec: 1005.19
Iteration:  33920, Loss function: 3.648, Average Loss: 3.776, avg. samples / sec: 1001.46
Iteration:  33940, Loss function: 3.941, Average Loss: 3.778, avg. samples / sec: 1071.52
:::MLLOG {"namespace": "", "time_ms": 1639476091971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1639476091973, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 34, "current_iter_num": 33946}}
Iteration:  33960, Loss function: 3.508, Average Loss: 3.777, avg. samples / sec: 991.37
Iteration:  33980, Loss function: 3.576, Average Loss: 3.776, avg. samples / sec: 994.21
Iteration:  34000, Loss function: 3.766, Average Loss: 3.775, avg. samples / sec: 986.06
Iteration:  34020, Loss function: 3.582, Average Loss: 3.775, avg. samples / sec: 1000.07
Iteration:  34040, Loss function: 3.709, Average Loss: 3.774, avg. samples / sec: 1044.41
Iteration:  34060, Loss function: 3.525, Average Loss: 3.774, avg. samples / sec: 1001.06
Iteration:  34080, Loss function: 3.792, Average Loss: 3.773, avg. samples / sec: 990.21
Iteration:  34100, Loss function: 3.560, Average Loss: 3.771, avg. samples / sec: 978.50
Iteration:  34120, Loss function: 3.671, Average Loss: 3.770, avg. samples / sec: 1039.99
Iteration:  34140, Loss function: 4.017, Average Loss: 3.770, avg. samples / sec: 1079.04
Iteration:  34160, Loss function: 3.623, Average Loss: 3.769, avg. samples / sec: 903.94
Iteration:  34180, Loss function: 3.814, Average Loss: 3.768, avg. samples / sec: 1010.07
Iteration:  34200, Loss function: 3.678, Average Loss: 3.768, avg. samples / sec: 1017.66
Iteration:  34220, Loss function: 3.780, Average Loss: 3.766, avg. samples / sec: 982.03
Iteration:  34240, Loss function: 3.669, Average Loss: 3.767, avg. samples / sec: 993.04
Iteration:  34260, Loss function: 3.628, Average Loss: 3.765, avg. samples / sec: 951.24
Iteration:  34280, Loss function: 3.621, Average Loss: 3.765, avg. samples / sec: 1031.54
Iteration:  34300, Loss function: 3.619, Average Loss: 3.764, avg. samples / sec: 1077.45
Iteration:  34320, Loss function: 3.547, Average Loss: 3.764, avg. samples / sec: 1050.79
Iteration:  34340, Loss function: 3.760, Average Loss: 3.762, avg. samples / sec: 1019.94
Iteration:  34360, Loss function: 3.692, Average Loss: 3.762, avg. samples / sec: 1096.97
Iteration:  34380, Loss function: 3.631, Average Loss: 3.763, avg. samples / sec: 998.49
Iteration:  34400, Loss function: 3.784, Average Loss: 3.762, avg. samples / sec: 1078.27
Iteration:  34420, Loss function: 3.755, Average Loss: 3.761, avg. samples / sec: 1057.96
Iteration:  34440, Loss function: 3.788, Average Loss: 3.761, avg. samples / sec: 936.36
Iteration:  34460, Loss function: 3.727, Average Loss: 3.762, avg. samples / sec: 974.49
Iteration:  34480, Loss function: 4.079, Average Loss: 3.762, avg. samples / sec: 1036.35
Iteration:  34500, Loss function: 4.357, Average Loss: 3.764, avg. samples / sec: 1016.20
Iteration:  34520, Loss function: 3.600, Average Loss: 3.763, avg. samples / sec: 1004.39
Iteration:  34540, Loss function: 3.637, Average Loss: 3.762, avg. samples / sec: 1025.14
Iteration:  34560, Loss function: 3.731, Average Loss: 3.761, avg. samples / sec: 1031.84
Iteration:  34580, Loss function: 3.654, Average Loss: 3.761, avg. samples / sec: 1049.86
Iteration:  34600, Loss function: 3.614, Average Loss: 3.762, avg. samples / sec: 999.90
Iteration:  34620, Loss function: 3.934, Average Loss: 3.763, avg. samples / sec: 1010.54
Iteration:  34640, Loss function: 3.990, Average Loss: 3.761, avg. samples / sec: 967.30
Iteration:  34660, Loss function: 3.952, Average Loss: 3.762, avg. samples / sec: 935.01
Iteration:  34680, Loss function: 3.895, Average Loss: 3.763, avg. samples / sec: 1071.27
Iteration:  34700, Loss function: 4.039, Average Loss: 3.762, avg. samples / sec: 990.08
Iteration:  34720, Loss function: 4.059, Average Loss: 3.763, avg. samples / sec: 1006.96
Iteration:  34740, Loss function: 3.887, Average Loss: 3.762, avg. samples / sec: 959.37
Iteration:  34760, Loss function: 3.651, Average Loss: 3.761, avg. samples / sec: 1030.00
Iteration:  34780, Loss function: 3.731, Average Loss: 3.761, avg. samples / sec: 1002.86
Iteration:  34800, Loss function: 3.856, Average Loss: 3.761, avg. samples / sec: 1051.19
Iteration:  34820, Loss function: 3.749, Average Loss: 3.761, avg. samples / sec: 1009.91
Iteration:  34840, Loss function: 3.831, Average Loss: 3.761, avg. samples / sec: 964.27
Iteration:  34860, Loss function: 3.818, Average Loss: 3.760, avg. samples / sec: 1059.24
Iteration:  34880, Loss function: 4.171, Average Loss: 3.760, avg. samples / sec: 986.88
Iteration:  34900, Loss function: 4.006, Average Loss: 3.762, avg. samples / sec: 1015.13
Iteration:  34920, Loss function: 3.448, Average Loss: 3.762, avg. samples / sec: 1007.41
Iteration:  34940, Loss function: 3.850, Average Loss: 3.762, avg. samples / sec: 1041.47
Iteration:  34960, Loss function: 4.011, Average Loss: 3.762, avg. samples / sec: 1040.17
:::MLLOG {"namespace": "", "time_ms": 1639476208235, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1639476208236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 35, "current_iter_num": 34975}}
Iteration:  34980, Loss function: 3.799, Average Loss: 3.762, avg. samples / sec: 925.65
Iteration:  35000, Loss function: 3.676, Average Loss: 3.761, avg. samples / sec: 1023.84
Iteration:  35020, Loss function: 3.831, Average Loss: 3.760, avg. samples / sec: 920.41
Iteration:  35040, Loss function: 3.622, Average Loss: 3.760, avg. samples / sec: 1007.26
Iteration:  35060, Loss function: 3.817, Average Loss: 3.760, avg. samples / sec: 977.04
Iteration:  35080, Loss function: 3.615, Average Loss: 3.760, avg. samples / sec: 988.31
Iteration:  35100, Loss function: 3.819, Average Loss: 3.757, avg. samples / sec: 980.82
Iteration:  35120, Loss function: 4.102, Average Loss: 3.757, avg. samples / sec: 975.81
Iteration:  35140, Loss function: 3.742, Average Loss: 3.758, avg. samples / sec: 942.55
Iteration:  35160, Loss function: 3.697, Average Loss: 3.757, avg. samples / sec: 1028.31
Iteration:  35180, Loss function: 4.132, Average Loss: 3.757, avg. samples / sec: 1060.38
Iteration:  35200, Loss function: 3.920, Average Loss: 3.756, avg. samples / sec: 960.59
Iteration:  35220, Loss function: 3.687, Average Loss: 3.756, avg. samples / sec: 1004.91
Iteration:  35240, Loss function: 3.468, Average Loss: 3.755, avg. samples / sec: 991.91
Iteration:  35260, Loss function: 3.645, Average Loss: 3.754, avg. samples / sec: 1052.06
Iteration:  35280, Loss function: 3.797, Average Loss: 3.754, avg. samples / sec: 972.06
Iteration:  35300, Loss function: 3.631, Average Loss: 3.753, avg. samples / sec: 1047.62
Iteration:  35320, Loss function: 4.010, Average Loss: 3.752, avg. samples / sec: 1026.93
Iteration:  35340, Loss function: 3.607, Average Loss: 3.753, avg. samples / sec: 1007.80
Iteration:  35360, Loss function: 3.599, Average Loss: 3.751, avg. samples / sec: 997.10
Iteration:  35380, Loss function: 3.785, Average Loss: 3.751, avg. samples / sec: 932.70
Iteration:  35400, Loss function: 3.817, Average Loss: 3.750, avg. samples / sec: 1014.15
Iteration:  35420, Loss function: 3.873, Average Loss: 3.751, avg. samples / sec: 1088.93
Iteration:  35440, Loss function: 3.743, Average Loss: 3.751, avg. samples / sec: 1033.02
Iteration:  35460, Loss function: 3.652, Average Loss: 3.751, avg. samples / sec: 950.42
Iteration:  35480, Loss function: 3.589, Average Loss: 3.752, avg. samples / sec: 1029.64
Iteration:  35500, Loss function: 3.610, Average Loss: 3.751, avg. samples / sec: 1011.38
Iteration:  35520, Loss function: 3.718, Average Loss: 3.750, avg. samples / sec: 1031.11
Iteration:  35540, Loss function: 3.439, Average Loss: 3.749, avg. samples / sec: 969.78
Iteration:  35560, Loss function: 3.540, Average Loss: 3.748, avg. samples / sec: 967.65
Iteration:  35580, Loss function: 3.781, Average Loss: 3.748, avg. samples / sec: 973.07
Iteration:  35600, Loss function: 3.669, Average Loss: 3.748, avg. samples / sec: 1022.90
Iteration:  35620, Loss function: 3.861, Average Loss: 3.747, avg. samples / sec: 977.33
Iteration:  35640, Loss function: 3.868, Average Loss: 3.747, avg. samples / sec: 1044.33
Iteration:  35660, Loss function: 3.756, Average Loss: 3.746, avg. samples / sec: 1057.75
Iteration:  35680, Loss function: 3.549, Average Loss: 3.746, avg. samples / sec: 1026.28
Iteration:  35700, Loss function: 3.721, Average Loss: 3.747, avg. samples / sec: 1015.31
Iteration:  35720, Loss function: 3.790, Average Loss: 3.747, avg. samples / sec: 999.04
Iteration:  35740, Loss function: 3.995, Average Loss: 3.746, avg. samples / sec: 1003.43
Iteration:  35760, Loss function: 3.788, Average Loss: 3.745, avg. samples / sec: 928.61
Iteration:  35780, Loss function: 3.665, Average Loss: 3.745, avg. samples / sec: 1026.13
Iteration:  35800, Loss function: 3.799, Average Loss: 3.745, avg. samples / sec: 1019.56
Iteration:  35820, Loss function: 4.057, Average Loss: 3.747, avg. samples / sec: 965.74
Iteration:  35840, Loss function: 3.558, Average Loss: 3.746, avg. samples / sec: 997.60
Iteration:  35860, Loss function: 3.650, Average Loss: 3.744, avg. samples / sec: 939.60
Iteration:  35880, Loss function: 3.797, Average Loss: 3.744, avg. samples / sec: 963.16
Iteration:  35900, Loss function: 3.670, Average Loss: 3.745, avg. samples / sec: 1048.72
Iteration:  35920, Loss function: 3.844, Average Loss: 3.744, avg. samples / sec: 1017.09
Iteration:  35940, Loss function: 3.698, Average Loss: 3.744, avg. samples / sec: 963.02
Iteration:  35960, Loss function: 3.678, Average Loss: 3.745, avg. samples / sec: 1032.06
Iteration:  35980, Loss function: 3.814, Average Loss: 3.747, avg. samples / sec: 1018.21
Iteration:  36000, Loss function: 3.614, Average Loss: 3.748, avg. samples / sec: 983.71
:::MLLOG {"namespace": "", "time_ms": 1639476325649, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1639476325651, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 36, "current_iter_num": 36003}}
Iteration:  36020, Loss function: 3.799, Average Loss: 3.747, avg. samples / sec: 1029.69
Iteration:  36040, Loss function: 3.502, Average Loss: 3.747, avg. samples / sec: 1005.91
Iteration:  36060, Loss function: 3.744, Average Loss: 3.746, avg. samples / sec: 1005.64
Iteration:  36080, Loss function: 3.844, Average Loss: 3.745, avg. samples / sec: 1022.23
Iteration:  36100, Loss function: 3.812, Average Loss: 3.746, avg. samples / sec: 1046.11
Iteration:  36120, Loss function: 3.712, Average Loss: 3.745, avg. samples / sec: 1056.71
Iteration:  36140, Loss function: 3.616, Average Loss: 3.743, avg. samples / sec: 1008.15
Iteration:  36160, Loss function: 3.721, Average Loss: 3.742, avg. samples / sec: 1045.12
Iteration:  36180, Loss function: 3.863, Average Loss: 3.742, avg. samples / sec: 1030.26
Iteration:  36200, Loss function: 3.683, Average Loss: 3.742, avg. samples / sec: 989.04
Iteration:  36220, Loss function: 3.789, Average Loss: 3.742, avg. samples / sec: 896.89
Iteration:  36240, Loss function: 3.606, Average Loss: 3.741, avg. samples / sec: 968.25
Iteration:  36260, Loss function: 3.668, Average Loss: 3.740, avg. samples / sec: 1081.55
Iteration:  36280, Loss function: 3.710, Average Loss: 3.740, avg. samples / sec: 962.47
Iteration:  36300, Loss function: 3.640, Average Loss: 3.739, avg. samples / sec: 986.12
Iteration:  36320, Loss function: 3.771, Average Loss: 3.738, avg. samples / sec: 974.36
Iteration:  36340, Loss function: 3.552, Average Loss: 3.737, avg. samples / sec: 945.46
Iteration:  36360, Loss function: 3.700, Average Loss: 3.737, avg. samples / sec: 950.56
Iteration:  36380, Loss function: 3.852, Average Loss: 3.738, avg. samples / sec: 1011.68
Iteration:  36400, Loss function: 3.629, Average Loss: 3.738, avg. samples / sec: 977.30
Iteration:  36420, Loss function: 3.625, Average Loss: 3.739, avg. samples / sec: 992.11
Iteration:  36440, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 965.04
Iteration:  36460, Loss function: 3.777, Average Loss: 3.739, avg. samples / sec: 1031.31
Iteration:  36480, Loss function: 3.711, Average Loss: 3.739, avg. samples / sec: 1066.33
Iteration:  36500, Loss function: 3.848, Average Loss: 3.740, avg. samples / sec: 1024.07
Iteration:  36520, Loss function: 3.739, Average Loss: 3.740, avg. samples / sec: 1006.68
Iteration:  36540, Loss function: 3.756, Average Loss: 3.741, avg. samples / sec: 1001.35
Iteration:  36560, Loss function: 3.770, Average Loss: 3.742, avg. samples / sec: 1034.31
Iteration:  36580, Loss function: 3.967, Average Loss: 3.742, avg. samples / sec: 979.56
Iteration:  36600, Loss function: 3.323, Average Loss: 3.741, avg. samples / sec: 957.74
Iteration:  36620, Loss function: 3.507, Average Loss: 3.740, avg. samples / sec: 1046.86
Iteration:  36640, Loss function: 3.666, Average Loss: 3.739, avg. samples / sec: 1069.17
Iteration:  36660, Loss function: 3.531, Average Loss: 3.738, avg. samples / sec: 983.72
Iteration:  36680, Loss function: 3.763, Average Loss: 3.737, avg. samples / sec: 1026.21
Iteration:  36700, Loss function: 4.177, Average Loss: 3.739, avg. samples / sec: 1065.64
Iteration:  36720, Loss function: 3.712, Average Loss: 3.739, avg. samples / sec: 990.67
Iteration:  36740, Loss function: 3.858, Average Loss: 3.739, avg. samples / sec: 1042.15
Iteration:  36760, Loss function: 3.440, Average Loss: 3.740, avg. samples / sec: 986.93
Iteration:  36780, Loss function: 3.978, Average Loss: 3.740, avg. samples / sec: 944.63
Iteration:  36800, Loss function: 3.739, Average Loss: 3.741, avg. samples / sec: 1006.42
Iteration:  36820, Loss function: 3.682, Average Loss: 3.740, avg. samples / sec: 1022.86
Iteration:  36840, Loss function: 3.621, Average Loss: 3.740, avg. samples / sec: 1044.39
Iteration:  36860, Loss function: 3.598, Average Loss: 3.740, avg. samples / sec: 1073.12
Iteration:  36880, Loss function: 3.571, Average Loss: 3.741, avg. samples / sec: 997.34
Iteration:  36900, Loss function: 3.593, Average Loss: 3.740, avg. samples / sec: 962.75
Iteration:  36920, Loss function: 3.551, Average Loss: 3.740, avg. samples / sec: 1020.60
Iteration:  36940, Loss function: 3.803, Average Loss: 3.740, avg. samples / sec: 993.26
Iteration:  36960, Loss function: 3.631, Average Loss: 3.740, avg. samples / sec: 1026.60
Iteration:  36980, Loss function: 3.815, Average Loss: 3.740, avg. samples / sec: 1021.72
Iteration:  37000, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 958.23
Iteration:  37020, Loss function: 3.527, Average Loss: 3.740, avg. samples / sec: 1017.06
:::MLLOG {"namespace": "", "time_ms": 1639476442463, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1639476442465, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 37, "current_iter_num": 37032}}
Iteration:  37040, Loss function: 3.645, Average Loss: 3.740, avg. samples / sec: 884.66
Iteration:  37060, Loss function: 3.576, Average Loss: 3.739, avg. samples / sec: 1008.06
Iteration:  37080, Loss function: 3.719, Average Loss: 3.737, avg. samples / sec: 949.26
Iteration:  37100, Loss function: 3.729, Average Loss: 3.737, avg. samples / sec: 1035.52
Iteration:  37120, Loss function: 3.569, Average Loss: 3.735, avg. samples / sec: 974.84
Iteration:  37140, Loss function: 3.793, Average Loss: 3.736, avg. samples / sec: 1003.44
Iteration:  37160, Loss function: 3.732, Average Loss: 3.735, avg. samples / sec: 973.19
Iteration:  37180, Loss function: 3.470, Average Loss: 3.735, avg. samples / sec: 1033.14
Iteration:  37200, Loss function: 3.650, Average Loss: 3.735, avg. samples / sec: 979.26
Iteration:  37220, Loss function: 3.754, Average Loss: 3.733, avg. samples / sec: 1034.05
Iteration:  37240, Loss function: 3.671, Average Loss: 3.733, avg. samples / sec: 946.82
Iteration:  37260, Loss function: 3.770, Average Loss: 3.732, avg. samples / sec: 1008.27
Iteration:  37280, Loss function: 3.780, Average Loss: 3.731, avg. samples / sec: 1030.03
Iteration:  37300, Loss function: 3.837, Average Loss: 3.731, avg. samples / sec: 1028.47
Iteration:  37320, Loss function: 3.853, Average Loss: 3.733, avg. samples / sec: 1081.07
Iteration:  37340, Loss function: 3.724, Average Loss: 3.732, avg. samples / sec: 976.26
Iteration:  37360, Loss function: 3.698, Average Loss: 3.732, avg. samples / sec: 989.43
Iteration:  37380, Loss function: 4.033, Average Loss: 3.732, avg. samples / sec: 1037.82
Iteration:  37400, Loss function: 3.854, Average Loss: 3.731, avg. samples / sec: 1002.57
Iteration:  37420, Loss function: 3.631, Average Loss: 3.730, avg. samples / sec: 975.48
Iteration:  37440, Loss function: 4.096, Average Loss: 3.729, avg. samples / sec: 984.14
Iteration:  37460, Loss function: 3.753, Average Loss: 3.730, avg. samples / sec: 1045.14
Iteration:  37480, Loss function: 3.501, Average Loss: 3.729, avg. samples / sec: 950.89
Iteration:  37500, Loss function: 3.545, Average Loss: 3.731, avg. samples / sec: 957.80
Iteration:  37520, Loss function: 3.950, Average Loss: 3.731, avg. samples / sec: 988.80
Iteration:  37540, Loss function: 3.820, Average Loss: 3.730, avg. samples / sec: 1018.01
Iteration:  37560, Loss function: 3.327, Average Loss: 3.729, avg. samples / sec: 1039.87
Iteration:  37580, Loss function: 3.825, Average Loss: 3.730, avg. samples / sec: 1006.79
Iteration:  37600, Loss function: 3.630, Average Loss: 3.729, avg. samples / sec: 980.24
Iteration:  37620, Loss function: 3.582, Average Loss: 3.730, avg. samples / sec: 992.15
Iteration:  37640, Loss function: 3.615, Average Loss: 3.731, avg. samples / sec: 978.65
Iteration:  37660, Loss function: 3.619, Average Loss: 3.730, avg. samples / sec: 938.20
Iteration:  37680, Loss function: 3.861, Average Loss: 3.731, avg. samples / sec: 969.48
Iteration:  37700, Loss function: 3.672, Average Loss: 3.731, avg. samples / sec: 1015.78
Iteration:  37720, Loss function: 3.656, Average Loss: 3.730, avg. samples / sec: 924.37
Iteration:  37740, Loss function: 3.681, Average Loss: 3.730, avg. samples / sec: 999.75
Iteration:  37760, Loss function: 3.728, Average Loss: 3.729, avg. samples / sec: 1069.21
Iteration:  37780, Loss function: 3.952, Average Loss: 3.730, avg. samples / sec: 1025.10
Iteration:  37800, Loss function: 3.812, Average Loss: 3.730, avg. samples / sec: 1013.25
Iteration:  37820, Loss function: 3.538, Average Loss: 3.730, avg. samples / sec: 1059.42
Iteration:  37840, Loss function: 3.483, Average Loss: 3.732, avg. samples / sec: 1028.25
Iteration:  37860, Loss function: 3.733, Average Loss: 3.732, avg. samples / sec: 985.33
Iteration:  37880, Loss function: 4.052, Average Loss: 3.733, avg. samples / sec: 1030.87
Iteration:  37900, Loss function: 3.719, Average Loss: 3.733, avg. samples / sec: 1023.33
Iteration:  37920, Loss function: 3.632, Average Loss: 3.733, avg. samples / sec: 1078.46
Iteration:  37940, Loss function: 3.794, Average Loss: 3.731, avg. samples / sec: 1010.22
Iteration:  37960, Loss function: 3.487, Average Loss: 3.731, avg. samples / sec: 1013.90
Iteration:  37980, Loss function: 3.710, Average Loss: 3.731, avg. samples / sec: 1051.18
Iteration:  38000, Loss function: 3.718, Average Loss: 3.730, avg. samples / sec: 983.36
Iteration:  38020, Loss function: 3.884, Average Loss: 3.731, avg. samples / sec: 1009.37
Iteration:  38040, Loss function: 3.567, Average Loss: 3.730, avg. samples / sec: 1096.63
Iteration:  38060, Loss function: 3.828, Average Loss: 3.731, avg. samples / sec: 1032.68
:::MLLOG {"namespace": "", "time_ms": 1639476559316, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1639476559318, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 38, "current_iter_num": 38061}}
Iteration:  38080, Loss function: 3.612, Average Loss: 3.729, avg. samples / sec: 1038.33
Iteration:  38100, Loss function: 3.319, Average Loss: 3.728, avg. samples / sec: 1061.42
Iteration:  38120, Loss function: 3.924, Average Loss: 3.727, avg. samples / sec: 966.71
Iteration:  38140, Loss function: 3.765, Average Loss: 3.726, avg. samples / sec: 973.22
Iteration:  38160, Loss function: 3.617, Average Loss: 3.724, avg. samples / sec: 1052.36
Iteration:  38180, Loss function: 3.774, Average Loss: 3.724, avg. samples / sec: 956.14
Iteration:  38200, Loss function: 3.506, Average Loss: 3.723, avg. samples / sec: 1069.14
Iteration:  38220, Loss function: 3.661, Average Loss: 3.722, avg. samples / sec: 1070.00
Iteration:  38240, Loss function: 3.677, Average Loss: 3.721, avg. samples / sec: 1002.18
Iteration:  38260, Loss function: 3.585, Average Loss: 3.719, avg. samples / sec: 934.22
Iteration:  38280, Loss function: 3.663, Average Loss: 3.719, avg. samples / sec: 1014.40
Iteration:  38300, Loss function: 3.310, Average Loss: 3.719, avg. samples / sec: 931.30
Iteration:  38320, Loss function: 3.512, Average Loss: 3.719, avg. samples / sec: 972.64
Iteration:  38340, Loss function: 3.471, Average Loss: 3.717, avg. samples / sec: 979.68
Iteration:  38360, Loss function: 3.741, Average Loss: 3.718, avg. samples / sec: 950.18
Iteration:  38380, Loss function: 4.283, Average Loss: 3.719, avg. samples / sec: 1038.63
Iteration:  38400, Loss function: 3.664, Average Loss: 3.719, avg. samples / sec: 1043.23
Iteration:  38420, Loss function: 3.874, Average Loss: 3.718, avg. samples / sec: 938.17
Iteration:  38440, Loss function: 3.823, Average Loss: 3.718, avg. samples / sec: 1069.73
Iteration:  38460, Loss function: 3.624, Average Loss: 3.716, avg. samples / sec: 1019.86
Iteration:  38480, Loss function: 3.657, Average Loss: 3.716, avg. samples / sec: 1089.39
Iteration:  38500, Loss function: 3.699, Average Loss: 3.715, avg. samples / sec: 1001.97
Iteration:  38520, Loss function: 3.871, Average Loss: 3.717, avg. samples / sec: 1015.13
Iteration:  38540, Loss function: 3.717, Average Loss: 3.716, avg. samples / sec: 994.95
Iteration:  38560, Loss function: 3.498, Average Loss: 3.715, avg. samples / sec: 1088.61
Iteration:  38580, Loss function: 3.617, Average Loss: 3.715, avg. samples / sec: 966.54
Iteration:  38600, Loss function: 3.937, Average Loss: 3.715, avg. samples / sec: 1012.28
Iteration:  38620, Loss function: 3.779, Average Loss: 3.715, avg. samples / sec: 986.02
Iteration:  38640, Loss function: 3.916, Average Loss: 3.714, avg. samples / sec: 1031.06
Iteration:  38660, Loss function: 3.851, Average Loss: 3.716, avg. samples / sec: 1001.10
Iteration:  38680, Loss function: 3.637, Average Loss: 3.716, avg. samples / sec: 990.72
Iteration:  38700, Loss function: 3.853, Average Loss: 3.718, avg. samples / sec: 979.38
Iteration:  38720, Loss function: 3.887, Average Loss: 3.717, avg. samples / sec: 1020.94
Iteration:  38740, Loss function: 3.649, Average Loss: 3.717, avg. samples / sec: 977.75
Iteration:  38760, Loss function: 3.950, Average Loss: 3.718, avg. samples / sec: 1029.48
Iteration:  38780, Loss function: 3.727, Average Loss: 3.717, avg. samples / sec: 1023.53
Iteration:  38800, Loss function: 3.735, Average Loss: 3.716, avg. samples / sec: 980.54
Iteration:  38820, Loss function: 3.591, Average Loss: 3.716, avg. samples / sec: 1041.99
Iteration:  38840, Loss function: 3.705, Average Loss: 3.718, avg. samples / sec: 1037.07
Iteration:  38860, Loss function: 3.786, Average Loss: 3.716, avg. samples / sec: 991.90
Iteration:  38880, Loss function: 3.784, Average Loss: 3.716, avg. samples / sec: 1004.32
Iteration:  38900, Loss function: 3.928, Average Loss: 3.717, avg. samples / sec: 930.73
Iteration:  38920, Loss function: 3.719, Average Loss: 3.719, avg. samples / sec: 1006.05
Iteration:  38940, Loss function: 3.837, Average Loss: 3.720, avg. samples / sec: 1031.36
Iteration:  38960, Loss function: 3.594, Average Loss: 3.720, avg. samples / sec: 1018.40
Iteration:  38980, Loss function: 3.694, Average Loss: 3.719, avg. samples / sec: 1046.33
Iteration:  39000, Loss function: 3.838, Average Loss: 3.719, avg. samples / sec: 959.22
Iteration:  39020, Loss function: 3.417, Average Loss: 3.717, avg. samples / sec: 974.61
Iteration:  39040, Loss function: 3.901, Average Loss: 3.718, avg. samples / sec: 942.19
Iteration:  39060, Loss function: 3.775, Average Loss: 3.718, avg. samples / sec: 931.39
Iteration:  39080, Loss function: 3.577, Average Loss: 3.719, avg. samples / sec: 938.05
:::MLLOG {"namespace": "", "time_ms": 1639476676513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1639476676515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 39, "current_iter_num": 39089}}
Iteration:  39100, Loss function: 3.683, Average Loss: 3.719, avg. samples / sec: 1016.21
Iteration:  39120, Loss function: 3.462, Average Loss: 3.717, avg. samples / sec: 1045.77
Iteration:  39140, Loss function: 3.606, Average Loss: 3.717, avg. samples / sec: 952.21
Iteration:  39160, Loss function: 3.609, Average Loss: 3.716, avg. samples / sec: 994.85
Iteration:  39180, Loss function: 3.686, Average Loss: 3.716, avg. samples / sec: 973.62
Iteration:  39200, Loss function: 3.681, Average Loss: 3.716, avg. samples / sec: 979.71
Iteration:  39220, Loss function: 3.412, Average Loss: 3.715, avg. samples / sec: 1036.05
Iteration:  39240, Loss function: 3.637, Average Loss: 3.715, avg. samples / sec: 1001.69
Iteration:  39260, Loss function: 3.942, Average Loss: 3.714, avg. samples / sec: 982.99
Iteration:  39280, Loss function: 3.752, Average Loss: 3.714, avg. samples / sec: 1020.53
Iteration:  39300, Loss function: 3.771, Average Loss: 3.714, avg. samples / sec: 970.18
Iteration:  39320, Loss function: 3.723, Average Loss: 3.714, avg. samples / sec: 1040.59
Iteration:  39340, Loss function: 3.654, Average Loss: 3.714, avg. samples / sec: 980.74
Iteration:  39360, Loss function: 3.627, Average Loss: 3.714, avg. samples / sec: 899.41
Iteration:  39380, Loss function: 3.775, Average Loss: 3.713, avg. samples / sec: 964.51
Iteration:  39400, Loss function: 3.666, Average Loss: 3.713, avg. samples / sec: 969.94
Iteration:  39420, Loss function: 3.760, Average Loss: 3.713, avg. samples / sec: 1004.72
Iteration:  39440, Loss function: 3.768, Average Loss: 3.713, avg. samples / sec: 955.89
Iteration:  39460, Loss function: 3.547, Average Loss: 3.712, avg. samples / sec: 1023.78
Iteration:  39480, Loss function: 3.636, Average Loss: 3.712, avg. samples / sec: 1006.55
Iteration:  39500, Loss function: 3.592, Average Loss: 3.711, avg. samples / sec: 1023.54
Iteration:  39520, Loss function: 3.556, Average Loss: 3.710, avg. samples / sec: 964.80
Iteration:  39540, Loss function: 3.342, Average Loss: 3.710, avg. samples / sec: 1055.00
Iteration:  39560, Loss function: 3.560, Average Loss: 3.710, avg. samples / sec: 1008.52
Iteration:  39580, Loss function: 3.761, Average Loss: 3.709, avg. samples / sec: 993.90
Iteration:  39600, Loss function: 3.772, Average Loss: 3.708, avg. samples / sec: 1038.40
Iteration:  39620, Loss function: 3.868, Average Loss: 3.707, avg. samples / sec: 1049.77
Iteration:  39640, Loss function: 3.472, Average Loss: 3.707, avg. samples / sec: 1002.38
Iteration:  39660, Loss function: 3.686, Average Loss: 3.708, avg. samples / sec: 1009.01
Iteration:  39680, Loss function: 3.697, Average Loss: 3.708, avg. samples / sec: 955.80
Iteration:  39700, Loss function: 3.698, Average Loss: 3.708, avg. samples / sec: 1000.81
Iteration:  39720, Loss function: 3.662, Average Loss: 3.709, avg. samples / sec: 1024.65
Iteration:  39740, Loss function: 3.835, Average Loss: 3.708, avg. samples / sec: 991.42
Iteration:  39760, Loss function: 3.721, Average Loss: 3.708, avg. samples / sec: 990.43
Iteration:  39780, Loss function: 3.841, Average Loss: 3.708, avg. samples / sec: 1011.16
Iteration:  39800, Loss function: 3.878, Average Loss: 3.708, avg. samples / sec: 948.18
Iteration:  39820, Loss function: 3.584, Average Loss: 3.708, avg. samples / sec: 939.52
Iteration:  39840, Loss function: 3.633, Average Loss: 3.708, avg. samples / sec: 1027.20
Iteration:  39860, Loss function: 3.417, Average Loss: 3.709, avg. samples / sec: 987.23
Iteration:  39880, Loss function: 3.645, Average Loss: 3.708, avg. samples / sec: 995.84
Iteration:  39900, Loss function: 3.746, Average Loss: 3.708, avg. samples / sec: 1047.46
Iteration:  39920, Loss function: 3.865, Average Loss: 3.708, avg. samples / sec: 928.49
Iteration:  39940, Loss function: 3.979, Average Loss: 3.708, avg. samples / sec: 925.47
Iteration:  39960, Loss function: 3.532, Average Loss: 3.707, avg. samples / sec: 1014.27
Iteration:  39980, Loss function: 3.766, Average Loss: 3.708, avg. samples / sec: 1023.94
Iteration:  40000, Loss function: 3.789, Average Loss: 3.709, avg. samples / sec: 1047.73
Iteration:  40020, Loss function: 3.724, Average Loss: 3.708, avg. samples / sec: 919.28
Iteration:  40040, Loss function: 3.475, Average Loss: 3.708, avg. samples / sec: 1034.68
Iteration:  40060, Loss function: 3.603, Average Loss: 3.707, avg. samples / sec: 1016.67
Iteration:  40080, Loss function: 3.448, Average Loss: 3.707, avg. samples / sec: 888.20
Iteration:  40100, Loss function: 3.736, Average Loss: 3.708, avg. samples / sec: 950.50
:::MLLOG {"namespace": "", "time_ms": 1639476794814, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1639476794816, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 40, "current_iter_num": 40118}}
Iteration:  40120, Loss function: 3.895, Average Loss: 3.708, avg. samples / sec: 999.08
Iteration:  40140, Loss function: 3.710, Average Loss: 3.707, avg. samples / sec: 969.16
Iteration:  40160, Loss function: 3.843, Average Loss: 3.707, avg. samples / sec: 894.44
Iteration:  40180, Loss function: 3.861, Average Loss: 3.707, avg. samples / sec: 996.11
Iteration:  40200, Loss function: 3.823, Average Loss: 3.708, avg. samples / sec: 1020.09
Iteration:  40220, Loss function: 3.764, Average Loss: 3.707, avg. samples / sec: 1056.29
Iteration:  40240, Loss function: 3.738, Average Loss: 3.705, avg. samples / sec: 979.84
Iteration:  40260, Loss function: 3.824, Average Loss: 3.705, avg. samples / sec: 945.90
Iteration:  40280, Loss function: 3.620, Average Loss: 3.705, avg. samples / sec: 1007.85
Iteration:  40300, Loss function: 3.281, Average Loss: 3.703, avg. samples / sec: 1034.87
Iteration:  40320, Loss function: 3.498, Average Loss: 3.703, avg. samples / sec: 1025.23
Iteration:  40340, Loss function: 3.580, Average Loss: 3.703, avg. samples / sec: 1034.67
Iteration:  40360, Loss function: 3.546, Average Loss: 3.702, avg. samples / sec: 1032.93
Iteration:  40380, Loss function: 3.704, Average Loss: 3.700, avg. samples / sec: 980.57
Iteration:  40400, Loss function: 3.830, Average Loss: 3.701, avg. samples / sec: 1013.77
Iteration:  40420, Loss function: 3.743, Average Loss: 3.700, avg. samples / sec: 949.04
Iteration:  40440, Loss function: 3.661, Average Loss: 3.699, avg. samples / sec: 967.94
Iteration:  40460, Loss function: 3.868, Average Loss: 3.699, avg. samples / sec: 985.22
Iteration:  40480, Loss function: 3.628, Average Loss: 3.699, avg. samples / sec: 918.69
Iteration:  40500, Loss function: 3.896, Average Loss: 3.698, avg. samples / sec: 984.09
Iteration:  40520, Loss function: 3.743, Average Loss: 3.698, avg. samples / sec: 989.73
Iteration:  40540, Loss function: 3.766, Average Loss: 3.698, avg. samples / sec: 1058.98
Iteration:  40560, Loss function: 3.582, Average Loss: 3.697, avg. samples / sec: 998.32
Iteration:  40580, Loss function: 3.543, Average Loss: 3.695, avg. samples / sec: 966.04
Iteration:  40600, Loss function: 3.880, Average Loss: 3.696, avg. samples / sec: 1017.03
Iteration:  40620, Loss function: 3.696, Average Loss: 3.696, avg. samples / sec: 983.33
Iteration:  40640, Loss function: 4.011, Average Loss: 3.696, avg. samples / sec: 968.77
Iteration:  40660, Loss function: 3.620, Average Loss: 3.696, avg. samples / sec: 1000.53
Iteration:  40680, Loss function: 3.780, Average Loss: 3.696, avg. samples / sec: 1000.87
Iteration:  40700, Loss function: 3.819, Average Loss: 3.696, avg. samples / sec: 980.14
Iteration:  40720, Loss function: 3.461, Average Loss: 3.695, avg. samples / sec: 959.50
Iteration:  40740, Loss function: 3.886, Average Loss: 3.696, avg. samples / sec: 1028.25
Iteration:  40760, Loss function: 3.600, Average Loss: 3.696, avg. samples / sec: 1097.20
Iteration:  40780, Loss function: 3.935, Average Loss: 3.696, avg. samples / sec: 1032.20
Iteration:  40800, Loss function: 3.712, Average Loss: 3.697, avg. samples / sec: 1033.01
Iteration:  40820, Loss function: 3.686, Average Loss: 3.697, avg. samples / sec: 977.05
Iteration:  40840, Loss function: 3.709, Average Loss: 3.697, avg. samples / sec: 1057.22
Iteration:  40860, Loss function: 3.855, Average Loss: 3.697, avg. samples / sec: 961.49
Iteration:  40880, Loss function: 3.679, Average Loss: 3.697, avg. samples / sec: 1033.52
Iteration:  40900, Loss function: 3.541, Average Loss: 3.697, avg. samples / sec: 1034.46
Iteration:  40920, Loss function: 3.770, Average Loss: 3.699, avg. samples / sec: 1015.08
Iteration:  40940, Loss function: 3.659, Average Loss: 3.699, avg. samples / sec: 999.18
Iteration:  40960, Loss function: 3.562, Average Loss: 3.698, avg. samples / sec: 1015.15
Iteration:  40980, Loss function: 3.394, Average Loss: 3.697, avg. samples / sec: 1080.71
Iteration:  41000, Loss function: 3.579, Average Loss: 3.695, avg. samples / sec: 1011.87
Iteration:  41020, Loss function: 4.054, Average Loss: 3.695, avg. samples / sec: 997.13
Iteration:  41040, Loss function: 4.015, Average Loss: 3.695, avg. samples / sec: 1052.84
Iteration:  41060, Loss function: 3.467, Average Loss: 3.696, avg. samples / sec: 947.98
Iteration:  41080, Loss function: 3.545, Average Loss: 3.696, avg. samples / sec: 967.40
Iteration:  41100, Loss function: 3.827, Average Loss: 3.696, avg. samples / sec: 954.44
Iteration:  41120, Loss function: 3.756, Average Loss: 3.696, avg. samples / sec: 1034.54
Iteration:  41140, Loss function: 3.530, Average Loss: 3.696, avg. samples / sec: 1088.25
:::MLLOG {"namespace": "", "time_ms": 1639476911879, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 40}}
Predicting Ended, total time: 36.76 s
:::MLLOG {"namespace": "", "time_ms": 1639476948735, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639476948801, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 41, "epoch_count": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639476948801, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 41, "current_iter_num": 41146}}
Loading and preparing results...
Iteration:  41160, Loss function: 3.567, Average Loss: 3.694, avg. samples / sec: 58.45
DONE (t=1.69s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  41180, Loss function: 3.901, Average Loss: 3.693, avg. samples / sec: 1205.75
Iteration:  41200, Loss function: 3.526, Average Loss: 3.692, avg. samples / sec: 1214.84
DONE (t=4.76s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19897
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.35606
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.20278
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28237
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.20132
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.29423
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.31021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.19897 AP goal: 0.23000
Iteration:  41220, Loss function: 3.830, Average Loss: 3.690, avg. samples / sec: 1218.51
:::MLLOG {"namespace": "", "time_ms": 1639476955998, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639476955999, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19897366720942974, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639476955999, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 40}}
Iteration:  41240, Loss function: 3.613, Average Loss: 3.688, avg. samples / sec: 1220.63
Iteration:  41260, Loss function: 3.714, Average Loss: 3.688, avg. samples / sec: 1207.15
Iteration:  41280, Loss function: 3.577, Average Loss: 3.687, avg. samples / sec: 1152.47
Iteration:  41300, Loss function: 3.558, Average Loss: 3.686, avg. samples / sec: 1179.08
Iteration:  41320, Loss function: 3.614, Average Loss: 3.685, avg. samples / sec: 1168.30
Iteration:  41340, Loss function: 3.565, Average Loss: 3.684, avg. samples / sec: 1218.80
Iteration:  41360, Loss function: 3.969, Average Loss: 3.684, avg. samples / sec: 1227.77
Iteration:  41380, Loss function: 3.833, Average Loss: 3.684, avg. samples / sec: 1234.80
Iteration:  41400, Loss function: 3.966, Average Loss: 3.684, avg. samples / sec: 1182.04
Iteration:  41420, Loss function: 3.980, Average Loss: 3.684, avg. samples / sec: 838.81
Iteration:  41440, Loss function: 3.351, Average Loss: 3.684, avg. samples / sec: 981.54
Iteration:  41460, Loss function: 3.580, Average Loss: 3.684, avg. samples / sec: 1002.46
Iteration:  41480, Loss function: 3.470, Average Loss: 3.685, avg. samples / sec: 1063.61
Iteration:  41500, Loss function: 4.216, Average Loss: 3.685, avg. samples / sec: 1131.32
Iteration:  41520, Loss function: 3.789, Average Loss: 3.685, avg. samples / sec: 942.58
Iteration:  41540, Loss function: 3.537, Average Loss: 3.685, avg. samples / sec: 958.14
Iteration:  41560, Loss function: 3.804, Average Loss: 3.685, avg. samples / sec: 995.00
Iteration:  41580, Loss function: 3.354, Average Loss: 3.684, avg. samples / sec: 1000.79
Iteration:  41600, Loss function: 3.733, Average Loss: 3.684, avg. samples / sec: 937.57
Iteration:  41620, Loss function: 3.719, Average Loss: 3.684, avg. samples / sec: 979.19
Iteration:  41640, Loss function: 3.795, Average Loss: 3.684, avg. samples / sec: 1026.53
Iteration:  41660, Loss function: 3.733, Average Loss: 3.684, avg. samples / sec: 987.63
Iteration:  41680, Loss function: 3.669, Average Loss: 3.684, avg. samples / sec: 1017.95
Iteration:  41700, Loss function: 3.784, Average Loss: 3.685, avg. samples / sec: 997.82
Iteration:  41720, Loss function: 3.516, Average Loss: 3.683, avg. samples / sec: 984.59
Iteration:  41740, Loss function: 3.583, Average Loss: 3.683, avg. samples / sec: 977.04
Iteration:  41760, Loss function: 3.600, Average Loss: 3.683, avg. samples / sec: 936.09
Iteration:  41780, Loss function: 3.681, Average Loss: 3.682, avg. samples / sec: 1021.58
Iteration:  41800, Loss function: 3.637, Average Loss: 3.681, avg. samples / sec: 875.52
Iteration:  41820, Loss function: 3.660, Average Loss: 3.679, avg. samples / sec: 1004.55
Iteration:  41840, Loss function: 3.612, Average Loss: 3.679, avg. samples / sec: 1037.27
Iteration:  41860, Loss function: 3.731, Average Loss: 3.678, avg. samples / sec: 1006.46
Iteration:  41880, Loss function: 3.539, Average Loss: 3.677, avg. samples / sec: 1017.85
Iteration:  41900, Loss function: 3.767, Average Loss: 3.677, avg. samples / sec: 983.33
Iteration:  41920, Loss function: 3.666, Average Loss: 3.678, avg. samples / sec: 993.34
Iteration:  41940, Loss function: 3.513, Average Loss: 3.677, avg. samples / sec: 923.20
Iteration:  41960, Loss function: 3.880, Average Loss: 3.677, avg. samples / sec: 894.46
Iteration:  41980, Loss function: 3.510, Average Loss: 3.677, avg. samples / sec: 1025.53
Iteration:  42000, Loss function: 4.014, Average Loss: 3.677, avg. samples / sec: 1072.17
Iteration:  42020, Loss function: 3.707, Average Loss: 3.677, avg. samples / sec: 964.45
Iteration:  42040, Loss function: 3.687, Average Loss: 3.678, avg. samples / sec: 1029.67
Iteration:  42060, Loss function: 3.878, Average Loss: 3.678, avg. samples / sec: 992.45
Iteration:  42080, Loss function: 3.632, Average Loss: 3.678, avg. samples / sec: 1046.73
Iteration:  42100, Loss function: 4.009, Average Loss: 3.679, avg. samples / sec: 1039.83
Iteration:  42120, Loss function: 3.525, Average Loss: 3.679, avg. samples / sec: 1027.75
Iteration:  42140, Loss function: 3.750, Average Loss: 3.679, avg. samples / sec: 962.90
Iteration:  42160, Loss function: 3.545, Average Loss: 3.678, avg. samples / sec: 1006.18
:::MLLOG {"namespace": "", "time_ms": 1639477062345, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639477062347, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 42, "current_iter_num": 42175}}
Iteration:  42180, Loss function: 3.537, Average Loss: 3.678, avg. samples / sec: 1015.42
Iteration:  42200, Loss function: 3.335, Average Loss: 3.678, avg. samples / sec: 994.17
Iteration:  42220, Loss function: 3.515, Average Loss: 3.677, avg. samples / sec: 961.96
Iteration:  42240, Loss function: 3.732, Average Loss: 3.676, avg. samples / sec: 991.88
Iteration:  42260, Loss function: 3.703, Average Loss: 3.676, avg. samples / sec: 977.39
Iteration:  42280, Loss function: 3.537, Average Loss: 3.675, avg. samples / sec: 970.28
Iteration:  42300, Loss function: 3.510, Average Loss: 3.674, avg. samples / sec: 1015.58
Iteration:  42320, Loss function: 3.949, Average Loss: 3.675, avg. samples / sec: 1020.01
Iteration:  42340, Loss function: 3.550, Average Loss: 3.675, avg. samples / sec: 1043.03
Iteration:  42360, Loss function: 3.609, Average Loss: 3.674, avg. samples / sec: 1055.44
Iteration:  42380, Loss function: 3.861, Average Loss: 3.675, avg. samples / sec: 1014.29
Iteration:  42400, Loss function: 3.707, Average Loss: 3.675, avg. samples / sec: 1027.66
Iteration:  42420, Loss function: 3.897, Average Loss: 3.675, avg. samples / sec: 993.48
Iteration:  42440, Loss function: 3.471, Average Loss: 3.674, avg. samples / sec: 986.24
Iteration:  42460, Loss function: 3.794, Average Loss: 3.674, avg. samples / sec: 1025.72
Iteration:  42480, Loss function: 3.632, Average Loss: 3.674, avg. samples / sec: 969.26
Iteration:  42500, Loss function: 3.757, Average Loss: 3.674, avg. samples / sec: 1051.88
Iteration:  42520, Loss function: 3.773, Average Loss: 3.674, avg. samples / sec: 1015.98
Iteration:  42540, Loss function: 3.541, Average Loss: 3.674, avg. samples / sec: 978.58
Iteration:  42560, Loss function: 3.608, Average Loss: 3.673, avg. samples / sec: 989.37
Iteration:  42580, Loss function: 3.695, Average Loss: 3.674, avg. samples / sec: 1049.78
Iteration:  42600, Loss function: 3.902, Average Loss: 3.673, avg. samples / sec: 991.06
Iteration:  42620, Loss function: 3.470, Average Loss: 3.673, avg. samples / sec: 1035.49
Iteration:  42640, Loss function: 3.749, Average Loss: 3.673, avg. samples / sec: 992.39
Iteration:  42660, Loss function: 3.762, Average Loss: 3.673, avg. samples / sec: 1033.77
Iteration:  42680, Loss function: 3.731, Average Loss: 3.673, avg. samples / sec: 1056.10
Iteration:  42700, Loss function: 3.725, Average Loss: 3.672, avg. samples / sec: 1027.20
Iteration:  42720, Loss function: 3.716, Average Loss: 3.672, avg. samples / sec: 962.70
Iteration:  42740, Loss function: 3.415, Average Loss: 3.671, avg. samples / sec: 1043.31
Iteration:  42760, Loss function: 3.782, Average Loss: 3.670, avg. samples / sec: 1012.83
Iteration:  42780, Loss function: 3.595, Average Loss: 3.668, avg. samples / sec: 1024.05
Iteration:  42800, Loss function: 3.662, Average Loss: 3.668, avg. samples / sec: 1013.94
Iteration:  42820, Loss function: 3.737, Average Loss: 3.669, avg. samples / sec: 1003.57
Iteration:  42840, Loss function: 3.550, Average Loss: 3.670, avg. samples / sec: 973.12
Iteration:  42860, Loss function: 3.472, Average Loss: 3.669, avg. samples / sec: 1014.31
Iteration:  42880, Loss function: 3.632, Average Loss: 3.668, avg. samples / sec: 965.19
Iteration:  42900, Loss function: 3.831, Average Loss: 3.669, avg. samples / sec: 985.06
Iteration:  42920, Loss function: 3.639, Average Loss: 3.669, avg. samples / sec: 997.91
Iteration:  42940, Loss function: 3.666, Average Loss: 3.670, avg. samples / sec: 979.91
Iteration:  42960, Loss function: 3.735, Average Loss: 3.671, avg. samples / sec: 990.19
Iteration:  42980, Loss function: 3.802, Average Loss: 3.672, avg. samples / sec: 1027.20
Iteration:  43000, Loss function: 3.935, Average Loss: 3.672, avg. samples / sec: 917.27
Iteration:  43020, Loss function: 3.632, Average Loss: 3.672, avg. samples / sec: 1068.48
Iteration:  43040, Loss function: 3.766, Average Loss: 3.672, avg. samples / sec: 962.30
Iteration:  43060, Loss function: 3.796, Average Loss: 3.673, avg. samples / sec: 1053.44
Iteration:  43080, Loss function: 3.487, Average Loss: 3.673, avg. samples / sec: 1035.33
Iteration:  43100, Loss function: 3.721, Average Loss: 3.673, avg. samples / sec: 955.32
Iteration:  43120, Loss function: 3.807, Average Loss: 3.673, avg. samples / sec: 1110.06
Iteration:  43140, Loss function: 3.705, Average Loss: 3.673, avg. samples / sec: 983.31
Iteration:  43160, Loss function: 3.762, Average Loss: 3.673, avg. samples / sec: 1030.34
Iteration:  43180, Loss function: 3.786, Average Loss: 3.673, avg. samples / sec: 996.18
Iteration:  43200, Loss function: 3.936, Average Loss: 3.674, avg. samples / sec: 959.33
:::MLLOG {"namespace": "", "time_ms": 1639477179034, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1639477179036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 43, "current_iter_num": 43204}}
Iteration:  43220, Loss function: 3.769, Average Loss: 3.673, avg. samples / sec: 990.63
Iteration:  43240, Loss function: 3.530, Average Loss: 3.674, avg. samples / sec: 1032.05
Iteration:  43260, Loss function: 3.469, Average Loss: 3.673, avg. samples / sec: 1005.86
Iteration:  43280, Loss function: 3.952, Average Loss: 3.672, avg. samples / sec: 1029.71
Iteration:  43300, Loss function: 3.328, Average Loss: 3.671, avg. samples / sec: 975.87
Iteration:  43320, Loss function: 3.865, Average Loss: 3.670, avg. samples / sec: 1027.73
Iteration:  43340, Loss function: 3.538, Average Loss: 3.669, avg. samples / sec: 1041.71
Iteration:  43360, Loss function: 3.625, Average Loss: 3.670, avg. samples / sec: 1021.03
Iteration:  43380, Loss function: 3.864, Average Loss: 3.670, avg. samples / sec: 1001.32
Iteration:  43400, Loss function: 3.901, Average Loss: 3.668, avg. samples / sec: 997.58
Iteration:  43420, Loss function: 3.958, Average Loss: 3.669, avg. samples / sec: 1005.26
Iteration:  43440, Loss function: 3.586, Average Loss: 3.668, avg. samples / sec: 1020.77
Iteration:  43460, Loss function: 3.589, Average Loss: 3.668, avg. samples / sec: 991.87
Iteration:  43480, Loss function: 3.454, Average Loss: 3.668, avg. samples / sec: 972.60
Iteration:  43500, Loss function: 3.717, Average Loss: 3.667, avg. samples / sec: 1032.72
Iteration:  43520, Loss function: 3.524, Average Loss: 3.667, avg. samples / sec: 1032.84
Iteration:  43540, Loss function: 3.538, Average Loss: 3.665, avg. samples / sec: 1003.94
Iteration:  43560, Loss function: 3.953, Average Loss: 3.666, avg. samples / sec: 1060.48
Iteration:  43580, Loss function: 3.581, Average Loss: 3.666, avg. samples / sec: 995.91
Iteration:  43600, Loss function: 3.763, Average Loss: 3.664, avg. samples / sec: 972.47
Iteration:  43620, Loss function: 3.626, Average Loss: 3.665, avg. samples / sec: 960.17
Iteration:  43640, Loss function: 3.731, Average Loss: 3.665, avg. samples / sec: 981.18
Iteration:  43660, Loss function: 3.689, Average Loss: 3.666, avg. samples / sec: 965.95
Iteration:  43680, Loss function: 3.662, Average Loss: 3.664, avg. samples / sec: 954.77
Iteration:  43700, Loss function: 3.644, Average Loss: 3.665, avg. samples / sec: 980.35
Iteration:  43720, Loss function: 3.558, Average Loss: 3.665, avg. samples / sec: 1038.12
Iteration:  43740, Loss function: 3.595, Average Loss: 3.666, avg. samples / sec: 1008.28
Iteration:  43760, Loss function: 3.440, Average Loss: 3.667, avg. samples / sec: 1039.57
Iteration:  43780, Loss function: 3.748, Average Loss: 3.667, avg. samples / sec: 958.42
Iteration:  43800, Loss function: 3.510, Average Loss: 3.667, avg. samples / sec: 970.48
Iteration:  43820, Loss function: 3.673, Average Loss: 3.667, avg. samples / sec: 972.81
Iteration:  43840, Loss function: 3.473, Average Loss: 3.667, avg. samples / sec: 949.29
Iteration:  43860, Loss function: 3.632, Average Loss: 3.667, avg. samples / sec: 1030.66
Iteration:  43880, Loss function: 3.654, Average Loss: 3.666, avg. samples / sec: 968.82
Iteration:  43900, Loss function: 3.971, Average Loss: 3.665, avg. samples / sec: 985.52
Iteration:  43920, Loss function: 3.829, Average Loss: 3.665, avg. samples / sec: 1014.43
Iteration:  43940, Loss function: 3.329, Average Loss: 3.664, avg. samples / sec: 982.89
Iteration:  43960, Loss function: 3.643, Average Loss: 3.665, avg. samples / sec: 1062.46
Iteration:  43980, Loss function: 3.921, Average Loss: 3.665, avg. samples / sec: 1008.59
Iteration:  44000, Loss function: 3.585, Average Loss: 3.664, avg. samples / sec: 988.70
Iteration:  44020, Loss function: 3.761, Average Loss: 3.665, avg. samples / sec: 1006.56
Iteration:  44040, Loss function: 3.684, Average Loss: 3.665, avg. samples / sec: 981.90
Iteration:  44060, Loss function: 3.900, Average Loss: 3.665, avg. samples / sec: 1027.22
Iteration:  44080, Loss function: 3.698, Average Loss: 3.665, avg. samples / sec: 1027.05
Iteration:  44100, Loss function: 3.605, Average Loss: 3.666, avg. samples / sec: 942.71
Iteration:  44120, Loss function: 3.725, Average Loss: 3.666, avg. samples / sec: 1007.57
Iteration:  44140, Loss function: 3.816, Average Loss: 3.667, avg. samples / sec: 1013.75
Iteration:  44160, Loss function: 3.716, Average Loss: 3.667, avg. samples / sec: 1050.31
Iteration:  44180, Loss function: 3.654, Average Loss: 3.667, avg. samples / sec: 1045.20
Iteration:  44200, Loss function: 3.492, Average Loss: 3.668, avg. samples / sec: 1000.44
Iteration:  44220, Loss function: 3.717, Average Loss: 3.667, avg. samples / sec: 1021.60
:::MLLOG {"namespace": "", "time_ms": 1639477295978, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1639477295991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 44, "current_iter_num": 44232}}
Iteration:  44240, Loss function: 3.720, Average Loss: 3.666, avg. samples / sec: 973.86
Iteration:  44260, Loss function: 3.581, Average Loss: 3.665, avg. samples / sec: 1030.16
Iteration:  44280, Loss function: 3.471, Average Loss: 3.663, avg. samples / sec: 988.12
Iteration:  44300, Loss function: 3.565, Average Loss: 3.663, avg. samples / sec: 883.14
Iteration:  44320, Loss function: 3.617, Average Loss: 3.664, avg. samples / sec: 1066.31
Iteration:  44340, Loss function: 3.502, Average Loss: 3.664, avg. samples / sec: 1063.28
Iteration:  44360, Loss function: 3.538, Average Loss: 3.663, avg. samples / sec: 947.58
Iteration:  44380, Loss function: 3.617, Average Loss: 3.662, avg. samples / sec: 963.78
Iteration:  44400, Loss function: 3.631, Average Loss: 3.663, avg. samples / sec: 929.55
Iteration:  44420, Loss function: 3.488, Average Loss: 3.662, avg. samples / sec: 1035.57
Iteration:  44440, Loss function: 3.621, Average Loss: 3.661, avg. samples / sec: 959.13
Iteration:  44460, Loss function: 3.931, Average Loss: 3.661, avg. samples / sec: 1037.77
Iteration:  44480, Loss function: 3.626, Average Loss: 3.661, avg. samples / sec: 951.94
Iteration:  44500, Loss function: 3.828, Average Loss: 3.662, avg. samples / sec: 1053.86
Iteration:  44520, Loss function: 3.776, Average Loss: 3.662, avg. samples / sec: 1050.74
Iteration:  44540, Loss function: 3.601, Average Loss: 3.661, avg. samples / sec: 1075.14
Iteration:  44560, Loss function: 3.742, Average Loss: 3.661, avg. samples / sec: 1036.75
Iteration:  44580, Loss function: 3.331, Average Loss: 3.661, avg. samples / sec: 1029.12
Iteration:  44600, Loss function: 3.655, Average Loss: 3.660, avg. samples / sec: 993.93
Iteration:  44620, Loss function: 3.924, Average Loss: 3.662, avg. samples / sec: 1103.54
Iteration:  44640, Loss function: 3.585, Average Loss: 3.661, avg. samples / sec: 1059.31
Iteration:  44660, Loss function: 3.626, Average Loss: 3.661, avg. samples / sec: 1074.62
Iteration:  44680, Loss function: 3.795, Average Loss: 3.661, avg. samples / sec: 990.79
Iteration:  44700, Loss function: 3.468, Average Loss: 3.661, avg. samples / sec: 998.80
Iteration:  44720, Loss function: 3.655, Average Loss: 3.660, avg. samples / sec: 1071.88
Iteration:  44740, Loss function: 3.436, Average Loss: 3.660, avg. samples / sec: 1053.23
Iteration:  44760, Loss function: 3.537, Average Loss: 3.659, avg. samples / sec: 990.52
Iteration:  44780, Loss function: 3.646, Average Loss: 3.658, avg. samples / sec: 1004.76
Iteration:  44800, Loss function: 3.562, Average Loss: 3.657, avg. samples / sec: 916.17
Iteration:  44820, Loss function: 3.647, Average Loss: 3.656, avg. samples / sec: 988.77
Iteration:  44840, Loss function: 3.790, Average Loss: 3.656, avg. samples / sec: 993.90
Iteration:  44860, Loss function: 3.795, Average Loss: 3.657, avg. samples / sec: 957.58
Iteration:  44880, Loss function: 3.665, Average Loss: 3.658, avg. samples / sec: 948.58
Iteration:  44900, Loss function: 3.615, Average Loss: 3.657, avg. samples / sec: 1010.02
Iteration:  44920, Loss function: 3.786, Average Loss: 3.658, avg. samples / sec: 1031.36
Iteration:  44940, Loss function: 3.250, Average Loss: 3.657, avg. samples / sec: 1013.76
Iteration:  44960, Loss function: 3.890, Average Loss: 3.658, avg. samples / sec: 1058.08
Iteration:  44980, Loss function: 3.727, Average Loss: 3.658, avg. samples / sec: 976.64
Iteration:  45000, Loss function: 3.720, Average Loss: 3.658, avg. samples / sec: 1041.68
Iteration:  45020, Loss function: 3.572, Average Loss: 3.657, avg. samples / sec: 1072.56
Iteration:  45040, Loss function: 3.914, Average Loss: 3.658, avg. samples / sec: 1016.45
Iteration:  45060, Loss function: 3.622, Average Loss: 3.658, avg. samples / sec: 1020.37
Iteration:  45080, Loss function: 3.790, Average Loss: 3.658, avg. samples / sec: 997.80
Iteration:  45100, Loss function: 3.588, Average Loss: 3.657, avg. samples / sec: 991.85
Iteration:  45120, Loss function: 3.638, Average Loss: 3.658, avg. samples / sec: 974.23
Iteration:  45140, Loss function: 4.014, Average Loss: 3.658, avg. samples / sec: 1056.69
Iteration:  45160, Loss function: 3.590, Average Loss: 3.658, avg. samples / sec: 1002.71
Iteration:  45180, Loss function: 3.310, Average Loss: 3.659, avg. samples / sec: 999.03
Iteration:  45200, Loss function: 3.405, Average Loss: 3.659, avg. samples / sec: 939.43
Iteration:  45220, Loss function: 3.570, Average Loss: 3.658, avg. samples / sec: 1034.33
Iteration:  45240, Loss function: 3.655, Average Loss: 3.659, avg. samples / sec: 1021.92
Iteration:  45260, Loss function: 3.690, Average Loss: 3.660, avg. samples / sec: 969.87
:::MLLOG {"namespace": "", "time_ms": 1639477412546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 44}}
lr decay step #1
:::MLLOG {"namespace": "", "time_ms": 1639477412549, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 45, "current_iter_num": 45261}}
Iteration:  45280, Loss function: 3.637, Average Loss: 3.659, avg. samples / sec: 980.50
Iteration:  45300, Loss function: 3.302, Average Loss: 3.655, avg. samples / sec: 969.73
Iteration:  45320, Loss function: 3.587, Average Loss: 3.651, avg. samples / sec: 1007.01
Iteration:  45340, Loss function: 3.442, Average Loss: 3.647, avg. samples / sec: 1008.05
Iteration:  45360, Loss function: 3.606, Average Loss: 3.643, avg. samples / sec: 998.58
Iteration:  45380, Loss function: 3.533, Average Loss: 3.638, avg. samples / sec: 1002.60
Iteration:  45400, Loss function: 3.325, Average Loss: 3.634, avg. samples / sec: 1036.92
Iteration:  45420, Loss function: 3.006, Average Loss: 3.629, avg. samples / sec: 996.41
Iteration:  45440, Loss function: 3.110, Average Loss: 3.624, avg. samples / sec: 949.22
Iteration:  45460, Loss function: 3.163, Average Loss: 3.618, avg. samples / sec: 1018.25
Iteration:  45480, Loss function: 3.568, Average Loss: 3.614, avg. samples / sec: 1001.18
Iteration:  45500, Loss function: 3.539, Average Loss: 3.609, avg. samples / sec: 953.26
Iteration:  45520, Loss function: 3.264, Average Loss: 3.603, avg. samples / sec: 963.62
Iteration:  45540, Loss function: 3.219, Average Loss: 3.598, avg. samples / sec: 931.39
Iteration:  45560, Loss function: 3.683, Average Loss: 3.595, avg. samples / sec: 953.02
Iteration:  45580, Loss function: 3.472, Average Loss: 3.590, avg. samples / sec: 981.06
Iteration:  45600, Loss function: 3.527, Average Loss: 3.586, avg. samples / sec: 1046.82
Iteration:  45620, Loss function: 3.463, Average Loss: 3.582, avg. samples / sec: 1007.56
Iteration:  45640, Loss function: 3.457, Average Loss: 3.577, avg. samples / sec: 1007.05
Iteration:  45660, Loss function: 3.209, Average Loss: 3.573, avg. samples / sec: 991.25
Iteration:  45680, Loss function: 3.334, Average Loss: 3.570, avg. samples / sec: 1007.10
Iteration:  45700, Loss function: 3.256, Average Loss: 3.566, avg. samples / sec: 999.78
Iteration:  45720, Loss function: 3.468, Average Loss: 3.561, avg. samples / sec: 997.73
Iteration:  45740, Loss function: 3.379, Average Loss: 3.557, avg. samples / sec: 1020.86
Iteration:  45760, Loss function: 3.200, Average Loss: 3.553, avg. samples / sec: 1044.67
Iteration:  45780, Loss function: 3.542, Average Loss: 3.549, avg. samples / sec: 1056.46
Iteration:  45800, Loss function: 3.215, Average Loss: 3.544, avg. samples / sec: 1031.22
Iteration:  45820, Loss function: 3.225, Average Loss: 3.539, avg. samples / sec: 1005.82
Iteration:  45840, Loss function: 3.178, Average Loss: 3.536, avg. samples / sec: 1018.30
Iteration:  45860, Loss function: 3.677, Average Loss: 3.533, avg. samples / sec: 966.34
Iteration:  45880, Loss function: 3.197, Average Loss: 3.528, avg. samples / sec: 977.37
Iteration:  45900, Loss function: 3.387, Average Loss: 3.524, avg. samples / sec: 954.16
Iteration:  45920, Loss function: 3.449, Average Loss: 3.519, avg. samples / sec: 1000.19
Iteration:  45940, Loss function: 3.179, Average Loss: 3.515, avg. samples / sec: 1013.69
Iteration:  45960, Loss function: 3.358, Average Loss: 3.513, avg. samples / sec: 940.29
Iteration:  45980, Loss function: 3.313, Average Loss: 3.510, avg. samples / sec: 1027.47
Iteration:  46000, Loss function: 3.329, Average Loss: 3.507, avg. samples / sec: 1009.20
Iteration:  46020, Loss function: 3.394, Average Loss: 3.504, avg. samples / sec: 1033.38
Iteration:  46040, Loss function: 3.583, Average Loss: 3.499, avg. samples / sec: 946.97
Iteration:  46060, Loss function: 3.436, Average Loss: 3.496, avg. samples / sec: 1034.45
Iteration:  46080, Loss function: 3.451, Average Loss: 3.493, avg. samples / sec: 1010.31
Iteration:  46100, Loss function: 3.390, Average Loss: 3.489, avg. samples / sec: 1004.54
Iteration:  46120, Loss function: 3.601, Average Loss: 3.485, avg. samples / sec: 1011.16
Iteration:  46140, Loss function: 3.383, Average Loss: 3.481, avg. samples / sec: 1003.08
Iteration:  46160, Loss function: 3.128, Average Loss: 3.478, avg. samples / sec: 1030.96
Iteration:  46180, Loss function: 3.147, Average Loss: 3.476, avg. samples / sec: 1016.24
Iteration:  46200, Loss function: 3.538, Average Loss: 3.474, avg. samples / sec: 991.85
Iteration:  46220, Loss function: 3.492, Average Loss: 3.471, avg. samples / sec: 968.84
Iteration:  46240, Loss function: 3.730, Average Loss: 3.469, avg. samples / sec: 1031.08
Iteration:  46260, Loss function: 3.141, Average Loss: 3.465, avg. samples / sec: 1045.61
Iteration:  46280, Loss function: 3.202, Average Loss: 3.461, avg. samples / sec: 1015.38
:::MLLOG {"namespace": "", "time_ms": 1639477529879, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1639477529881, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 46, "current_iter_num": 46290}}
Iteration:  46300, Loss function: 3.622, Average Loss: 3.459, avg. samples / sec: 1036.65
Iteration:  46320, Loss function: 3.208, Average Loss: 3.455, avg. samples / sec: 1017.70
Iteration:  46340, Loss function: 3.544, Average Loss: 3.450, avg. samples / sec: 1021.48
Iteration:  46360, Loss function: 3.101, Average Loss: 3.449, avg. samples / sec: 965.92
Iteration:  46380, Loss function: 3.193, Average Loss: 3.445, avg. samples / sec: 971.02
Iteration:  46400, Loss function: 3.184, Average Loss: 3.441, avg. samples / sec: 968.85
Iteration:  46420, Loss function: 3.158, Average Loss: 3.438, avg. samples / sec: 1005.88
Iteration:  46440, Loss function: 3.408, Average Loss: 3.435, avg. samples / sec: 999.62
Iteration:  46460, Loss function: 2.953, Average Loss: 3.432, avg. samples / sec: 994.56
Iteration:  46480, Loss function: 3.295, Average Loss: 3.430, avg. samples / sec: 982.20
Iteration:  46500, Loss function: 3.456, Average Loss: 3.428, avg. samples / sec: 933.15
Iteration:  46520, Loss function: 3.255, Average Loss: 3.425, avg. samples / sec: 994.64
Iteration:  46540, Loss function: 3.372, Average Loss: 3.423, avg. samples / sec: 1013.98
Iteration:  46560, Loss function: 3.192, Average Loss: 3.421, avg. samples / sec: 970.23
Iteration:  46580, Loss function: 3.326, Average Loss: 3.419, avg. samples / sec: 1017.22
Iteration:  46600, Loss function: 3.416, Average Loss: 3.417, avg. samples / sec: 1012.54
Iteration:  46620, Loss function: 3.161, Average Loss: 3.414, avg. samples / sec: 1053.87
Iteration:  46640, Loss function: 3.484, Average Loss: 3.411, avg. samples / sec: 1067.78
Iteration:  46660, Loss function: 3.517, Average Loss: 3.408, avg. samples / sec: 917.82
Iteration:  46680, Loss function: 3.309, Average Loss: 3.405, avg. samples / sec: 1050.64
Iteration:  46700, Loss function: 3.151, Average Loss: 3.403, avg. samples / sec: 952.49
Iteration:  46720, Loss function: 3.521, Average Loss: 3.401, avg. samples / sec: 1037.07
Iteration:  46740, Loss function: 3.317, Average Loss: 3.398, avg. samples / sec: 964.17
Iteration:  46760, Loss function: 3.382, Average Loss: 3.395, avg. samples / sec: 986.17
Iteration:  46780, Loss function: 3.264, Average Loss: 3.393, avg. samples / sec: 1042.04
Iteration:  46800, Loss function: 2.955, Average Loss: 3.391, avg. samples / sec: 970.97
Iteration:  46820, Loss function: 3.307, Average Loss: 3.389, avg. samples / sec: 1016.17
Iteration:  46840, Loss function: 3.380, Average Loss: 3.389, avg. samples / sec: 1014.28
Iteration:  46860, Loss function: 3.411, Average Loss: 3.386, avg. samples / sec: 1020.91
Iteration:  46880, Loss function: 3.402, Average Loss: 3.384, avg. samples / sec: 1065.91
Iteration:  46900, Loss function: 3.159, Average Loss: 3.382, avg. samples / sec: 1074.54
Iteration:  46920, Loss function: 3.031, Average Loss: 3.379, avg. samples / sec: 1016.92
Iteration:  46940, Loss function: 3.241, Average Loss: 3.378, avg. samples / sec: 985.46
Iteration:  46960, Loss function: 3.496, Average Loss: 3.376, avg. samples / sec: 1058.52
Iteration:  46980, Loss function: 3.379, Average Loss: 3.374, avg. samples / sec: 1010.83
Iteration:  47000, Loss function: 3.002, Average Loss: 3.373, avg. samples / sec: 990.73
Iteration:  47020, Loss function: 3.482, Average Loss: 3.372, avg. samples / sec: 1056.71
Iteration:  47040, Loss function: 3.362, Average Loss: 3.370, avg. samples / sec: 1080.99
Iteration:  47060, Loss function: 3.470, Average Loss: 3.369, avg. samples / sec: 903.32
Iteration:  47080, Loss function: 3.303, Average Loss: 3.367, avg. samples / sec: 1021.26
Iteration:  47100, Loss function: 3.206, Average Loss: 3.365, avg. samples / sec: 929.21
Iteration:  47120, Loss function: 3.334, Average Loss: 3.362, avg. samples / sec: 991.34
Iteration:  47140, Loss function: 3.422, Average Loss: 3.361, avg. samples / sec: 989.52
Iteration:  47160, Loss function: 3.265, Average Loss: 3.359, avg. samples / sec: 1023.18
Iteration:  47180, Loss function: 3.129, Average Loss: 3.356, avg. samples / sec: 958.79
Iteration:  47200, Loss function: 3.174, Average Loss: 3.356, avg. samples / sec: 1024.25
Iteration:  47220, Loss function: 3.152, Average Loss: 3.353, avg. samples / sec: 1067.08
Iteration:  47240, Loss function: 3.302, Average Loss: 3.353, avg. samples / sec: 964.17
Iteration:  47260, Loss function: 3.387, Average Loss: 3.352, avg. samples / sec: 986.10
Iteration:  47280, Loss function: 3.407, Average Loss: 3.350, avg. samples / sec: 927.19
Iteration:  47300, Loss function: 3.618, Average Loss: 3.350, avg. samples / sec: 1013.49
:::MLLOG {"namespace": "", "time_ms": 1639477646968, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1639477646970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 47, "current_iter_num": 47318}}
Iteration:  47320, Loss function: 3.285, Average Loss: 3.349, avg. samples / sec: 1050.59
Iteration:  47340, Loss function: 3.190, Average Loss: 3.347, avg. samples / sec: 1056.71
Iteration:  47360, Loss function: 3.225, Average Loss: 3.346, avg. samples / sec: 1007.60
Iteration:  47380, Loss function: 3.374, Average Loss: 3.345, avg. samples / sec: 1025.82
Iteration:  47400, Loss function: 3.263, Average Loss: 3.344, avg. samples / sec: 1041.57
Iteration:  47420, Loss function: 3.402, Average Loss: 3.342, avg. samples / sec: 1018.41
Iteration:  47440, Loss function: 3.039, Average Loss: 3.341, avg. samples / sec: 971.66
Iteration:  47460, Loss function: 3.421, Average Loss: 3.341, avg. samples / sec: 1069.22
Iteration:  47480, Loss function: 3.251, Average Loss: 3.339, avg. samples / sec: 1033.52
Iteration:  47500, Loss function: 3.303, Average Loss: 3.337, avg. samples / sec: 997.51
Iteration:  47520, Loss function: 3.033, Average Loss: 3.336, avg. samples / sec: 1010.09
Iteration:  47540, Loss function: 3.038, Average Loss: 3.334, avg. samples / sec: 1004.07
Iteration:  47560, Loss function: 2.930, Average Loss: 3.330, avg. samples / sec: 929.52
Iteration:  47580, Loss function: 3.266, Average Loss: 3.329, avg. samples / sec: 987.26
Iteration:  47600, Loss function: 3.345, Average Loss: 3.328, avg. samples / sec: 1034.58
Iteration:  47620, Loss function: 3.142, Average Loss: 3.327, avg. samples / sec: 1035.76
Iteration:  47640, Loss function: 3.293, Average Loss: 3.327, avg. samples / sec: 984.97
Iteration:  47660, Loss function: 3.197, Average Loss: 3.325, avg. samples / sec: 951.31
Iteration:  47680, Loss function: 3.483, Average Loss: 3.325, avg. samples / sec: 976.53
Iteration:  47700, Loss function: 3.322, Average Loss: 3.322, avg. samples / sec: 1009.30
Iteration:  47720, Loss function: 3.313, Average Loss: 3.320, avg. samples / sec: 997.77
Iteration:  47740, Loss function: 3.302, Average Loss: 3.319, avg. samples / sec: 983.90
Iteration:  47760, Loss function: 3.212, Average Loss: 3.318, avg. samples / sec: 1038.34
Iteration:  47780, Loss function: 3.260, Average Loss: 3.317, avg. samples / sec: 989.20
Iteration:  47800, Loss function: 3.540, Average Loss: 3.317, avg. samples / sec: 1037.35
Iteration:  47820, Loss function: 3.323, Average Loss: 3.315, avg. samples / sec: 975.82
Iteration:  47840, Loss function: 3.323, Average Loss: 3.315, avg. samples / sec: 1000.60
Iteration:  47860, Loss function: 3.525, Average Loss: 3.313, avg. samples / sec: 1014.10
Iteration:  47880, Loss function: 3.213, Average Loss: 3.313, avg. samples / sec: 967.54
Iteration:  47900, Loss function: 3.253, Average Loss: 3.312, avg. samples / sec: 1015.95
Iteration:  47920, Loss function: 3.035, Average Loss: 3.311, avg. samples / sec: 996.87
Iteration:  47940, Loss function: 3.041, Average Loss: 3.310, avg. samples / sec: 980.18
Iteration:  47960, Loss function: 3.290, Average Loss: 3.309, avg. samples / sec: 1040.60
Iteration:  47980, Loss function: 3.149, Average Loss: 3.307, avg. samples / sec: 1029.36
Iteration:  48000, Loss function: 3.094, Average Loss: 3.306, avg. samples / sec: 1038.23
Iteration:  48020, Loss function: 3.225, Average Loss: 3.306, avg. samples / sec: 1029.44
Iteration:  48040, Loss function: 3.199, Average Loss: 3.305, avg. samples / sec: 1058.00
Iteration:  48060, Loss function: 3.252, Average Loss: 3.304, avg. samples / sec: 971.89
Iteration:  48080, Loss function: 3.485, Average Loss: 3.304, avg. samples / sec: 1040.19
Iteration:  48100, Loss function: 3.189, Average Loss: 3.303, avg. samples / sec: 947.18
Iteration:  48120, Loss function: 3.276, Average Loss: 3.302, avg. samples / sec: 968.73
Iteration:  48140, Loss function: 3.216, Average Loss: 3.301, avg. samples / sec: 957.35
Iteration:  48160, Loss function: 3.207, Average Loss: 3.301, avg. samples / sec: 1041.24
Iteration:  48180, Loss function: 3.262, Average Loss: 3.299, avg. samples / sec: 1024.98
Iteration:  48200, Loss function: 3.130, Average Loss: 3.297, avg. samples / sec: 1054.73
Iteration:  48220, Loss function: 3.471, Average Loss: 3.297, avg. samples / sec: 1010.07
Iteration:  48240, Loss function: 3.307, Average Loss: 3.295, avg. samples / sec: 972.60
Iteration:  48260, Loss function: 3.423, Average Loss: 3.294, avg. samples / sec: 1004.81
Iteration:  48280, Loss function: 3.281, Average Loss: 3.292, avg. samples / sec: 981.59
Iteration:  48300, Loss function: 3.489, Average Loss: 3.293, avg. samples / sec: 987.17
Iteration:  48320, Loss function: 3.089, Average Loss: 3.292, avg. samples / sec: 939.51
Iteration:  48340, Loss function: 3.188, Average Loss: 3.290, avg. samples / sec: 961.87
:::MLLOG {"namespace": "", "time_ms": 1639477763856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1639477763858, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 48, "current_iter_num": 48347}}
Iteration:  48360, Loss function: 3.129, Average Loss: 3.290, avg. samples / sec: 1050.79
Iteration:  48380, Loss function: 2.973, Average Loss: 3.288, avg. samples / sec: 1018.26
Iteration:  48400, Loss function: 3.231, Average Loss: 3.287, avg. samples / sec: 1038.17
Iteration:  48420, Loss function: 3.237, Average Loss: 3.285, avg. samples / sec: 1045.91
Iteration:  48440, Loss function: 3.097, Average Loss: 3.285, avg. samples / sec: 1039.18
Iteration:  48460, Loss function: 2.889, Average Loss: 3.284, avg. samples / sec: 973.30
Iteration:  48480, Loss function: 3.210, Average Loss: 3.282, avg. samples / sec: 1019.09
Iteration:  48500, Loss function: 3.190, Average Loss: 3.282, avg. samples / sec: 988.28
Iteration:  48520, Loss function: 3.182, Average Loss: 3.282, avg. samples / sec: 1071.11
Iteration:  48540, Loss function: 3.241, Average Loss: 3.281, avg. samples / sec: 1057.43
Iteration:  48560, Loss function: 3.274, Average Loss: 3.279, avg. samples / sec: 1006.90
Iteration:  48580, Loss function: 3.308, Average Loss: 3.279, avg. samples / sec: 1046.01
Iteration:  48600, Loss function: 3.237, Average Loss: 3.279, avg. samples / sec: 942.74
Iteration:  48620, Loss function: 3.308, Average Loss: 3.278, avg. samples / sec: 1008.64
Iteration:  48640, Loss function: 3.324, Average Loss: 3.275, avg. samples / sec: 924.84
Iteration:  48660, Loss function: 2.954, Average Loss: 3.274, avg. samples / sec: 1003.36
Iteration:  48680, Loss function: 3.535, Average Loss: 3.273, avg. samples / sec: 944.14
Iteration:  48700, Loss function: 3.127, Average Loss: 3.272, avg. samples / sec: 1016.82
Iteration:  48720, Loss function: 3.191, Average Loss: 3.273, avg. samples / sec: 1012.61
Iteration:  48740, Loss function: 3.469, Average Loss: 3.273, avg. samples / sec: 1044.68
Iteration:  48760, Loss function: 3.681, Average Loss: 3.274, avg. samples / sec: 991.12
Iteration:  48780, Loss function: 3.133, Average Loss: 3.274, avg. samples / sec: 966.76
Iteration:  48800, Loss function: 3.583, Average Loss: 3.273, avg. samples / sec: 1034.96
Iteration:  48820, Loss function: 3.156, Average Loss: 3.273, avg. samples / sec: 1001.62
Iteration:  48840, Loss function: 3.317, Average Loss: 3.274, avg. samples / sec: 980.38
Iteration:  48860, Loss function: 3.254, Average Loss: 3.273, avg. samples / sec: 1001.82
Iteration:  48880, Loss function: 2.975, Average Loss: 3.273, avg. samples / sec: 1003.98
Iteration:  48900, Loss function: 3.350, Average Loss: 3.271, avg. samples / sec: 1023.01
Iteration:  48920, Loss function: 3.411, Average Loss: 3.272, avg. samples / sec: 1085.39
Iteration:  48940, Loss function: 3.337, Average Loss: 3.272, avg. samples / sec: 1034.78
Iteration:  48960, Loss function: 3.416, Average Loss: 3.272, avg. samples / sec: 990.20
Iteration:  48980, Loss function: 3.186, Average Loss: 3.271, avg. samples / sec: 1067.11
Iteration:  49000, Loss function: 3.390, Average Loss: 3.270, avg. samples / sec: 1039.35
Iteration:  49020, Loss function: 3.002, Average Loss: 3.269, avg. samples / sec: 940.90
Iteration:  49040, Loss function: 3.264, Average Loss: 3.267, avg. samples / sec: 992.52
Iteration:  49060, Loss function: 3.433, Average Loss: 3.266, avg. samples / sec: 997.33
Iteration:  49080, Loss function: 3.465, Average Loss: 3.266, avg. samples / sec: 1010.11
Iteration:  49100, Loss function: 2.967, Average Loss: 3.265, avg. samples / sec: 1009.91
Iteration:  49120, Loss function: 3.220, Average Loss: 3.263, avg. samples / sec: 971.69
Iteration:  49140, Loss function: 3.357, Average Loss: 3.263, avg. samples / sec: 1035.05
Iteration:  49160, Loss function: 2.904, Average Loss: 3.262, avg. samples / sec: 1022.54
Iteration:  49180, Loss function: 3.448, Average Loss: 3.262, avg. samples / sec: 961.19
Iteration:  49200, Loss function: 3.124, Average Loss: 3.262, avg. samples / sec: 1031.93
Iteration:  49220, Loss function: 2.903, Average Loss: 3.263, avg. samples / sec: 1029.77
Iteration:  49240, Loss function: 3.272, Average Loss: 3.262, avg. samples / sec: 899.48
Iteration:  49260, Loss function: 3.402, Average Loss: 3.261, avg. samples / sec: 1037.26
Iteration:  49280, Loss function: 3.310, Average Loss: 3.261, avg. samples / sec: 999.27
Iteration:  49300, Loss function: 3.147, Average Loss: 3.259, avg. samples / sec: 1021.09
Iteration:  49320, Loss function: 3.282, Average Loss: 3.259, avg. samples / sec: 963.85
Iteration:  49340, Loss function: 3.216, Average Loss: 3.259, avg. samples / sec: 1019.01
Iteration:  49360, Loss function: 3.289, Average Loss: 3.258, avg. samples / sec: 1021.18
:::MLLOG {"namespace": "", "time_ms": 1639477880427, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1639477880428, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 49, "current_iter_num": 49376}}
Iteration:  49380, Loss function: 3.341, Average Loss: 3.258, avg. samples / sec: 1005.78
Iteration:  49400, Loss function: 3.242, Average Loss: 3.257, avg. samples / sec: 1059.11
Iteration:  49420, Loss function: 3.071, Average Loss: 3.256, avg. samples / sec: 937.11
Iteration:  49440, Loss function: 3.065, Average Loss: 3.255, avg. samples / sec: 990.35
Iteration:  49460, Loss function: 3.147, Average Loss: 3.254, avg. samples / sec: 955.32
Iteration:  49480, Loss function: 3.182, Average Loss: 3.252, avg. samples / sec: 904.28
Iteration:  49500, Loss function: 3.222, Average Loss: 3.251, avg. samples / sec: 1012.01
Iteration:  49520, Loss function: 3.179, Average Loss: 3.252, avg. samples / sec: 1012.53
Iteration:  49540, Loss function: 3.281, Average Loss: 3.252, avg. samples / sec: 964.94
Iteration:  49560, Loss function: 3.196, Average Loss: 3.251, avg. samples / sec: 997.19
Iteration:  49580, Loss function: 3.366, Average Loss: 3.250, avg. samples / sec: 969.73
Iteration:  49600, Loss function: 3.211, Average Loss: 3.251, avg. samples / sec: 1041.99
Iteration:  49620, Loss function: 3.514, Average Loss: 3.250, avg. samples / sec: 1035.53
Iteration:  49640, Loss function: 3.128, Average Loss: 3.251, avg. samples / sec: 999.40
Iteration:  49660, Loss function: 3.458, Average Loss: 3.249, avg. samples / sec: 1045.65
Iteration:  49680, Loss function: 3.105, Average Loss: 3.249, avg. samples / sec: 1014.99
Iteration:  49700, Loss function: 3.333, Average Loss: 3.248, avg. samples / sec: 1051.13
Iteration:  49720, Loss function: 3.259, Average Loss: 3.247, avg. samples / sec: 981.45
Iteration:  49740, Loss function: 3.260, Average Loss: 3.247, avg. samples / sec: 954.80
Iteration:  49760, Loss function: 2.922, Average Loss: 3.246, avg. samples / sec: 922.29
Iteration:  49780, Loss function: 3.205, Average Loss: 3.246, avg. samples / sec: 1047.76
Iteration:  49800, Loss function: 2.980, Average Loss: 3.246, avg. samples / sec: 1039.53
Iteration:  49820, Loss function: 3.199, Average Loss: 3.246, avg. samples / sec: 1004.77
Iteration:  49840, Loss function: 3.146, Average Loss: 3.245, avg. samples / sec: 1042.72
Iteration:  49860, Loss function: 3.327, Average Loss: 3.245, avg. samples / sec: 991.44
Iteration:  49880, Loss function: 3.267, Average Loss: 3.245, avg. samples / sec: 1020.10
Iteration:  49900, Loss function: 3.237, Average Loss: 3.244, avg. samples / sec: 1013.68
Iteration:  49920, Loss function: 3.416, Average Loss: 3.245, avg. samples / sec: 995.18
Iteration:  49940, Loss function: 3.303, Average Loss: 3.244, avg. samples / sec: 998.31
Iteration:  49960, Loss function: 3.120, Average Loss: 3.245, avg. samples / sec: 922.48
Iteration:  49980, Loss function: 3.325, Average Loss: 3.243, avg. samples / sec: 1022.56
Iteration:  50000, Loss function: 3.318, Average Loss: 3.243, avg. samples / sec: 987.96
Iteration:  50020, Loss function: 2.905, Average Loss: 3.243, avg. samples / sec: 1062.88
Iteration:  50040, Loss function: 3.231, Average Loss: 3.242, avg. samples / sec: 983.64
Iteration:  50060, Loss function: 3.081, Average Loss: 3.242, avg. samples / sec: 1066.56
Iteration:  50080, Loss function: 3.020, Average Loss: 3.241, avg. samples / sec: 978.30
Iteration:  50100, Loss function: 3.405, Average Loss: 3.240, avg. samples / sec: 1033.71
Iteration:  50120, Loss function: 3.596, Average Loss: 3.240, avg. samples / sec: 999.90
Iteration:  50140, Loss function: 3.117, Average Loss: 3.239, avg. samples / sec: 1021.20
Iteration:  50160, Loss function: 3.413, Average Loss: 3.238, avg. samples / sec: 950.36
Iteration:  50180, Loss function: 3.084, Average Loss: 3.239, avg. samples / sec: 935.85
Iteration:  50200, Loss function: 3.191, Average Loss: 3.238, avg. samples / sec: 1018.42
Iteration:  50220, Loss function: 3.080, Average Loss: 3.236, avg. samples / sec: 995.94
Iteration:  50240, Loss function: 3.149, Average Loss: 3.236, avg. samples / sec: 1029.96
Iteration:  50260, Loss function: 3.123, Average Loss: 3.237, avg. samples / sec: 944.18
Iteration:  50280, Loss function: 3.318, Average Loss: 3.236, avg. samples / sec: 1055.45
Iteration:  50300, Loss function: 3.470, Average Loss: 3.236, avg. samples / sec: 1041.00
Iteration:  50320, Loss function: 3.293, Average Loss: 3.236, avg. samples / sec: 995.96
Iteration:  50340, Loss function: 3.469, Average Loss: 3.235, avg. samples / sec: 976.36
Iteration:  50360, Loss function: 3.152, Average Loss: 3.234, avg. samples / sec: 1023.49
Iteration:  50380, Loss function: 3.247, Average Loss: 3.233, avg. samples / sec: 1012.91
Iteration:  50400, Loss function: 3.689, Average Loss: 3.233, avg. samples / sec: 958.80
:::MLLOG {"namespace": "", "time_ms": 1639477997770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1639477997772, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 50, "current_iter_num": 50404}}
Iteration:  50420, Loss function: 3.342, Average Loss: 3.233, avg. samples / sec: 987.77
Iteration:  50440, Loss function: 3.318, Average Loss: 3.232, avg. samples / sec: 1023.79
Iteration:  50460, Loss function: 3.174, Average Loss: 3.231, avg. samples / sec: 1016.60
Iteration:  50480, Loss function: 2.999, Average Loss: 3.231, avg. samples / sec: 983.68
Iteration:  50500, Loss function: 3.344, Average Loss: 3.231, avg. samples / sec: 1000.27
Iteration:  50520, Loss function: 3.118, Average Loss: 3.232, avg. samples / sec: 948.96
Iteration:  50540, Loss function: 3.163, Average Loss: 3.231, avg. samples / sec: 1011.38
Iteration:  50560, Loss function: 3.035, Average Loss: 3.230, avg. samples / sec: 990.40
Iteration:  50580, Loss function: 3.565, Average Loss: 3.230, avg. samples / sec: 950.98
Iteration:  50600, Loss function: 2.813, Average Loss: 3.229, avg. samples / sec: 947.12
Iteration:  50620, Loss function: 3.136, Average Loss: 3.228, avg. samples / sec: 948.04
Iteration:  50640, Loss function: 3.207, Average Loss: 3.228, avg. samples / sec: 975.86
Iteration:  50660, Loss function: 3.274, Average Loss: 3.227, avg. samples / sec: 1016.02
Iteration:  50680, Loss function: 3.367, Average Loss: 3.227, avg. samples / sec: 1003.93
Iteration:  50700, Loss function: 3.163, Average Loss: 3.228, avg. samples / sec: 936.37
Iteration:  50720, Loss function: 3.110, Average Loss: 3.227, avg. samples / sec: 1055.90
Iteration:  50740, Loss function: 3.099, Average Loss: 3.226, avg. samples / sec: 1016.36
Iteration:  50760, Loss function: 3.559, Average Loss: 3.226, avg. samples / sec: 980.74
Iteration:  50780, Loss function: 3.018, Average Loss: 3.226, avg. samples / sec: 1004.25
Iteration:  50800, Loss function: 2.991, Average Loss: 3.226, avg. samples / sec: 1019.83
Iteration:  50820, Loss function: 3.284, Average Loss: 3.227, avg. samples / sec: 977.30
Iteration:  50840, Loss function: 3.126, Average Loss: 3.227, avg. samples / sec: 1001.15
Iteration:  50860, Loss function: 3.203, Average Loss: 3.225, avg. samples / sec: 966.44
Iteration:  50880, Loss function: 3.187, Average Loss: 3.226, avg. samples / sec: 959.53
Iteration:  50900, Loss function: 3.343, Average Loss: 3.227, avg. samples / sec: 989.94
Iteration:  50920, Loss function: 3.243, Average Loss: 3.226, avg. samples / sec: 1076.68
Iteration:  50940, Loss function: 3.273, Average Loss: 3.226, avg. samples / sec: 965.40
Iteration:  50960, Loss function: 3.419, Average Loss: 3.224, avg. samples / sec: 925.51
Iteration:  50980, Loss function: 2.888, Average Loss: 3.224, avg. samples / sec: 1041.91
Iteration:  51000, Loss function: 2.996, Average Loss: 3.224, avg. samples / sec: 998.58
Iteration:  51020, Loss function: 3.159, Average Loss: 3.225, avg. samples / sec: 1037.81
Iteration:  51040, Loss function: 3.158, Average Loss: 3.226, avg. samples / sec: 1017.55
Iteration:  51060, Loss function: 3.055, Average Loss: 3.226, avg. samples / sec: 1022.50
Iteration:  51080, Loss function: 2.987, Average Loss: 3.225, avg. samples / sec: 1040.80
Iteration:  51100, Loss function: 3.132, Average Loss: 3.225, avg. samples / sec: 1032.21
Iteration:  51120, Loss function: 3.463, Average Loss: 3.226, avg. samples / sec: 972.96
Iteration:  51140, Loss function: 3.385, Average Loss: 3.225, avg. samples / sec: 972.21
Iteration:  51160, Loss function: 3.524, Average Loss: 3.226, avg. samples / sec: 1047.92
Iteration:  51180, Loss function: 3.292, Average Loss: 3.225, avg. samples / sec: 1044.99
Iteration:  51200, Loss function: 3.266, Average Loss: 3.224, avg. samples / sec: 1038.59
Iteration:  51220, Loss function: 3.179, Average Loss: 3.223, avg. samples / sec: 1029.66
Iteration:  51240, Loss function: 3.311, Average Loss: 3.222, avg. samples / sec: 1029.00
Iteration:  51260, Loss function: 3.377, Average Loss: 3.223, avg. samples / sec: 1081.81
Iteration:  51280, Loss function: 2.928, Average Loss: 3.223, avg. samples / sec: 1013.81
Iteration:  51300, Loss function: 3.175, Average Loss: 3.222, avg. samples / sec: 1006.17
Iteration:  51320, Loss function: 3.441, Average Loss: 3.224, avg. samples / sec: 1106.61
Iteration:  51340, Loss function: 3.044, Average Loss: 3.223, avg. samples / sec: 967.57
Iteration:  51360, Loss function: 3.077, Average Loss: 3.222, avg. samples / sec: 1036.33
Iteration:  51380, Loss function: 3.213, Average Loss: 3.222, avg. samples / sec: 1030.09
Iteration:  51400, Loss function: 3.207, Average Loss: 3.221, avg. samples / sec: 968.02
Iteration:  51420, Loss function: 3.205, Average Loss: 3.221, avg. samples / sec: 983.93
:::MLLOG {"namespace": "", "time_ms": 1639478114689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 50}}
Predicting Ended, total time: 35.99 s
:::MLLOG {"namespace": "", "time_ms": 1639478150703, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639478150794, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 51, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639478150795, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 51, "current_iter_num": 51433}}
Loading and preparing results...
Iteration:  51440, Loss function: 3.160, Average Loss: 3.221, avg. samples / sec: 59.81
DONE (t=1.33s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  51460, Loss function: 2.985, Average Loss: 3.219, avg. samples / sec: 1188.99
Iteration:  51480, Loss function: 3.022, Average Loss: 3.218, avg. samples / sec: 1195.26
Iteration:  51500, Loss function: 2.967, Average Loss: 3.217, avg. samples / sec: 1209.06
DONE (t=5.14s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23708
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.40318
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24075
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32183
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22673
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.33136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.34874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.34874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.23708 AP goal: 0.23000
Iteration:  51520, Loss function: 3.160, Average Loss: 3.216, avg. samples / sec: 1207.95
:::MLLOG {"namespace": "", "time_ms": 1639478159177, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159178, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23708266132505, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159178, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159390, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
+ [[ run == \d\r\y ]]
++ date
Tue Dec 14 10:36:01 UTC 2021: done waiting for 1 executions
+ echo 'Tue Dec 14 10:36:01 UTC 2021: done waiting for 1 executions'
+ ls /tmp/ssd_all.log
/tmp/ssd_all.log
+ grep . /tmp/ssd_all.log
:::MLLOG {"namespace": "", "time_ms": 1639472203026, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639472203408, "event_type": "POINT_IN_TIME", "key": "seed", "value": 2535675634, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 2535675634
:::MLLOG {"namespace": "", "time_ms": 1639472205413, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639472205413, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.
Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639472205417, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639472228293, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639472228293, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
:::MLLOG {"namespace": "", "time_ms": 1639472230295, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639472230296, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.20s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639472230744, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639472230745, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639472230751, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.489, Average Loss: 0.022, avg. samples / sec: 4.56
Iteration:     20, Loss function: 20.913, Average Loss: 0.455, avg. samples / sec: 850.64
Iteration:     40, Loss function: 20.815, Average Loss: 0.857, avg. samples / sec: 901.91
Iteration:     60, Loss function: 20.398, Average Loss: 1.247, avg. samples / sec: 934.67
Iteration:     80, Loss function: 20.092, Average Loss: 1.622, avg. samples / sec: 978.10
Iteration:    100, Loss function: 16.391, Average Loss: 1.958, avg. samples / sec: 957.74
Iteration:    120, Loss function: 11.981, Average Loss: 2.176, avg. samples / sec: 915.66
Iteration:    140, Loss function: 9.754, Average Loss: 2.339, avg. samples / sec: 1017.22
Iteration:    160, Loss function: 9.418, Average Loss: 2.481, avg. samples / sec: 980.47
Iteration:    180, Loss function: 9.188, Average Loss: 2.612, avg. samples / sec: 960.70
Iteration:    200, Loss function: 8.599, Average Loss: 2.737, avg. samples / sec: 965.63
Iteration:    220, Loss function: 8.539, Average Loss: 2.856, avg. samples / sec: 1026.15
Iteration:    240, Loss function: 8.519, Average Loss: 2.972, avg. samples / sec: 1036.95
Iteration:    260, Loss function: 8.926, Average Loss: 3.086, avg. samples / sec: 1116.91
Iteration:    280, Loss function: 8.636, Average Loss: 3.198, avg. samples / sec: 757.89
Iteration:    300, Loss function: 8.336, Average Loss: 3.302, avg. samples / sec: 922.85
Iteration:    320, Loss function: 8.352, Average Loss: 3.402, avg. samples / sec: 947.47
Iteration:    340, Loss function: 8.218, Average Loss: 3.498, avg. samples / sec: 995.37
Iteration:    360, Loss function: 7.994, Average Loss: 3.591, avg. samples / sec: 1027.74
Iteration:    380, Loss function: 7.908, Average Loss: 3.680, avg. samples / sec: 890.11
Iteration:    400, Loss function: 7.997, Average Loss: 3.763, avg. samples / sec: 963.21
Iteration:    420, Loss function: 7.901, Average Loss: 3.848, avg. samples / sec: 1028.34
Iteration:    440, Loss function: 7.830, Average Loss: 3.928, avg. samples / sec: 967.73
Iteration:    460, Loss function: 7.786, Average Loss: 4.003, avg. samples / sec: 1021.39
Iteration:    480, Loss function: 7.526, Average Loss: 4.076, avg. samples / sec: 1036.78
Iteration:    500, Loss function: 7.565, Average Loss: 4.146, avg. samples / sec: 972.01
Iteration:    520, Loss function: 7.410, Average Loss: 4.213, avg. samples / sec: 974.85
Iteration:    540, Loss function: 7.388, Average Loss: 4.277, avg. samples / sec: 998.85
Iteration:    560, Loss function: 7.066, Average Loss: 4.337, avg. samples / sec: 981.96
Iteration:    580, Loss function: 7.244, Average Loss: 4.397, avg. samples / sec: 943.98
Iteration:    600, Loss function: 7.202, Average Loss: 4.454, avg. samples / sec: 1037.50
Iteration:    620, Loss function: 7.033, Average Loss: 4.509, avg. samples / sec: 1007.50
Iteration:    640, Loss function: 6.762, Average Loss: 4.562, avg. samples / sec: 1013.42
Iteration:    660, Loss function: 7.262, Average Loss: 4.615, avg. samples / sec: 1006.08
Iteration:    680, Loss function: 7.158, Average Loss: 4.666, avg. samples / sec: 976.12
Iteration:    700, Loss function: 6.692, Average Loss: 4.713, avg. samples / sec: 1027.08
Iteration:    720, Loss function: 7.050, Average Loss: 4.762, avg. samples / sec: 1034.63
Iteration:    740, Loss function: 6.817, Average Loss: 4.806, avg. samples / sec: 1009.74
Iteration:    760, Loss function: 7.090, Average Loss: 4.850, avg. samples / sec: 1036.78
Iteration:    780, Loss function: 6.718, Average Loss: 4.891, avg. samples / sec: 1004.05
Iteration:    800, Loss function: 7.169, Average Loss: 4.930, avg. samples / sec: 1079.87
Iteration:    820, Loss function: 6.858, Average Loss: 4.967, avg. samples / sec: 1130.09
Iteration:    840, Loss function: 6.675, Average Loss: 5.003, avg. samples / sec: 1001.97
Iteration:    860, Loss function: 6.943, Average Loss: 5.038, avg. samples / sec: 1032.19
Iteration:    880, Loss function: 6.720, Average Loss: 5.071, avg. samples / sec: 1026.61
Iteration:    900, Loss function: 6.858, Average Loss: 5.101, avg. samples / sec: 1017.99
Iteration:    920, Loss function: 6.558, Average Loss: 5.131, avg. samples / sec: 1008.16
Iteration:    940, Loss function: 6.810, Average Loss: 5.160, avg. samples / sec: 1004.55
Iteration:    960, Loss function: 6.301, Average Loss: 5.189, avg. samples / sec: 1015.27
Iteration:    980, Loss function: 6.641, Average Loss: 5.216, avg. samples / sec: 973.61
Iteration:   1000, Loss function: 6.485, Average Loss: 5.242, avg. samples / sec: 1048.12
Iteration:   1020, Loss function: 6.344, Average Loss: 5.266, avg. samples / sec: 1028.46
:::MLLOG {"namespace": "", "time_ms": 1639472349460, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639472349462, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.403, Average Loss: 5.288, avg. samples / sec: 1026.32
Iteration:   1060, Loss function: 6.372, Average Loss: 5.311, avg. samples / sec: 955.12
Iteration:   1080, Loss function: 6.315, Average Loss: 5.332, avg. samples / sec: 991.80
Iteration:   1100, Loss function: 6.209, Average Loss: 5.352, avg. samples / sec: 955.75
Iteration:   1120, Loss function: 6.200, Average Loss: 5.372, avg. samples / sec: 931.90
Iteration:   1140, Loss function: 6.313, Average Loss: 5.391, avg. samples / sec: 965.49
Iteration:   1160, Loss function: 6.294, Average Loss: 5.408, avg. samples / sec: 998.54
Iteration:   1180, Loss function: 6.208, Average Loss: 5.424, avg. samples / sec: 1007.93
Iteration:   1200, Loss function: 6.357, Average Loss: 5.441, avg. samples / sec: 1000.42
Iteration:   1220, Loss function: 6.100, Average Loss: 5.455, avg. samples / sec: 941.06
Iteration:   1240, Loss function: 6.208, Average Loss: 5.467, avg. samples / sec: 1061.21
Iteration:   1260, Loss function: 6.120, Average Loss: 5.479, avg. samples / sec: 1042.81
Iteration:   1280, Loss function: 5.992, Average Loss: 5.492, avg. samples / sec: 1048.59
Iteration:   1300, Loss function: 6.168, Average Loss: 5.504, avg. samples / sec: 983.72
Iteration:   1320, Loss function: 6.204, Average Loss: 5.516, avg. samples / sec: 1080.99
Iteration:   1340, Loss function: 5.844, Average Loss: 5.525, avg. samples / sec: 753.54
Iteration:   1360, Loss function: 6.100, Average Loss: 5.536, avg. samples / sec: 1016.68
Iteration:   1380, Loss function: 6.016, Average Loss: 5.546, avg. samples / sec: 1012.74
Iteration:   1400, Loss function: 6.041, Average Loss: 5.555, avg. samples / sec: 1051.30
Iteration:   1420, Loss function: 5.672, Average Loss: 5.562, avg. samples / sec: 1003.52
Iteration:   1440, Loss function: 6.294, Average Loss: 5.570, avg. samples / sec: 1034.75
Iteration:   1460, Loss function: 6.203, Average Loss: 5.579, avg. samples / sec: 1017.33
Iteration:   1480, Loss function: 5.889, Average Loss: 5.587, avg. samples / sec: 1037.50
Iteration:   1500, Loss function: 6.118, Average Loss: 5.594, avg. samples / sec: 981.88
Iteration:   1520, Loss function: 6.173, Average Loss: 5.600, avg. samples / sec: 1004.76
Iteration:   1540, Loss function: 6.137, Average Loss: 5.604, avg. samples / sec: 1032.44
Iteration:   1560, Loss function: 5.768, Average Loss: 5.609, avg. samples / sec: 924.77
Iteration:   1580, Loss function: 5.559, Average Loss: 5.613, avg. samples / sec: 1022.15
Iteration:   1600, Loss function: 6.051, Average Loss: 5.618, avg. samples / sec: 1031.18
Iteration:   1620, Loss function: 5.749, Average Loss: 5.622, avg. samples / sec: 995.16
Iteration:   1640, Loss function: 5.833, Average Loss: 5.626, avg. samples / sec: 1028.00
Iteration:   1660, Loss function: 5.929, Average Loss: 5.631, avg. samples / sec: 1057.97
Iteration:   1680, Loss function: 5.635, Average Loss: 5.634, avg. samples / sec: 1063.17
Iteration:   1700, Loss function: 5.318, Average Loss: 5.638, avg. samples / sec: 999.86
Iteration:   1720, Loss function: 5.747, Average Loss: 5.641, avg. samples / sec: 935.89
Iteration:   1740, Loss function: 5.962, Average Loss: 5.643, avg. samples / sec: 945.78
Iteration:   1760, Loss function: 5.440, Average Loss: 5.645, avg. samples / sec: 1042.88
Iteration:   1780, Loss function: 5.720, Average Loss: 5.647, avg. samples / sec: 998.43
Iteration:   1800, Loss function: 5.778, Average Loss: 5.650, avg. samples / sec: 1070.20
Iteration:   1820, Loss function: 6.075, Average Loss: 5.652, avg. samples / sec: 987.46
Iteration:   1840, Loss function: 6.011, Average Loss: 5.653, avg. samples / sec: 1018.23
Iteration:   1860, Loss function: 5.827, Average Loss: 5.653, avg. samples / sec: 955.88
Iteration:   1880, Loss function: 5.947, Average Loss: 5.654, avg. samples / sec: 975.96
Iteration:   1900, Loss function: 5.926, Average Loss: 5.655, avg. samples / sec: 1058.94
Iteration:   1920, Loss function: 5.668, Average Loss: 5.654, avg. samples / sec: 961.08
Iteration:   1940, Loss function: 5.785, Average Loss: 5.653, avg. samples / sec: 952.09
Iteration:   1960, Loss function: 5.557, Average Loss: 5.653, avg. samples / sec: 987.36
Iteration:   1980, Loss function: 5.595, Average Loss: 5.652, avg. samples / sec: 967.32
Iteration:   2000, Loss function: 5.592, Average Loss: 5.651, avg. samples / sec: 1052.89
Iteration:   2020, Loss function: 5.578, Average Loss: 5.649, avg. samples / sec: 1042.89
Iteration:   2040, Loss function: 5.681, Average Loss: 5.649, avg. samples / sec: 1033.73
:::MLLOG {"namespace": "", "time_ms": 1639472466942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639472466943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.547, Average Loss: 5.646, avg. samples / sec: 1064.92
Iteration:   2080, Loss function: 5.220, Average Loss: 5.644, avg. samples / sec: 1001.20
Iteration:   2100, Loss function: 5.535, Average Loss: 5.641, avg. samples / sec: 1008.70
Iteration:   2120, Loss function: 5.489, Average Loss: 5.637, avg. samples / sec: 1004.10
Iteration:   2140, Loss function: 5.540, Average Loss: 5.634, avg. samples / sec: 1016.42
Iteration:   2160, Loss function: 5.372, Average Loss: 5.633, avg. samples / sec: 973.43
Iteration:   2180, Loss function: 5.146, Average Loss: 5.630, avg. samples / sec: 971.53
Iteration:   2200, Loss function: 5.630, Average Loss: 5.627, avg. samples / sec: 1017.43
Iteration:   2220, Loss function: 5.697, Average Loss: 5.625, avg. samples / sec: 978.39
Iteration:   2240, Loss function: 5.415, Average Loss: 5.622, avg. samples / sec: 975.18
Iteration:   2260, Loss function: 5.240, Average Loss: 5.618, avg. samples / sec: 928.49
Iteration:   2280, Loss function: 5.235, Average Loss: 5.615, avg. samples / sec: 966.07
Iteration:   2300, Loss function: 5.170, Average Loss: 5.612, avg. samples / sec: 990.77
Iteration:   2320, Loss function: 5.375, Average Loss: 5.610, avg. samples / sec: 940.08
Iteration:   2340, Loss function: 5.570, Average Loss: 5.606, avg. samples / sec: 1010.07
Iteration:   2360, Loss function: 5.452, Average Loss: 5.602, avg. samples / sec: 1013.68
Iteration:   2380, Loss function: 5.522, Average Loss: 5.599, avg. samples / sec: 1061.31
Iteration:   2400, Loss function: 5.629, Average Loss: 5.595, avg. samples / sec: 1065.58
Iteration:   2420, Loss function: 5.462, Average Loss: 5.591, avg. samples / sec: 978.04
Iteration:   2440, Loss function: 5.426, Average Loss: 5.588, avg. samples / sec: 1061.76
Iteration:   2460, Loss function: 5.122, Average Loss: 5.584, avg. samples / sec: 1017.59
Iteration:   2480, Loss function: 5.339, Average Loss: 5.580, avg. samples / sec: 990.85
Iteration:   2500, Loss function: 5.455, Average Loss: 5.576, avg. samples / sec: 982.58
Iteration:   2520, Loss function: 5.555, Average Loss: 5.572, avg. samples / sec: 957.01
Iteration:   2540, Loss function: 5.542, Average Loss: 5.568, avg. samples / sec: 1087.44
Iteration:   2560, Loss function: 5.372, Average Loss: 5.564, avg. samples / sec: 1009.96
Iteration:   2580, Loss function: 5.248, Average Loss: 5.560, avg. samples / sec: 990.61
Iteration:   2600, Loss function: 5.515, Average Loss: 5.558, avg. samples / sec: 968.27
Iteration:   2620, Loss function: 5.692, Average Loss: 5.553, avg. samples / sec: 1012.43
Iteration:   2640, Loss function: 5.165, Average Loss: 5.550, avg. samples / sec: 1049.39
Iteration:   2660, Loss function: 5.206, Average Loss: 5.546, avg. samples / sec: 951.66
Iteration:   2680, Loss function: 5.233, Average Loss: 5.542, avg. samples / sec: 936.27
Iteration:   2700, Loss function: 5.258, Average Loss: 5.537, avg. samples / sec: 951.56
Iteration:   2720, Loss function: 5.185, Average Loss: 5.534, avg. samples / sec: 919.03
Iteration:   2740, Loss function: 5.030, Average Loss: 5.530, avg. samples / sec: 1029.22
Iteration:   2760, Loss function: 4.973, Average Loss: 5.524, avg. samples / sec: 941.70
Iteration:   2780, Loss function: 5.511, Average Loss: 5.520, avg. samples / sec: 1068.80
Iteration:   2800, Loss function: 5.250, Average Loss: 5.516, avg. samples / sec: 977.85
Iteration:   2820, Loss function: 5.590, Average Loss: 5.511, avg. samples / sec: 1007.05
Iteration:   2840, Loss function: 5.183, Average Loss: 5.506, avg. samples / sec: 1033.15
Iteration:   2860, Loss function: 5.221, Average Loss: 5.500, avg. samples / sec: 1012.72
Iteration:   2880, Loss function: 5.203, Average Loss: 5.496, avg. samples / sec: 1020.25
Iteration:   2900, Loss function: 5.015, Average Loss: 5.492, avg. samples / sec: 988.52
Iteration:   2920, Loss function: 5.099, Average Loss: 5.485, avg. samples / sec: 975.92
Iteration:   2940, Loss function: 4.971, Average Loss: 5.481, avg. samples / sec: 1017.83
Iteration:   2960, Loss function: 5.494, Average Loss: 5.477, avg. samples / sec: 998.09
Iteration:   2980, Loss function: 5.314, Average Loss: 5.473, avg. samples / sec: 987.15
Iteration:   3000, Loss function: 5.516, Average Loss: 5.468, avg. samples / sec: 952.28
Iteration:   3020, Loss function: 5.204, Average Loss: 5.461, avg. samples / sec: 970.99
Iteration:   3040, Loss function: 5.218, Average Loss: 5.456, avg. samples / sec: 969.53
Iteration:   3060, Loss function: 4.937, Average Loss: 5.451, avg. samples / sec: 992.36
Iteration:   3080, Loss function: 4.980, Average Loss: 5.446, avg. samples / sec: 982.78
:::MLLOG {"namespace": "", "time_ms": 1639472584941, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639472584942, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.273, Average Loss: 5.441, avg. samples / sec: 998.09
Iteration:   3120, Loss function: 4.917, Average Loss: 5.435, avg. samples / sec: 1079.19
Iteration:   3140, Loss function: 5.119, Average Loss: 5.430, avg. samples / sec: 945.44
Iteration:   3160, Loss function: 5.603, Average Loss: 5.425, avg. samples / sec: 982.44
Iteration:   3180, Loss function: 5.000, Average Loss: 5.420, avg. samples / sec: 1022.09
Iteration:   3200, Loss function: 5.260, Average Loss: 5.414, avg. samples / sec: 1014.65
Iteration:   3220, Loss function: 5.200, Average Loss: 5.408, avg. samples / sec: 1020.88
Iteration:   3240, Loss function: 5.013, Average Loss: 5.401, avg. samples / sec: 1071.33
Iteration:   3260, Loss function: 5.026, Average Loss: 5.394, avg. samples / sec: 973.24
Iteration:   3280, Loss function: 4.920, Average Loss: 5.388, avg. samples / sec: 1009.19
Iteration:   3300, Loss function: 4.852, Average Loss: 5.383, avg. samples / sec: 1017.52
Iteration:   3320, Loss function: 5.114, Average Loss: 5.378, avg. samples / sec: 988.03
Iteration:   3340, Loss function: 5.020, Average Loss: 5.373, avg. samples / sec: 982.46
Iteration:   3360, Loss function: 5.006, Average Loss: 5.366, avg. samples / sec: 1004.17
Iteration:   3380, Loss function: 5.063, Average Loss: 5.360, avg. samples / sec: 1018.97
Iteration:   3400, Loss function: 4.998, Average Loss: 5.354, avg. samples / sec: 984.63
Iteration:   3420, Loss function: 5.079, Average Loss: 5.350, avg. samples / sec: 955.84
Iteration:   3440, Loss function: 4.724, Average Loss: 5.344, avg. samples / sec: 947.04
Iteration:   3460, Loss function: 5.129, Average Loss: 5.339, avg. samples / sec: 948.29
Iteration:   3480, Loss function: 5.370, Average Loss: 5.334, avg. samples / sec: 979.02
Iteration:   3500, Loss function: 5.152, Average Loss: 5.330, avg. samples / sec: 1024.02
Iteration:   3520, Loss function: 4.951, Average Loss: 5.326, avg. samples / sec: 996.74
Iteration:   3540, Loss function: 5.025, Average Loss: 5.321, avg. samples / sec: 982.82
Iteration:   3560, Loss function: 4.824, Average Loss: 5.316, avg. samples / sec: 938.05
Iteration:   3580, Loss function: 5.148, Average Loss: 5.312, avg. samples / sec: 932.24
Iteration:   3600, Loss function: 5.263, Average Loss: 5.307, avg. samples / sec: 989.07
Iteration:   3620, Loss function: 4.777, Average Loss: 5.302, avg. samples / sec: 1006.41
Iteration:   3640, Loss function: 4.766, Average Loss: 5.297, avg. samples / sec: 987.34
Iteration:   3660, Loss function: 4.850, Average Loss: 5.291, avg. samples / sec: 1067.58
Iteration:   3680, Loss function: 5.143, Average Loss: 5.285, avg. samples / sec: 994.73
Iteration:   3700, Loss function: 4.834, Average Loss: 5.280, avg. samples / sec: 994.00
Iteration:   3720, Loss function: 4.983, Average Loss: 5.275, avg. samples / sec: 927.79
Iteration:   3740, Loss function: 5.079, Average Loss: 5.271, avg. samples / sec: 1000.03
Iteration:   3760, Loss function: 4.865, Average Loss: 5.266, avg. samples / sec: 1058.95
Iteration:   3780, Loss function: 5.053, Average Loss: 5.261, avg. samples / sec: 1009.57
Iteration:   3800, Loss function: 5.081, Average Loss: 5.256, avg. samples / sec: 987.92
Iteration:   3820, Loss function: 5.301, Average Loss: 5.251, avg. samples / sec: 1056.37
Iteration:   3840, Loss function: 4.889, Average Loss: 5.247, avg. samples / sec: 972.73
Iteration:   3860, Loss function: 4.957, Average Loss: 5.242, avg. samples / sec: 968.61
Iteration:   3880, Loss function: 5.173, Average Loss: 5.237, avg. samples / sec: 1015.01
Iteration:   3900, Loss function: 4.999, Average Loss: 5.233, avg. samples / sec: 1038.49
Iteration:   3920, Loss function: 4.994, Average Loss: 5.227, avg. samples / sec: 989.21
Iteration:   3940, Loss function: 4.850, Average Loss: 5.221, avg. samples / sec: 1013.99
Iteration:   3960, Loss function: 5.021, Average Loss: 5.218, avg. samples / sec: 1018.57
Iteration:   3980, Loss function: 4.785, Average Loss: 5.213, avg. samples / sec: 1023.74
Iteration:   4000, Loss function: 5.169, Average Loss: 5.208, avg. samples / sec: 945.34
Iteration:   4020, Loss function: 5.010, Average Loss: 5.204, avg. samples / sec: 1010.10
Iteration:   4040, Loss function: 4.901, Average Loss: 5.199, avg. samples / sec: 994.22
Iteration:   4060, Loss function: 5.375, Average Loss: 5.195, avg. samples / sec: 1018.10
Iteration:   4080, Loss function: 4.869, Average Loss: 5.191, avg. samples / sec: 1010.04
Iteration:   4100, Loss function: 4.867, Average Loss: 5.187, avg. samples / sec: 1048.14
:::MLLOG {"namespace": "", "time_ms": 1639472702548, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639472702549, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.114, Average Loss: 5.184, avg. samples / sec: 949.75
Iteration:   4140, Loss function: 4.952, Average Loss: 5.179, avg. samples / sec: 1011.75
Iteration:   4160, Loss function: 4.918, Average Loss: 5.172, avg. samples / sec: 965.51
Iteration:   4180, Loss function: 4.909, Average Loss: 5.165, avg. samples / sec: 1084.80
Iteration:   4200, Loss function: 4.779, Average Loss: 5.161, avg. samples / sec: 974.01
Iteration:   4220, Loss function: 4.800, Average Loss: 5.157, avg. samples / sec: 1032.35
Iteration:   4240, Loss function: 5.004, Average Loss: 5.153, avg. samples / sec: 1043.53
Iteration:   4260, Loss function: 4.972, Average Loss: 5.148, avg. samples / sec: 1044.73
Iteration:   4280, Loss function: 5.019, Average Loss: 5.143, avg. samples / sec: 1046.44
Iteration:   4300, Loss function: 4.792, Average Loss: 5.138, avg. samples / sec: 1025.08
Iteration:   4320, Loss function: 4.827, Average Loss: 5.134, avg. samples / sec: 1005.67
Iteration:   4340, Loss function: 4.804, Average Loss: 5.129, avg. samples / sec: 928.23
Iteration:   4360, Loss function: 4.981, Average Loss: 5.125, avg. samples / sec: 1013.33
Iteration:   4380, Loss function: 5.069, Average Loss: 5.120, avg. samples / sec: 1036.51
Iteration:   4400, Loss function: 4.954, Average Loss: 5.116, avg. samples / sec: 1075.20
Iteration:   4420, Loss function: 5.028, Average Loss: 5.111, avg. samples / sec: 916.14
Iteration:   4440, Loss function: 4.722, Average Loss: 5.106, avg. samples / sec: 997.12
Iteration:   4460, Loss function: 5.100, Average Loss: 5.101, avg. samples / sec: 1048.99
Iteration:   4480, Loss function: 4.949, Average Loss: 5.098, avg. samples / sec: 978.91
Iteration:   4500, Loss function: 4.817, Average Loss: 5.094, avg. samples / sec: 986.12
Iteration:   4520, Loss function: 4.648, Average Loss: 5.089, avg. samples / sec: 1018.36
Iteration:   4540, Loss function: 5.110, Average Loss: 5.085, avg. samples / sec: 975.27
Iteration:   4560, Loss function: 4.523, Average Loss: 5.080, avg. samples / sec: 914.59
Iteration:   4580, Loss function: 4.729, Average Loss: 5.079, avg. samples / sec: 1037.21
Iteration:   4600, Loss function: 4.861, Average Loss: 5.074, avg. samples / sec: 1022.70
Iteration:   4620, Loss function: 4.999, Average Loss: 5.069, avg. samples / sec: 1007.79
Iteration:   4640, Loss function: 4.720, Average Loss: 5.065, avg. samples / sec: 1002.32
Iteration:   4660, Loss function: 4.800, Average Loss: 5.062, avg. samples / sec: 1000.33
Iteration:   4680, Loss function: 5.205, Average Loss: 5.057, avg. samples / sec: 1047.76
Iteration:   4700, Loss function: 4.746, Average Loss: 5.053, avg. samples / sec: 1038.26
Iteration:   4720, Loss function: 4.567, Average Loss: 5.047, avg. samples / sec: 1078.05
Iteration:   4740, Loss function: 4.797, Average Loss: 5.043, avg. samples / sec: 1007.70
Iteration:   4760, Loss function: 4.641, Average Loss: 5.039, avg. samples / sec: 1018.74
Iteration:   4780, Loss function: 4.968, Average Loss: 5.035, avg. samples / sec: 940.49
Iteration:   4800, Loss function: 4.770, Average Loss: 5.033, avg. samples / sec: 1019.44
Iteration:   4820, Loss function: 4.655, Average Loss: 5.030, avg. samples / sec: 964.74
Iteration:   4840, Loss function: 5.036, Average Loss: 5.026, avg. samples / sec: 1042.83
Iteration:   4860, Loss function: 4.690, Average Loss: 5.021, avg. samples / sec: 922.38
Iteration:   4880, Loss function: 5.119, Average Loss: 5.017, avg. samples / sec: 945.41
Iteration:   4900, Loss function: 4.743, Average Loss: 5.013, avg. samples / sec: 972.22
Iteration:   4920, Loss function: 4.786, Average Loss: 5.009, avg. samples / sec: 989.45
Iteration:   4940, Loss function: 4.643, Average Loss: 5.005, avg. samples / sec: 958.10
Iteration:   4960, Loss function: 4.765, Average Loss: 5.003, avg. samples / sec: 990.16
Iteration:   4980, Loss function: 4.629, Average Loss: 5.000, avg. samples / sec: 976.68
Iteration:   5000, Loss function: 4.980, Average Loss: 4.997, avg. samples / sec: 1013.26
Iteration:   5020, Loss function: 5.263, Average Loss: 4.994, avg. samples / sec: 992.70
Iteration:   5040, Loss function: 4.939, Average Loss: 4.992, avg. samples / sec: 985.74
Iteration:   5060, Loss function: 4.724, Average Loss: 4.989, avg. samples / sec: 1001.46
Iteration:   5080, Loss function: 4.390, Average Loss: 4.985, avg. samples / sec: 1040.72
Iteration:   5100, Loss function: 4.844, Average Loss: 4.983, avg. samples / sec: 975.05
Iteration:   5120, Loss function: 4.532, Average Loss: 4.979, avg. samples / sec: 980.40
Iteration:   5140, Loss function: 5.078, Average Loss: 4.975, avg. samples / sec: 991.14
:::MLLOG {"namespace": "", "time_ms": 1639472819965, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639472819966, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Iteration:   5160, Loss function: 4.744, Average Loss: 4.971, avg. samples / sec: 1024.65
Iteration:   5180, Loss function: 4.849, Average Loss: 4.966, avg. samples / sec: 976.73
Iteration:   5200, Loss function: 4.596, Average Loss: 4.962, avg. samples / sec: 994.54
Iteration:   5220, Loss function: 4.508, Average Loss: 4.958, avg. samples / sec: 968.12
Iteration:   5240, Loss function: 4.743, Average Loss: 4.953, avg. samples / sec: 1061.73
Iteration:   5260, Loss function: 4.542, Average Loss: 4.949, avg. samples / sec: 934.27
Iteration:   5280, Loss function: 4.853, Average Loss: 4.946, avg. samples / sec: 1006.21
Iteration:   5300, Loss function: 5.140, Average Loss: 4.943, avg. samples / sec: 1018.32
Iteration:   5320, Loss function: 5.091, Average Loss: 4.938, avg. samples / sec: 1059.56
Iteration:   5340, Loss function: 4.702, Average Loss: 4.934, avg. samples / sec: 980.03
Iteration:   5360, Loss function: 5.155, Average Loss: 4.931, avg. samples / sec: 928.27
Iteration:   5380, Loss function: 4.484, Average Loss: 4.927, avg. samples / sec: 989.36
Iteration:   5400, Loss function: 4.380, Average Loss: 4.923, avg. samples / sec: 1003.42
Iteration:   5420, Loss function: 4.658, Average Loss: 4.920, avg. samples / sec: 1025.54
Iteration:   5440, Loss function: 4.810, Average Loss: 4.917, avg. samples / sec: 1016.34
Iteration:   5460, Loss function: 4.585, Average Loss: 4.914, avg. samples / sec: 947.27
Iteration:   5480, Loss function: 4.715, Average Loss: 4.911, avg. samples / sec: 924.36
Iteration:   5500, Loss function: 4.718, Average Loss: 4.907, avg. samples / sec: 1001.42
Iteration:   5520, Loss function: 4.785, Average Loss: 4.904, avg. samples / sec: 938.97
Iteration:   5540, Loss function: 4.681, Average Loss: 4.899, avg. samples / sec: 1003.58
Iteration:   5560, Loss function: 4.706, Average Loss: 4.896, avg. samples / sec: 1033.54
Iteration:   5580, Loss function: 4.853, Average Loss: 4.892, avg. samples / sec: 1050.18
Iteration:   5600, Loss function: 4.472, Average Loss: 4.888, avg. samples / sec: 1032.77
Iteration:   5620, Loss function: 4.337, Average Loss: 4.885, avg. samples / sec: 1024.65
Iteration:   5640, Loss function: 4.578, Average Loss: 4.882, avg. samples / sec: 978.53
Iteration:   5660, Loss function: 4.718, Average Loss: 4.880, avg. samples / sec: 1015.82
Iteration:   5680, Loss function: 4.840, Average Loss: 4.876, avg. samples / sec: 992.17
Iteration:   5700, Loss function: 4.539, Average Loss: 4.872, avg. samples / sec: 1036.84
Iteration:   5720, Loss function: 4.604, Average Loss: 4.870, avg. samples / sec: 982.32
Iteration:   5740, Loss function: 4.440, Average Loss: 4.866, avg. samples / sec: 993.95
Iteration:   5760, Loss function: 4.657, Average Loss: 4.862, avg. samples / sec: 985.58
Iteration:   5780, Loss function: 4.645, Average Loss: 4.860, avg. samples / sec: 1016.06
Iteration:   5800, Loss function: 5.036, Average Loss: 4.857, avg. samples / sec: 1024.68
Iteration:   5820, Loss function: 4.648, Average Loss: 4.854, avg. samples / sec: 1033.04
Iteration:   5840, Loss function: 4.567, Average Loss: 4.851, avg. samples / sec: 989.13
Iteration:   5860, Loss function: 4.850, Average Loss: 4.848, avg. samples / sec: 1007.29
Iteration:   5880, Loss function: 4.789, Average Loss: 4.845, avg. samples / sec: 927.78
Iteration:   5900, Loss function: 4.710, Average Loss: 4.841, avg. samples / sec: 1040.25
Iteration:   5920, Loss function: 4.788, Average Loss: 4.838, avg. samples / sec: 1046.07
Iteration:   5940, Loss function: 4.446, Average Loss: 4.835, avg. samples / sec: 1095.59
Iteration:   5960, Loss function: 5.038, Average Loss: 4.832, avg. samples / sec: 1002.56
Iteration:   5980, Loss function: 4.673, Average Loss: 4.829, avg. samples / sec: 1011.29
Iteration:   6000, Loss function: 4.456, Average Loss: 4.826, avg. samples / sec: 1099.47
Iteration:   6020, Loss function: 4.847, Average Loss: 4.824, avg. samples / sec: 998.74
Iteration:   6040, Loss function: 4.617, Average Loss: 4.821, avg. samples / sec: 985.10
Iteration:   6060, Loss function: 4.404, Average Loss: 4.820, avg. samples / sec: 1033.41
Iteration:   6080, Loss function: 4.540, Average Loss: 4.816, avg. samples / sec: 1060.75
Iteration:   6100, Loss function: 4.542, Average Loss: 4.814, avg. samples / sec: 1004.54
Iteration:   6120, Loss function: 4.562, Average Loss: 4.811, avg. samples / sec: 1014.94
Iteration:   6140, Loss function: 4.958, Average Loss: 4.808, avg. samples / sec: 981.81
Iteration:   6160, Loss function: 4.795, Average Loss: 4.806, avg. samples / sec: 948.75
:::MLLOG {"namespace": "", "time_ms": 1639472936854, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639472936856, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.690, Average Loss: 4.802, avg. samples / sec: 995.89
Iteration:   6200, Loss function: 4.873, Average Loss: 4.798, avg. samples / sec: 1068.77
Iteration:   6220, Loss function: 4.532, Average Loss: 4.794, avg. samples / sec: 1037.48
Iteration:   6240, Loss function: 4.520, Average Loss: 4.791, avg. samples / sec: 957.64
Iteration:   6260, Loss function: 4.443, Average Loss: 4.787, avg. samples / sec: 1037.98
Iteration:   6280, Loss function: 4.571, Average Loss: 4.784, avg. samples / sec: 994.91
Iteration:   6300, Loss function: 4.846, Average Loss: 4.781, avg. samples / sec: 1045.68
Iteration:   6320, Loss function: 4.368, Average Loss: 4.776, avg. samples / sec: 975.87
Iteration:   6340, Loss function: 4.639, Average Loss: 4.774, avg. samples / sec: 1021.82
Iteration:   6360, Loss function: 4.653, Average Loss: 4.769, avg. samples / sec: 1008.81
Iteration:   6380, Loss function: 4.460, Average Loss: 4.766, avg. samples / sec: 1021.38
Iteration:   6400, Loss function: 4.554, Average Loss: 4.764, avg. samples / sec: 945.58
Iteration:   6420, Loss function: 4.442, Average Loss: 4.761, avg. samples / sec: 951.62
Iteration:   6440, Loss function: 4.561, Average Loss: 4.757, avg. samples / sec: 1025.66
Iteration:   6460, Loss function: 4.765, Average Loss: 4.756, avg. samples / sec: 993.83
Iteration:   6480, Loss function: 4.529, Average Loss: 4.754, avg. samples / sec: 1067.08
Iteration:   6500, Loss function: 4.745, Average Loss: 4.751, avg. samples / sec: 992.22
Iteration:   6520, Loss function: 4.464, Average Loss: 4.750, avg. samples / sec: 1034.61
Iteration:   6540, Loss function: 4.680, Average Loss: 4.748, avg. samples / sec: 1013.29
Iteration:   6560, Loss function: 4.435, Average Loss: 4.746, avg. samples / sec: 1000.46
Iteration:   6580, Loss function: 4.825, Average Loss: 4.744, avg. samples / sec: 1020.60
Iteration:   6600, Loss function: 4.857, Average Loss: 4.741, avg. samples / sec: 992.92
Iteration:   6620, Loss function: 4.679, Average Loss: 4.739, avg. samples / sec: 993.53
Iteration:   6640, Loss function: 4.282, Average Loss: 4.735, avg. samples / sec: 1033.60
Iteration:   6660, Loss function: 4.779, Average Loss: 4.733, avg. samples / sec: 972.71
Iteration:   6680, Loss function: 4.605, Average Loss: 4.732, avg. samples / sec: 927.64
Iteration:   6700, Loss function: 4.441, Average Loss: 4.727, avg. samples / sec: 1054.94
Iteration:   6720, Loss function: 4.583, Average Loss: 4.726, avg. samples / sec: 982.47
Iteration:   6740, Loss function: 4.378, Average Loss: 4.725, avg. samples / sec: 900.63
Iteration:   6760, Loss function: 4.698, Average Loss: 4.722, avg. samples / sec: 1020.65
Iteration:   6780, Loss function: 4.631, Average Loss: 4.720, avg. samples / sec: 986.66
Iteration:   6800, Loss function: 4.425, Average Loss: 4.716, avg. samples / sec: 968.99
Iteration:   6820, Loss function: 4.687, Average Loss: 4.713, avg. samples / sec: 1002.55
Iteration:   6840, Loss function: 4.539, Average Loss: 4.711, avg. samples / sec: 969.86
Iteration:   6860, Loss function: 4.520, Average Loss: 4.709, avg. samples / sec: 983.28
Iteration:   6880, Loss function: 4.446, Average Loss: 4.706, avg. samples / sec: 963.73
Iteration:   6900, Loss function: 4.669, Average Loss: 4.704, avg. samples / sec: 1026.23
Iteration:   6920, Loss function: 4.787, Average Loss: 4.702, avg. samples / sec: 984.04
Iteration:   6940, Loss function: 4.233, Average Loss: 4.699, avg. samples / sec: 935.20
Iteration:   6960, Loss function: 4.306, Average Loss: 4.696, avg. samples / sec: 1014.41
Iteration:   6980, Loss function: 4.228, Average Loss: 4.695, avg. samples / sec: 1016.06
Iteration:   7000, Loss function: 4.392, Average Loss: 4.692, avg. samples / sec: 971.62
Iteration:   7020, Loss function: 4.672, Average Loss: 4.689, avg. samples / sec: 999.60
Iteration:   7040, Loss function: 4.820, Average Loss: 4.687, avg. samples / sec: 990.57
Iteration:   7060, Loss function: 4.718, Average Loss: 4.684, avg. samples / sec: 965.51
Iteration:   7080, Loss function: 4.685, Average Loss: 4.682, avg. samples / sec: 1071.99
Iteration:   7100, Loss function: 4.424, Average Loss: 4.682, avg. samples / sec: 1012.27
Iteration:   7120, Loss function: 4.592, Average Loss: 4.680, avg. samples / sec: 981.15
Iteration:   7140, Loss function: 4.634, Average Loss: 4.678, avg. samples / sec: 919.53
Iteration:   7160, Loss function: 4.487, Average Loss: 4.675, avg. samples / sec: 1050.84
Iteration:   7180, Loss function: 4.860, Average Loss: 4.673, avg. samples / sec: 1056.82
Iteration:   7200, Loss function: 4.550, Average Loss: 4.672, avg. samples / sec: 1032.97
:::MLLOG {"namespace": "", "time_ms": 1639473054296, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639473054299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.694, Average Loss: 4.668, avg. samples / sec: 976.88
Iteration:   7240, Loss function: 4.487, Average Loss: 4.665, avg. samples / sec: 1034.97
Iteration:   7260, Loss function: 4.750, Average Loss: 4.663, avg. samples / sec: 1048.55
Iteration:   7280, Loss function: 4.683, Average Loss: 4.660, avg. samples / sec: 956.11
Iteration:   7300, Loss function: 4.706, Average Loss: 4.657, avg. samples / sec: 993.38
Iteration:   7320, Loss function: 4.520, Average Loss: 4.655, avg. samples / sec: 937.26
Iteration:   7340, Loss function: 4.489, Average Loss: 4.652, avg. samples / sec: 993.58
Iteration:   7360, Loss function: 4.332, Average Loss: 4.651, avg. samples / sec: 983.49
Iteration:   7380, Loss function: 4.618, Average Loss: 4.648, avg. samples / sec: 1020.75
Iteration:   7400, Loss function: 4.598, Average Loss: 4.646, avg. samples / sec: 1066.40
Iteration:   7420, Loss function: 4.715, Average Loss: 4.644, avg. samples / sec: 1076.49
Iteration:   7440, Loss function: 4.535, Average Loss: 4.643, avg. samples / sec: 1014.69
Iteration:   7460, Loss function: 4.569, Average Loss: 4.640, avg. samples / sec: 1067.42
Iteration:   7480, Loss function: 4.652, Average Loss: 4.637, avg. samples / sec: 1015.53
Iteration:   7500, Loss function: 4.469, Average Loss: 4.634, avg. samples / sec: 989.52
Iteration:   7520, Loss function: 4.441, Average Loss: 4.630, avg. samples / sec: 1068.35
Iteration:   7540, Loss function: 4.649, Average Loss: 4.629, avg. samples / sec: 1072.58
Iteration:   7560, Loss function: 4.608, Average Loss: 4.629, avg. samples / sec: 942.84
Iteration:   7580, Loss function: 4.425, Average Loss: 4.625, avg. samples / sec: 965.19
Iteration:   7600, Loss function: 4.786, Average Loss: 4.622, avg. samples / sec: 968.88
Iteration:   7620, Loss function: 4.362, Average Loss: 4.620, avg. samples / sec: 1027.53
Iteration:   7640, Loss function: 4.348, Average Loss: 4.617, avg. samples / sec: 1042.35
Iteration:   7660, Loss function: 4.430, Average Loss: 4.616, avg. samples / sec: 1028.30
Iteration:   7680, Loss function: 4.540, Average Loss: 4.613, avg. samples / sec: 1054.65
Iteration:   7700, Loss function: 4.392, Average Loss: 4.611, avg. samples / sec: 1030.72
Iteration:   7720, Loss function: 4.376, Average Loss: 4.608, avg. samples / sec: 1032.13
Iteration:   7740, Loss function: 4.354, Average Loss: 4.605, avg. samples / sec: 1048.16
Iteration:   7760, Loss function: 4.570, Average Loss: 4.603, avg. samples / sec: 1011.41
Iteration:   7780, Loss function: 4.728, Average Loss: 4.602, avg. samples / sec: 949.37
Iteration:   7800, Loss function: 4.614, Average Loss: 4.601, avg. samples / sec: 1037.78
Iteration:   7820, Loss function: 4.248, Average Loss: 4.600, avg. samples / sec: 1041.95
Iteration:   7840, Loss function: 4.282, Average Loss: 4.598, avg. samples / sec: 1022.08
Iteration:   7860, Loss function: 4.434, Average Loss: 4.597, avg. samples / sec: 959.66
Iteration:   7880, Loss function: 4.500, Average Loss: 4.596, avg. samples / sec: 1040.80
Iteration:   7900, Loss function: 4.650, Average Loss: 4.595, avg. samples / sec: 1003.67
Iteration:   7920, Loss function: 4.469, Average Loss: 4.595, avg. samples / sec: 993.43
Iteration:   7940, Loss function: 4.698, Average Loss: 4.592, avg. samples / sec: 984.77
Iteration:   7960, Loss function: 4.235, Average Loss: 4.590, avg. samples / sec: 942.66
Iteration:   7980, Loss function: 4.603, Average Loss: 4.589, avg. samples / sec: 1040.58
Iteration:   8000, Loss function: 4.583, Average Loss: 4.588, avg. samples / sec: 1002.73
Iteration:   8020, Loss function: 4.625, Average Loss: 4.586, avg. samples / sec: 991.32
Iteration:   8040, Loss function: 4.626, Average Loss: 4.585, avg. samples / sec: 934.68
Iteration:   8060, Loss function: 4.878, Average Loss: 4.585, avg. samples / sec: 977.16
Iteration:   8080, Loss function: 4.467, Average Loss: 4.583, avg. samples / sec: 971.77
Iteration:   8100, Loss function: 4.902, Average Loss: 4.583, avg. samples / sec: 1102.77
Iteration:   8120, Loss function: 4.593, Average Loss: 4.581, avg. samples / sec: 1003.43
Iteration:   8140, Loss function: 4.208, Average Loss: 4.579, avg. samples / sec: 1005.30
Iteration:   8160, Loss function: 4.374, Average Loss: 4.578, avg. samples / sec: 1028.38
Iteration:   8180, Loss function: 4.733, Average Loss: 4.577, avg. samples / sec: 945.90
Iteration:   8200, Loss function: 4.427, Average Loss: 4.578, avg. samples / sec: 1079.13
Iteration:   8220, Loss function: 4.937, Average Loss: 4.576, avg. samples / sec: 985.80
:::MLLOG {"namespace": "", "time_ms": 1639473170699, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639473170701, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.368, Average Loss: 4.573, avg. samples / sec: 955.70
Iteration:   8260, Loss function: 4.314, Average Loss: 4.570, avg. samples / sec: 931.83
Iteration:   8280, Loss function: 4.533, Average Loss: 4.568, avg. samples / sec: 989.72
Iteration:   8300, Loss function: 4.179, Average Loss: 4.565, avg. samples / sec: 1078.55
Iteration:   8320, Loss function: 4.764, Average Loss: 4.561, avg. samples / sec: 1066.42
Iteration:   8340, Loss function: 4.522, Average Loss: 4.558, avg. samples / sec: 1000.52
Iteration:   8360, Loss function: 4.178, Average Loss: 4.555, avg. samples / sec: 1047.55
Iteration:   8380, Loss function: 4.726, Average Loss: 4.553, avg. samples / sec: 1013.09
Iteration:   8400, Loss function: 4.540, Average Loss: 4.551, avg. samples / sec: 1028.92
Iteration:   8420, Loss function: 4.577, Average Loss: 4.549, avg. samples / sec: 1006.41
Iteration:   8440, Loss function: 4.736, Average Loss: 4.548, avg. samples / sec: 1011.11
Iteration:   8460, Loss function: 4.664, Average Loss: 4.547, avg. samples / sec: 963.03
Iteration:   8480, Loss function: 4.456, Average Loss: 4.544, avg. samples / sec: 996.58
Iteration:   8500, Loss function: 4.150, Average Loss: 4.542, avg. samples / sec: 1017.36
Iteration:   8520, Loss function: 4.249, Average Loss: 4.538, avg. samples / sec: 998.22
Iteration:   8540, Loss function: 4.507, Average Loss: 4.536, avg. samples / sec: 1024.36
Iteration:   8560, Loss function: 4.577, Average Loss: 4.534, avg. samples / sec: 1013.82
Iteration:   8580, Loss function: 4.647, Average Loss: 4.532, avg. samples / sec: 1067.73
Iteration:   8600, Loss function: 4.449, Average Loss: 4.530, avg. samples / sec: 951.92
Iteration:   8620, Loss function: 4.284, Average Loss: 4.529, avg. samples / sec: 1047.93
Iteration:   8640, Loss function: 4.366, Average Loss: 4.528, avg. samples / sec: 1026.93
Iteration:   8660, Loss function: 4.349, Average Loss: 4.527, avg. samples / sec: 902.47
Iteration:   8680, Loss function: 4.489, Average Loss: 4.526, avg. samples / sec: 1009.43
Iteration:   8700, Loss function: 4.651, Average Loss: 4.525, avg. samples / sec: 1046.12
Iteration:   8720, Loss function: 4.272, Average Loss: 4.523, avg. samples / sec: 1081.26
Iteration:   8740, Loss function: 4.326, Average Loss: 4.520, avg. samples / sec: 1003.86
Iteration:   8760, Loss function: 4.527, Average Loss: 4.521, avg. samples / sec: 982.81
Iteration:   8780, Loss function: 4.285, Average Loss: 4.519, avg. samples / sec: 1014.17
Iteration:   8800, Loss function: 4.595, Average Loss: 4.518, avg. samples / sec: 1036.42
Iteration:   8820, Loss function: 4.247, Average Loss: 4.515, avg. samples / sec: 1031.13
Iteration:   8840, Loss function: 4.496, Average Loss: 4.512, avg. samples / sec: 998.51
Iteration:   8860, Loss function: 4.769, Average Loss: 4.511, avg. samples / sec: 1005.19
Iteration:   8880, Loss function: 4.566, Average Loss: 4.509, avg. samples / sec: 1041.44
Iteration:   8900, Loss function: 4.584, Average Loss: 4.508, avg. samples / sec: 1100.79
Iteration:   8920, Loss function: 4.532, Average Loss: 4.506, avg. samples / sec: 1061.27
Iteration:   8940, Loss function: 4.439, Average Loss: 4.505, avg. samples / sec: 1021.19
Iteration:   8960, Loss function: 4.418, Average Loss: 4.503, avg. samples / sec: 954.30
Iteration:   8980, Loss function: 4.323, Average Loss: 4.502, avg. samples / sec: 1001.81
Iteration:   9000, Loss function: 4.375, Average Loss: 4.500, avg. samples / sec: 1026.77
Iteration:   9020, Loss function: 4.759, Average Loss: 4.499, avg. samples / sec: 999.92
Iteration:   9040, Loss function: 4.453, Average Loss: 4.499, avg. samples / sec: 951.02
Iteration:   9060, Loss function: 4.091, Average Loss: 4.497, avg. samples / sec: 1009.16
Iteration:   9080, Loss function: 4.685, Average Loss: 4.496, avg. samples / sec: 1054.21
Iteration:   9100, Loss function: 4.356, Average Loss: 4.494, avg. samples / sec: 998.47
Iteration:   9120, Loss function: 4.293, Average Loss: 4.492, avg. samples / sec: 968.79
Iteration:   9140, Loss function: 4.247, Average Loss: 4.491, avg. samples / sec: 974.17
Iteration:   9160, Loss function: 4.365, Average Loss: 4.490, avg. samples / sec: 1017.46
Iteration:   9180, Loss function: 4.222, Average Loss: 4.489, avg. samples / sec: 942.88
Iteration:   9200, Loss function: 4.520, Average Loss: 4.489, avg. samples / sec: 992.01
Iteration:   9220, Loss function: 4.273, Average Loss: 4.489, avg. samples / sec: 1020.36
Iteration:   9240, Loss function: 4.412, Average Loss: 4.488, avg. samples / sec: 970.97
:::MLLOG {"namespace": "", "time_ms": 1639473287060, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639473287061, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.381, Average Loss: 4.486, avg. samples / sec: 984.32
Iteration:   9280, Loss function: 4.310, Average Loss: 4.484, avg. samples / sec: 958.54
Iteration:   9300, Loss function: 4.345, Average Loss: 4.480, avg. samples / sec: 987.80
Iteration:   9320, Loss function: 4.263, Average Loss: 4.478, avg. samples / sec: 1002.63
Iteration:   9340, Loss function: 4.743, Average Loss: 4.476, avg. samples / sec: 978.33
Iteration:   9360, Loss function: 4.308, Average Loss: 4.473, avg. samples / sec: 954.91
Iteration:   9380, Loss function: 4.359, Average Loss: 4.471, avg. samples / sec: 1042.46
Iteration:   9400, Loss function: 4.349, Average Loss: 4.469, avg. samples / sec: 1034.69
Iteration:   9420, Loss function: 4.464, Average Loss: 4.467, avg. samples / sec: 1039.21
Iteration:   9440, Loss function: 4.513, Average Loss: 4.465, avg. samples / sec: 928.43
Iteration:   9460, Loss function: 4.189, Average Loss: 4.465, avg. samples / sec: 986.91
Iteration:   9480, Loss function: 4.511, Average Loss: 4.462, avg. samples / sec: 980.50
Iteration:   9500, Loss function: 4.698, Average Loss: 4.461, avg. samples / sec: 1002.45
Iteration:   9520, Loss function: 4.392, Average Loss: 4.458, avg. samples / sec: 1017.64
Iteration:   9540, Loss function: 4.210, Average Loss: 4.455, avg. samples / sec: 1025.73
Iteration:   9560, Loss function: 4.246, Average Loss: 4.453, avg. samples / sec: 1017.85
Iteration:   9580, Loss function: 4.339, Average Loss: 4.453, avg. samples / sec: 978.29
Iteration:   9600, Loss function: 4.084, Average Loss: 4.452, avg. samples / sec: 1065.02
Iteration:   9620, Loss function: 4.336, Average Loss: 4.451, avg. samples / sec: 955.95
Iteration:   9640, Loss function: 4.353, Average Loss: 4.450, avg. samples / sec: 1031.96
Iteration:   9660, Loss function: 4.288, Average Loss: 4.449, avg. samples / sec: 947.95
Iteration:   9680, Loss function: 4.436, Average Loss: 4.448, avg. samples / sec: 1006.37
Iteration:   9700, Loss function: 4.548, Average Loss: 4.446, avg. samples / sec: 1033.50
Iteration:   9720, Loss function: 4.418, Average Loss: 4.444, avg. samples / sec: 1032.28
Iteration:   9740, Loss function: 4.463, Average Loss: 4.443, avg. samples / sec: 1008.87
Iteration:   9760, Loss function: 4.069, Average Loss: 4.442, avg. samples / sec: 980.74
Iteration:   9780, Loss function: 4.382, Average Loss: 4.441, avg. samples / sec: 1056.20
Iteration:   9800, Loss function: 4.390, Average Loss: 4.440, avg. samples / sec: 964.05
Iteration:   9820, Loss function: 4.134, Average Loss: 4.438, avg. samples / sec: 1022.92
Iteration:   9840, Loss function: 4.248, Average Loss: 4.436, avg. samples / sec: 1009.35
Iteration:   9860, Loss function: 4.424, Average Loss: 4.434, avg. samples / sec: 964.70
Iteration:   9880, Loss function: 4.351, Average Loss: 4.433, avg. samples / sec: 1044.25
Iteration:   9900, Loss function: 4.670, Average Loss: 4.432, avg. samples / sec: 978.27
Iteration:   9920, Loss function: 4.844, Average Loss: 4.431, avg. samples / sec: 1014.98
Iteration:   9940, Loss function: 4.186, Average Loss: 4.429, avg. samples / sec: 984.39
Iteration:   9960, Loss function: 4.718, Average Loss: 4.429, avg. samples / sec: 1021.15
Iteration:   9980, Loss function: 4.509, Average Loss: 4.428, avg. samples / sec: 1025.21
Iteration:  10000, Loss function: 4.046, Average Loss: 4.425, avg. samples / sec: 1062.01
Iteration:  10020, Loss function: 4.336, Average Loss: 4.424, avg. samples / sec: 1006.22
Iteration:  10040, Loss function: 4.402, Average Loss: 4.422, avg. samples / sec: 1007.48
Iteration:  10060, Loss function: 4.124, Average Loss: 4.420, avg. samples / sec: 989.41
Iteration:  10080, Loss function: 4.533, Average Loss: 4.418, avg. samples / sec: 989.32
Iteration:  10100, Loss function: 4.052, Average Loss: 4.418, avg. samples / sec: 1052.58
Iteration:  10120, Loss function: 4.232, Average Loss: 4.417, avg. samples / sec: 884.39
Iteration:  10140, Loss function: 4.435, Average Loss: 4.415, avg. samples / sec: 1029.46
Iteration:  10160, Loss function: 4.397, Average Loss: 4.414, avg. samples / sec: 910.00
Iteration:  10180, Loss function: 4.633, Average Loss: 4.413, avg. samples / sec: 996.52
Iteration:  10200, Loss function: 4.034, Average Loss: 4.411, avg. samples / sec: 999.75
Iteration:  10220, Loss function: 4.509, Average Loss: 4.410, avg. samples / sec: 1052.04
Iteration:  10240, Loss function: 4.383, Average Loss: 4.409, avg. samples / sec: 1026.78
Iteration:  10260, Loss function: 4.129, Average Loss: 4.408, avg. samples / sec: 995.00
Iteration:  10280, Loss function: 4.505, Average Loss: 4.407, avg. samples / sec: 1076.30
:::MLLOG {"namespace": "", "time_ms": 1639473404235, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639473404236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Iteration:  10300, Loss function: 4.671, Average Loss: 4.406, avg. samples / sec: 961.66
Iteration:  10320, Loss function: 4.411, Average Loss: 4.406, avg. samples / sec: 1041.29
Iteration:  10340, Loss function: 4.152, Average Loss: 4.402, avg. samples / sec: 1078.92
Iteration:  10360, Loss function: 4.132, Average Loss: 4.401, avg. samples / sec: 986.97
Iteration:  10380, Loss function: 4.246, Average Loss: 4.398, avg. samples / sec: 1016.37
Iteration:  10400, Loss function: 4.165, Average Loss: 4.395, avg. samples / sec: 939.79
Iteration:  10420, Loss function: 3.863, Average Loss: 4.393, avg. samples / sec: 969.57
Iteration:  10440, Loss function: 4.447, Average Loss: 4.391, avg. samples / sec: 1020.23
Iteration:  10460, Loss function: 4.390, Average Loss: 4.390, avg. samples / sec: 1026.48
Iteration:  10480, Loss function: 4.363, Average Loss: 4.389, avg. samples / sec: 969.26
Iteration:  10500, Loss function: 4.227, Average Loss: 4.388, avg. samples / sec: 1055.97
Iteration:  10520, Loss function: 4.472, Average Loss: 4.386, avg. samples / sec: 1004.44
Iteration:  10540, Loss function: 4.159, Average Loss: 4.384, avg. samples / sec: 1043.40
Iteration:  10560, Loss function: 4.193, Average Loss: 4.382, avg. samples / sec: 1014.47
Iteration:  10580, Loss function: 4.185, Average Loss: 4.381, avg. samples / sec: 1029.65
Iteration:  10600, Loss function: 4.101, Average Loss: 4.380, avg. samples / sec: 1026.90
Iteration:  10620, Loss function: 4.297, Average Loss: 4.379, avg. samples / sec: 1000.38
Iteration:  10640, Loss function: 4.125, Average Loss: 4.378, avg. samples / sec: 981.75
Iteration:  10660, Loss function: 4.826, Average Loss: 4.378, avg. samples / sec: 980.08
Iteration:  10680, Loss function: 4.290, Average Loss: 4.377, avg. samples / sec: 998.72
Iteration:  10700, Loss function: 4.055, Average Loss: 4.377, avg. samples / sec: 987.36
Iteration:  10720, Loss function: 4.548, Average Loss: 4.375, avg. samples / sec: 945.05
Iteration:  10740, Loss function: 4.309, Average Loss: 4.374, avg. samples / sec: 976.63
Iteration:  10760, Loss function: 4.324, Average Loss: 4.372, avg. samples / sec: 1002.81
Iteration:  10780, Loss function: 4.644, Average Loss: 4.372, avg. samples / sec: 999.07
Iteration:  10800, Loss function: 4.206, Average Loss: 4.372, avg. samples / sec: 979.21
Iteration:  10820, Loss function: 4.300, Average Loss: 4.372, avg. samples / sec: 1054.58
Iteration:  10840, Loss function: 4.180, Average Loss: 4.370, avg. samples / sec: 1032.96
Iteration:  10860, Loss function: 4.380, Average Loss: 4.369, avg. samples / sec: 998.48
Iteration:  10880, Loss function: 4.529, Average Loss: 4.367, avg. samples / sec: 980.26
Iteration:  10900, Loss function: 4.088, Average Loss: 4.365, avg. samples / sec: 1018.40
Iteration:  10920, Loss function: 4.308, Average Loss: 4.364, avg. samples / sec: 1004.98
Iteration:  10940, Loss function: 4.192, Average Loss: 4.362, avg. samples / sec: 1060.47
Iteration:  10960, Loss function: 4.427, Average Loss: 4.361, avg. samples / sec: 997.64
Iteration:  10980, Loss function: 4.326, Average Loss: 4.361, avg. samples / sec: 977.01
Iteration:  11000, Loss function: 4.730, Average Loss: 4.360, avg. samples / sec: 1062.06
Iteration:  11020, Loss function: 3.964, Average Loss: 4.358, avg. samples / sec: 1027.14
Iteration:  11040, Loss function: 4.290, Average Loss: 4.359, avg. samples / sec: 1025.32
Iteration:  11060, Loss function: 4.435, Average Loss: 4.357, avg. samples / sec: 1050.03
Iteration:  11080, Loss function: 4.204, Average Loss: 4.356, avg. samples / sec: 1012.35
Iteration:  11100, Loss function: 4.210, Average Loss: 4.355, avg. samples / sec: 995.41
Iteration:  11120, Loss function: 4.357, Average Loss: 4.355, avg. samples / sec: 1070.97
Iteration:  11140, Loss function: 4.416, Average Loss: 4.355, avg. samples / sec: 1006.44
Iteration:  11160, Loss function: 4.160, Average Loss: 4.355, avg. samples / sec: 962.48
Iteration:  11180, Loss function: 4.330, Average Loss: 4.353, avg. samples / sec: 1045.36
Iteration:  11200, Loss function: 4.068, Average Loss: 4.352, avg. samples / sec: 950.78
Iteration:  11220, Loss function: 4.655, Average Loss: 4.351, avg. samples / sec: 1020.86
Iteration:  11240, Loss function: 4.526, Average Loss: 4.352, avg. samples / sec: 969.71
Iteration:  11260, Loss function: 4.318, Average Loss: 4.352, avg. samples / sec: 1006.86
Iteration:  11280, Loss function: 4.589, Average Loss: 4.351, avg. samples / sec: 932.52
Iteration:  11300, Loss function: 4.230, Average Loss: 4.351, avg. samples / sec: 939.14
:::MLLOG {"namespace": "", "time_ms": 1639473521239, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1639473521241, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 12, "current_iter_num": 11316}}
Iteration:  11320, Loss function: 4.181, Average Loss: 4.350, avg. samples / sec: 964.50
Iteration:  11340, Loss function: 4.413, Average Loss: 4.347, avg. samples / sec: 1029.62
Iteration:  11360, Loss function: 4.103, Average Loss: 4.345, avg. samples / sec: 986.30
Iteration:  11380, Loss function: 4.710, Average Loss: 4.344, avg. samples / sec: 1025.78
Iteration:  11400, Loss function: 4.299, Average Loss: 4.343, avg. samples / sec: 1014.83
Iteration:  11420, Loss function: 4.363, Average Loss: 4.343, avg. samples / sec: 970.12
Iteration:  11440, Loss function: 4.322, Average Loss: 4.342, avg. samples / sec: 1056.03
Iteration:  11460, Loss function: 4.188, Average Loss: 4.340, avg. samples / sec: 1092.90
Iteration:  11480, Loss function: 4.460, Average Loss: 4.339, avg. samples / sec: 1022.90
Iteration:  11500, Loss function: 4.480, Average Loss: 4.338, avg. samples / sec: 1017.48
Iteration:  11520, Loss function: 4.359, Average Loss: 4.336, avg. samples / sec: 1008.40
Iteration:  11540, Loss function: 4.274, Average Loss: 4.338, avg. samples / sec: 1014.33
Iteration:  11560, Loss function: 4.128, Average Loss: 4.338, avg. samples / sec: 1004.73
Iteration:  11580, Loss function: 4.215, Average Loss: 4.337, avg. samples / sec: 901.60
Iteration:  11600, Loss function: 4.413, Average Loss: 4.337, avg. samples / sec: 1001.23
Iteration:  11620, Loss function: 4.390, Average Loss: 4.337, avg. samples / sec: 965.71
Iteration:  11640, Loss function: 4.429, Average Loss: 4.335, avg. samples / sec: 937.49
Iteration:  11660, Loss function: 4.276, Average Loss: 4.335, avg. samples / sec: 989.83
Iteration:  11680, Loss function: 4.223, Average Loss: 4.333, avg. samples / sec: 939.77
Iteration:  11700, Loss function: 4.188, Average Loss: 4.331, avg. samples / sec: 1062.06
Iteration:  11720, Loss function: 4.142, Average Loss: 4.330, avg. samples / sec: 1020.69
Iteration:  11740, Loss function: 4.361, Average Loss: 4.328, avg. samples / sec: 963.66
Iteration:  11760, Loss function: 4.252, Average Loss: 4.326, avg. samples / sec: 958.97
Iteration:  11780, Loss function: 4.379, Average Loss: 4.325, avg. samples / sec: 1040.69
Iteration:  11800, Loss function: 4.295, Average Loss: 4.322, avg. samples / sec: 1009.35
Iteration:  11820, Loss function: 4.261, Average Loss: 4.322, avg. samples / sec: 1051.64
Iteration:  11840, Loss function: 4.733, Average Loss: 4.320, avg. samples / sec: 1035.75
Iteration:  11860, Loss function: 4.656, Average Loss: 4.320, avg. samples / sec: 1055.36
Iteration:  11880, Loss function: 4.130, Average Loss: 4.318, avg. samples / sec: 1030.94
Iteration:  11900, Loss function: 4.486, Average Loss: 4.317, avg. samples / sec: 1062.28
Iteration:  11920, Loss function: 4.056, Average Loss: 4.315, avg. samples / sec: 1063.72
Iteration:  11940, Loss function: 4.415, Average Loss: 4.314, avg. samples / sec: 1051.79
Iteration:  11960, Loss function: 4.096, Average Loss: 4.313, avg. samples / sec: 1005.54
Iteration:  11980, Loss function: 4.418, Average Loss: 4.312, avg. samples / sec: 982.25
Iteration:  12000, Loss function: 4.274, Average Loss: 4.310, avg. samples / sec: 1060.03
Iteration:  12020, Loss function: 4.353, Average Loss: 4.310, avg. samples / sec: 1030.06
Iteration:  12040, Loss function: 4.401, Average Loss: 4.310, avg. samples / sec: 960.10
Iteration:  12060, Loss function: 4.213, Average Loss: 4.307, avg. samples / sec: 970.77
Iteration:  12080, Loss function: 4.143, Average Loss: 4.307, avg. samples / sec: 994.10
Iteration:  12100, Loss function: 4.113, Average Loss: 4.304, avg. samples / sec: 1006.16
Iteration:  12120, Loss function: 4.329, Average Loss: 4.304, avg. samples / sec: 1019.00
Iteration:  12140, Loss function: 4.249, Average Loss: 4.303, avg. samples / sec: 1015.82
Iteration:  12160, Loss function: 4.034, Average Loss: 4.299, avg. samples / sec: 957.62
Iteration:  12180, Loss function: 4.087, Average Loss: 4.300, avg. samples / sec: 993.96
Iteration:  12200, Loss function: 4.057, Average Loss: 4.299, avg. samples / sec: 1013.61
Iteration:  12220, Loss function: 4.242, Average Loss: 4.298, avg. samples / sec: 988.59
Iteration:  12240, Loss function: 4.176, Average Loss: 4.298, avg. samples / sec: 1073.54
Iteration:  12260, Loss function: 4.096, Average Loss: 4.297, avg. samples / sec: 1041.10
Iteration:  12280, Loss function: 4.312, Average Loss: 4.295, avg. samples / sec: 1075.85
Iteration:  12300, Loss function: 4.261, Average Loss: 4.296, avg. samples / sec: 1027.25
Iteration:  12320, Loss function: 4.228, Average Loss: 4.295, avg. samples / sec: 972.65
Iteration:  12340, Loss function: 4.066, Average Loss: 4.294, avg. samples / sec: 989.61
:::MLLOG {"namespace": "", "time_ms": 1639473637344, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1639473637346, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 13, "current_iter_num": 12344}}
Iteration:  12360, Loss function: 4.211, Average Loss: 4.292, avg. samples / sec: 1014.46
Iteration:  12380, Loss function: 4.628, Average Loss: 4.292, avg. samples / sec: 1008.49
Iteration:  12400, Loss function: 4.030, Average Loss: 4.290, avg. samples / sec: 1037.07
Iteration:  12420, Loss function: 4.284, Average Loss: 4.289, avg. samples / sec: 1000.89
Iteration:  12440, Loss function: 3.941, Average Loss: 4.288, avg. samples / sec: 989.23
Iteration:  12460, Loss function: 4.167, Average Loss: 4.285, avg. samples / sec: 948.15
Iteration:  12480, Loss function: 4.272, Average Loss: 4.283, avg. samples / sec: 980.79
Iteration:  12500, Loss function: 4.438, Average Loss: 4.281, avg. samples / sec: 980.32
Iteration:  12520, Loss function: 4.389, Average Loss: 4.280, avg. samples / sec: 994.41
Iteration:  12540, Loss function: 4.404, Average Loss: 4.279, avg. samples / sec: 1008.28
Iteration:  12560, Loss function: 4.295, Average Loss: 4.277, avg. samples / sec: 1059.05
Iteration:  12580, Loss function: 3.864, Average Loss: 4.274, avg. samples / sec: 1010.25
Iteration:  12600, Loss function: 4.339, Average Loss: 4.273, avg. samples / sec: 1068.77
Iteration:  12620, Loss function: 4.095, Average Loss: 4.271, avg. samples / sec: 971.61
Iteration:  12640, Loss function: 4.296, Average Loss: 4.271, avg. samples / sec: 965.11
Iteration:  12660, Loss function: 4.235, Average Loss: 4.269, avg. samples / sec: 1016.09
Iteration:  12680, Loss function: 3.863, Average Loss: 4.267, avg. samples / sec: 1041.57
Iteration:  12700, Loss function: 4.031, Average Loss: 4.266, avg. samples / sec: 961.21
Iteration:  12720, Loss function: 4.170, Average Loss: 4.264, avg. samples / sec: 1036.75
Iteration:  12740, Loss function: 3.757, Average Loss: 4.263, avg. samples / sec: 962.06
Iteration:  12760, Loss function: 4.115, Average Loss: 4.261, avg. samples / sec: 1017.94
Iteration:  12780, Loss function: 4.476, Average Loss: 4.262, avg. samples / sec: 995.06
Iteration:  12800, Loss function: 4.360, Average Loss: 4.260, avg. samples / sec: 953.17
Iteration:  12820, Loss function: 4.615, Average Loss: 4.261, avg. samples / sec: 951.63
Iteration:  12840, Loss function: 4.455, Average Loss: 4.263, avg. samples / sec: 1018.35
Iteration:  12860, Loss function: 4.196, Average Loss: 4.264, avg. samples / sec: 1045.36
Iteration:  12880, Loss function: 4.164, Average Loss: 4.264, avg. samples / sec: 955.80
Iteration:  12900, Loss function: 4.620, Average Loss: 4.262, avg. samples / sec: 1069.95
Iteration:  12920, Loss function: 4.405, Average Loss: 4.261, avg. samples / sec: 986.59
Iteration:  12940, Loss function: 4.181, Average Loss: 4.260, avg. samples / sec: 995.48
Iteration:  12960, Loss function: 4.408, Average Loss: 4.259, avg. samples / sec: 1062.53
Iteration:  12980, Loss function: 4.072, Average Loss: 4.258, avg. samples / sec: 995.99
Iteration:  13000, Loss function: 4.358, Average Loss: 4.258, avg. samples / sec: 964.13
Iteration:  13020, Loss function: 3.985, Average Loss: 4.257, avg. samples / sec: 991.41
Iteration:  13040, Loss function: 4.371, Average Loss: 4.255, avg. samples / sec: 1005.10
Iteration:  13060, Loss function: 4.235, Average Loss: 4.254, avg. samples / sec: 934.46
Iteration:  13080, Loss function: 4.032, Average Loss: 4.253, avg. samples / sec: 925.05
Iteration:  13100, Loss function: 4.304, Average Loss: 4.251, avg. samples / sec: 979.52
Iteration:  13120, Loss function: 4.310, Average Loss: 4.251, avg. samples / sec: 906.54
Iteration:  13140, Loss function: 4.471, Average Loss: 4.251, avg. samples / sec: 1064.41
Iteration:  13160, Loss function: 4.030, Average Loss: 4.249, avg. samples / sec: 959.55
Iteration:  13180, Loss function: 3.844, Average Loss: 4.248, avg. samples / sec: 1011.61
Iteration:  13200, Loss function: 4.408, Average Loss: 4.247, avg. samples / sec: 1058.63
Iteration:  13220, Loss function: 4.372, Average Loss: 4.247, avg. samples / sec: 1006.89
Iteration:  13240, Loss function: 4.153, Average Loss: 4.248, avg. samples / sec: 1040.00
Iteration:  13260, Loss function: 4.330, Average Loss: 4.248, avg. samples / sec: 981.13
Iteration:  13280, Loss function: 3.963, Average Loss: 4.246, avg. samples / sec: 988.08
Iteration:  13300, Loss function: 4.052, Average Loss: 4.246, avg. samples / sec: 1030.35
Iteration:  13320, Loss function: 4.211, Average Loss: 4.245, avg. samples / sec: 973.99
Iteration:  13340, Loss function: 4.231, Average Loss: 4.244, avg. samples / sec: 940.37
Iteration:  13360, Loss function: 4.055, Average Loss: 4.244, avg. samples / sec: 1004.78
:::MLLOG {"namespace": "", "time_ms": 1639473755146, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1639473755148, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 14, "current_iter_num": 13373}}
Iteration:  13380, Loss function: 4.113, Average Loss: 4.243, avg. samples / sec: 996.96
Iteration:  13400, Loss function: 3.921, Average Loss: 4.241, avg. samples / sec: 1027.68
Iteration:  13420, Loss function: 4.340, Average Loss: 4.239, avg. samples / sec: 1085.42
Iteration:  13440, Loss function: 4.375, Average Loss: 4.238, avg. samples / sec: 977.13
Iteration:  13460, Loss function: 4.454, Average Loss: 4.238, avg. samples / sec: 986.24
Iteration:  13480, Loss function: 4.161, Average Loss: 4.237, avg. samples / sec: 1028.39
Iteration:  13500, Loss function: 4.359, Average Loss: 4.236, avg. samples / sec: 961.92
Iteration:  13520, Loss function: 4.121, Average Loss: 4.234, avg. samples / sec: 1051.70
Iteration:  13540, Loss function: 4.084, Average Loss: 4.233, avg. samples / sec: 1079.47
Iteration:  13560, Loss function: 4.436, Average Loss: 4.233, avg. samples / sec: 990.32
Iteration:  13580, Loss function: 4.077, Average Loss: 4.231, avg. samples / sec: 901.26
Iteration:  13600, Loss function: 4.428, Average Loss: 4.230, avg. samples / sec: 1024.83
Iteration:  13620, Loss function: 4.074, Average Loss: 4.228, avg. samples / sec: 948.05
Iteration:  13640, Loss function: 4.080, Average Loss: 4.227, avg. samples / sec: 991.36
Iteration:  13660, Loss function: 3.963, Average Loss: 4.226, avg. samples / sec: 1044.81
Iteration:  13680, Loss function: 4.094, Average Loss: 4.225, avg. samples / sec: 962.06
Iteration:  13700, Loss function: 4.547, Average Loss: 4.225, avg. samples / sec: 985.43
Iteration:  13720, Loss function: 3.832, Average Loss: 4.224, avg. samples / sec: 1001.39
Iteration:  13740, Loss function: 4.045, Average Loss: 4.223, avg. samples / sec: 1051.35
Iteration:  13760, Loss function: 4.314, Average Loss: 4.221, avg. samples / sec: 936.45
Iteration:  13780, Loss function: 4.042, Average Loss: 4.220, avg. samples / sec: 1051.74
Iteration:  13800, Loss function: 4.362, Average Loss: 4.219, avg. samples / sec: 1041.42
Iteration:  13820, Loss function: 3.965, Average Loss: 4.219, avg. samples / sec: 997.69
Iteration:  13840, Loss function: 4.303, Average Loss: 4.218, avg. samples / sec: 1065.94
Iteration:  13860, Loss function: 4.377, Average Loss: 4.218, avg. samples / sec: 1048.90
Iteration:  13880, Loss function: 4.365, Average Loss: 4.217, avg. samples / sec: 992.26
Iteration:  13900, Loss function: 4.212, Average Loss: 4.217, avg. samples / sec: 1008.98
Iteration:  13920, Loss function: 3.977, Average Loss: 4.216, avg. samples / sec: 996.36
Iteration:  13940, Loss function: 4.020, Average Loss: 4.217, avg. samples / sec: 937.43
Iteration:  13960, Loss function: 4.405, Average Loss: 4.217, avg. samples / sec: 938.15
Iteration:  13980, Loss function: 3.978, Average Loss: 4.215, avg. samples / sec: 985.02
Iteration:  14000, Loss function: 4.364, Average Loss: 4.215, avg. samples / sec: 1031.56
Iteration:  14020, Loss function: 4.073, Average Loss: 4.215, avg. samples / sec: 1004.54
Iteration:  14040, Loss function: 4.324, Average Loss: 4.215, avg. samples / sec: 1012.67
Iteration:  14060, Loss function: 3.724, Average Loss: 4.212, avg. samples / sec: 1081.04
Iteration:  14080, Loss function: 4.229, Average Loss: 4.212, avg. samples / sec: 1029.88
Iteration:  14100, Loss function: 4.237, Average Loss: 4.212, avg. samples / sec: 1050.44
Iteration:  14120, Loss function: 4.154, Average Loss: 4.212, avg. samples / sec: 1002.52
Iteration:  14140, Loss function: 4.102, Average Loss: 4.210, avg. samples / sec: 995.25
Iteration:  14160, Loss function: 4.286, Average Loss: 4.209, avg. samples / sec: 1021.52
Iteration:  14180, Loss function: 4.142, Average Loss: 4.208, avg. samples / sec: 990.55
Iteration:  14200, Loss function: 4.435, Average Loss: 4.208, avg. samples / sec: 956.27
Iteration:  14220, Loss function: 4.254, Average Loss: 4.207, avg. samples / sec: 1031.99
Iteration:  14240, Loss function: 3.945, Average Loss: 4.206, avg. samples / sec: 927.41
Iteration:  14260, Loss function: 4.491, Average Loss: 4.207, avg. samples / sec: 1014.07
Iteration:  14280, Loss function: 3.988, Average Loss: 4.205, avg. samples / sec: 991.35
Iteration:  14300, Loss function: 4.328, Average Loss: 4.206, avg. samples / sec: 971.45
Iteration:  14320, Loss function: 4.189, Average Loss: 4.204, avg. samples / sec: 996.82
Iteration:  14340, Loss function: 4.193, Average Loss: 4.204, avg. samples / sec: 1023.91
Iteration:  14360, Loss function: 4.195, Average Loss: 4.203, avg. samples / sec: 978.92
Iteration:  14380, Loss function: 4.500, Average Loss: 4.204, avg. samples / sec: 950.32
Iteration:  14400, Loss function: 4.073, Average Loss: 4.203, avg. samples / sec: 951.57
:::MLLOG {"namespace": "", "time_ms": 1639473872444, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1639473872446, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 15, "current_iter_num": 14402}}
Iteration:  14420, Loss function: 4.216, Average Loss: 4.201, avg. samples / sec: 1117.46
Iteration:  14440, Loss function: 4.075, Average Loss: 4.198, avg. samples / sec: 1033.04
Iteration:  14460, Loss function: 4.085, Average Loss: 4.197, avg. samples / sec: 1026.12
Iteration:  14480, Loss function: 3.785, Average Loss: 4.195, avg. samples / sec: 999.43
Iteration:  14500, Loss function: 4.017, Average Loss: 4.194, avg. samples / sec: 1041.18
Iteration:  14520, Loss function: 4.216, Average Loss: 4.193, avg. samples / sec: 1027.52
Iteration:  14540, Loss function: 4.256, Average Loss: 4.192, avg. samples / sec: 1013.65
Iteration:  14560, Loss function: 4.103, Average Loss: 4.192, avg. samples / sec: 1084.75
Iteration:  14580, Loss function: 4.182, Average Loss: 4.190, avg. samples / sec: 1016.57
Iteration:  14600, Loss function: 4.073, Average Loss: 4.189, avg. samples / sec: 1057.61
Iteration:  14620, Loss function: 4.482, Average Loss: 4.189, avg. samples / sec: 1004.78
Iteration:  14640, Loss function: 4.057, Average Loss: 4.188, avg. samples / sec: 977.08
Iteration:  14660, Loss function: 3.682, Average Loss: 4.186, avg. samples / sec: 974.62
Iteration:  14680, Loss function: 4.143, Average Loss: 4.185, avg. samples / sec: 982.80
Iteration:  14700, Loss function: 4.180, Average Loss: 4.184, avg. samples / sec: 1014.85
Iteration:  14720, Loss function: 4.094, Average Loss: 4.184, avg. samples / sec: 1041.61
Iteration:  14740, Loss function: 4.220, Average Loss: 4.183, avg. samples / sec: 1012.81
Iteration:  14760, Loss function: 4.085, Average Loss: 4.183, avg. samples / sec: 1000.18
Iteration:  14780, Loss function: 4.397, Average Loss: 4.183, avg. samples / sec: 972.19
Iteration:  14800, Loss function: 4.089, Average Loss: 4.182, avg. samples / sec: 1021.69
Iteration:  14820, Loss function: 4.036, Average Loss: 4.181, avg. samples / sec: 996.97
Iteration:  14840, Loss function: 4.182, Average Loss: 4.180, avg. samples / sec: 992.46
Iteration:  14860, Loss function: 4.180, Average Loss: 4.179, avg. samples / sec: 1004.90
Iteration:  14880, Loss function: 4.089, Average Loss: 4.178, avg. samples / sec: 885.08
Iteration:  14900, Loss function: 4.132, Average Loss: 4.178, avg. samples / sec: 979.60
Iteration:  14920, Loss function: 4.163, Average Loss: 4.178, avg. samples / sec: 957.17
Iteration:  14940, Loss function: 4.063, Average Loss: 4.176, avg. samples / sec: 992.00
Iteration:  14960, Loss function: 3.928, Average Loss: 4.177, avg. samples / sec: 956.18
Iteration:  14980, Loss function: 4.245, Average Loss: 4.176, avg. samples / sec: 954.47
Iteration:  15000, Loss function: 4.271, Average Loss: 4.175, avg. samples / sec: 979.52
Iteration:  15020, Loss function: 3.946, Average Loss: 4.175, avg. samples / sec: 1012.20
Iteration:  15040, Loss function: 4.260, Average Loss: 4.175, avg. samples / sec: 971.57
Iteration:  15060, Loss function: 3.777, Average Loss: 4.174, avg. samples / sec: 1064.38
Iteration:  15080, Loss function: 4.218, Average Loss: 4.173, avg. samples / sec: 1022.18
Iteration:  15100, Loss function: 4.191, Average Loss: 4.172, avg. samples / sec: 967.28
Iteration:  15120, Loss function: 4.213, Average Loss: 4.171, avg. samples / sec: 992.13
Iteration:  15140, Loss function: 4.067, Average Loss: 4.171, avg. samples / sec: 998.21
Iteration:  15160, Loss function: 4.227, Average Loss: 4.171, avg. samples / sec: 1004.11
Iteration:  15180, Loss function: 3.955, Average Loss: 4.171, avg. samples / sec: 979.23
Iteration:  15200, Loss function: 4.035, Average Loss: 4.170, avg. samples / sec: 1042.41
Iteration:  15220, Loss function: 4.290, Average Loss: 4.170, avg. samples / sec: 1040.63
Iteration:  15240, Loss function: 4.119, Average Loss: 4.169, avg. samples / sec: 1057.28
Iteration:  15260, Loss function: 3.903, Average Loss: 4.168, avg. samples / sec: 1012.88
Iteration:  15280, Loss function: 4.052, Average Loss: 4.167, avg. samples / sec: 965.06
Iteration:  15300, Loss function: 4.197, Average Loss: 4.167, avg. samples / sec: 1045.06
Iteration:  15320, Loss function: 4.288, Average Loss: 4.165, avg. samples / sec: 899.01
Iteration:  15340, Loss function: 4.119, Average Loss: 4.165, avg. samples / sec: 952.14
Iteration:  15360, Loss function: 4.121, Average Loss: 4.164, avg. samples / sec: 983.31
Iteration:  15380, Loss function: 3.935, Average Loss: 4.163, avg. samples / sec: 976.80
Iteration:  15400, Loss function: 4.522, Average Loss: 4.163, avg. samples / sec: 968.72
Iteration:  15420, Loss function: 4.198, Average Loss: 4.163, avg. samples / sec: 1016.06
:::MLLOG {"namespace": "", "time_ms": 1639473989666, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1639473989668, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 16, "current_iter_num": 15430}}
Iteration:  15440, Loss function: 4.237, Average Loss: 4.162, avg. samples / sec: 1023.90
Iteration:  15460, Loss function: 4.200, Average Loss: 4.160, avg. samples / sec: 1050.09
Iteration:  15480, Loss function: 4.160, Average Loss: 4.160, avg. samples / sec: 963.34
Iteration:  15500, Loss function: 4.159, Average Loss: 4.158, avg. samples / sec: 1008.60
Iteration:  15520, Loss function: 3.928, Average Loss: 4.157, avg. samples / sec: 981.89
Iteration:  15540, Loss function: 4.557, Average Loss: 4.156, avg. samples / sec: 1020.60
Iteration:  15560, Loss function: 4.220, Average Loss: 4.156, avg. samples / sec: 985.11
Iteration:  15580, Loss function: 4.332, Average Loss: 4.155, avg. samples / sec: 931.68
Iteration:  15600, Loss function: 4.511, Average Loss: 4.154, avg. samples / sec: 952.44
Iteration:  15620, Loss function: 4.151, Average Loss: 4.153, avg. samples / sec: 1005.27
Iteration:  15640, Loss function: 4.114, Average Loss: 4.152, avg. samples / sec: 999.21
Iteration:  15660, Loss function: 4.046, Average Loss: 4.150, avg. samples / sec: 1004.17
Iteration:  15680, Loss function: 4.299, Average Loss: 4.150, avg. samples / sec: 994.50
Iteration:  15700, Loss function: 4.178, Average Loss: 4.150, avg. samples / sec: 1008.32
Iteration:  15720, Loss function: 3.807, Average Loss: 4.149, avg. samples / sec: 1010.26
Iteration:  15740, Loss function: 4.053, Average Loss: 4.146, avg. samples / sec: 1010.51
Iteration:  15760, Loss function: 3.674, Average Loss: 4.145, avg. samples / sec: 1027.80
Iteration:  15780, Loss function: 4.241, Average Loss: 4.145, avg. samples / sec: 989.11
Iteration:  15800, Loss function: 3.938, Average Loss: 4.143, avg. samples / sec: 1020.99
Iteration:  15820, Loss function: 4.379, Average Loss: 4.144, avg. samples / sec: 1058.03
Iteration:  15840, Loss function: 4.304, Average Loss: 4.142, avg. samples / sec: 999.27
Iteration:  15860, Loss function: 4.109, Average Loss: 4.141, avg. samples / sec: 937.00
Iteration:  15880, Loss function: 4.029, Average Loss: 4.139, avg. samples / sec: 992.08
Iteration:  15900, Loss function: 3.942, Average Loss: 4.138, avg. samples / sec: 1008.09
Iteration:  15920, Loss function: 4.168, Average Loss: 4.137, avg. samples / sec: 999.86
Iteration:  15940, Loss function: 4.015, Average Loss: 4.137, avg. samples / sec: 968.14
Iteration:  15960, Loss function: 3.870, Average Loss: 4.134, avg. samples / sec: 1000.51
Iteration:  15980, Loss function: 4.151, Average Loss: 4.133, avg. samples / sec: 1030.77
Iteration:  16000, Loss function: 4.005, Average Loss: 4.132, avg. samples / sec: 1022.74
Iteration:  16020, Loss function: 4.225, Average Loss: 4.130, avg. samples / sec: 948.24
Iteration:  16040, Loss function: 3.921, Average Loss: 4.129, avg. samples / sec: 1065.70
Iteration:  16060, Loss function: 3.955, Average Loss: 4.129, avg. samples / sec: 967.08
Iteration:  16080, Loss function: 3.939, Average Loss: 4.129, avg. samples / sec: 1048.77
Iteration:  16100, Loss function: 4.379, Average Loss: 4.129, avg. samples / sec: 1016.41
Iteration:  16120, Loss function: 4.344, Average Loss: 4.129, avg. samples / sec: 994.48
Iteration:  16140, Loss function: 3.933, Average Loss: 4.128, avg. samples / sec: 976.01
Iteration:  16160, Loss function: 4.145, Average Loss: 4.127, avg. samples / sec: 948.63
Iteration:  16180, Loss function: 4.090, Average Loss: 4.126, avg. samples / sec: 997.35
Iteration:  16200, Loss function: 3.942, Average Loss: 4.127, avg. samples / sec: 1020.47
Iteration:  16220, Loss function: 4.152, Average Loss: 4.128, avg. samples / sec: 981.45
Iteration:  16240, Loss function: 4.065, Average Loss: 4.127, avg. samples / sec: 989.80
Iteration:  16260, Loss function: 4.217, Average Loss: 4.126, avg. samples / sec: 1001.35
Iteration:  16280, Loss function: 4.361, Average Loss: 4.128, avg. samples / sec: 994.15
Iteration:  16300, Loss function: 4.138, Average Loss: 4.127, avg. samples / sec: 944.45
Iteration:  16320, Loss function: 4.434, Average Loss: 4.130, avg. samples / sec: 929.47
Iteration:  16340, Loss function: 4.134, Average Loss: 4.129, avg. samples / sec: 1028.38
Iteration:  16360, Loss function: 3.938, Average Loss: 4.127, avg. samples / sec: 1062.49
Iteration:  16380, Loss function: 3.996, Average Loss: 4.127, avg. samples / sec: 1057.09
Iteration:  16400, Loss function: 4.054, Average Loss: 4.127, avg. samples / sec: 1064.35
Iteration:  16420, Loss function: 3.790, Average Loss: 4.127, avg. samples / sec: 1093.09
Iteration:  16440, Loss function: 4.078, Average Loss: 4.127, avg. samples / sec: 952.01
:::MLLOG {"namespace": "", "time_ms": 1639474107053, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1639474107055, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 17, "current_iter_num": 16459}}
Iteration:  16460, Loss function: 4.262, Average Loss: 4.127, avg. samples / sec: 961.18
Iteration:  16480, Loss function: 3.968, Average Loss: 4.126, avg. samples / sec: 1039.98
Iteration:  16500, Loss function: 4.146, Average Loss: 4.125, avg. samples / sec: 997.58
Iteration:  16520, Loss function: 3.917, Average Loss: 4.124, avg. samples / sec: 1070.16
Iteration:  16540, Loss function: 4.012, Average Loss: 4.122, avg. samples / sec: 1013.93
Iteration:  16560, Loss function: 4.005, Average Loss: 4.120, avg. samples / sec: 980.33
Iteration:  16580, Loss function: 3.927, Average Loss: 4.118, avg. samples / sec: 1046.05
Iteration:  16600, Loss function: 4.163, Average Loss: 4.118, avg. samples / sec: 1028.14
Iteration:  16620, Loss function: 4.281, Average Loss: 4.118, avg. samples / sec: 1080.39
Iteration:  16640, Loss function: 4.152, Average Loss: 4.117, avg. samples / sec: 986.00
Iteration:  16660, Loss function: 4.431, Average Loss: 4.117, avg. samples / sec: 1032.09
Iteration:  16680, Loss function: 4.103, Average Loss: 4.115, avg. samples / sec: 1007.21
Iteration:  16700, Loss function: 4.065, Average Loss: 4.114, avg. samples / sec: 1013.42
Iteration:  16720, Loss function: 3.837, Average Loss: 4.114, avg. samples / sec: 993.42
Iteration:  16740, Loss function: 4.353, Average Loss: 4.113, avg. samples / sec: 966.43
Iteration:  16760, Loss function: 3.794, Average Loss: 4.110, avg. samples / sec: 1060.42
Iteration:  16780, Loss function: 3.985, Average Loss: 4.109, avg. samples / sec: 1017.47
Iteration:  16800, Loss function: 4.036, Average Loss: 4.108, avg. samples / sec: 989.13
Iteration:  16820, Loss function: 4.012, Average Loss: 4.106, avg. samples / sec: 1031.39
Iteration:  16840, Loss function: 4.229, Average Loss: 4.106, avg. samples / sec: 1057.58
Iteration:  16860, Loss function: 4.238, Average Loss: 4.106, avg. samples / sec: 1056.16
Iteration:  16880, Loss function: 3.825, Average Loss: 4.104, avg. samples / sec: 982.03
Iteration:  16900, Loss function: 4.273, Average Loss: 4.104, avg. samples / sec: 1054.68
Iteration:  16920, Loss function: 4.096, Average Loss: 4.103, avg. samples / sec: 1030.36
Iteration:  16940, Loss function: 4.050, Average Loss: 4.102, avg. samples / sec: 962.24
Iteration:  16960, Loss function: 4.271, Average Loss: 4.101, avg. samples / sec: 1070.94
Iteration:  16980, Loss function: 4.384, Average Loss: 4.101, avg. samples / sec: 1005.23
Iteration:  17000, Loss function: 4.313, Average Loss: 4.101, avg. samples / sec: 975.25
Iteration:  17020, Loss function: 4.342, Average Loss: 4.101, avg. samples / sec: 953.23
Iteration:  17040, Loss function: 4.064, Average Loss: 4.101, avg. samples / sec: 1013.50
Iteration:  17060, Loss function: 4.218, Average Loss: 4.102, avg. samples / sec: 995.51
Iteration:  17080, Loss function: 4.292, Average Loss: 4.102, avg. samples / sec: 990.04
Iteration:  17100, Loss function: 4.111, Average Loss: 4.102, avg. samples / sec: 959.37
Iteration:  17120, Loss function: 4.228, Average Loss: 4.099, avg. samples / sec: 1035.60
Iteration:  17140, Loss function: 3.959, Average Loss: 4.099, avg. samples / sec: 1079.60
Iteration:  17160, Loss function: 3.798, Average Loss: 4.098, avg. samples / sec: 1032.92
Iteration:  17180, Loss function: 4.190, Average Loss: 4.098, avg. samples / sec: 1060.22
Iteration:  17200, Loss function: 4.600, Average Loss: 4.100, avg. samples / sec: 972.54
Iteration:  17220, Loss function: 4.097, Average Loss: 4.099, avg. samples / sec: 970.65
Iteration:  17240, Loss function: 3.956, Average Loss: 4.097, avg. samples / sec: 1098.35
Iteration:  17260, Loss function: 4.374, Average Loss: 4.097, avg. samples / sec: 971.27
Iteration:  17280, Loss function: 4.408, Average Loss: 4.097, avg. samples / sec: 1038.86
Iteration:  17300, Loss function: 4.075, Average Loss: 4.096, avg. samples / sec: 980.72
Iteration:  17320, Loss function: 4.049, Average Loss: 4.096, avg. samples / sec: 988.34
Iteration:  17340, Loss function: 3.896, Average Loss: 4.096, avg. samples / sec: 965.23
Iteration:  17360, Loss function: 4.154, Average Loss: 4.096, avg. samples / sec: 967.00
Iteration:  17380, Loss function: 3.996, Average Loss: 4.096, avg. samples / sec: 1006.85
Iteration:  17400, Loss function: 3.997, Average Loss: 4.097, avg. samples / sec: 1033.48
Iteration:  17420, Loss function: 4.054, Average Loss: 4.096, avg. samples / sec: 1002.61
Iteration:  17440, Loss function: 3.927, Average Loss: 4.095, avg. samples / sec: 950.21
Iteration:  17460, Loss function: 4.507, Average Loss: 4.096, avg. samples / sec: 1015.35
Iteration:  17480, Loss function: 4.088, Average Loss: 4.095, avg. samples / sec: 1002.75
:::MLLOG {"namespace": "", "time_ms": 1639474223156, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1639474223158, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 18, "current_iter_num": 17488}}
Iteration:  17500, Loss function: 3.805, Average Loss: 4.094, avg. samples / sec: 989.79
Iteration:  17520, Loss function: 4.023, Average Loss: 4.094, avg. samples / sec: 1045.93
Iteration:  17540, Loss function: 4.087, Average Loss: 4.093, avg. samples / sec: 1033.47
Iteration:  17560, Loss function: 4.060, Average Loss: 4.092, avg. samples / sec: 992.23
Iteration:  17580, Loss function: 3.599, Average Loss: 4.091, avg. samples / sec: 979.01
Iteration:  17600, Loss function: 4.038, Average Loss: 4.090, avg. samples / sec: 1075.75
Iteration:  17620, Loss function: 3.858, Average Loss: 4.089, avg. samples / sec: 1025.83
Iteration:  17640, Loss function: 4.150, Average Loss: 4.088, avg. samples / sec: 1052.50
Iteration:  17660, Loss function: 4.152, Average Loss: 4.087, avg. samples / sec: 951.88
Iteration:  17680, Loss function: 3.822, Average Loss: 4.085, avg. samples / sec: 1078.20
Iteration:  17700, Loss function: 4.201, Average Loss: 4.084, avg. samples / sec: 1026.68
Iteration:  17720, Loss function: 3.708, Average Loss: 4.082, avg. samples / sec: 1046.59
Iteration:  17740, Loss function: 4.167, Average Loss: 4.081, avg. samples / sec: 1011.38
Iteration:  17760, Loss function: 4.004, Average Loss: 4.079, avg. samples / sec: 964.85
Iteration:  17780, Loss function: 4.345, Average Loss: 4.080, avg. samples / sec: 998.70
Iteration:  17800, Loss function: 3.968, Average Loss: 4.080, avg. samples / sec: 1050.30
Iteration:  17820, Loss function: 3.947, Average Loss: 4.080, avg. samples / sec: 1055.27
Iteration:  17840, Loss function: 3.882, Average Loss: 4.079, avg. samples / sec: 1021.91
Iteration:  17860, Loss function: 4.142, Average Loss: 4.079, avg. samples / sec: 1000.31
Iteration:  17880, Loss function: 4.042, Average Loss: 4.079, avg. samples / sec: 1037.98
Iteration:  17900, Loss function: 4.259, Average Loss: 4.078, avg. samples / sec: 997.49
Iteration:  17920, Loss function: 4.096, Average Loss: 4.075, avg. samples / sec: 980.62
Iteration:  17940, Loss function: 3.992, Average Loss: 4.074, avg. samples / sec: 987.18
Iteration:  17960, Loss function: 3.860, Average Loss: 4.073, avg. samples / sec: 1053.21
Iteration:  17980, Loss function: 4.091, Average Loss: 4.072, avg. samples / sec: 962.43
Iteration:  18000, Loss function: 4.012, Average Loss: 4.072, avg. samples / sec: 969.01
Iteration:  18020, Loss function: 4.128, Average Loss: 4.071, avg. samples / sec: 957.03
Iteration:  18040, Loss function: 4.486, Average Loss: 4.070, avg. samples / sec: 977.70
Iteration:  18060, Loss function: 4.279, Average Loss: 4.070, avg. samples / sec: 1053.52
Iteration:  18080, Loss function: 4.251, Average Loss: 4.070, avg. samples / sec: 1013.87
Iteration:  18100, Loss function: 3.916, Average Loss: 4.071, avg. samples / sec: 1034.13
Iteration:  18120, Loss function: 4.184, Average Loss: 4.071, avg. samples / sec: 1020.49
Iteration:  18140, Loss function: 4.279, Average Loss: 4.070, avg. samples / sec: 1046.29
Iteration:  18160, Loss function: 4.193, Average Loss: 4.072, avg. samples / sec: 1011.59
Iteration:  18180, Loss function: 3.870, Average Loss: 4.070, avg. samples / sec: 1005.66
Iteration:  18200, Loss function: 4.141, Average Loss: 4.069, avg. samples / sec: 1006.69
Iteration:  18220, Loss function: 4.046, Average Loss: 4.069, avg. samples / sec: 990.90
Iteration:  18240, Loss function: 3.756, Average Loss: 4.069, avg. samples / sec: 963.16
Iteration:  18260, Loss function: 3.930, Average Loss: 4.068, avg. samples / sec: 957.93
Iteration:  18280, Loss function: 4.214, Average Loss: 4.068, avg. samples / sec: 1062.80
Iteration:  18300, Loss function: 4.267, Average Loss: 4.067, avg. samples / sec: 1034.43
Iteration:  18320, Loss function: 4.358, Average Loss: 4.068, avg. samples / sec: 1085.77
Iteration:  18340, Loss function: 3.754, Average Loss: 4.066, avg. samples / sec: 983.87
Iteration:  18360, Loss function: 3.934, Average Loss: 4.066, avg. samples / sec: 1103.07
Iteration:  18380, Loss function: 3.951, Average Loss: 4.066, avg. samples / sec: 1038.51
Iteration:  18400, Loss function: 4.218, Average Loss: 4.066, avg. samples / sec: 923.43
Iteration:  18420, Loss function: 4.165, Average Loss: 4.066, avg. samples / sec: 1032.81
Iteration:  18440, Loss function: 4.324, Average Loss: 4.066, avg. samples / sec: 1031.48
Iteration:  18460, Loss function: 3.961, Average Loss: 4.066, avg. samples / sec: 952.72
Iteration:  18480, Loss function: 4.036, Average Loss: 4.066, avg. samples / sec: 1025.96
Iteration:  18500, Loss function: 4.023, Average Loss: 4.065, avg. samples / sec: 963.16
:::MLLOG {"namespace": "", "time_ms": 1639474339096, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1639474339098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 19, "current_iter_num": 18516}}
Iteration:  18520, Loss function: 4.258, Average Loss: 4.065, avg. samples / sec: 957.69
Iteration:  18540, Loss function: 4.171, Average Loss: 4.064, avg. samples / sec: 1022.60
Iteration:  18560, Loss function: 3.872, Average Loss: 4.062, avg. samples / sec: 972.79
Iteration:  18580, Loss function: 3.982, Average Loss: 4.062, avg. samples / sec: 953.33
Iteration:  18600, Loss function: 4.000, Average Loss: 4.060, avg. samples / sec: 951.91
Iteration:  18620, Loss function: 4.056, Average Loss: 4.060, avg. samples / sec: 1037.90
Iteration:  18640, Loss function: 4.032, Average Loss: 4.058, avg. samples / sec: 1004.61
Iteration:  18660, Loss function: 4.038, Average Loss: 4.058, avg. samples / sec: 1112.11
Iteration:  18680, Loss function: 4.072, Average Loss: 4.057, avg. samples / sec: 991.21
Iteration:  18700, Loss function: 4.256, Average Loss: 4.057, avg. samples / sec: 1030.41
Iteration:  18720, Loss function: 4.036, Average Loss: 4.056, avg. samples / sec: 1050.89
Iteration:  18740, Loss function: 3.895, Average Loss: 4.056, avg. samples / sec: 1008.04
Iteration:  18760, Loss function: 3.807, Average Loss: 4.055, avg. samples / sec: 1008.25
Iteration:  18780, Loss function: 4.217, Average Loss: 4.055, avg. samples / sec: 998.69
Iteration:  18800, Loss function: 4.348, Average Loss: 4.055, avg. samples / sec: 1006.82
Iteration:  18820, Loss function: 4.327, Average Loss: 4.055, avg. samples / sec: 999.10
Iteration:  18840, Loss function: 4.136, Average Loss: 4.056, avg. samples / sec: 1060.45
Iteration:  18860, Loss function: 4.138, Average Loss: 4.054, avg. samples / sec: 1004.87
Iteration:  18880, Loss function: 4.125, Average Loss: 4.054, avg. samples / sec: 1074.01
Iteration:  18900, Loss function: 4.044, Average Loss: 4.053, avg. samples / sec: 950.39
Iteration:  18920, Loss function: 3.980, Average Loss: 4.053, avg. samples / sec: 997.40
Iteration:  18940, Loss function: 3.915, Average Loss: 4.052, avg. samples / sec: 1035.90
Iteration:  18960, Loss function: 4.218, Average Loss: 4.050, avg. samples / sec: 955.66
Iteration:  18980, Loss function: 4.035, Average Loss: 4.049, avg. samples / sec: 1002.50
Iteration:  19000, Loss function: 4.027, Average Loss: 4.048, avg. samples / sec: 1009.10
Iteration:  19020, Loss function: 4.218, Average Loss: 4.046, avg. samples / sec: 1035.23
Iteration:  19040, Loss function: 4.108, Average Loss: 4.046, avg. samples / sec: 1031.19
Iteration:  19060, Loss function: 3.994, Average Loss: 4.045, avg. samples / sec: 989.58
Iteration:  19080, Loss function: 4.191, Average Loss: 4.045, avg. samples / sec: 935.99
Iteration:  19100, Loss function: 4.084, Average Loss: 4.044, avg. samples / sec: 946.60
Iteration:  19120, Loss function: 4.108, Average Loss: 4.045, avg. samples / sec: 1052.23
Iteration:  19140, Loss function: 3.968, Average Loss: 4.045, avg. samples / sec: 1013.85
Iteration:  19160, Loss function: 4.083, Average Loss: 4.045, avg. samples / sec: 981.59
Iteration:  19180, Loss function: 3.744, Average Loss: 4.042, avg. samples / sec: 962.98
Iteration:  19200, Loss function: 3.837, Average Loss: 4.041, avg. samples / sec: 999.40
Iteration:  19220, Loss function: 3.955, Average Loss: 4.040, avg. samples / sec: 1045.28
Iteration:  19240, Loss function: 3.864, Average Loss: 4.039, avg. samples / sec: 1021.77
Iteration:  19260, Loss function: 4.012, Average Loss: 4.039, avg. samples / sec: 1083.15
Iteration:  19280, Loss function: 4.201, Average Loss: 4.039, avg. samples / sec: 981.77
Iteration:  19300, Loss function: 4.218, Average Loss: 4.038, avg. samples / sec: 1032.49
Iteration:  19320, Loss function: 3.782, Average Loss: 4.037, avg. samples / sec: 951.05
Iteration:  19340, Loss function: 3.869, Average Loss: 4.039, avg. samples / sec: 990.82
Iteration:  19360, Loss function: 4.049, Average Loss: 4.039, avg. samples / sec: 1051.99
Iteration:  19380, Loss function: 3.840, Average Loss: 4.038, avg. samples / sec: 1029.77
Iteration:  19400, Loss function: 3.903, Average Loss: 4.039, avg. samples / sec: 1062.16
Iteration:  19420, Loss function: 4.031, Average Loss: 4.038, avg. samples / sec: 987.60
Iteration:  19440, Loss function: 4.214, Average Loss: 4.037, avg. samples / sec: 993.09
Iteration:  19460, Loss function: 3.976, Average Loss: 4.038, avg. samples / sec: 973.70
Iteration:  19480, Loss function: 3.875, Average Loss: 4.038, avg. samples / sec: 1002.69
Iteration:  19500, Loss function: 3.904, Average Loss: 4.038, avg. samples / sec: 968.59
Iteration:  19520, Loss function: 4.094, Average Loss: 4.039, avg. samples / sec: 954.61
Iteration:  19540, Loss function: 3.896, Average Loss: 4.038, avg. samples / sec: 1022.11
:::MLLOG {"namespace": "", "time_ms": 1639474455888, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1639474455889, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 20, "current_iter_num": 19545}}
Iteration:  19560, Loss function: 3.670, Average Loss: 4.035, avg. samples / sec: 1015.62
Iteration:  19580, Loss function: 3.812, Average Loss: 4.034, avg. samples / sec: 945.39
Iteration:  19600, Loss function: 4.141, Average Loss: 4.033, avg. samples / sec: 1037.67
Iteration:  19620, Loss function: 4.108, Average Loss: 4.031, avg. samples / sec: 1019.74
Iteration:  19640, Loss function: 3.879, Average Loss: 4.030, avg. samples / sec: 1010.84
Iteration:  19660, Loss function: 3.869, Average Loss: 4.027, avg. samples / sec: 998.81
Iteration:  19680, Loss function: 4.204, Average Loss: 4.027, avg. samples / sec: 990.36
Iteration:  19700, Loss function: 4.208, Average Loss: 4.025, avg. samples / sec: 1013.86
Iteration:  19720, Loss function: 3.939, Average Loss: 4.025, avg. samples / sec: 977.76
Iteration:  19740, Loss function: 3.863, Average Loss: 4.025, avg. samples / sec: 1001.98
Iteration:  19760, Loss function: 4.121, Average Loss: 4.025, avg. samples / sec: 990.53
Iteration:  19780, Loss function: 4.052, Average Loss: 4.024, avg. samples / sec: 955.82
Iteration:  19800, Loss function: 4.227, Average Loss: 4.023, avg. samples / sec: 955.12
Iteration:  19820, Loss function: 3.951, Average Loss: 4.022, avg. samples / sec: 948.95
Iteration:  19840, Loss function: 4.026, Average Loss: 4.021, avg. samples / sec: 1007.21
Iteration:  19860, Loss function: 3.779, Average Loss: 4.020, avg. samples / sec: 1002.04
Iteration:  19880, Loss function: 3.816, Average Loss: 4.019, avg. samples / sec: 1088.31
Iteration:  19900, Loss function: 4.088, Average Loss: 4.018, avg. samples / sec: 989.21
Iteration:  19920, Loss function: 3.911, Average Loss: 4.018, avg. samples / sec: 998.33
Iteration:  19940, Loss function: 3.864, Average Loss: 4.018, avg. samples / sec: 976.37
Iteration:  19960, Loss function: 3.891, Average Loss: 4.018, avg. samples / sec: 971.51
Iteration:  19980, Loss function: 3.829, Average Loss: 4.018, avg. samples / sec: 988.44
Iteration:  20000, Loss function: 3.650, Average Loss: 4.017, avg. samples / sec: 1044.01
Iteration:  20020, Loss function: 3.837, Average Loss: 4.016, avg. samples / sec: 1053.32
Iteration:  20040, Loss function: 4.053, Average Loss: 4.015, avg. samples / sec: 1013.93
Iteration:  20060, Loss function: 3.862, Average Loss: 4.013, avg. samples / sec: 934.63
Iteration:  20080, Loss function: 3.926, Average Loss: 4.013, avg. samples / sec: 1042.58
Iteration:  20100, Loss function: 4.082, Average Loss: 4.012, avg. samples / sec: 961.36
Iteration:  20120, Loss function: 4.136, Average Loss: 4.012, avg. samples / sec: 1001.75
Iteration:  20140, Loss function: 4.115, Average Loss: 4.011, avg. samples / sec: 1014.87
Iteration:  20160, Loss function: 3.806, Average Loss: 4.011, avg. samples / sec: 1028.59
Iteration:  20180, Loss function: 3.949, Average Loss: 4.012, avg. samples / sec: 1025.28
Iteration:  20200, Loss function: 4.122, Average Loss: 4.012, avg. samples / sec: 1014.55
Iteration:  20220, Loss function: 4.130, Average Loss: 4.012, avg. samples / sec: 993.28
Iteration:  20240, Loss function: 3.954, Average Loss: 4.012, avg. samples / sec: 1033.42
Iteration:  20260, Loss function: 3.841, Average Loss: 4.011, avg. samples / sec: 966.83
Iteration:  20280, Loss function: 3.791, Average Loss: 4.011, avg. samples / sec: 1002.57
Iteration:  20300, Loss function: 4.202, Average Loss: 4.010, avg. samples / sec: 1044.16
Iteration:  20320, Loss function: 4.067, Average Loss: 4.010, avg. samples / sec: 948.83
Iteration:  20340, Loss function: 4.171, Average Loss: 4.012, avg. samples / sec: 1000.55
Iteration:  20360, Loss function: 3.839, Average Loss: 4.010, avg. samples / sec: 930.99
Iteration:  20380, Loss function: 4.093, Average Loss: 4.010, avg. samples / sec: 1000.62
Iteration:  20400, Loss function: 3.832, Average Loss: 4.011, avg. samples / sec: 973.12
Iteration:  20420, Loss function: 4.031, Average Loss: 4.012, avg. samples / sec: 1019.58
Iteration:  20440, Loss function: 4.056, Average Loss: 4.013, avg. samples / sec: 960.63
Iteration:  20460, Loss function: 4.006, Average Loss: 4.014, avg. samples / sec: 999.49
Iteration:  20480, Loss function: 4.075, Average Loss: 4.014, avg. samples / sec: 1013.13
Iteration:  20500, Loss function: 3.752, Average Loss: 4.014, avg. samples / sec: 990.95
Iteration:  20520, Loss function: 3.803, Average Loss: 4.013, avg. samples / sec: 956.96
Iteration:  20540, Loss function: 3.883, Average Loss: 4.011, avg. samples / sec: 1015.27
Iteration:  20560, Loss function: 4.173, Average Loss: 4.012, avg. samples / sec: 1006.34
:::MLLOG {"namespace": "", "time_ms": 1639474573443, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1639474573444, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 21, "current_iter_num": 20573}}
Iteration:  20580, Loss function: 4.049, Average Loss: 4.012, avg. samples / sec: 1039.13
Iteration:  20600, Loss function: 3.912, Average Loss: 4.011, avg. samples / sec: 1045.53
Iteration:  20620, Loss function: 3.868, Average Loss: 4.010, avg. samples / sec: 1037.87
Iteration:  20640, Loss function: 4.138, Average Loss: 4.009, avg. samples / sec: 982.56
Iteration:  20660, Loss function: 3.930, Average Loss: 4.007, avg. samples / sec: 961.17
Iteration:  20680, Loss function: 4.112, Average Loss: 4.005, avg. samples / sec: 964.37
Iteration:  20700, Loss function: 3.700, Average Loss: 4.003, avg. samples / sec: 944.95
Iteration:  20720, Loss function: 3.896, Average Loss: 4.003, avg. samples / sec: 994.98
Iteration:  20740, Loss function: 4.027, Average Loss: 4.003, avg. samples / sec: 1003.10
Iteration:  20760, Loss function: 4.023, Average Loss: 4.002, avg. samples / sec: 1030.01
Iteration:  20780, Loss function: 4.097, Average Loss: 4.001, avg. samples / sec: 1002.86
Iteration:  20800, Loss function: 3.968, Average Loss: 4.000, avg. samples / sec: 1045.33
Iteration:  20820, Loss function: 4.193, Average Loss: 3.999, avg. samples / sec: 1018.51
Iteration:  20840, Loss function: 3.866, Average Loss: 3.998, avg. samples / sec: 964.79
Iteration:  20860, Loss function: 4.037, Average Loss: 3.997, avg. samples / sec: 1027.78
Iteration:  20880, Loss function: 4.038, Average Loss: 3.997, avg. samples / sec: 947.69
Iteration:  20900, Loss function: 4.094, Average Loss: 3.997, avg. samples / sec: 969.58
Iteration:  20920, Loss function: 4.187, Average Loss: 3.997, avg. samples / sec: 1019.20
Iteration:  20940, Loss function: 3.845, Average Loss: 3.995, avg. samples / sec: 906.69
Iteration:  20960, Loss function: 3.777, Average Loss: 3.994, avg. samples / sec: 1063.38
Iteration:  20980, Loss function: 4.099, Average Loss: 3.993, avg. samples / sec: 1040.67
Iteration:  21000, Loss function: 4.258, Average Loss: 3.994, avg. samples / sec: 944.07
Iteration:  21020, Loss function: 3.973, Average Loss: 3.993, avg. samples / sec: 1029.55
Iteration:  21040, Loss function: 3.803, Average Loss: 3.992, avg. samples / sec: 991.65
Iteration:  21060, Loss function: 3.852, Average Loss: 3.990, avg. samples / sec: 997.61
Iteration:  21080, Loss function: 4.062, Average Loss: 3.990, avg. samples / sec: 995.96
Iteration:  21100, Loss function: 4.179, Average Loss: 3.991, avg. samples / sec: 1036.53
Iteration:  21120, Loss function: 3.998, Average Loss: 3.990, avg. samples / sec: 985.94
Iteration:  21140, Loss function: 3.883, Average Loss: 3.989, avg. samples / sec: 996.39
Iteration:  21160, Loss function: 4.108, Average Loss: 3.989, avg. samples / sec: 905.47
Iteration:  21180, Loss function: 3.929, Average Loss: 3.988, avg. samples / sec: 1046.11
Iteration:  21200, Loss function: 4.106, Average Loss: 3.987, avg. samples / sec: 1001.08
Iteration:  21220, Loss function: 3.408, Average Loss: 3.986, avg. samples / sec: 989.40
Iteration:  21240, Loss function: 3.872, Average Loss: 3.987, avg. samples / sec: 931.31
Iteration:  21260, Loss function: 4.065, Average Loss: 3.988, avg. samples / sec: 1021.17
Iteration:  21280, Loss function: 4.111, Average Loss: 3.988, avg. samples / sec: 1001.62
Iteration:  21300, Loss function: 3.779, Average Loss: 3.988, avg. samples / sec: 1039.08
Iteration:  21320, Loss function: 3.883, Average Loss: 3.988, avg. samples / sec: 963.42
Iteration:  21340, Loss function: 4.054, Average Loss: 3.986, avg. samples / sec: 990.21
Iteration:  21360, Loss function: 3.832, Average Loss: 3.986, avg. samples / sec: 966.02
Iteration:  21380, Loss function: 4.352, Average Loss: 3.987, avg. samples / sec: 1032.60
Iteration:  21400, Loss function: 4.193, Average Loss: 3.987, avg. samples / sec: 948.11
Iteration:  21420, Loss function: 3.867, Average Loss: 3.986, avg. samples / sec: 990.51
Iteration:  21440, Loss function: 4.061, Average Loss: 3.988, avg. samples / sec: 1002.59
Iteration:  21460, Loss function: 3.893, Average Loss: 3.988, avg. samples / sec: 1053.60
Iteration:  21480, Loss function: 3.759, Average Loss: 3.987, avg. samples / sec: 1028.72
Iteration:  21500, Loss function: 3.781, Average Loss: 3.988, avg. samples / sec: 1037.51
Iteration:  21520, Loss function: 3.933, Average Loss: 3.988, avg. samples / sec: 996.67
Iteration:  21540, Loss function: 4.076, Average Loss: 3.987, avg. samples / sec: 945.78
Iteration:  21560, Loss function: 4.013, Average Loss: 3.988, avg. samples / sec: 975.39
Iteration:  21580, Loss function: 3.943, Average Loss: 3.988, avg. samples / sec: 937.24
Iteration:  21600, Loss function: 3.811, Average Loss: 3.987, avg. samples / sec: 992.09
:::MLLOG {"namespace": "", "time_ms": 1639474691486, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1639474691487, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 22, "current_iter_num": 21602}}
Iteration:  21620, Loss function: 3.823, Average Loss: 3.985, avg. samples / sec: 998.18
Iteration:  21640, Loss function: 3.563, Average Loss: 3.983, avg. samples / sec: 1008.81
Iteration:  21660, Loss function: 4.171, Average Loss: 3.983, avg. samples / sec: 1010.99
Iteration:  21680, Loss function: 4.059, Average Loss: 3.983, avg. samples / sec: 990.77
Iteration:  21700, Loss function: 4.119, Average Loss: 3.982, avg. samples / sec: 1022.51
Iteration:  21720, Loss function: 3.821, Average Loss: 3.982, avg. samples / sec: 966.15
Iteration:  21740, Loss function: 3.600, Average Loss: 3.980, avg. samples / sec: 1083.62
Iteration:  21760, Loss function: 3.876, Average Loss: 3.978, avg. samples / sec: 1053.02
Iteration:  21780, Loss function: 3.753, Average Loss: 3.976, avg. samples / sec: 964.37
Iteration:  21800, Loss function: 3.920, Average Loss: 3.976, avg. samples / sec: 1005.30
Iteration:  21820, Loss function: 3.704, Average Loss: 3.975, avg. samples / sec: 1025.84
Iteration:  21840, Loss function: 3.802, Average Loss: 3.975, avg. samples / sec: 1034.27
Iteration:  21860, Loss function: 4.096, Average Loss: 3.974, avg. samples / sec: 1038.33
Iteration:  21880, Loss function: 4.446, Average Loss: 3.974, avg. samples / sec: 1035.44
Iteration:  21900, Loss function: 4.016, Average Loss: 3.975, avg. samples / sec: 1002.26
Iteration:  21920, Loss function: 3.890, Average Loss: 3.974, avg. samples / sec: 940.22
Iteration:  21940, Loss function: 4.037, Average Loss: 3.975, avg. samples / sec: 1009.13
Iteration:  21960, Loss function: 3.985, Average Loss: 3.974, avg. samples / sec: 1071.16
Iteration:  21980, Loss function: 4.133, Average Loss: 3.973, avg. samples / sec: 1017.37
Iteration:  22000, Loss function: 3.745, Average Loss: 3.972, avg. samples / sec: 973.32
Iteration:  22020, Loss function: 3.799, Average Loss: 3.972, avg. samples / sec: 1039.61
Iteration:  22040, Loss function: 3.669, Average Loss: 3.971, avg. samples / sec: 1040.93
Iteration:  22060, Loss function: 3.773, Average Loss: 3.971, avg. samples / sec: 1041.25
Iteration:  22080, Loss function: 4.072, Average Loss: 3.972, avg. samples / sec: 1027.94
Iteration:  22100, Loss function: 4.056, Average Loss: 3.972, avg. samples / sec: 1021.04
Iteration:  22120, Loss function: 3.769, Average Loss: 3.971, avg. samples / sec: 927.42
Iteration:  22140, Loss function: 3.687, Average Loss: 3.971, avg. samples / sec: 1075.20
Iteration:  22160, Loss function: 3.984, Average Loss: 3.971, avg. samples / sec: 1045.88
Iteration:  22180, Loss function: 3.822, Average Loss: 3.971, avg. samples / sec: 1074.92
Iteration:  22200, Loss function: 3.985, Average Loss: 3.970, avg. samples / sec: 976.30
Iteration:  22220, Loss function: 4.140, Average Loss: 3.969, avg. samples / sec: 984.62
Iteration:  22240, Loss function: 3.737, Average Loss: 3.968, avg. samples / sec: 996.54
Iteration:  22260, Loss function: 3.648, Average Loss: 3.968, avg. samples / sec: 984.12
Iteration:  22280, Loss function: 4.028, Average Loss: 3.967, avg. samples / sec: 992.75
Iteration:  22300, Loss function: 3.809, Average Loss: 3.966, avg. samples / sec: 1015.48
Iteration:  22320, Loss function: 3.996, Average Loss: 3.967, avg. samples / sec: 976.77
Iteration:  22340, Loss function: 3.972, Average Loss: 3.966, avg. samples / sec: 1080.08
Iteration:  22360, Loss function: 3.901, Average Loss: 3.964, avg. samples / sec: 891.30
Iteration:  22380, Loss function: 3.844, Average Loss: 3.964, avg. samples / sec: 1041.01
Iteration:  22400, Loss function: 3.974, Average Loss: 3.964, avg. samples / sec: 1037.96
Iteration:  22420, Loss function: 3.953, Average Loss: 3.964, avg. samples / sec: 1068.30
Iteration:  22440, Loss function: 4.003, Average Loss: 3.963, avg. samples / sec: 1014.32
Iteration:  22460, Loss function: 3.733, Average Loss: 3.962, avg. samples / sec: 996.08
Iteration:  22480, Loss function: 4.161, Average Loss: 3.962, avg. samples / sec: 992.66
Iteration:  22500, Loss function: 3.998, Average Loss: 3.962, avg. samples / sec: 1058.47
Iteration:  22520, Loss function: 4.044, Average Loss: 3.962, avg. samples / sec: 989.55
Iteration:  22540, Loss function: 3.904, Average Loss: 3.961, avg. samples / sec: 1024.47
Iteration:  22560, Loss function: 3.828, Average Loss: 3.961, avg. samples / sec: 976.13
Iteration:  22580, Loss function: 3.825, Average Loss: 3.961, avg. samples / sec: 1004.11
Iteration:  22600, Loss function: 4.219, Average Loss: 3.961, avg. samples / sec: 995.57
Iteration:  22620, Loss function: 3.980, Average Loss: 3.961, avg. samples / sec: 1068.46
:::MLLOG {"namespace": "", "time_ms": 1639474807559, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1639474807560, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 23, "current_iter_num": 22631}}
Iteration:  22640, Loss function: 3.800, Average Loss: 3.961, avg. samples / sec: 937.50
Iteration:  22660, Loss function: 4.007, Average Loss: 3.959, avg. samples / sec: 974.94
Iteration:  22680, Loss function: 3.676, Average Loss: 3.958, avg. samples / sec: 989.30
Iteration:  22700, Loss function: 4.093, Average Loss: 3.959, avg. samples / sec: 1027.14
Iteration:  22720, Loss function: 3.574, Average Loss: 3.957, avg. samples / sec: 1018.74
Iteration:  22740, Loss function: 3.669, Average Loss: 3.956, avg. samples / sec: 1004.53
Iteration:  22760, Loss function: 4.020, Average Loss: 3.955, avg. samples / sec: 955.92
Iteration:  22780, Loss function: 3.526, Average Loss: 3.954, avg. samples / sec: 1026.33
Iteration:  22800, Loss function: 3.890, Average Loss: 3.953, avg. samples / sec: 999.93
Iteration:  22820, Loss function: 3.817, Average Loss: 3.952, avg. samples / sec: 941.99
Iteration:  22840, Loss function: 4.002, Average Loss: 3.951, avg. samples / sec: 1017.69
Iteration:  22860, Loss function: 3.833, Average Loss: 3.952, avg. samples / sec: 1029.33
Iteration:  22880, Loss function: 3.861, Average Loss: 3.951, avg. samples / sec: 996.14
Iteration:  22900, Loss function: 3.983, Average Loss: 3.951, avg. samples / sec: 977.53
Iteration:  22920, Loss function: 3.683, Average Loss: 3.950, avg. samples / sec: 965.70
Iteration:  22940, Loss function: 3.690, Average Loss: 3.949, avg. samples / sec: 941.25
Iteration:  22960, Loss function: 4.190, Average Loss: 3.949, avg. samples / sec: 979.31
Iteration:  22980, Loss function: 3.979, Average Loss: 3.946, avg. samples / sec: 967.68
Iteration:  23000, Loss function: 4.188, Average Loss: 3.946, avg. samples / sec: 921.14
Iteration:  23020, Loss function: 4.268, Average Loss: 3.948, avg. samples / sec: 1039.33
Iteration:  23040, Loss function: 3.996, Average Loss: 3.948, avg. samples / sec: 1055.26
Iteration:  23060, Loss function: 4.108, Average Loss: 3.948, avg. samples / sec: 1050.24
Iteration:  23080, Loss function: 4.037, Average Loss: 3.948, avg. samples / sec: 995.23
Iteration:  23100, Loss function: 4.068, Average Loss: 3.947, avg. samples / sec: 1041.86
Iteration:  23120, Loss function: 4.157, Average Loss: 3.947, avg. samples / sec: 1094.58
Iteration:  23140, Loss function: 3.869, Average Loss: 3.946, avg. samples / sec: 1059.44
Iteration:  23160, Loss function: 3.929, Average Loss: 3.945, avg. samples / sec: 970.37
Iteration:  23180, Loss function: 3.871, Average Loss: 3.945, avg. samples / sec: 990.11
Iteration:  23200, Loss function: 4.080, Average Loss: 3.946, avg. samples / sec: 976.81
Iteration:  23220, Loss function: 3.804, Average Loss: 3.946, avg. samples / sec: 948.56
Iteration:  23240, Loss function: 3.821, Average Loss: 3.945, avg. samples / sec: 953.77
Iteration:  23260, Loss function: 4.262, Average Loss: 3.944, avg. samples / sec: 1073.42
Iteration:  23280, Loss function: 3.963, Average Loss: 3.944, avg. samples / sec: 1118.62
Iteration:  23300, Loss function: 3.779, Average Loss: 3.942, avg. samples / sec: 1020.28
Iteration:  23320, Loss function: 3.900, Average Loss: 3.944, avg. samples / sec: 1063.13
Iteration:  23340, Loss function: 4.304, Average Loss: 3.943, avg. samples / sec: 953.01
Iteration:  23360, Loss function: 3.750, Average Loss: 3.942, avg. samples / sec: 994.72
Iteration:  23380, Loss function: 3.995, Average Loss: 3.943, avg. samples / sec: 992.82
Iteration:  23400, Loss function: 3.746, Average Loss: 3.942, avg. samples / sec: 1001.59
Iteration:  23420, Loss function: 3.880, Average Loss: 3.943, avg. samples / sec: 1024.37
Iteration:  23440, Loss function: 3.839, Average Loss: 3.944, avg. samples / sec: 965.31
Iteration:  23460, Loss function: 4.023, Average Loss: 3.943, avg. samples / sec: 950.88
Iteration:  23480, Loss function: 3.890, Average Loss: 3.943, avg. samples / sec: 999.25
Iteration:  23500, Loss function: 3.770, Average Loss: 3.943, avg. samples / sec: 1064.20
Iteration:  23520, Loss function: 4.016, Average Loss: 3.942, avg. samples / sec: 1012.82
Iteration:  23540, Loss function: 3.894, Average Loss: 3.942, avg. samples / sec: 1030.24
Iteration:  23560, Loss function: 3.879, Average Loss: 3.940, avg. samples / sec: 1014.41
Iteration:  23580, Loss function: 3.737, Average Loss: 3.940, avg. samples / sec: 933.78
Iteration:  23600, Loss function: 3.844, Average Loss: 3.940, avg. samples / sec: 893.66
Iteration:  23620, Loss function: 3.923, Average Loss: 3.940, avg. samples / sec: 963.89
Iteration:  23640, Loss function: 3.990, Average Loss: 3.940, avg. samples / sec: 1016.51
:::MLLOG {"namespace": "", "time_ms": 1639474924936, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1639474924939, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 24, "current_iter_num": 23659}}
Iteration:  23660, Loss function: 3.705, Average Loss: 3.940, avg. samples / sec: 1057.02
Iteration:  23680, Loss function: 3.773, Average Loss: 3.938, avg. samples / sec: 1011.84
Iteration:  23700, Loss function: 3.912, Average Loss: 3.938, avg. samples / sec: 978.82
Iteration:  23720, Loss function: 4.086, Average Loss: 3.937, avg. samples / sec: 984.10
Iteration:  23740, Loss function: 3.826, Average Loss: 3.935, avg. samples / sec: 1014.74
Iteration:  23760, Loss function: 3.690, Average Loss: 3.933, avg. samples / sec: 977.72
Iteration:  23780, Loss function: 3.872, Average Loss: 3.932, avg. samples / sec: 1054.56
Iteration:  23800, Loss function: 3.805, Average Loss: 3.931, avg. samples / sec: 1055.85
Iteration:  23820, Loss function: 3.926, Average Loss: 3.931, avg. samples / sec: 1044.66
Iteration:  23840, Loss function: 4.025, Average Loss: 3.930, avg. samples / sec: 989.14
Iteration:  23860, Loss function: 4.323, Average Loss: 3.931, avg. samples / sec: 991.86
Iteration:  23880, Loss function: 4.046, Average Loss: 3.930, avg. samples / sec: 1001.33
Iteration:  23900, Loss function: 3.763, Average Loss: 3.929, avg. samples / sec: 1019.87
Iteration:  23920, Loss function: 3.979, Average Loss: 3.929, avg. samples / sec: 1041.90
Iteration:  23940, Loss function: 3.717, Average Loss: 3.926, avg. samples / sec: 989.13
Iteration:  23960, Loss function: 3.529, Average Loss: 3.926, avg. samples / sec: 1021.87
Iteration:  23980, Loss function: 4.161, Average Loss: 3.925, avg. samples / sec: 988.68
Iteration:  24000, Loss function: 3.973, Average Loss: 3.924, avg. samples / sec: 1011.49
Iteration:  24020, Loss function: 4.113, Average Loss: 3.925, avg. samples / sec: 1002.60
Iteration:  24040, Loss function: 3.874, Average Loss: 3.924, avg. samples / sec: 1022.56
Iteration:  24060, Loss function: 4.118, Average Loss: 3.923, avg. samples / sec: 1057.74
Iteration:  24080, Loss function: 3.737, Average Loss: 3.922, avg. samples / sec: 1043.86
Iteration:  24100, Loss function: 3.780, Average Loss: 3.921, avg. samples / sec: 1040.63
Iteration:  24120, Loss function: 3.928, Average Loss: 3.921, avg. samples / sec: 979.14
Iteration:  24140, Loss function: 4.252, Average Loss: 3.921, avg. samples / sec: 1001.58
Iteration:  24160, Loss function: 4.163, Average Loss: 3.921, avg. samples / sec: 965.86
Iteration:  24180, Loss function: 3.918, Average Loss: 3.921, avg. samples / sec: 965.35
Iteration:  24200, Loss function: 3.746, Average Loss: 3.919, avg. samples / sec: 964.99
Iteration:  24220, Loss function: 3.911, Average Loss: 3.919, avg. samples / sec: 970.05
Iteration:  24240, Loss function: 3.717, Average Loss: 3.918, avg. samples / sec: 1022.81
Iteration:  24260, Loss function: 3.882, Average Loss: 3.919, avg. samples / sec: 963.49
Iteration:  24280, Loss function: 3.911, Average Loss: 3.919, avg. samples / sec: 942.22
Iteration:  24300, Loss function: 3.826, Average Loss: 3.919, avg. samples / sec: 1011.66
Iteration:  24320, Loss function: 3.816, Average Loss: 3.917, avg. samples / sec: 1022.99
Iteration:  24340, Loss function: 4.120, Average Loss: 3.917, avg. samples / sec: 990.37
Iteration:  24360, Loss function: 3.995, Average Loss: 3.918, avg. samples / sec: 949.57
Iteration:  24380, Loss function: 3.723, Average Loss: 3.919, avg. samples / sec: 1006.17
Iteration:  24400, Loss function: 4.042, Average Loss: 3.919, avg. samples / sec: 981.80
Iteration:  24420, Loss function: 3.898, Average Loss: 3.918, avg. samples / sec: 1044.39
Iteration:  24440, Loss function: 3.666, Average Loss: 3.919, avg. samples / sec: 966.29
Iteration:  24460, Loss function: 4.147, Average Loss: 3.919, avg. samples / sec: 973.14
Iteration:  24480, Loss function: 4.018, Average Loss: 3.921, avg. samples / sec: 986.15
Iteration:  24500, Loss function: 3.758, Average Loss: 3.920, avg. samples / sec: 990.64
Iteration:  24520, Loss function: 3.978, Average Loss: 3.921, avg. samples / sec: 956.13
Iteration:  24540, Loss function: 3.907, Average Loss: 3.920, avg. samples / sec: 969.34
Iteration:  24560, Loss function: 4.196, Average Loss: 3.921, avg. samples / sec: 1039.59
Iteration:  24580, Loss function: 4.090, Average Loss: 3.921, avg. samples / sec: 1036.73
Iteration:  24600, Loss function: 3.789, Average Loss: 3.920, avg. samples / sec: 1015.72
Iteration:  24620, Loss function: 4.018, Average Loss: 3.920, avg. samples / sec: 981.16
Iteration:  24640, Loss function: 4.048, Average Loss: 3.921, avg. samples / sec: 1067.53
Iteration:  24660, Loss function: 4.102, Average Loss: 3.921, avg. samples / sec: 1038.43
Iteration:  24680, Loss function: 3.815, Average Loss: 3.922, avg. samples / sec: 1087.07
:::MLLOG {"namespace": "", "time_ms": 1639475041823, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1639475041824, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 25, "current_iter_num": 24688}}
Iteration:  24700, Loss function: 3.984, Average Loss: 3.922, avg. samples / sec: 1004.07
Iteration:  24720, Loss function: 3.929, Average Loss: 3.920, avg. samples / sec: 995.02
Iteration:  24740, Loss function: 3.878, Average Loss: 3.920, avg. samples / sec: 962.67
Iteration:  24760, Loss function: 3.678, Average Loss: 3.918, avg. samples / sec: 1006.32
Iteration:  24780, Loss function: 4.041, Average Loss: 3.917, avg. samples / sec: 938.37
Iteration:  24800, Loss function: 3.860, Average Loss: 3.916, avg. samples / sec: 976.86
Iteration:  24820, Loss function: 3.663, Average Loss: 3.916, avg. samples / sec: 965.70
Iteration:  24840, Loss function: 3.704, Average Loss: 3.916, avg. samples / sec: 915.52
Iteration:  24860, Loss function: 4.126, Average Loss: 3.916, avg. samples / sec: 994.33
Iteration:  24880, Loss function: 3.742, Average Loss: 3.916, avg. samples / sec: 976.25
Iteration:  24900, Loss function: 3.823, Average Loss: 3.916, avg. samples / sec: 981.06
Iteration:  24920, Loss function: 3.650, Average Loss: 3.913, avg. samples / sec: 1034.87
Iteration:  24940, Loss function: 3.709, Average Loss: 3.911, avg. samples / sec: 1027.53
Iteration:  24960, Loss function: 3.895, Average Loss: 3.910, avg. samples / sec: 1057.64
Iteration:  24980, Loss function: 3.801, Average Loss: 3.910, avg. samples / sec: 985.58
Iteration:  25000, Loss function: 3.701, Average Loss: 3.910, avg. samples / sec: 989.82
Iteration:  25020, Loss function: 3.825, Average Loss: 3.910, avg. samples / sec: 973.90
Iteration:  25040, Loss function: 4.141, Average Loss: 3.908, avg. samples / sec: 1060.17
Iteration:  25060, Loss function: 3.811, Average Loss: 3.908, avg. samples / sec: 1074.38
Iteration:  25080, Loss function: 4.159, Average Loss: 3.908, avg. samples / sec: 1020.67
Iteration:  25100, Loss function: 4.006, Average Loss: 3.908, avg. samples / sec: 952.86
Iteration:  25120, Loss function: 3.951, Average Loss: 3.909, avg. samples / sec: 943.51
Iteration:  25140, Loss function: 4.148, Average Loss: 3.908, avg. samples / sec: 1033.95
Iteration:  25160, Loss function: 3.649, Average Loss: 3.909, avg. samples / sec: 1040.56
Iteration:  25180, Loss function: 4.097, Average Loss: 3.909, avg. samples / sec: 1061.25
Iteration:  25200, Loss function: 3.655, Average Loss: 3.908, avg. samples / sec: 1068.31
Iteration:  25220, Loss function: 3.845, Average Loss: 3.906, avg. samples / sec: 1051.30
Iteration:  25240, Loss function: 3.700, Average Loss: 3.906, avg. samples / sec: 1057.77
Iteration:  25260, Loss function: 3.807, Average Loss: 3.906, avg. samples / sec: 1043.82
Iteration:  25280, Loss function: 4.093, Average Loss: 3.907, avg. samples / sec: 984.10
Iteration:  25300, Loss function: 3.780, Average Loss: 3.908, avg. samples / sec: 1005.28
Iteration:  25320, Loss function: 3.701, Average Loss: 3.908, avg. samples / sec: 987.33
Iteration:  25340, Loss function: 3.910, Average Loss: 3.908, avg. samples / sec: 973.92
Iteration:  25360, Loss function: 3.696, Average Loss: 3.905, avg. samples / sec: 1038.79
Iteration:  25380, Loss function: 3.729, Average Loss: 3.906, avg. samples / sec: 990.15
Iteration:  25400, Loss function: 3.755, Average Loss: 3.903, avg. samples / sec: 1014.04
Iteration:  25420, Loss function: 3.774, Average Loss: 3.903, avg. samples / sec: 1015.45
Iteration:  25440, Loss function: 4.181, Average Loss: 3.903, avg. samples / sec: 986.95
Iteration:  25460, Loss function: 3.890, Average Loss: 3.902, avg. samples / sec: 995.31
Iteration:  25480, Loss function: 3.866, Average Loss: 3.901, avg. samples / sec: 939.08
Iteration:  25500, Loss function: 4.008, Average Loss: 3.903, avg. samples / sec: 972.29
Iteration:  25520, Loss function: 4.179, Average Loss: 3.903, avg. samples / sec: 1004.62
Iteration:  25540, Loss function: 3.907, Average Loss: 3.904, avg. samples / sec: 991.97
Iteration:  25560, Loss function: 3.438, Average Loss: 3.902, avg. samples / sec: 1004.51
Iteration:  25580, Loss function: 3.686, Average Loss: 3.901, avg. samples / sec: 991.33
Iteration:  25600, Loss function: 4.016, Average Loss: 3.902, avg. samples / sec: 961.69
Iteration:  25620, Loss function: 3.892, Average Loss: 3.902, avg. samples / sec: 1036.93
Iteration:  25640, Loss function: 3.973, Average Loss: 3.902, avg. samples / sec: 1028.13
Iteration:  25660, Loss function: 3.799, Average Loss: 3.903, avg. samples / sec: 991.47
Iteration:  25680, Loss function: 3.720, Average Loss: 3.902, avg. samples / sec: 953.42
Iteration:  25700, Loss function: 3.972, Average Loss: 3.903, avg. samples / sec: 1007.75
:::MLLOG {"namespace": "", "time_ms": 1639475159114, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1639475159116, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 26, "current_iter_num": 25717}}
Iteration:  25720, Loss function: 3.864, Average Loss: 3.902, avg. samples / sec: 1028.41
Iteration:  25740, Loss function: 3.897, Average Loss: 3.901, avg. samples / sec: 979.04
Iteration:  25760, Loss function: 4.019, Average Loss: 3.901, avg. samples / sec: 991.57
Iteration:  25780, Loss function: 3.999, Average Loss: 3.900, avg. samples / sec: 983.30
Iteration:  25800, Loss function: 3.604, Average Loss: 3.898, avg. samples / sec: 963.95
Iteration:  25820, Loss function: 3.797, Average Loss: 3.897, avg. samples / sec: 997.31
Iteration:  25840, Loss function: 3.837, Average Loss: 3.896, avg. samples / sec: 997.10
Iteration:  25860, Loss function: 3.713, Average Loss: 3.894, avg. samples / sec: 1022.23
Iteration:  25880, Loss function: 3.857, Average Loss: 3.892, avg. samples / sec: 989.83
Iteration:  25900, Loss function: 3.612, Average Loss: 3.891, avg. samples / sec: 1016.13
Iteration:  25920, Loss function: 3.728, Average Loss: 3.890, avg. samples / sec: 971.02
Iteration:  25940, Loss function: 3.965, Average Loss: 3.889, avg. samples / sec: 1035.58
Iteration:  25960, Loss function: 3.714, Average Loss: 3.887, avg. samples / sec: 952.11
Iteration:  25980, Loss function: 3.859, Average Loss: 3.886, avg. samples / sec: 921.31
Iteration:  26000, Loss function: 3.619, Average Loss: 3.885, avg. samples / sec: 1001.26
Iteration:  26020, Loss function: 4.092, Average Loss: 3.885, avg. samples / sec: 1017.30
Iteration:  26040, Loss function: 4.018, Average Loss: 3.884, avg. samples / sec: 1009.32
Iteration:  26060, Loss function: 4.024, Average Loss: 3.884, avg. samples / sec: 953.27
Iteration:  26080, Loss function: 4.009, Average Loss: 3.885, avg. samples / sec: 1005.11
Iteration:  26100, Loss function: 4.027, Average Loss: 3.886, avg. samples / sec: 997.02
Iteration:  26120, Loss function: 3.698, Average Loss: 3.887, avg. samples / sec: 1010.97
Iteration:  26140, Loss function: 3.906, Average Loss: 3.887, avg. samples / sec: 931.63
Iteration:  26160, Loss function: 3.782, Average Loss: 3.888, avg. samples / sec: 998.66
Iteration:  26180, Loss function: 3.595, Average Loss: 3.888, avg. samples / sec: 993.87
Iteration:  26200, Loss function: 3.930, Average Loss: 3.888, avg. samples / sec: 1011.54
Iteration:  26220, Loss function: 3.845, Average Loss: 3.887, avg. samples / sec: 1046.96
Iteration:  26240, Loss function: 4.053, Average Loss: 3.887, avg. samples / sec: 955.98
Iteration:  26260, Loss function: 3.951, Average Loss: 3.887, avg. samples / sec: 1017.65
Iteration:  26280, Loss function: 3.846, Average Loss: 3.887, avg. samples / sec: 1036.63
Iteration:  26300, Loss function: 3.569, Average Loss: 3.887, avg. samples / sec: 1024.22
Iteration:  26320, Loss function: 3.835, Average Loss: 3.887, avg. samples / sec: 986.85
Iteration:  26340, Loss function: 3.921, Average Loss: 3.885, avg. samples / sec: 971.91
Iteration:  26360, Loss function: 3.984, Average Loss: 3.887, avg. samples / sec: 1011.34
Iteration:  26380, Loss function: 3.764, Average Loss: 3.886, avg. samples / sec: 1010.28
Iteration:  26400, Loss function: 3.847, Average Loss: 3.886, avg. samples / sec: 996.59
Iteration:  26420, Loss function: 3.807, Average Loss: 3.884, avg. samples / sec: 1039.10
Iteration:  26440, Loss function: 3.991, Average Loss: 3.884, avg. samples / sec: 1077.83
Iteration:  26460, Loss function: 3.843, Average Loss: 3.884, avg. samples / sec: 1049.36
Iteration:  26480, Loss function: 3.952, Average Loss: 3.884, avg. samples / sec: 976.70
Iteration:  26500, Loss function: 4.060, Average Loss: 3.886, avg. samples / sec: 1075.81
Iteration:  26520, Loss function: 3.816, Average Loss: 3.886, avg. samples / sec: 1045.78
Iteration:  26540, Loss function: 4.049, Average Loss: 3.886, avg. samples / sec: 1079.31
Iteration:  26560, Loss function: 4.152, Average Loss: 3.886, avg. samples / sec: 1036.13
Iteration:  26580, Loss function: 3.717, Average Loss: 3.886, avg. samples / sec: 1012.17
Iteration:  26600, Loss function: 4.037, Average Loss: 3.885, avg. samples / sec: 995.44
Iteration:  26620, Loss function: 4.084, Average Loss: 3.885, avg. samples / sec: 986.75
Iteration:  26640, Loss function: 4.107, Average Loss: 3.884, avg. samples / sec: 956.34
Iteration:  26660, Loss function: 3.893, Average Loss: 3.883, avg. samples / sec: 1081.30
Iteration:  26680, Loss function: 3.911, Average Loss: 3.883, avg. samples / sec: 966.02
Iteration:  26700, Loss function: 3.758, Average Loss: 3.883, avg. samples / sec: 1036.28
Iteration:  26720, Loss function: 3.956, Average Loss: 3.883, avg. samples / sec: 1022.94
Iteration:  26740, Loss function: 3.927, Average Loss: 3.883, avg. samples / sec: 1042.75
:::MLLOG {"namespace": "", "time_ms": 1639475275813, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1639475275818, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 27, "current_iter_num": 26745}}
Iteration:  26760, Loss function: 3.913, Average Loss: 3.882, avg. samples / sec: 1067.84
Iteration:  26780, Loss function: 3.786, Average Loss: 3.880, avg. samples / sec: 1036.46
Iteration:  26800, Loss function: 3.618, Average Loss: 3.877, avg. samples / sec: 960.11
Iteration:  26820, Loss function: 3.662, Average Loss: 3.876, avg. samples / sec: 1092.31
Iteration:  26840, Loss function: 3.827, Average Loss: 3.876, avg. samples / sec: 961.19
Iteration:  26860, Loss function: 3.826, Average Loss: 3.875, avg. samples / sec: 991.93
Iteration:  26880, Loss function: 3.825, Average Loss: 3.874, avg. samples / sec: 997.59
Iteration:  26900, Loss function: 3.727, Average Loss: 3.873, avg. samples / sec: 1052.20
Iteration:  26920, Loss function: 4.086, Average Loss: 3.873, avg. samples / sec: 1019.16
Iteration:  26940, Loss function: 3.932, Average Loss: 3.872, avg. samples / sec: 1003.14
Iteration:  26960, Loss function: 4.145, Average Loss: 3.873, avg. samples / sec: 1041.93
Iteration:  26980, Loss function: 3.724, Average Loss: 3.874, avg. samples / sec: 1041.84
Iteration:  27000, Loss function: 3.929, Average Loss: 3.873, avg. samples / sec: 1048.92
Iteration:  27020, Loss function: 3.697, Average Loss: 3.872, avg. samples / sec: 1017.23
Iteration:  27040, Loss function: 4.174, Average Loss: 3.873, avg. samples / sec: 998.61
Iteration:  27060, Loss function: 3.909, Average Loss: 3.872, avg. samples / sec: 979.54
Iteration:  27080, Loss function: 3.856, Average Loss: 3.872, avg. samples / sec: 1005.60
Iteration:  27100, Loss function: 3.964, Average Loss: 3.872, avg. samples / sec: 1033.08
Iteration:  27120, Loss function: 3.631, Average Loss: 3.873, avg. samples / sec: 985.21
Iteration:  27140, Loss function: 3.577, Average Loss: 3.872, avg. samples / sec: 1043.07
Iteration:  27160, Loss function: 4.106, Average Loss: 3.870, avg. samples / sec: 953.72
Iteration:  27180, Loss function: 3.984, Average Loss: 3.871, avg. samples / sec: 1038.85
Iteration:  27200, Loss function: 4.155, Average Loss: 3.870, avg. samples / sec: 1017.77
Iteration:  27220, Loss function: 3.844, Average Loss: 3.870, avg. samples / sec: 1008.66
Iteration:  27240, Loss function: 3.943, Average Loss: 3.870, avg. samples / sec: 1028.98
Iteration:  27260, Loss function: 3.729, Average Loss: 3.869, avg. samples / sec: 1006.22
Iteration:  27280, Loss function: 3.862, Average Loss: 3.868, avg. samples / sec: 1028.66
Iteration:  27300, Loss function: 3.688, Average Loss: 3.868, avg. samples / sec: 992.60
Iteration:  27320, Loss function: 3.627, Average Loss: 3.868, avg. samples / sec: 956.76
Iteration:  27340, Loss function: 3.759, Average Loss: 3.868, avg. samples / sec: 956.37
Iteration:  27360, Loss function: 3.564, Average Loss: 3.867, avg. samples / sec: 1018.85
Iteration:  27380, Loss function: 4.011, Average Loss: 3.868, avg. samples / sec: 1055.16
Iteration:  27400, Loss function: 3.741, Average Loss: 3.867, avg. samples / sec: 1100.30
Iteration:  27420, Loss function: 3.827, Average Loss: 3.867, avg. samples / sec: 965.11
Iteration:  27440, Loss function: 3.961, Average Loss: 3.867, avg. samples / sec: 989.34
Iteration:  27460, Loss function: 3.697, Average Loss: 3.867, avg. samples / sec: 1022.51
Iteration:  27480, Loss function: 4.160, Average Loss: 3.866, avg. samples / sec: 1009.66
Iteration:  27500, Loss function: 3.772, Average Loss: 3.866, avg. samples / sec: 1024.55
Iteration:  27520, Loss function: 4.107, Average Loss: 3.867, avg. samples / sec: 1028.16
Iteration:  27540, Loss function: 4.086, Average Loss: 3.867, avg. samples / sec: 1041.68
Iteration:  27560, Loss function: 4.008, Average Loss: 3.868, avg. samples / sec: 940.34
Iteration:  27580, Loss function: 3.718, Average Loss: 3.867, avg. samples / sec: 972.76
Iteration:  27600, Loss function: 4.010, Average Loss: 3.866, avg. samples / sec: 1024.16
Iteration:  27620, Loss function: 3.870, Average Loss: 3.866, avg. samples / sec: 939.77
Iteration:  27640, Loss function: 3.755, Average Loss: 3.866, avg. samples / sec: 1026.77
Iteration:  27660, Loss function: 3.879, Average Loss: 3.866, avg. samples / sec: 973.41
Iteration:  27680, Loss function: 3.950, Average Loss: 3.866, avg. samples / sec: 1031.63
Iteration:  27700, Loss function: 4.043, Average Loss: 3.867, avg. samples / sec: 1021.53
Iteration:  27720, Loss function: 3.965, Average Loss: 3.867, avg. samples / sec: 961.44
Iteration:  27740, Loss function: 4.131, Average Loss: 3.867, avg. samples / sec: 1036.72
Iteration:  27760, Loss function: 3.870, Average Loss: 3.869, avg. samples / sec: 1002.32
:::MLLOG {"namespace": "", "time_ms": 1639475392126, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1639475392127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 28, "current_iter_num": 27774}}
Iteration:  27780, Loss function: 4.000, Average Loss: 3.869, avg. samples / sec: 978.47
Iteration:  27800, Loss function: 4.313, Average Loss: 3.867, avg. samples / sec: 1034.99
Iteration:  27820, Loss function: 3.762, Average Loss: 3.866, avg. samples / sec: 997.60
Iteration:  27840, Loss function: 3.696, Average Loss: 3.865, avg. samples / sec: 936.59
Iteration:  27860, Loss function: 3.888, Average Loss: 3.863, avg. samples / sec: 971.28
Iteration:  27880, Loss function: 3.841, Average Loss: 3.863, avg. samples / sec: 1008.50
Iteration:  27900, Loss function: 3.796, Average Loss: 3.862, avg. samples / sec: 995.48
Iteration:  27920, Loss function: 3.695, Average Loss: 3.860, avg. samples / sec: 1050.93
Iteration:  27940, Loss function: 3.498, Average Loss: 3.859, avg. samples / sec: 1055.85
Iteration:  27960, Loss function: 3.956, Average Loss: 3.858, avg. samples / sec: 1032.77
Iteration:  27980, Loss function: 3.644, Average Loss: 3.856, avg. samples / sec: 1026.14
Iteration:  28000, Loss function: 3.727, Average Loss: 3.856, avg. samples / sec: 1058.53
Iteration:  28020, Loss function: 4.099, Average Loss: 3.856, avg. samples / sec: 1024.78
Iteration:  28040, Loss function: 4.095, Average Loss: 3.855, avg. samples / sec: 1052.16
Iteration:  28060, Loss function: 3.851, Average Loss: 3.856, avg. samples / sec: 960.58
Iteration:  28080, Loss function: 3.564, Average Loss: 3.855, avg. samples / sec: 1046.46
Iteration:  28100, Loss function: 3.996, Average Loss: 3.857, avg. samples / sec: 1092.73
Iteration:  28120, Loss function: 3.673, Average Loss: 3.857, avg. samples / sec: 1022.88
Iteration:  28140, Loss function: 3.860, Average Loss: 3.856, avg. samples / sec: 948.77
Iteration:  28160, Loss function: 3.913, Average Loss: 3.854, avg. samples / sec: 966.65
Iteration:  28180, Loss function: 3.690, Average Loss: 3.854, avg. samples / sec: 938.60
Iteration:  28200, Loss function: 3.427, Average Loss: 3.854, avg. samples / sec: 975.90
Iteration:  28220, Loss function: 3.996, Average Loss: 3.854, avg. samples / sec: 994.76
Iteration:  28240, Loss function: 4.063, Average Loss: 3.854, avg. samples / sec: 1003.90
Iteration:  28260, Loss function: 4.015, Average Loss: 3.854, avg. samples / sec: 978.57
Iteration:  28280, Loss function: 4.175, Average Loss: 3.854, avg. samples / sec: 1029.97
Iteration:  28300, Loss function: 3.872, Average Loss: 3.853, avg. samples / sec: 1032.97
Iteration:  28320, Loss function: 3.633, Average Loss: 3.853, avg. samples / sec: 988.70
Iteration:  28340, Loss function: 3.384, Average Loss: 3.852, avg. samples / sec: 931.00
Iteration:  28360, Loss function: 3.740, Average Loss: 3.852, avg. samples / sec: 1029.76
Iteration:  28380, Loss function: 3.912, Average Loss: 3.852, avg. samples / sec: 1033.01
Iteration:  28400, Loss function: 3.646, Average Loss: 3.852, avg. samples / sec: 982.76
Iteration:  28420, Loss function: 3.994, Average Loss: 3.851, avg. samples / sec: 1000.06
Iteration:  28440, Loss function: 3.861, Average Loss: 3.852, avg. samples / sec: 1035.68
Iteration:  28460, Loss function: 3.561, Average Loss: 3.852, avg. samples / sec: 942.97
Iteration:  28480, Loss function: 3.998, Average Loss: 3.851, avg. samples / sec: 1016.04
Iteration:  28500, Loss function: 3.759, Average Loss: 3.851, avg. samples / sec: 1065.08
Iteration:  28520, Loss function: 3.653, Average Loss: 3.850, avg. samples / sec: 1029.62
Iteration:  28540, Loss function: 3.848, Average Loss: 3.849, avg. samples / sec: 946.29
Iteration:  28560, Loss function: 4.069, Average Loss: 3.849, avg. samples / sec: 970.99
Iteration:  28580, Loss function: 3.436, Average Loss: 3.848, avg. samples / sec: 953.99
Iteration:  28600, Loss function: 3.987, Average Loss: 3.847, avg. samples / sec: 978.36
Iteration:  28620, Loss function: 4.021, Average Loss: 3.848, avg. samples / sec: 1007.10
Iteration:  28640, Loss function: 3.831, Average Loss: 3.848, avg. samples / sec: 995.42
Iteration:  28660, Loss function: 3.858, Average Loss: 3.847, avg. samples / sec: 1034.74
Iteration:  28680, Loss function: 3.655, Average Loss: 3.846, avg. samples / sec: 1002.98
Iteration:  28700, Loss function: 4.012, Average Loss: 3.848, avg. samples / sec: 1017.90
Iteration:  28720, Loss function: 3.916, Average Loss: 3.848, avg. samples / sec: 998.23
Iteration:  28740, Loss function: 3.832, Average Loss: 3.847, avg. samples / sec: 1054.48
Iteration:  28760, Loss function: 3.751, Average Loss: 3.848, avg. samples / sec: 1019.78
Iteration:  28780, Loss function: 4.026, Average Loss: 3.848, avg. samples / sec: 1001.37
Iteration:  28800, Loss function: 3.806, Average Loss: 3.849, avg. samples / sec: 1034.80
:::MLLOG {"namespace": "", "time_ms": 1639475508895, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1639475508897, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 29, "current_iter_num": 28803}}
Iteration:  28820, Loss function: 3.644, Average Loss: 3.849, avg. samples / sec: 1038.38
Iteration:  28840, Loss function: 3.855, Average Loss: 3.849, avg. samples / sec: 1014.00
Iteration:  28860, Loss function: 4.006, Average Loss: 3.849, avg. samples / sec: 1003.88
Iteration:  28880, Loss function: 3.734, Average Loss: 3.848, avg. samples / sec: 963.35
Iteration:  28900, Loss function: 3.825, Average Loss: 3.847, avg. samples / sec: 1020.55
Iteration:  28920, Loss function: 3.792, Average Loss: 3.847, avg. samples / sec: 1039.09
Iteration:  28940, Loss function: 3.638, Average Loss: 3.846, avg. samples / sec: 989.10
Iteration:  28960, Loss function: 3.697, Average Loss: 3.846, avg. samples / sec: 988.23
Iteration:  28980, Loss function: 3.726, Average Loss: 3.846, avg. samples / sec: 998.24
Iteration:  29000, Loss function: 3.506, Average Loss: 3.845, avg. samples / sec: 1001.93
Iteration:  29020, Loss function: 3.997, Average Loss: 3.845, avg. samples / sec: 1013.31
Iteration:  29040, Loss function: 3.734, Average Loss: 3.844, avg. samples / sec: 1010.49
Iteration:  29060, Loss function: 3.984, Average Loss: 3.844, avg. samples / sec: 992.12
Iteration:  29080, Loss function: 3.778, Average Loss: 3.844, avg. samples / sec: 1087.05
Iteration:  29100, Loss function: 3.865, Average Loss: 3.843, avg. samples / sec: 1004.20
Iteration:  29120, Loss function: 3.810, Average Loss: 3.843, avg. samples / sec: 1038.03
Iteration:  29140, Loss function: 3.836, Average Loss: 3.843, avg. samples / sec: 1021.69
Iteration:  29160, Loss function: 3.883, Average Loss: 3.843, avg. samples / sec: 1007.51
Iteration:  29180, Loss function: 3.972, Average Loss: 3.842, avg. samples / sec: 988.62
Iteration:  29200, Loss function: 3.699, Average Loss: 3.841, avg. samples / sec: 1009.97
Iteration:  29220, Loss function: 3.648, Average Loss: 3.841, avg. samples / sec: 967.49
Iteration:  29240, Loss function: 3.874, Average Loss: 3.841, avg. samples / sec: 1066.22
Iteration:  29260, Loss function: 3.707, Average Loss: 3.841, avg. samples / sec: 954.80
Iteration:  29280, Loss function: 4.036, Average Loss: 3.842, avg. samples / sec: 911.77
Iteration:  29300, Loss function: 3.904, Average Loss: 3.843, avg. samples / sec: 982.97
Iteration:  29320, Loss function: 3.736, Average Loss: 3.843, avg. samples / sec: 935.76
Iteration:  29340, Loss function: 3.449, Average Loss: 3.842, avg. samples / sec: 983.89
Iteration:  29360, Loss function: 3.691, Average Loss: 3.841, avg. samples / sec: 1034.29
Iteration:  29380, Loss function: 4.100, Average Loss: 3.841, avg. samples / sec: 1031.45
Iteration:  29400, Loss function: 3.570, Average Loss: 3.840, avg. samples / sec: 970.85
Iteration:  29420, Loss function: 3.477, Average Loss: 3.839, avg. samples / sec: 954.47
Iteration:  29440, Loss function: 3.904, Average Loss: 3.839, avg. samples / sec: 962.29
Iteration:  29460, Loss function: 4.025, Average Loss: 3.839, avg. samples / sec: 1018.50
Iteration:  29480, Loss function: 3.791, Average Loss: 3.839, avg. samples / sec: 946.27
Iteration:  29500, Loss function: 4.082, Average Loss: 3.839, avg. samples / sec: 953.64
Iteration:  29520, Loss function: 3.915, Average Loss: 3.839, avg. samples / sec: 1020.86
Iteration:  29540, Loss function: 3.743, Average Loss: 3.839, avg. samples / sec: 998.51
Iteration:  29560, Loss function: 3.869, Average Loss: 3.838, avg. samples / sec: 1002.32
Iteration:  29580, Loss function: 3.625, Average Loss: 3.836, avg. samples / sec: 975.93
Iteration:  29600, Loss function: 3.835, Average Loss: 3.835, avg. samples / sec: 930.15
Iteration:  29620, Loss function: 3.652, Average Loss: 3.835, avg. samples / sec: 968.87
Iteration:  29640, Loss function: 3.728, Average Loss: 3.835, avg. samples / sec: 953.97
Iteration:  29660, Loss function: 3.864, Average Loss: 3.834, avg. samples / sec: 930.61
Iteration:  29680, Loss function: 3.702, Average Loss: 3.835, avg. samples / sec: 1016.16
Iteration:  29700, Loss function: 3.939, Average Loss: 3.836, avg. samples / sec: 1020.76
Iteration:  29720, Loss function: 3.591, Average Loss: 3.835, avg. samples / sec: 991.18
Iteration:  29740, Loss function: 3.721, Average Loss: 3.835, avg. samples / sec: 1005.65
Iteration:  29760, Loss function: 3.892, Average Loss: 3.834, avg. samples / sec: 1009.62
Iteration:  29780, Loss function: 3.677, Average Loss: 3.833, avg. samples / sec: 968.24
Iteration:  29800, Loss function: 3.834, Average Loss: 3.833, avg. samples / sec: 957.63
Iteration:  29820, Loss function: 3.649, Average Loss: 3.833, avg. samples / sec: 1005.46
:::MLLOG {"namespace": "", "time_ms": 1639475626968, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1639475626970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 30, "current_iter_num": 29831}}
Iteration:  29840, Loss function: 3.880, Average Loss: 3.830, avg. samples / sec: 1054.57
Iteration:  29860, Loss function: 3.607, Average Loss: 3.829, avg. samples / sec: 1054.22
Iteration:  29880, Loss function: 3.662, Average Loss: 3.828, avg. samples / sec: 1053.15
Iteration:  29900, Loss function: 3.787, Average Loss: 3.825, avg. samples / sec: 983.32
Iteration:  29920, Loss function: 3.810, Average Loss: 3.823, avg. samples / sec: 942.86
Iteration:  29940, Loss function: 3.898, Average Loss: 3.822, avg. samples / sec: 976.95
Iteration:  29960, Loss function: 3.942, Average Loss: 3.822, avg. samples / sec: 1009.25
Iteration:  29980, Loss function: 3.694, Average Loss: 3.822, avg. samples / sec: 1064.44
Iteration:  30000, Loss function: 3.751, Average Loss: 3.820, avg. samples / sec: 1049.54
Iteration:  30020, Loss function: 3.864, Average Loss: 3.820, avg. samples / sec: 990.73
Iteration:  30040, Loss function: 3.883, Average Loss: 3.820, avg. samples / sec: 1048.73
Iteration:  30060, Loss function: 3.694, Average Loss: 3.821, avg. samples / sec: 1033.54
Iteration:  30080, Loss function: 3.579, Average Loss: 3.820, avg. samples / sec: 1002.23
Iteration:  30100, Loss function: 3.872, Average Loss: 3.821, avg. samples / sec: 995.15
Iteration:  30120, Loss function: 3.851, Average Loss: 3.821, avg. samples / sec: 995.75
Iteration:  30140, Loss function: 4.104, Average Loss: 3.821, avg. samples / sec: 1034.31
Iteration:  30160, Loss function: 3.832, Average Loss: 3.821, avg. samples / sec: 1031.74
Iteration:  30180, Loss function: 3.611, Average Loss: 3.822, avg. samples / sec: 1058.81
Iteration:  30200, Loss function: 3.709, Average Loss: 3.821, avg. samples / sec: 1035.49
Iteration:  30220, Loss function: 3.780, Average Loss: 3.820, avg. samples / sec: 1063.46
Iteration:  30240, Loss function: 3.707, Average Loss: 3.821, avg. samples / sec: 902.91
Iteration:  30260, Loss function: 3.860, Average Loss: 3.821, avg. samples / sec: 1007.03
Iteration:  30280, Loss function: 3.583, Average Loss: 3.821, avg. samples / sec: 1021.68
Iteration:  30300, Loss function: 3.753, Average Loss: 3.820, avg. samples / sec: 968.23
Iteration:  30320, Loss function: 3.732, Average Loss: 3.819, avg. samples / sec: 1084.86
Iteration:  30340, Loss function: 3.843, Average Loss: 3.819, avg. samples / sec: 1075.91
Iteration:  30360, Loss function: 3.941, Average Loss: 3.819, avg. samples / sec: 980.63
Iteration:  30380, Loss function: 3.677, Average Loss: 3.818, avg. samples / sec: 1067.19
Iteration:  30400, Loss function: 3.839, Average Loss: 3.818, avg. samples / sec: 1015.92
Iteration:  30420, Loss function: 3.676, Average Loss: 3.816, avg. samples / sec: 969.48
Iteration:  30440, Loss function: 3.604, Average Loss: 3.815, avg. samples / sec: 1004.41
Iteration:  30460, Loss function: 3.750, Average Loss: 3.815, avg. samples / sec: 1028.43
Iteration:  30480, Loss function: 3.704, Average Loss: 3.816, avg. samples / sec: 1024.90
Iteration:  30500, Loss function: 3.875, Average Loss: 3.816, avg. samples / sec: 1050.54
Iteration:  30520, Loss function: 3.922, Average Loss: 3.818, avg. samples / sec: 1015.99
Iteration:  30540, Loss function: 3.750, Average Loss: 3.817, avg. samples / sec: 1025.56
Iteration:  30560, Loss function: 3.874, Average Loss: 3.818, avg. samples / sec: 1037.74
Iteration:  30580, Loss function: 4.082, Average Loss: 3.819, avg. samples / sec: 911.11
Iteration:  30600, Loss function: 3.395, Average Loss: 3.817, avg. samples / sec: 1072.66
Iteration:  30620, Loss function: 3.628, Average Loss: 3.817, avg. samples / sec: 1021.57
Iteration:  30640, Loss function: 3.576, Average Loss: 3.816, avg. samples / sec: 1044.30
Iteration:  30660, Loss function: 3.661, Average Loss: 3.815, avg. samples / sec: 1061.39
Iteration:  30680, Loss function: 3.913, Average Loss: 3.816, avg. samples / sec: 989.25
Iteration:  30700, Loss function: 3.909, Average Loss: 3.816, avg. samples / sec: 958.21
Iteration:  30720, Loss function: 3.622, Average Loss: 3.816, avg. samples / sec: 1048.01
Iteration:  30740, Loss function: 3.699, Average Loss: 3.816, avg. samples / sec: 983.08
Iteration:  30760, Loss function: 3.841, Average Loss: 3.816, avg. samples / sec: 1027.59
Iteration:  30780, Loss function: 3.812, Average Loss: 3.815, avg. samples / sec: 1054.98
Iteration:  30800, Loss function: 3.704, Average Loss: 3.815, avg. samples / sec: 995.00
Iteration:  30820, Loss function: 3.887, Average Loss: 3.815, avg. samples / sec: 962.31
Iteration:  30840, Loss function: 3.656, Average Loss: 3.814, avg. samples / sec: 984.36
:::MLLOG {"namespace": "", "time_ms": 1639475742601, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1639475742605, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 31, "current_iter_num": 30860}}
Iteration:  30860, Loss function: 3.562, Average Loss: 3.814, avg. samples / sec: 1020.16
Iteration:  30880, Loss function: 3.678, Average Loss: 3.813, avg. samples / sec: 981.06
Iteration:  30900, Loss function: 3.701, Average Loss: 3.810, avg. samples / sec: 1022.13
Iteration:  30920, Loss function: 4.030, Average Loss: 3.810, avg. samples / sec: 1069.59
Iteration:  30940, Loss function: 3.913, Average Loss: 3.810, avg. samples / sec: 1042.97
Iteration:  30960, Loss function: 4.184, Average Loss: 3.809, avg. samples / sec: 1121.10
Iteration:  30980, Loss function: 3.765, Average Loss: 3.809, avg. samples / sec: 1018.10
Iteration:  31000, Loss function: 3.753, Average Loss: 3.809, avg. samples / sec: 1018.29
Iteration:  31020, Loss function: 3.741, Average Loss: 3.809, avg. samples / sec: 968.66
Iteration:  31040, Loss function: 3.858, Average Loss: 3.808, avg. samples / sec: 997.40
Iteration:  31060, Loss function: 4.030, Average Loss: 3.809, avg. samples / sec: 986.84
Iteration:  31080, Loss function: 4.102, Average Loss: 3.808, avg. samples / sec: 1002.70
Iteration:  31100, Loss function: 3.673, Average Loss: 3.806, avg. samples / sec: 992.14
Iteration:  31120, Loss function: 3.479, Average Loss: 3.805, avg. samples / sec: 970.92
Iteration:  31140, Loss function: 3.763, Average Loss: 3.804, avg. samples / sec: 959.72
Iteration:  31160, Loss function: 3.814, Average Loss: 3.804, avg. samples / sec: 988.23
Iteration:  31180, Loss function: 3.767, Average Loss: 3.806, avg. samples / sec: 1013.52
Iteration:  31200, Loss function: 3.937, Average Loss: 3.805, avg. samples / sec: 1072.71
Iteration:  31220, Loss function: 3.809, Average Loss: 3.806, avg. samples / sec: 1047.09
Iteration:  31240, Loss function: 3.767, Average Loss: 3.805, avg. samples / sec: 1051.44
Iteration:  31260, Loss function: 3.834, Average Loss: 3.803, avg. samples / sec: 980.67
Iteration:  31280, Loss function: 3.642, Average Loss: 3.803, avg. samples / sec: 1032.43
Iteration:  31300, Loss function: 3.546, Average Loss: 3.803, avg. samples / sec: 1075.56
Iteration:  31320, Loss function: 3.807, Average Loss: 3.802, avg. samples / sec: 1082.21
Iteration:  31340, Loss function: 3.761, Average Loss: 3.802, avg. samples / sec: 1025.84
Iteration:  31360, Loss function: 3.815, Average Loss: 3.801, avg. samples / sec: 925.75
Iteration:  31380, Loss function: 4.143, Average Loss: 3.800, avg. samples / sec: 1038.31
Iteration:  31400, Loss function: 3.965, Average Loss: 3.800, avg. samples / sec: 989.51
Iteration:  31420, Loss function: 3.794, Average Loss: 3.799, avg. samples / sec: 1036.53
Iteration:  31440, Loss function: 3.600, Average Loss: 3.797, avg. samples / sec: 983.97
Iteration:  31460, Loss function: 3.726, Average Loss: 3.797, avg. samples / sec: 979.45
Iteration:  31480, Loss function: 3.578, Average Loss: 3.796, avg. samples / sec: 1015.91
Iteration:  31500, Loss function: 3.829, Average Loss: 3.795, avg. samples / sec: 988.29
Iteration:  31520, Loss function: 3.619, Average Loss: 3.795, avg. samples / sec: 956.83
Iteration:  31540, Loss function: 4.005, Average Loss: 3.794, avg. samples / sec: 994.96
Iteration:  31560, Loss function: 3.883, Average Loss: 3.794, avg. samples / sec: 1019.18
Iteration:  31580, Loss function: 3.878, Average Loss: 3.792, avg. samples / sec: 1070.07
Iteration:  31600, Loss function: 3.681, Average Loss: 3.792, avg. samples / sec: 1025.68
Iteration:  31620, Loss function: 3.824, Average Loss: 3.793, avg. samples / sec: 1010.62
Iteration:  31640, Loss function: 3.615, Average Loss: 3.794, avg. samples / sec: 1007.33
Iteration:  31660, Loss function: 3.946, Average Loss: 3.794, avg. samples / sec: 1016.90
Iteration:  31680, Loss function: 3.749, Average Loss: 3.794, avg. samples / sec: 993.23
Iteration:  31700, Loss function: 3.794, Average Loss: 3.792, avg. samples / sec: 1085.99
Iteration:  31720, Loss function: 3.818, Average Loss: 3.793, avg. samples / sec: 960.86
Iteration:  31740, Loss function: 3.850, Average Loss: 3.792, avg. samples / sec: 1019.20
Iteration:  31760, Loss function: 4.070, Average Loss: 3.792, avg. samples / sec: 1003.31
Iteration:  31780, Loss function: 3.615, Average Loss: 3.792, avg. samples / sec: 1032.53
Iteration:  31800, Loss function: 3.834, Average Loss: 3.793, avg. samples / sec: 966.57
Iteration:  31820, Loss function: 3.996, Average Loss: 3.794, avg. samples / sec: 1014.88
Iteration:  31840, Loss function: 3.786, Average Loss: 3.794, avg. samples / sec: 964.90
Iteration:  31860, Loss function: 4.027, Average Loss: 3.795, avg. samples / sec: 978.91
Iteration:  31880, Loss function: 3.748, Average Loss: 3.796, avg. samples / sec: 988.19
:::MLLOG {"namespace": "", "time_ms": 1639475858775, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1639475858777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 32, "current_iter_num": 31889}}
Iteration:  31900, Loss function: 3.598, Average Loss: 3.795, avg. samples / sec: 996.72
Iteration:  31920, Loss function: 3.401, Average Loss: 3.794, avg. samples / sec: 1034.46
Iteration:  31940, Loss function: 4.231, Average Loss: 3.794, avg. samples / sec: 1003.13
Iteration:  31960, Loss function: 3.933, Average Loss: 3.793, avg. samples / sec: 980.79
Iteration:  31980, Loss function: 3.584, Average Loss: 3.792, avg. samples / sec: 972.34
Iteration:  32000, Loss function: 3.742, Average Loss: 3.791, avg. samples / sec: 992.61
Iteration:  32020, Loss function: 3.548, Average Loss: 3.790, avg. samples / sec: 992.65
Iteration:  32040, Loss function: 3.842, Average Loss: 3.789, avg. samples / sec: 1046.36
Iteration:  32060, Loss function: 3.679, Average Loss: 3.787, avg. samples / sec: 1047.29
Iteration:  32080, Loss function: 3.838, Average Loss: 3.787, avg. samples / sec: 981.80
Iteration:  32100, Loss function: 4.063, Average Loss: 3.787, avg. samples / sec: 993.88
Iteration:  32120, Loss function: 4.112, Average Loss: 3.786, avg. samples / sec: 1010.94
Iteration:  32140, Loss function: 3.556, Average Loss: 3.784, avg. samples / sec: 1015.42
Iteration:  32160, Loss function: 3.735, Average Loss: 3.783, avg. samples / sec: 963.43
Iteration:  32180, Loss function: 3.680, Average Loss: 3.783, avg. samples / sec: 987.50
Iteration:  32200, Loss function: 3.790, Average Loss: 3.783, avg. samples / sec: 1005.92
Iteration:  32220, Loss function: 3.775, Average Loss: 3.783, avg. samples / sec: 995.80
Iteration:  32240, Loss function: 3.557, Average Loss: 3.784, avg. samples / sec: 990.11
Iteration:  32260, Loss function: 3.643, Average Loss: 3.784, avg. samples / sec: 1007.61
Iteration:  32280, Loss function: 3.508, Average Loss: 3.784, avg. samples / sec: 1057.25
Iteration:  32300, Loss function: 3.613, Average Loss: 3.783, avg. samples / sec: 1022.05
Iteration:  32320, Loss function: 4.008, Average Loss: 3.783, avg. samples / sec: 959.77
Iteration:  32340, Loss function: 3.879, Average Loss: 3.782, avg. samples / sec: 937.34
Iteration:  32360, Loss function: 3.892, Average Loss: 3.782, avg. samples / sec: 1007.43
Iteration:  32380, Loss function: 3.772, Average Loss: 3.783, avg. samples / sec: 988.83
Iteration:  32400, Loss function: 3.635, Average Loss: 3.784, avg. samples / sec: 1088.39
Iteration:  32420, Loss function: 3.680, Average Loss: 3.785, avg. samples / sec: 1039.02
Iteration:  32440, Loss function: 3.557, Average Loss: 3.784, avg. samples / sec: 989.41
Iteration:  32460, Loss function: 3.676, Average Loss: 3.784, avg. samples / sec: 973.72
Iteration:  32480, Loss function: 3.787, Average Loss: 3.785, avg. samples / sec: 1024.78
Iteration:  32500, Loss function: 3.535, Average Loss: 3.785, avg. samples / sec: 1011.51
Iteration:  32520, Loss function: 3.793, Average Loss: 3.785, avg. samples / sec: 979.76
Iteration:  32540, Loss function: 3.762, Average Loss: 3.786, avg. samples / sec: 970.82
Iteration:  32560, Loss function: 3.689, Average Loss: 3.786, avg. samples / sec: 997.82
Iteration:  32580, Loss function: 3.797, Average Loss: 3.787, avg. samples / sec: 1064.34
Iteration:  32600, Loss function: 3.654, Average Loss: 3.786, avg. samples / sec: 979.77
Iteration:  32620, Loss function: 3.816, Average Loss: 3.787, avg. samples / sec: 980.33
Iteration:  32640, Loss function: 3.817, Average Loss: 3.787, avg. samples / sec: 969.51
Iteration:  32660, Loss function: 4.129, Average Loss: 3.788, avg. samples / sec: 1050.93
Iteration:  32680, Loss function: 3.938, Average Loss: 3.789, avg. samples / sec: 1023.07
Iteration:  32700, Loss function: 4.031, Average Loss: 3.789, avg. samples / sec: 987.48
Iteration:  32720, Loss function: 3.798, Average Loss: 3.788, avg. samples / sec: 964.38
Iteration:  32740, Loss function: 3.914, Average Loss: 3.787, avg. samples / sec: 952.01
Iteration:  32760, Loss function: 3.616, Average Loss: 3.785, avg. samples / sec: 1006.20
Iteration:  32780, Loss function: 3.788, Average Loss: 3.785, avg. samples / sec: 1016.66
Iteration:  32800, Loss function: 4.126, Average Loss: 3.786, avg. samples / sec: 979.48
Iteration:  32820, Loss function: 3.717, Average Loss: 3.786, avg. samples / sec: 1004.83
Iteration:  32840, Loss function: 3.872, Average Loss: 3.786, avg. samples / sec: 1026.20
Iteration:  32860, Loss function: 3.945, Average Loss: 3.787, avg. samples / sec: 982.02
Iteration:  32880, Loss function: 3.725, Average Loss: 3.787, avg. samples / sec: 1025.12
Iteration:  32900, Loss function: 3.839, Average Loss: 3.787, avg. samples / sec: 1055.38
:::MLLOG {"namespace": "", "time_ms": 1639475975913, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1639475975915, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 33, "current_iter_num": 32917}}
Iteration:  32920, Loss function: 3.677, Average Loss: 3.785, avg. samples / sec: 955.51
Iteration:  32940, Loss function: 3.813, Average Loss: 3.784, avg. samples / sec: 1039.96
Iteration:  32960, Loss function: 4.089, Average Loss: 3.785, avg. samples / sec: 1017.06
Iteration:  32980, Loss function: 3.795, Average Loss: 3.784, avg. samples / sec: 938.93
Iteration:  33000, Loss function: 3.786, Average Loss: 3.784, avg. samples / sec: 980.92
Iteration:  33020, Loss function: 3.769, Average Loss: 3.782, avg. samples / sec: 947.05
Iteration:  33040, Loss function: 4.073, Average Loss: 3.782, avg. samples / sec: 1031.83
Iteration:  33060, Loss function: 3.870, Average Loss: 3.782, avg. samples / sec: 970.95
Iteration:  33080, Loss function: 3.651, Average Loss: 3.781, avg. samples / sec: 1005.85
Iteration:  33100, Loss function: 3.808, Average Loss: 3.779, avg. samples / sec: 1034.61
Iteration:  33120, Loss function: 3.920, Average Loss: 3.777, avg. samples / sec: 1058.92
Iteration:  33140, Loss function: 3.640, Average Loss: 3.777, avg. samples / sec: 1053.93
Iteration:  33160, Loss function: 3.735, Average Loss: 3.776, avg. samples / sec: 969.60
Iteration:  33180, Loss function: 3.740, Average Loss: 3.776, avg. samples / sec: 1014.08
Iteration:  33200, Loss function: 3.308, Average Loss: 3.776, avg. samples / sec: 1023.67
Iteration:  33220, Loss function: 3.777, Average Loss: 3.776, avg. samples / sec: 1051.52
Iteration:  33240, Loss function: 4.004, Average Loss: 3.775, avg. samples / sec: 1018.57
Iteration:  33260, Loss function: 3.745, Average Loss: 3.775, avg. samples / sec: 1012.87
Iteration:  33280, Loss function: 3.938, Average Loss: 3.774, avg. samples / sec: 1040.54
Iteration:  33300, Loss function: 3.613, Average Loss: 3.773, avg. samples / sec: 1000.32
Iteration:  33320, Loss function: 3.770, Average Loss: 3.772, avg. samples / sec: 1042.48
Iteration:  33340, Loss function: 3.691, Average Loss: 3.770, avg. samples / sec: 986.95
Iteration:  33360, Loss function: 3.655, Average Loss: 3.770, avg. samples / sec: 987.03
Iteration:  33380, Loss function: 3.625, Average Loss: 3.770, avg. samples / sec: 1024.26
Iteration:  33400, Loss function: 3.890, Average Loss: 3.769, avg. samples / sec: 1025.25
Iteration:  33420, Loss function: 3.948, Average Loss: 3.770, avg. samples / sec: 1024.96
Iteration:  33440, Loss function: 3.915, Average Loss: 3.770, avg. samples / sec: 1016.86
Iteration:  33460, Loss function: 3.579, Average Loss: 3.771, avg. samples / sec: 1029.63
Iteration:  33480, Loss function: 3.952, Average Loss: 3.771, avg. samples / sec: 1039.67
Iteration:  33500, Loss function: 3.573, Average Loss: 3.771, avg. samples / sec: 961.85
Iteration:  33520, Loss function: 4.089, Average Loss: 3.772, avg. samples / sec: 1017.71
Iteration:  33540, Loss function: 3.907, Average Loss: 3.772, avg. samples / sec: 1082.03
Iteration:  33560, Loss function: 4.020, Average Loss: 3.772, avg. samples / sec: 976.18
Iteration:  33580, Loss function: 3.793, Average Loss: 3.772, avg. samples / sec: 992.64
Iteration:  33600, Loss function: 3.672, Average Loss: 3.773, avg. samples / sec: 1007.86
Iteration:  33620, Loss function: 3.553, Average Loss: 3.772, avg. samples / sec: 996.32
Iteration:  33640, Loss function: 3.594, Average Loss: 3.772, avg. samples / sec: 1010.43
Iteration:  33660, Loss function: 4.060, Average Loss: 3.773, avg. samples / sec: 990.89
Iteration:  33680, Loss function: 3.946, Average Loss: 3.774, avg. samples / sec: 1060.83
Iteration:  33700, Loss function: 3.692, Average Loss: 3.774, avg. samples / sec: 1011.70
Iteration:  33720, Loss function: 3.525, Average Loss: 3.773, avg. samples / sec: 967.53
Iteration:  33740, Loss function: 3.582, Average Loss: 3.774, avg. samples / sec: 1044.44
Iteration:  33760, Loss function: 3.813, Average Loss: 3.774, avg. samples / sec: 959.15
Iteration:  33780, Loss function: 3.778, Average Loss: 3.774, avg. samples / sec: 994.98
Iteration:  33800, Loss function: 3.959, Average Loss: 3.775, avg. samples / sec: 1038.86
Iteration:  33820, Loss function: 3.686, Average Loss: 3.775, avg. samples / sec: 1066.05
Iteration:  33840, Loss function: 3.807, Average Loss: 3.776, avg. samples / sec: 1000.08
Iteration:  33860, Loss function: 3.690, Average Loss: 3.776, avg. samples / sec: 993.75
Iteration:  33880, Loss function: 3.812, Average Loss: 3.778, avg. samples / sec: 977.31
Iteration:  33900, Loss function: 3.916, Average Loss: 3.777, avg. samples / sec: 1005.19
Iteration:  33920, Loss function: 3.648, Average Loss: 3.776, avg. samples / sec: 1001.46
Iteration:  33940, Loss function: 3.941, Average Loss: 3.778, avg. samples / sec: 1071.52
:::MLLOG {"namespace": "", "time_ms": 1639476091971, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1639476091973, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 34, "current_iter_num": 33946}}
Iteration:  33960, Loss function: 3.508, Average Loss: 3.777, avg. samples / sec: 991.37
Iteration:  33980, Loss function: 3.576, Average Loss: 3.776, avg. samples / sec: 994.21
Iteration:  34000, Loss function: 3.766, Average Loss: 3.775, avg. samples / sec: 986.06
Iteration:  34020, Loss function: 3.582, Average Loss: 3.775, avg. samples / sec: 1000.07
Iteration:  34040, Loss function: 3.709, Average Loss: 3.774, avg. samples / sec: 1044.41
Iteration:  34060, Loss function: 3.525, Average Loss: 3.774, avg. samples / sec: 1001.06
Iteration:  34080, Loss function: 3.792, Average Loss: 3.773, avg. samples / sec: 990.21
Iteration:  34100, Loss function: 3.560, Average Loss: 3.771, avg. samples / sec: 978.50
Iteration:  34120, Loss function: 3.671, Average Loss: 3.770, avg. samples / sec: 1039.99
Iteration:  34140, Loss function: 4.017, Average Loss: 3.770, avg. samples / sec: 1079.04
Iteration:  34160, Loss function: 3.623, Average Loss: 3.769, avg. samples / sec: 903.94
Iteration:  34180, Loss function: 3.814, Average Loss: 3.768, avg. samples / sec: 1010.07
Iteration:  34200, Loss function: 3.678, Average Loss: 3.768, avg. samples / sec: 1017.66
Iteration:  34220, Loss function: 3.780, Average Loss: 3.766, avg. samples / sec: 982.03
Iteration:  34240, Loss function: 3.669, Average Loss: 3.767, avg. samples / sec: 993.04
Iteration:  34260, Loss function: 3.628, Average Loss: 3.765, avg. samples / sec: 951.24
Iteration:  34280, Loss function: 3.621, Average Loss: 3.765, avg. samples / sec: 1031.54
Iteration:  34300, Loss function: 3.619, Average Loss: 3.764, avg. samples / sec: 1077.45
Iteration:  34320, Loss function: 3.547, Average Loss: 3.764, avg. samples / sec: 1050.79
Iteration:  34340, Loss function: 3.760, Average Loss: 3.762, avg. samples / sec: 1019.94
Iteration:  34360, Loss function: 3.692, Average Loss: 3.762, avg. samples / sec: 1096.97
Iteration:  34380, Loss function: 3.631, Average Loss: 3.763, avg. samples / sec: 998.49
Iteration:  34400, Loss function: 3.784, Average Loss: 3.762, avg. samples / sec: 1078.27
Iteration:  34420, Loss function: 3.755, Average Loss: 3.761, avg. samples / sec: 1057.96
Iteration:  34440, Loss function: 3.788, Average Loss: 3.761, avg. samples / sec: 936.36
Iteration:  34460, Loss function: 3.727, Average Loss: 3.762, avg. samples / sec: 974.49
Iteration:  34480, Loss function: 4.079, Average Loss: 3.762, avg. samples / sec: 1036.35
Iteration:  34500, Loss function: 4.357, Average Loss: 3.764, avg. samples / sec: 1016.20
Iteration:  34520, Loss function: 3.600, Average Loss: 3.763, avg. samples / sec: 1004.39
Iteration:  34540, Loss function: 3.637, Average Loss: 3.762, avg. samples / sec: 1025.14
Iteration:  34560, Loss function: 3.731, Average Loss: 3.761, avg. samples / sec: 1031.84
Iteration:  34580, Loss function: 3.654, Average Loss: 3.761, avg. samples / sec: 1049.86
Iteration:  34600, Loss function: 3.614, Average Loss: 3.762, avg. samples / sec: 999.90
Iteration:  34620, Loss function: 3.934, Average Loss: 3.763, avg. samples / sec: 1010.54
Iteration:  34640, Loss function: 3.990, Average Loss: 3.761, avg. samples / sec: 967.30
Iteration:  34660, Loss function: 3.952, Average Loss: 3.762, avg. samples / sec: 935.01
Iteration:  34680, Loss function: 3.895, Average Loss: 3.763, avg. samples / sec: 1071.27
Iteration:  34700, Loss function: 4.039, Average Loss: 3.762, avg. samples / sec: 990.08
Iteration:  34720, Loss function: 4.059, Average Loss: 3.763, avg. samples / sec: 1006.96
Iteration:  34740, Loss function: 3.887, Average Loss: 3.762, avg. samples / sec: 959.37
Iteration:  34760, Loss function: 3.651, Average Loss: 3.761, avg. samples / sec: 1030.00
Iteration:  34780, Loss function: 3.731, Average Loss: 3.761, avg. samples / sec: 1002.86
Iteration:  34800, Loss function: 3.856, Average Loss: 3.761, avg. samples / sec: 1051.19
Iteration:  34820, Loss function: 3.749, Average Loss: 3.761, avg. samples / sec: 1009.91
Iteration:  34840, Loss function: 3.831, Average Loss: 3.761, avg. samples / sec: 964.27
Iteration:  34860, Loss function: 3.818, Average Loss: 3.760, avg. samples / sec: 1059.24
Iteration:  34880, Loss function: 4.171, Average Loss: 3.760, avg. samples / sec: 986.88
Iteration:  34900, Loss function: 4.006, Average Loss: 3.762, avg. samples / sec: 1015.13
Iteration:  34920, Loss function: 3.448, Average Loss: 3.762, avg. samples / sec: 1007.41
Iteration:  34940, Loss function: 3.850, Average Loss: 3.762, avg. samples / sec: 1041.47
Iteration:  34960, Loss function: 4.011, Average Loss: 3.762, avg. samples / sec: 1040.17
:::MLLOG {"namespace": "", "time_ms": 1639476208235, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1639476208236, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 35, "current_iter_num": 34975}}
Iteration:  34980, Loss function: 3.799, Average Loss: 3.762, avg. samples / sec: 925.65
Iteration:  35000, Loss function: 3.676, Average Loss: 3.761, avg. samples / sec: 1023.84
Iteration:  35020, Loss function: 3.831, Average Loss: 3.760, avg. samples / sec: 920.41
Iteration:  35040, Loss function: 3.622, Average Loss: 3.760, avg. samples / sec: 1007.26
Iteration:  35060, Loss function: 3.817, Average Loss: 3.760, avg. samples / sec: 977.04
Iteration:  35080, Loss function: 3.615, Average Loss: 3.760, avg. samples / sec: 988.31
Iteration:  35100, Loss function: 3.819, Average Loss: 3.757, avg. samples / sec: 980.82
Iteration:  35120, Loss function: 4.102, Average Loss: 3.757, avg. samples / sec: 975.81
Iteration:  35140, Loss function: 3.742, Average Loss: 3.758, avg. samples / sec: 942.55
Iteration:  35160, Loss function: 3.697, Average Loss: 3.757, avg. samples / sec: 1028.31
Iteration:  35180, Loss function: 4.132, Average Loss: 3.757, avg. samples / sec: 1060.38
Iteration:  35200, Loss function: 3.920, Average Loss: 3.756, avg. samples / sec: 960.59
Iteration:  35220, Loss function: 3.687, Average Loss: 3.756, avg. samples / sec: 1004.91
Iteration:  35240, Loss function: 3.468, Average Loss: 3.755, avg. samples / sec: 991.91
Iteration:  35260, Loss function: 3.645, Average Loss: 3.754, avg. samples / sec: 1052.06
Iteration:  35280, Loss function: 3.797, Average Loss: 3.754, avg. samples / sec: 972.06
Iteration:  35300, Loss function: 3.631, Average Loss: 3.753, avg. samples / sec: 1047.62
Iteration:  35320, Loss function: 4.010, Average Loss: 3.752, avg. samples / sec: 1026.93
Iteration:  35340, Loss function: 3.607, Average Loss: 3.753, avg. samples / sec: 1007.80
Iteration:  35360, Loss function: 3.599, Average Loss: 3.751, avg. samples / sec: 997.10
Iteration:  35380, Loss function: 3.785, Average Loss: 3.751, avg. samples / sec: 932.70
Iteration:  35400, Loss function: 3.817, Average Loss: 3.750, avg. samples / sec: 1014.15
Iteration:  35420, Loss function: 3.873, Average Loss: 3.751, avg. samples / sec: 1088.93
Iteration:  35440, Loss function: 3.743, Average Loss: 3.751, avg. samples / sec: 1033.02
Iteration:  35460, Loss function: 3.652, Average Loss: 3.751, avg. samples / sec: 950.42
Iteration:  35480, Loss function: 3.589, Average Loss: 3.752, avg. samples / sec: 1029.64
Iteration:  35500, Loss function: 3.610, Average Loss: 3.751, avg. samples / sec: 1011.38
Iteration:  35520, Loss function: 3.718, Average Loss: 3.750, avg. samples / sec: 1031.11
Iteration:  35540, Loss function: 3.439, Average Loss: 3.749, avg. samples / sec: 969.78
Iteration:  35560, Loss function: 3.540, Average Loss: 3.748, avg. samples / sec: 967.65
Iteration:  35580, Loss function: 3.781, Average Loss: 3.748, avg. samples / sec: 973.07
Iteration:  35600, Loss function: 3.669, Average Loss: 3.748, avg. samples / sec: 1022.90
Iteration:  35620, Loss function: 3.861, Average Loss: 3.747, avg. samples / sec: 977.33
Iteration:  35640, Loss function: 3.868, Average Loss: 3.747, avg. samples / sec: 1044.33
Iteration:  35660, Loss function: 3.756, Average Loss: 3.746, avg. samples / sec: 1057.75
Iteration:  35680, Loss function: 3.549, Average Loss: 3.746, avg. samples / sec: 1026.28
Iteration:  35700, Loss function: 3.721, Average Loss: 3.747, avg. samples / sec: 1015.31
Iteration:  35720, Loss function: 3.790, Average Loss: 3.747, avg. samples / sec: 999.04
Iteration:  35740, Loss function: 3.995, Average Loss: 3.746, avg. samples / sec: 1003.43
Iteration:  35760, Loss function: 3.788, Average Loss: 3.745, avg. samples / sec: 928.61
Iteration:  35780, Loss function: 3.665, Average Loss: 3.745, avg. samples / sec: 1026.13
Iteration:  35800, Loss function: 3.799, Average Loss: 3.745, avg. samples / sec: 1019.56
Iteration:  35820, Loss function: 4.057, Average Loss: 3.747, avg. samples / sec: 965.74
Iteration:  35840, Loss function: 3.558, Average Loss: 3.746, avg. samples / sec: 997.60
Iteration:  35860, Loss function: 3.650, Average Loss: 3.744, avg. samples / sec: 939.60
Iteration:  35880, Loss function: 3.797, Average Loss: 3.744, avg. samples / sec: 963.16
Iteration:  35900, Loss function: 3.670, Average Loss: 3.745, avg. samples / sec: 1048.72
Iteration:  35920, Loss function: 3.844, Average Loss: 3.744, avg. samples / sec: 1017.09
Iteration:  35940, Loss function: 3.698, Average Loss: 3.744, avg. samples / sec: 963.02
Iteration:  35960, Loss function: 3.678, Average Loss: 3.745, avg. samples / sec: 1032.06
Iteration:  35980, Loss function: 3.814, Average Loss: 3.747, avg. samples / sec: 1018.21
Iteration:  36000, Loss function: 3.614, Average Loss: 3.748, avg. samples / sec: 983.71
:::MLLOG {"namespace": "", "time_ms": 1639476325649, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1639476325651, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 36, "current_iter_num": 36003}}
Iteration:  36020, Loss function: 3.799, Average Loss: 3.747, avg. samples / sec: 1029.69
Iteration:  36040, Loss function: 3.502, Average Loss: 3.747, avg. samples / sec: 1005.91
Iteration:  36060, Loss function: 3.744, Average Loss: 3.746, avg. samples / sec: 1005.64
Iteration:  36080, Loss function: 3.844, Average Loss: 3.745, avg. samples / sec: 1022.23
Iteration:  36100, Loss function: 3.812, Average Loss: 3.746, avg. samples / sec: 1046.11
Iteration:  36120, Loss function: 3.712, Average Loss: 3.745, avg. samples / sec: 1056.71
Iteration:  36140, Loss function: 3.616, Average Loss: 3.743, avg. samples / sec: 1008.15
Iteration:  36160, Loss function: 3.721, Average Loss: 3.742, avg. samples / sec: 1045.12
Iteration:  36180, Loss function: 3.863, Average Loss: 3.742, avg. samples / sec: 1030.26
Iteration:  36200, Loss function: 3.683, Average Loss: 3.742, avg. samples / sec: 989.04
Iteration:  36220, Loss function: 3.789, Average Loss: 3.742, avg. samples / sec: 896.89
Iteration:  36240, Loss function: 3.606, Average Loss: 3.741, avg. samples / sec: 968.25
Iteration:  36260, Loss function: 3.668, Average Loss: 3.740, avg. samples / sec: 1081.55
Iteration:  36280, Loss function: 3.710, Average Loss: 3.740, avg. samples / sec: 962.47
Iteration:  36300, Loss function: 3.640, Average Loss: 3.739, avg. samples / sec: 986.12
Iteration:  36320, Loss function: 3.771, Average Loss: 3.738, avg. samples / sec: 974.36
Iteration:  36340, Loss function: 3.552, Average Loss: 3.737, avg. samples / sec: 945.46
Iteration:  36360, Loss function: 3.700, Average Loss: 3.737, avg. samples / sec: 950.56
Iteration:  36380, Loss function: 3.852, Average Loss: 3.738, avg. samples / sec: 1011.68
Iteration:  36400, Loss function: 3.629, Average Loss: 3.738, avg. samples / sec: 977.30
Iteration:  36420, Loss function: 3.625, Average Loss: 3.739, avg. samples / sec: 992.11
Iteration:  36440, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 965.04
Iteration:  36460, Loss function: 3.777, Average Loss: 3.739, avg. samples / sec: 1031.31
Iteration:  36480, Loss function: 3.711, Average Loss: 3.739, avg. samples / sec: 1066.33
Iteration:  36500, Loss function: 3.848, Average Loss: 3.740, avg. samples / sec: 1024.07
Iteration:  36520, Loss function: 3.739, Average Loss: 3.740, avg. samples / sec: 1006.68
Iteration:  36540, Loss function: 3.756, Average Loss: 3.741, avg. samples / sec: 1001.35
Iteration:  36560, Loss function: 3.770, Average Loss: 3.742, avg. samples / sec: 1034.31
Iteration:  36580, Loss function: 3.967, Average Loss: 3.742, avg. samples / sec: 979.56
Iteration:  36600, Loss function: 3.323, Average Loss: 3.741, avg. samples / sec: 957.74
Iteration:  36620, Loss function: 3.507, Average Loss: 3.740, avg. samples / sec: 1046.86
Iteration:  36640, Loss function: 3.666, Average Loss: 3.739, avg. samples / sec: 1069.17
Iteration:  36660, Loss function: 3.531, Average Loss: 3.738, avg. samples / sec: 983.72
Iteration:  36680, Loss function: 3.763, Average Loss: 3.737, avg. samples / sec: 1026.21
Iteration:  36700, Loss function: 4.177, Average Loss: 3.739, avg. samples / sec: 1065.64
Iteration:  36720, Loss function: 3.712, Average Loss: 3.739, avg. samples / sec: 990.67
Iteration:  36740, Loss function: 3.858, Average Loss: 3.739, avg. samples / sec: 1042.15
Iteration:  36760, Loss function: 3.440, Average Loss: 3.740, avg. samples / sec: 986.93
Iteration:  36780, Loss function: 3.978, Average Loss: 3.740, avg. samples / sec: 944.63
Iteration:  36800, Loss function: 3.739, Average Loss: 3.741, avg. samples / sec: 1006.42
Iteration:  36820, Loss function: 3.682, Average Loss: 3.740, avg. samples / sec: 1022.86
Iteration:  36840, Loss function: 3.621, Average Loss: 3.740, avg. samples / sec: 1044.39
Iteration:  36860, Loss function: 3.598, Average Loss: 3.740, avg. samples / sec: 1073.12
Iteration:  36880, Loss function: 3.571, Average Loss: 3.741, avg. samples / sec: 997.34
Iteration:  36900, Loss function: 3.593, Average Loss: 3.740, avg. samples / sec: 962.75
Iteration:  36920, Loss function: 3.551, Average Loss: 3.740, avg. samples / sec: 1020.60
Iteration:  36940, Loss function: 3.803, Average Loss: 3.740, avg. samples / sec: 993.26
Iteration:  36960, Loss function: 3.631, Average Loss: 3.740, avg. samples / sec: 1026.60
Iteration:  36980, Loss function: 3.815, Average Loss: 3.740, avg. samples / sec: 1021.72
Iteration:  37000, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 958.23
Iteration:  37020, Loss function: 3.527, Average Loss: 3.740, avg. samples / sec: 1017.06
:::MLLOG {"namespace": "", "time_ms": 1639476442463, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1639476442465, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 37, "current_iter_num": 37032}}
Iteration:  37040, Loss function: 3.645, Average Loss: 3.740, avg. samples / sec: 884.66
Iteration:  37060, Loss function: 3.576, Average Loss: 3.739, avg. samples / sec: 1008.06
Iteration:  37080, Loss function: 3.719, Average Loss: 3.737, avg. samples / sec: 949.26
Iteration:  37100, Loss function: 3.729, Average Loss: 3.737, avg. samples / sec: 1035.52
Iteration:  37120, Loss function: 3.569, Average Loss: 3.735, avg. samples / sec: 974.84
Iteration:  37140, Loss function: 3.793, Average Loss: 3.736, avg. samples / sec: 1003.44
Iteration:  37160, Loss function: 3.732, Average Loss: 3.735, avg. samples / sec: 973.19
Iteration:  37180, Loss function: 3.470, Average Loss: 3.735, avg. samples / sec: 1033.14
Iteration:  37200, Loss function: 3.650, Average Loss: 3.735, avg. samples / sec: 979.26
Iteration:  37220, Loss function: 3.754, Average Loss: 3.733, avg. samples / sec: 1034.05
Iteration:  37240, Loss function: 3.671, Average Loss: 3.733, avg. samples / sec: 946.82
Iteration:  37260, Loss function: 3.770, Average Loss: 3.732, avg. samples / sec: 1008.27
Iteration:  37280, Loss function: 3.780, Average Loss: 3.731, avg. samples / sec: 1030.03
Iteration:  37300, Loss function: 3.837, Average Loss: 3.731, avg. samples / sec: 1028.47
Iteration:  37320, Loss function: 3.853, Average Loss: 3.733, avg. samples / sec: 1081.07
Iteration:  37340, Loss function: 3.724, Average Loss: 3.732, avg. samples / sec: 976.26
Iteration:  37360, Loss function: 3.698, Average Loss: 3.732, avg. samples / sec: 989.43
Iteration:  37380, Loss function: 4.033, Average Loss: 3.732, avg. samples / sec: 1037.82
Iteration:  37400, Loss function: 3.854, Average Loss: 3.731, avg. samples / sec: 1002.57
Iteration:  37420, Loss function: 3.631, Average Loss: 3.730, avg. samples / sec: 975.48
Iteration:  37440, Loss function: 4.096, Average Loss: 3.729, avg. samples / sec: 984.14
Iteration:  37460, Loss function: 3.753, Average Loss: 3.730, avg. samples / sec: 1045.14
Iteration:  37480, Loss function: 3.501, Average Loss: 3.729, avg. samples / sec: 950.89
Iteration:  37500, Loss function: 3.545, Average Loss: 3.731, avg. samples / sec: 957.80
Iteration:  37520, Loss function: 3.950, Average Loss: 3.731, avg. samples / sec: 988.80
Iteration:  37540, Loss function: 3.820, Average Loss: 3.730, avg. samples / sec: 1018.01
Iteration:  37560, Loss function: 3.327, Average Loss: 3.729, avg. samples / sec: 1039.87
Iteration:  37580, Loss function: 3.825, Average Loss: 3.730, avg. samples / sec: 1006.79
Iteration:  37600, Loss function: 3.630, Average Loss: 3.729, avg. samples / sec: 980.24
Iteration:  37620, Loss function: 3.582, Average Loss: 3.730, avg. samples / sec: 992.15
Iteration:  37640, Loss function: 3.615, Average Loss: 3.731, avg. samples / sec: 978.65
Iteration:  37660, Loss function: 3.619, Average Loss: 3.730, avg. samples / sec: 938.20
Iteration:  37680, Loss function: 3.861, Average Loss: 3.731, avg. samples / sec: 969.48
Iteration:  37700, Loss function: 3.672, Average Loss: 3.731, avg. samples / sec: 1015.78
Iteration:  37720, Loss function: 3.656, Average Loss: 3.730, avg. samples / sec: 924.37
Iteration:  37740, Loss function: 3.681, Average Loss: 3.730, avg. samples / sec: 999.75
Iteration:  37760, Loss function: 3.728, Average Loss: 3.729, avg. samples / sec: 1069.21
Iteration:  37780, Loss function: 3.952, Average Loss: 3.730, avg. samples / sec: 1025.10
Iteration:  37800, Loss function: 3.812, Average Loss: 3.730, avg. samples / sec: 1013.25
Iteration:  37820, Loss function: 3.538, Average Loss: 3.730, avg. samples / sec: 1059.42
Iteration:  37840, Loss function: 3.483, Average Loss: 3.732, avg. samples / sec: 1028.25
Iteration:  37860, Loss function: 3.733, Average Loss: 3.732, avg. samples / sec: 985.33
Iteration:  37880, Loss function: 4.052, Average Loss: 3.733, avg. samples / sec: 1030.87
Iteration:  37900, Loss function: 3.719, Average Loss: 3.733, avg. samples / sec: 1023.33
Iteration:  37920, Loss function: 3.632, Average Loss: 3.733, avg. samples / sec: 1078.46
Iteration:  37940, Loss function: 3.794, Average Loss: 3.731, avg. samples / sec: 1010.22
Iteration:  37960, Loss function: 3.487, Average Loss: 3.731, avg. samples / sec: 1013.90
Iteration:  37980, Loss function: 3.710, Average Loss: 3.731, avg. samples / sec: 1051.18
Iteration:  38000, Loss function: 3.718, Average Loss: 3.730, avg. samples / sec: 983.36
Iteration:  38020, Loss function: 3.884, Average Loss: 3.731, avg. samples / sec: 1009.37
Iteration:  38040, Loss function: 3.567, Average Loss: 3.730, avg. samples / sec: 1096.63
Iteration:  38060, Loss function: 3.828, Average Loss: 3.731, avg. samples / sec: 1032.68
:::MLLOG {"namespace": "", "time_ms": 1639476559316, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1639476559318, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 38, "current_iter_num": 38061}}
Iteration:  38080, Loss function: 3.612, Average Loss: 3.729, avg. samples / sec: 1038.33
Iteration:  38100, Loss function: 3.319, Average Loss: 3.728, avg. samples / sec: 1061.42
Iteration:  38120, Loss function: 3.924, Average Loss: 3.727, avg. samples / sec: 966.71
Iteration:  38140, Loss function: 3.765, Average Loss: 3.726, avg. samples / sec: 973.22
Iteration:  38160, Loss function: 3.617, Average Loss: 3.724, avg. samples / sec: 1052.36
Iteration:  38180, Loss function: 3.774, Average Loss: 3.724, avg. samples / sec: 956.14
Iteration:  38200, Loss function: 3.506, Average Loss: 3.723, avg. samples / sec: 1069.14
Iteration:  38220, Loss function: 3.661, Average Loss: 3.722, avg. samples / sec: 1070.00
Iteration:  38240, Loss function: 3.677, Average Loss: 3.721, avg. samples / sec: 1002.18
Iteration:  38260, Loss function: 3.585, Average Loss: 3.719, avg. samples / sec: 934.22
Iteration:  38280, Loss function: 3.663, Average Loss: 3.719, avg. samples / sec: 1014.40
Iteration:  38300, Loss function: 3.310, Average Loss: 3.719, avg. samples / sec: 931.30
Iteration:  38320, Loss function: 3.512, Average Loss: 3.719, avg. samples / sec: 972.64
Iteration:  38340, Loss function: 3.471, Average Loss: 3.717, avg. samples / sec: 979.68
Iteration:  38360, Loss function: 3.741, Average Loss: 3.718, avg. samples / sec: 950.18
Iteration:  38380, Loss function: 4.283, Average Loss: 3.719, avg. samples / sec: 1038.63
Iteration:  38400, Loss function: 3.664, Average Loss: 3.719, avg. samples / sec: 1043.23
Iteration:  38420, Loss function: 3.874, Average Loss: 3.718, avg. samples / sec: 938.17
Iteration:  38440, Loss function: 3.823, Average Loss: 3.718, avg. samples / sec: 1069.73
Iteration:  38460, Loss function: 3.624, Average Loss: 3.716, avg. samples / sec: 1019.86
Iteration:  38480, Loss function: 3.657, Average Loss: 3.716, avg. samples / sec: 1089.39
Iteration:  38500, Loss function: 3.699, Average Loss: 3.715, avg. samples / sec: 1001.97
Iteration:  38520, Loss function: 3.871, Average Loss: 3.717, avg. samples / sec: 1015.13
Iteration:  38540, Loss function: 3.717, Average Loss: 3.716, avg. samples / sec: 994.95
Iteration:  38560, Loss function: 3.498, Average Loss: 3.715, avg. samples / sec: 1088.61
Iteration:  38580, Loss function: 3.617, Average Loss: 3.715, avg. samples / sec: 966.54
Iteration:  38600, Loss function: 3.937, Average Loss: 3.715, avg. samples / sec: 1012.28
Iteration:  38620, Loss function: 3.779, Average Loss: 3.715, avg. samples / sec: 986.02
Iteration:  38640, Loss function: 3.916, Average Loss: 3.714, avg. samples / sec: 1031.06
Iteration:  38660, Loss function: 3.851, Average Loss: 3.716, avg. samples / sec: 1001.10
Iteration:  38680, Loss function: 3.637, Average Loss: 3.716, avg. samples / sec: 990.72
Iteration:  38700, Loss function: 3.853, Average Loss: 3.718, avg. samples / sec: 979.38
Iteration:  38720, Loss function: 3.887, Average Loss: 3.717, avg. samples / sec: 1020.94
Iteration:  38740, Loss function: 3.649, Average Loss: 3.717, avg. samples / sec: 977.75
Iteration:  38760, Loss function: 3.950, Average Loss: 3.718, avg. samples / sec: 1029.48
Iteration:  38780, Loss function: 3.727, Average Loss: 3.717, avg. samples / sec: 1023.53
Iteration:  38800, Loss function: 3.735, Average Loss: 3.716, avg. samples / sec: 980.54
Iteration:  38820, Loss function: 3.591, Average Loss: 3.716, avg. samples / sec: 1041.99
Iteration:  38840, Loss function: 3.705, Average Loss: 3.718, avg. samples / sec: 1037.07
Iteration:  38860, Loss function: 3.786, Average Loss: 3.716, avg. samples / sec: 991.90
Iteration:  38880, Loss function: 3.784, Average Loss: 3.716, avg. samples / sec: 1004.32
Iteration:  38900, Loss function: 3.928, Average Loss: 3.717, avg. samples / sec: 930.73
Iteration:  38920, Loss function: 3.719, Average Loss: 3.719, avg. samples / sec: 1006.05
Iteration:  38940, Loss function: 3.837, Average Loss: 3.720, avg. samples / sec: 1031.36
Iteration:  38960, Loss function: 3.594, Average Loss: 3.720, avg. samples / sec: 1018.40
Iteration:  38980, Loss function: 3.694, Average Loss: 3.719, avg. samples / sec: 1046.33
Iteration:  39000, Loss function: 3.838, Average Loss: 3.719, avg. samples / sec: 959.22
Iteration:  39020, Loss function: 3.417, Average Loss: 3.717, avg. samples / sec: 974.61
Iteration:  39040, Loss function: 3.901, Average Loss: 3.718, avg. samples / sec: 942.19
Iteration:  39060, Loss function: 3.775, Average Loss: 3.718, avg. samples / sec: 931.39
Iteration:  39080, Loss function: 3.577, Average Loss: 3.719, avg. samples / sec: 938.05
:::MLLOG {"namespace": "", "time_ms": 1639476676513, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1639476676515, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 39, "current_iter_num": 39089}}
Iteration:  39100, Loss function: 3.683, Average Loss: 3.719, avg. samples / sec: 1016.21
Iteration:  39120, Loss function: 3.462, Average Loss: 3.717, avg. samples / sec: 1045.77
Iteration:  39140, Loss function: 3.606, Average Loss: 3.717, avg. samples / sec: 952.21
Iteration:  39160, Loss function: 3.609, Average Loss: 3.716, avg. samples / sec: 994.85
Iteration:  39180, Loss function: 3.686, Average Loss: 3.716, avg. samples / sec: 973.62
Iteration:  39200, Loss function: 3.681, Average Loss: 3.716, avg. samples / sec: 979.71
Iteration:  39220, Loss function: 3.412, Average Loss: 3.715, avg. samples / sec: 1036.05
Iteration:  39240, Loss function: 3.637, Average Loss: 3.715, avg. samples / sec: 1001.69
Iteration:  39260, Loss function: 3.942, Average Loss: 3.714, avg. samples / sec: 982.99
Iteration:  39280, Loss function: 3.752, Average Loss: 3.714, avg. samples / sec: 1020.53
Iteration:  39300, Loss function: 3.771, Average Loss: 3.714, avg. samples / sec: 970.18
Iteration:  39320, Loss function: 3.723, Average Loss: 3.714, avg. samples / sec: 1040.59
Iteration:  39340, Loss function: 3.654, Average Loss: 3.714, avg. samples / sec: 980.74
Iteration:  39360, Loss function: 3.627, Average Loss: 3.714, avg. samples / sec: 899.41
Iteration:  39380, Loss function: 3.775, Average Loss: 3.713, avg. samples / sec: 964.51
Iteration:  39400, Loss function: 3.666, Average Loss: 3.713, avg. samples / sec: 969.94
Iteration:  39420, Loss function: 3.760, Average Loss: 3.713, avg. samples / sec: 1004.72
Iteration:  39440, Loss function: 3.768, Average Loss: 3.713, avg. samples / sec: 955.89
Iteration:  39460, Loss function: 3.547, Average Loss: 3.712, avg. samples / sec: 1023.78
Iteration:  39480, Loss function: 3.636, Average Loss: 3.712, avg. samples / sec: 1006.55
Iteration:  39500, Loss function: 3.592, Average Loss: 3.711, avg. samples / sec: 1023.54
Iteration:  39520, Loss function: 3.556, Average Loss: 3.710, avg. samples / sec: 964.80
Iteration:  39540, Loss function: 3.342, Average Loss: 3.710, avg. samples / sec: 1055.00
Iteration:  39560, Loss function: 3.560, Average Loss: 3.710, avg. samples / sec: 1008.52
Iteration:  39580, Loss function: 3.761, Average Loss: 3.709, avg. samples / sec: 993.90
Iteration:  39600, Loss function: 3.772, Average Loss: 3.708, avg. samples / sec: 1038.40
Iteration:  39620, Loss function: 3.868, Average Loss: 3.707, avg. samples / sec: 1049.77
Iteration:  39640, Loss function: 3.472, Average Loss: 3.707, avg. samples / sec: 1002.38
Iteration:  39660, Loss function: 3.686, Average Loss: 3.708, avg. samples / sec: 1009.01
Iteration:  39680, Loss function: 3.697, Average Loss: 3.708, avg. samples / sec: 955.80
Iteration:  39700, Loss function: 3.698, Average Loss: 3.708, avg. samples / sec: 1000.81
Iteration:  39720, Loss function: 3.662, Average Loss: 3.709, avg. samples / sec: 1024.65
Iteration:  39740, Loss function: 3.835, Average Loss: 3.708, avg. samples / sec: 991.42
Iteration:  39760, Loss function: 3.721, Average Loss: 3.708, avg. samples / sec: 990.43
Iteration:  39780, Loss function: 3.841, Average Loss: 3.708, avg. samples / sec: 1011.16
Iteration:  39800, Loss function: 3.878, Average Loss: 3.708, avg. samples / sec: 948.18
Iteration:  39820, Loss function: 3.584, Average Loss: 3.708, avg. samples / sec: 939.52
Iteration:  39840, Loss function: 3.633, Average Loss: 3.708, avg. samples / sec: 1027.20
Iteration:  39860, Loss function: 3.417, Average Loss: 3.709, avg. samples / sec: 987.23
Iteration:  39880, Loss function: 3.645, Average Loss: 3.708, avg. samples / sec: 995.84
Iteration:  39900, Loss function: 3.746, Average Loss: 3.708, avg. samples / sec: 1047.46
Iteration:  39920, Loss function: 3.865, Average Loss: 3.708, avg. samples / sec: 928.49
Iteration:  39940, Loss function: 3.979, Average Loss: 3.708, avg. samples / sec: 925.47
Iteration:  39960, Loss function: 3.532, Average Loss: 3.707, avg. samples / sec: 1014.27
Iteration:  39980, Loss function: 3.766, Average Loss: 3.708, avg. samples / sec: 1023.94
Iteration:  40000, Loss function: 3.789, Average Loss: 3.709, avg. samples / sec: 1047.73
Iteration:  40020, Loss function: 3.724, Average Loss: 3.708, avg. samples / sec: 919.28
Iteration:  40040, Loss function: 3.475, Average Loss: 3.708, avg. samples / sec: 1034.68
Iteration:  40060, Loss function: 3.603, Average Loss: 3.707, avg. samples / sec: 1016.67
Iteration:  40080, Loss function: 3.448, Average Loss: 3.707, avg. samples / sec: 888.20
Iteration:  40100, Loss function: 3.736, Average Loss: 3.708, avg. samples / sec: 950.50
:::MLLOG {"namespace": "", "time_ms": 1639476794814, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1639476794816, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 40, "current_iter_num": 40118}}
Iteration:  40120, Loss function: 3.895, Average Loss: 3.708, avg. samples / sec: 999.08
Iteration:  40140, Loss function: 3.710, Average Loss: 3.707, avg. samples / sec: 969.16
Iteration:  40160, Loss function: 3.843, Average Loss: 3.707, avg. samples / sec: 894.44
Iteration:  40180, Loss function: 3.861, Average Loss: 3.707, avg. samples / sec: 996.11
Iteration:  40200, Loss function: 3.823, Average Loss: 3.708, avg. samples / sec: 1020.09
Iteration:  40220, Loss function: 3.764, Average Loss: 3.707, avg. samples / sec: 1056.29
Iteration:  40240, Loss function: 3.738, Average Loss: 3.705, avg. samples / sec: 979.84
Iteration:  40260, Loss function: 3.824, Average Loss: 3.705, avg. samples / sec: 945.90
Iteration:  40280, Loss function: 3.620, Average Loss: 3.705, avg. samples / sec: 1007.85
Iteration:  40300, Loss function: 3.281, Average Loss: 3.703, avg. samples / sec: 1034.87
Iteration:  40320, Loss function: 3.498, Average Loss: 3.703, avg. samples / sec: 1025.23
Iteration:  40340, Loss function: 3.580, Average Loss: 3.703, avg. samples / sec: 1034.67
Iteration:  40360, Loss function: 3.546, Average Loss: 3.702, avg. samples / sec: 1032.93
Iteration:  40380, Loss function: 3.704, Average Loss: 3.700, avg. samples / sec: 980.57
Iteration:  40400, Loss function: 3.830, Average Loss: 3.701, avg. samples / sec: 1013.77
Iteration:  40420, Loss function: 3.743, Average Loss: 3.700, avg. samples / sec: 949.04
Iteration:  40440, Loss function: 3.661, Average Loss: 3.699, avg. samples / sec: 967.94
Iteration:  40460, Loss function: 3.868, Average Loss: 3.699, avg. samples / sec: 985.22
Iteration:  40480, Loss function: 3.628, Average Loss: 3.699, avg. samples / sec: 918.69
Iteration:  40500, Loss function: 3.896, Average Loss: 3.698, avg. samples / sec: 984.09
Iteration:  40520, Loss function: 3.743, Average Loss: 3.698, avg. samples / sec: 989.73
Iteration:  40540, Loss function: 3.766, Average Loss: 3.698, avg. samples / sec: 1058.98
Iteration:  40560, Loss function: 3.582, Average Loss: 3.697, avg. samples / sec: 998.32
Iteration:  40580, Loss function: 3.543, Average Loss: 3.695, avg. samples / sec: 966.04
Iteration:  40600, Loss function: 3.880, Average Loss: 3.696, avg. samples / sec: 1017.03
Iteration:  40620, Loss function: 3.696, Average Loss: 3.696, avg. samples / sec: 983.33
Iteration:  40640, Loss function: 4.011, Average Loss: 3.696, avg. samples / sec: 968.77
Iteration:  40660, Loss function: 3.620, Average Loss: 3.696, avg. samples / sec: 1000.53
Iteration:  40680, Loss function: 3.780, Average Loss: 3.696, avg. samples / sec: 1000.87
Iteration:  40700, Loss function: 3.819, Average Loss: 3.696, avg. samples / sec: 980.14
Iteration:  40720, Loss function: 3.461, Average Loss: 3.695, avg. samples / sec: 959.50
Iteration:  40740, Loss function: 3.886, Average Loss: 3.696, avg. samples / sec: 1028.25
Iteration:  40760, Loss function: 3.600, Average Loss: 3.696, avg. samples / sec: 1097.20
Iteration:  40780, Loss function: 3.935, Average Loss: 3.696, avg. samples / sec: 1032.20
Iteration:  40800, Loss function: 3.712, Average Loss: 3.697, avg. samples / sec: 1033.01
Iteration:  40820, Loss function: 3.686, Average Loss: 3.697, avg. samples / sec: 977.05
Iteration:  40840, Loss function: 3.709, Average Loss: 3.697, avg. samples / sec: 1057.22
Iteration:  40860, Loss function: 3.855, Average Loss: 3.697, avg. samples / sec: 961.49
Iteration:  40880, Loss function: 3.679, Average Loss: 3.697, avg. samples / sec: 1033.52
Iteration:  40900, Loss function: 3.541, Average Loss: 3.697, avg. samples / sec: 1034.46
Iteration:  40920, Loss function: 3.770, Average Loss: 3.699, avg. samples / sec: 1015.08
Iteration:  40940, Loss function: 3.659, Average Loss: 3.699, avg. samples / sec: 999.18
Iteration:  40960, Loss function: 3.562, Average Loss: 3.698, avg. samples / sec: 1015.15
Iteration:  40980, Loss function: 3.394, Average Loss: 3.697, avg. samples / sec: 1080.71
Iteration:  41000, Loss function: 3.579, Average Loss: 3.695, avg. samples / sec: 1011.87
Iteration:  41020, Loss function: 4.054, Average Loss: 3.695, avg. samples / sec: 997.13
Iteration:  41040, Loss function: 4.015, Average Loss: 3.695, avg. samples / sec: 1052.84
Iteration:  41060, Loss function: 3.467, Average Loss: 3.696, avg. samples / sec: 947.98
Iteration:  41080, Loss function: 3.545, Average Loss: 3.696, avg. samples / sec: 967.40
Iteration:  41100, Loss function: 3.827, Average Loss: 3.696, avg. samples / sec: 954.44
Iteration:  41120, Loss function: 3.756, Average Loss: 3.696, avg. samples / sec: 1034.54
Iteration:  41140, Loss function: 3.530, Average Loss: 3.696, avg. samples / sec: 1088.25
:::MLLOG {"namespace": "", "time_ms": 1639476911879, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 40}}
Predicting Ended, total time: 36.76 s
:::MLLOG {"namespace": "", "time_ms": 1639476948735, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639476948801, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 41, "epoch_count": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639476948801, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 41, "current_iter_num": 41146}}
Loading and preparing results...
Iteration:  41160, Loss function: 3.567, Average Loss: 3.694, avg. samples / sec: 58.45
DONE (t=1.69s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  41180, Loss function: 3.901, Average Loss: 3.693, avg. samples / sec: 1205.75
Iteration:  41200, Loss function: 3.526, Average Loss: 3.692, avg. samples / sec: 1214.84
DONE (t=4.76s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19897
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.35606
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.20278
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28237
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.20132
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.29423
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.31021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.19897 AP goal: 0.23000
Iteration:  41220, Loss function: 3.830, Average Loss: 3.690, avg. samples / sec: 1218.51
:::MLLOG {"namespace": "", "time_ms": 1639476955998, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639476955999, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19897366720942974, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639476955999, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 40}}
Iteration:  41240, Loss function: 3.613, Average Loss: 3.688, avg. samples / sec: 1220.63
Iteration:  41260, Loss function: 3.714, Average Loss: 3.688, avg. samples / sec: 1207.15
Iteration:  41280, Loss function: 3.577, Average Loss: 3.687, avg. samples / sec: 1152.47
Iteration:  41300, Loss function: 3.558, Average Loss: 3.686, avg. samples / sec: 1179.08
Iteration:  41320, Loss function: 3.614, Average Loss: 3.685, avg. samples / sec: 1168.30
Iteration:  41340, Loss function: 3.565, Average Loss: 3.684, avg. samples / sec: 1218.80
Iteration:  41360, Loss function: 3.969, Average Loss: 3.684, avg. samples / sec: 1227.77
Iteration:  41380, Loss function: 3.833, Average Loss: 3.684, avg. samples / sec: 1234.80
Iteration:  41400, Loss function: 3.966, Average Loss: 3.684, avg. samples / sec: 1182.04
Iteration:  41420, Loss function: 3.980, Average Loss: 3.684, avg. samples / sec: 838.81
Iteration:  41440, Loss function: 3.351, Average Loss: 3.684, avg. samples / sec: 981.54
Iteration:  41460, Loss function: 3.580, Average Loss: 3.684, avg. samples / sec: 1002.46
Iteration:  41480, Loss function: 3.470, Average Loss: 3.685, avg. samples / sec: 1063.61
Iteration:  41500, Loss function: 4.216, Average Loss: 3.685, avg. samples / sec: 1131.32
Iteration:  41520, Loss function: 3.789, Average Loss: 3.685, avg. samples / sec: 942.58
Iteration:  41540, Loss function: 3.537, Average Loss: 3.685, avg. samples / sec: 958.14
Iteration:  41560, Loss function: 3.804, Average Loss: 3.685, avg. samples / sec: 995.00
Iteration:  41580, Loss function: 3.354, Average Loss: 3.684, avg. samples / sec: 1000.79
Iteration:  41600, Loss function: 3.733, Average Loss: 3.684, avg. samples / sec: 937.57
Iteration:  41620, Loss function: 3.719, Average Loss: 3.684, avg. samples / sec: 979.19
Iteration:  41640, Loss function: 3.795, Average Loss: 3.684, avg. samples / sec: 1026.53
Iteration:  41660, Loss function: 3.733, Average Loss: 3.684, avg. samples / sec: 987.63
Iteration:  41680, Loss function: 3.669, Average Loss: 3.684, avg. samples / sec: 1017.95
Iteration:  41700, Loss function: 3.784, Average Loss: 3.685, avg. samples / sec: 997.82
Iteration:  41720, Loss function: 3.516, Average Loss: 3.683, avg. samples / sec: 984.59
Iteration:  41740, Loss function: 3.583, Average Loss: 3.683, avg. samples / sec: 977.04
Iteration:  41760, Loss function: 3.600, Average Loss: 3.683, avg. samples / sec: 936.09
Iteration:  41780, Loss function: 3.681, Average Loss: 3.682, avg. samples / sec: 1021.58
Iteration:  41800, Loss function: 3.637, Average Loss: 3.681, avg. samples / sec: 875.52
Iteration:  41820, Loss function: 3.660, Average Loss: 3.679, avg. samples / sec: 1004.55
Iteration:  41840, Loss function: 3.612, Average Loss: 3.679, avg. samples / sec: 1037.27
Iteration:  41860, Loss function: 3.731, Average Loss: 3.678, avg. samples / sec: 1006.46
Iteration:  41880, Loss function: 3.539, Average Loss: 3.677, avg. samples / sec: 1017.85
Iteration:  41900, Loss function: 3.767, Average Loss: 3.677, avg. samples / sec: 983.33
Iteration:  41920, Loss function: 3.666, Average Loss: 3.678, avg. samples / sec: 993.34
Iteration:  41940, Loss function: 3.513, Average Loss: 3.677, avg. samples / sec: 923.20
Iteration:  41960, Loss function: 3.880, Average Loss: 3.677, avg. samples / sec: 894.46
Iteration:  41980, Loss function: 3.510, Average Loss: 3.677, avg. samples / sec: 1025.53
Iteration:  42000, Loss function: 4.014, Average Loss: 3.677, avg. samples / sec: 1072.17
Iteration:  42020, Loss function: 3.707, Average Loss: 3.677, avg. samples / sec: 964.45
Iteration:  42040, Loss function: 3.687, Average Loss: 3.678, avg. samples / sec: 1029.67
Iteration:  42060, Loss function: 3.878, Average Loss: 3.678, avg. samples / sec: 992.45
Iteration:  42080, Loss function: 3.632, Average Loss: 3.678, avg. samples / sec: 1046.73
Iteration:  42100, Loss function: 4.009, Average Loss: 3.679, avg. samples / sec: 1039.83
Iteration:  42120, Loss function: 3.525, Average Loss: 3.679, avg. samples / sec: 1027.75
Iteration:  42140, Loss function: 3.750, Average Loss: 3.679, avg. samples / sec: 962.90
Iteration:  42160, Loss function: 3.545, Average Loss: 3.678, avg. samples / sec: 1006.18
:::MLLOG {"namespace": "", "time_ms": 1639477062345, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639477062347, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 42, "current_iter_num": 42175}}
Iteration:  42180, Loss function: 3.537, Average Loss: 3.678, avg. samples / sec: 1015.42
Iteration:  42200, Loss function: 3.335, Average Loss: 3.678, avg. samples / sec: 994.17
Iteration:  42220, Loss function: 3.515, Average Loss: 3.677, avg. samples / sec: 961.96
Iteration:  42240, Loss function: 3.732, Average Loss: 3.676, avg. samples / sec: 991.88
Iteration:  42260, Loss function: 3.703, Average Loss: 3.676, avg. samples / sec: 977.39
Iteration:  42280, Loss function: 3.537, Average Loss: 3.675, avg. samples / sec: 970.28
Iteration:  42300, Loss function: 3.510, Average Loss: 3.674, avg. samples / sec: 1015.58
Iteration:  42320, Loss function: 3.949, Average Loss: 3.675, avg. samples / sec: 1020.01
Iteration:  42340, Loss function: 3.550, Average Loss: 3.675, avg. samples / sec: 1043.03
Iteration:  42360, Loss function: 3.609, Average Loss: 3.674, avg. samples / sec: 1055.44
Iteration:  42380, Loss function: 3.861, Average Loss: 3.675, avg. samples / sec: 1014.29
Iteration:  42400, Loss function: 3.707, Average Loss: 3.675, avg. samples / sec: 1027.66
Iteration:  42420, Loss function: 3.897, Average Loss: 3.675, avg. samples / sec: 993.48
Iteration:  42440, Loss function: 3.471, Average Loss: 3.674, avg. samples / sec: 986.24
Iteration:  42460, Loss function: 3.794, Average Loss: 3.674, avg. samples / sec: 1025.72
Iteration:  42480, Loss function: 3.632, Average Loss: 3.674, avg. samples / sec: 969.26
Iteration:  42500, Loss function: 3.757, Average Loss: 3.674, avg. samples / sec: 1051.88
Iteration:  42520, Loss function: 3.773, Average Loss: 3.674, avg. samples / sec: 1015.98
Iteration:  42540, Loss function: 3.541, Average Loss: 3.674, avg. samples / sec: 978.58
Iteration:  42560, Loss function: 3.608, Average Loss: 3.673, avg. samples / sec: 989.37
Iteration:  42580, Loss function: 3.695, Average Loss: 3.674, avg. samples / sec: 1049.78
Iteration:  42600, Loss function: 3.902, Average Loss: 3.673, avg. samples / sec: 991.06
Iteration:  42620, Loss function: 3.470, Average Loss: 3.673, avg. samples / sec: 1035.49
Iteration:  42640, Loss function: 3.749, Average Loss: 3.673, avg. samples / sec: 992.39
Iteration:  42660, Loss function: 3.762, Average Loss: 3.673, avg. samples / sec: 1033.77
Iteration:  42680, Loss function: 3.731, Average Loss: 3.673, avg. samples / sec: 1056.10
Iteration:  42700, Loss function: 3.725, Average Loss: 3.672, avg. samples / sec: 1027.20
Iteration:  42720, Loss function: 3.716, Average Loss: 3.672, avg. samples / sec: 962.70
Iteration:  42740, Loss function: 3.415, Average Loss: 3.671, avg. samples / sec: 1043.31
Iteration:  42760, Loss function: 3.782, Average Loss: 3.670, avg. samples / sec: 1012.83
Iteration:  42780, Loss function: 3.595, Average Loss: 3.668, avg. samples / sec: 1024.05
Iteration:  42800, Loss function: 3.662, Average Loss: 3.668, avg. samples / sec: 1013.94
Iteration:  42820, Loss function: 3.737, Average Loss: 3.669, avg. samples / sec: 1003.57
Iteration:  42840, Loss function: 3.550, Average Loss: 3.670, avg. samples / sec: 973.12
Iteration:  42860, Loss function: 3.472, Average Loss: 3.669, avg. samples / sec: 1014.31
Iteration:  42880, Loss function: 3.632, Average Loss: 3.668, avg. samples / sec: 965.19
Iteration:  42900, Loss function: 3.831, Average Loss: 3.669, avg. samples / sec: 985.06
Iteration:  42920, Loss function: 3.639, Average Loss: 3.669, avg. samples / sec: 997.91
Iteration:  42940, Loss function: 3.666, Average Loss: 3.670, avg. samples / sec: 979.91
Iteration:  42960, Loss function: 3.735, Average Loss: 3.671, avg. samples / sec: 990.19
Iteration:  42980, Loss function: 3.802, Average Loss: 3.672, avg. samples / sec: 1027.20
Iteration:  43000, Loss function: 3.935, Average Loss: 3.672, avg. samples / sec: 917.27
Iteration:  43020, Loss function: 3.632, Average Loss: 3.672, avg. samples / sec: 1068.48
Iteration:  43040, Loss function: 3.766, Average Loss: 3.672, avg. samples / sec: 962.30
Iteration:  43060, Loss function: 3.796, Average Loss: 3.673, avg. samples / sec: 1053.44
Iteration:  43080, Loss function: 3.487, Average Loss: 3.673, avg. samples / sec: 1035.33
Iteration:  43100, Loss function: 3.721, Average Loss: 3.673, avg. samples / sec: 955.32
Iteration:  43120, Loss function: 3.807, Average Loss: 3.673, avg. samples / sec: 1110.06
Iteration:  43140, Loss function: 3.705, Average Loss: 3.673, avg. samples / sec: 983.31
Iteration:  43160, Loss function: 3.762, Average Loss: 3.673, avg. samples / sec: 1030.34
Iteration:  43180, Loss function: 3.786, Average Loss: 3.673, avg. samples / sec: 996.18
Iteration:  43200, Loss function: 3.936, Average Loss: 3.674, avg. samples / sec: 959.33
:::MLLOG {"namespace": "", "time_ms": 1639477179034, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1639477179036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 43, "current_iter_num": 43204}}
Iteration:  43220, Loss function: 3.769, Average Loss: 3.673, avg. samples / sec: 990.63
Iteration:  43240, Loss function: 3.530, Average Loss: 3.674, avg. samples / sec: 1032.05
Iteration:  43260, Loss function: 3.469, Average Loss: 3.673, avg. samples / sec: 1005.86
Iteration:  43280, Loss function: 3.952, Average Loss: 3.672, avg. samples / sec: 1029.71
Iteration:  43300, Loss function: 3.328, Average Loss: 3.671, avg. samples / sec: 975.87
Iteration:  43320, Loss function: 3.865, Average Loss: 3.670, avg. samples / sec: 1027.73
Iteration:  43340, Loss function: 3.538, Average Loss: 3.669, avg. samples / sec: 1041.71
Iteration:  43360, Loss function: 3.625, Average Loss: 3.670, avg. samples / sec: 1021.03
Iteration:  43380, Loss function: 3.864, Average Loss: 3.670, avg. samples / sec: 1001.32
Iteration:  43400, Loss function: 3.901, Average Loss: 3.668, avg. samples / sec: 997.58
Iteration:  43420, Loss function: 3.958, Average Loss: 3.669, avg. samples / sec: 1005.26
Iteration:  43440, Loss function: 3.586, Average Loss: 3.668, avg. samples / sec: 1020.77
Iteration:  43460, Loss function: 3.589, Average Loss: 3.668, avg. samples / sec: 991.87
Iteration:  43480, Loss function: 3.454, Average Loss: 3.668, avg. samples / sec: 972.60
Iteration:  43500, Loss function: 3.717, Average Loss: 3.667, avg. samples / sec: 1032.72
Iteration:  43520, Loss function: 3.524, Average Loss: 3.667, avg. samples / sec: 1032.84
Iteration:  43540, Loss function: 3.538, Average Loss: 3.665, avg. samples / sec: 1003.94
Iteration:  43560, Loss function: 3.953, Average Loss: 3.666, avg. samples / sec: 1060.48
Iteration:  43580, Loss function: 3.581, Average Loss: 3.666, avg. samples / sec: 995.91
Iteration:  43600, Loss function: 3.763, Average Loss: 3.664, avg. samples / sec: 972.47
Iteration:  43620, Loss function: 3.626, Average Loss: 3.665, avg. samples / sec: 960.17
Iteration:  43640, Loss function: 3.731, Average Loss: 3.665, avg. samples / sec: 981.18
Iteration:  43660, Loss function: 3.689, Average Loss: 3.666, avg. samples / sec: 965.95
Iteration:  43680, Loss function: 3.662, Average Loss: 3.664, avg. samples / sec: 954.77
Iteration:  43700, Loss function: 3.644, Average Loss: 3.665, avg. samples / sec: 980.35
Iteration:  43720, Loss function: 3.558, Average Loss: 3.665, avg. samples / sec: 1038.12
Iteration:  43740, Loss function: 3.595, Average Loss: 3.666, avg. samples / sec: 1008.28
Iteration:  43760, Loss function: 3.440, Average Loss: 3.667, avg. samples / sec: 1039.57
Iteration:  43780, Loss function: 3.748, Average Loss: 3.667, avg. samples / sec: 958.42
Iteration:  43800, Loss function: 3.510, Average Loss: 3.667, avg. samples / sec: 970.48
Iteration:  43820, Loss function: 3.673, Average Loss: 3.667, avg. samples / sec: 972.81
Iteration:  43840, Loss function: 3.473, Average Loss: 3.667, avg. samples / sec: 949.29
Iteration:  43860, Loss function: 3.632, Average Loss: 3.667, avg. samples / sec: 1030.66
Iteration:  43880, Loss function: 3.654, Average Loss: 3.666, avg. samples / sec: 968.82
Iteration:  43900, Loss function: 3.971, Average Loss: 3.665, avg. samples / sec: 985.52
Iteration:  43920, Loss function: 3.829, Average Loss: 3.665, avg. samples / sec: 1014.43
Iteration:  43940, Loss function: 3.329, Average Loss: 3.664, avg. samples / sec: 982.89
Iteration:  43960, Loss function: 3.643, Average Loss: 3.665, avg. samples / sec: 1062.46
Iteration:  43980, Loss function: 3.921, Average Loss: 3.665, avg. samples / sec: 1008.59
Iteration:  44000, Loss function: 3.585, Average Loss: 3.664, avg. samples / sec: 988.70
Iteration:  44020, Loss function: 3.761, Average Loss: 3.665, avg. samples / sec: 1006.56
Iteration:  44040, Loss function: 3.684, Average Loss: 3.665, avg. samples / sec: 981.90
Iteration:  44060, Loss function: 3.900, Average Loss: 3.665, avg. samples / sec: 1027.22
Iteration:  44080, Loss function: 3.698, Average Loss: 3.665, avg. samples / sec: 1027.05
Iteration:  44100, Loss function: 3.605, Average Loss: 3.666, avg. samples / sec: 942.71
Iteration:  44120, Loss function: 3.725, Average Loss: 3.666, avg. samples / sec: 1007.57
Iteration:  44140, Loss function: 3.816, Average Loss: 3.667, avg. samples / sec: 1013.75
Iteration:  44160, Loss function: 3.716, Average Loss: 3.667, avg. samples / sec: 1050.31
Iteration:  44180, Loss function: 3.654, Average Loss: 3.667, avg. samples / sec: 1045.20
Iteration:  44200, Loss function: 3.492, Average Loss: 3.668, avg. samples / sec: 1000.44
Iteration:  44220, Loss function: 3.717, Average Loss: 3.667, avg. samples / sec: 1021.60
:::MLLOG {"namespace": "", "time_ms": 1639477295978, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1639477295991, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 44, "current_iter_num": 44232}}
Iteration:  44240, Loss function: 3.720, Average Loss: 3.666, avg. samples / sec: 973.86
Iteration:  44260, Loss function: 3.581, Average Loss: 3.665, avg. samples / sec: 1030.16
Iteration:  44280, Loss function: 3.471, Average Loss: 3.663, avg. samples / sec: 988.12
Iteration:  44300, Loss function: 3.565, Average Loss: 3.663, avg. samples / sec: 883.14
Iteration:  44320, Loss function: 3.617, Average Loss: 3.664, avg. samples / sec: 1066.31
Iteration:  44340, Loss function: 3.502, Average Loss: 3.664, avg. samples / sec: 1063.28
Iteration:  44360, Loss function: 3.538, Average Loss: 3.663, avg. samples / sec: 947.58
Iteration:  44380, Loss function: 3.617, Average Loss: 3.662, avg. samples / sec: 963.78
Iteration:  44400, Loss function: 3.631, Average Loss: 3.663, avg. samples / sec: 929.55
Iteration:  44420, Loss function: 3.488, Average Loss: 3.662, avg. samples / sec: 1035.57
Iteration:  44440, Loss function: 3.621, Average Loss: 3.661, avg. samples / sec: 959.13
Iteration:  44460, Loss function: 3.931, Average Loss: 3.661, avg. samples / sec: 1037.77
Iteration:  44480, Loss function: 3.626, Average Loss: 3.661, avg. samples / sec: 951.94
Iteration:  44500, Loss function: 3.828, Average Loss: 3.662, avg. samples / sec: 1053.86
Iteration:  44520, Loss function: 3.776, Average Loss: 3.662, avg. samples / sec: 1050.74
Iteration:  44540, Loss function: 3.601, Average Loss: 3.661, avg. samples / sec: 1075.14
Iteration:  44560, Loss function: 3.742, Average Loss: 3.661, avg. samples / sec: 1036.75
Iteration:  44580, Loss function: 3.331, Average Loss: 3.661, avg. samples / sec: 1029.12
Iteration:  44600, Loss function: 3.655, Average Loss: 3.660, avg. samples / sec: 993.93
Iteration:  44620, Loss function: 3.924, Average Loss: 3.662, avg. samples / sec: 1103.54
Iteration:  44640, Loss function: 3.585, Average Loss: 3.661, avg. samples / sec: 1059.31
Iteration:  44660, Loss function: 3.626, Average Loss: 3.661, avg. samples / sec: 1074.62
Iteration:  44680, Loss function: 3.795, Average Loss: 3.661, avg. samples / sec: 990.79
Iteration:  44700, Loss function: 3.468, Average Loss: 3.661, avg. samples / sec: 998.80
Iteration:  44720, Loss function: 3.655, Average Loss: 3.660, avg. samples / sec: 1071.88
Iteration:  44740, Loss function: 3.436, Average Loss: 3.660, avg. samples / sec: 1053.23
Iteration:  44760, Loss function: 3.537, Average Loss: 3.659, avg. samples / sec: 990.52
Iteration:  44780, Loss function: 3.646, Average Loss: 3.658, avg. samples / sec: 1004.76
Iteration:  44800, Loss function: 3.562, Average Loss: 3.657, avg. samples / sec: 916.17
Iteration:  44820, Loss function: 3.647, Average Loss: 3.656, avg. samples / sec: 988.77
Iteration:  44840, Loss function: 3.790, Average Loss: 3.656, avg. samples / sec: 993.90
Iteration:  44860, Loss function: 3.795, Average Loss: 3.657, avg. samples / sec: 957.58
Iteration:  44880, Loss function: 3.665, Average Loss: 3.658, avg. samples / sec: 948.58
Iteration:  44900, Loss function: 3.615, Average Loss: 3.657, avg. samples / sec: 1010.02
Iteration:  44920, Loss function: 3.786, Average Loss: 3.658, avg. samples / sec: 1031.36
Iteration:  44940, Loss function: 3.250, Average Loss: 3.657, avg. samples / sec: 1013.76
Iteration:  44960, Loss function: 3.890, Average Loss: 3.658, avg. samples / sec: 1058.08
Iteration:  44980, Loss function: 3.727, Average Loss: 3.658, avg. samples / sec: 976.64
Iteration:  45000, Loss function: 3.720, Average Loss: 3.658, avg. samples / sec: 1041.68
Iteration:  45020, Loss function: 3.572, Average Loss: 3.657, avg. samples / sec: 1072.56
Iteration:  45040, Loss function: 3.914, Average Loss: 3.658, avg. samples / sec: 1016.45
Iteration:  45060, Loss function: 3.622, Average Loss: 3.658, avg. samples / sec: 1020.37
Iteration:  45080, Loss function: 3.790, Average Loss: 3.658, avg. samples / sec: 997.80
Iteration:  45100, Loss function: 3.588, Average Loss: 3.657, avg. samples / sec: 991.85
Iteration:  45120, Loss function: 3.638, Average Loss: 3.658, avg. samples / sec: 974.23
Iteration:  45140, Loss function: 4.014, Average Loss: 3.658, avg. samples / sec: 1056.69
Iteration:  45160, Loss function: 3.590, Average Loss: 3.658, avg. samples / sec: 1002.71
Iteration:  45180, Loss function: 3.310, Average Loss: 3.659, avg. samples / sec: 999.03
Iteration:  45200, Loss function: 3.405, Average Loss: 3.659, avg. samples / sec: 939.43
Iteration:  45220, Loss function: 3.570, Average Loss: 3.658, avg. samples / sec: 1034.33
Iteration:  45240, Loss function: 3.655, Average Loss: 3.659, avg. samples / sec: 1021.92
Iteration:  45260, Loss function: 3.690, Average Loss: 3.660, avg. samples / sec: 969.87
:::MLLOG {"namespace": "", "time_ms": 1639477412546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 44}}
lr decay step #1
:::MLLOG {"namespace": "", "time_ms": 1639477412549, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 45, "current_iter_num": 45261}}
Iteration:  45280, Loss function: 3.637, Average Loss: 3.659, avg. samples / sec: 980.50
Iteration:  45300, Loss function: 3.302, Average Loss: 3.655, avg. samples / sec: 969.73
Iteration:  45320, Loss function: 3.587, Average Loss: 3.651, avg. samples / sec: 1007.01
Iteration:  45340, Loss function: 3.442, Average Loss: 3.647, avg. samples / sec: 1008.05
Iteration:  45360, Loss function: 3.606, Average Loss: 3.643, avg. samples / sec: 998.58
Iteration:  45380, Loss function: 3.533, Average Loss: 3.638, avg. samples / sec: 1002.60
Iteration:  45400, Loss function: 3.325, Average Loss: 3.634, avg. samples / sec: 1036.92
Iteration:  45420, Loss function: 3.006, Average Loss: 3.629, avg. samples / sec: 996.41
Iteration:  45440, Loss function: 3.110, Average Loss: 3.624, avg. samples / sec: 949.22
Iteration:  45460, Loss function: 3.163, Average Loss: 3.618, avg. samples / sec: 1018.25
Iteration:  45480, Loss function: 3.568, Average Loss: 3.614, avg. samples / sec: 1001.18
Iteration:  45500, Loss function: 3.539, Average Loss: 3.609, avg. samples / sec: 953.26
Iteration:  45520, Loss function: 3.264, Average Loss: 3.603, avg. samples / sec: 963.62
Iteration:  45540, Loss function: 3.219, Average Loss: 3.598, avg. samples / sec: 931.39
Iteration:  45560, Loss function: 3.683, Average Loss: 3.595, avg. samples / sec: 953.02
Iteration:  45580, Loss function: 3.472, Average Loss: 3.590, avg. samples / sec: 981.06
Iteration:  45600, Loss function: 3.527, Average Loss: 3.586, avg. samples / sec: 1046.82
Iteration:  45620, Loss function: 3.463, Average Loss: 3.582, avg. samples / sec: 1007.56
Iteration:  45640, Loss function: 3.457, Average Loss: 3.577, avg. samples / sec: 1007.05
Iteration:  45660, Loss function: 3.209, Average Loss: 3.573, avg. samples / sec: 991.25
Iteration:  45680, Loss function: 3.334, Average Loss: 3.570, avg. samples / sec: 1007.10
Iteration:  45700, Loss function: 3.256, Average Loss: 3.566, avg. samples / sec: 999.78
Iteration:  45720, Loss function: 3.468, Average Loss: 3.561, avg. samples / sec: 997.73
Iteration:  45740, Loss function: 3.379, Average Loss: 3.557, avg. samples / sec: 1020.86
Iteration:  45760, Loss function: 3.200, Average Loss: 3.553, avg. samples / sec: 1044.67
Iteration:  45780, Loss function: 3.542, Average Loss: 3.549, avg. samples / sec: 1056.46
Iteration:  45800, Loss function: 3.215, Average Loss: 3.544, avg. samples / sec: 1031.22
Iteration:  45820, Loss function: 3.225, Average Loss: 3.539, avg. samples / sec: 1005.82
Iteration:  45840, Loss function: 3.178, Average Loss: 3.536, avg. samples / sec: 1018.30
Iteration:  45860, Loss function: 3.677, Average Loss: 3.533, avg. samples / sec: 966.34
Iteration:  45880, Loss function: 3.197, Average Loss: 3.528, avg. samples / sec: 977.37
Iteration:  45900, Loss function: 3.387, Average Loss: 3.524, avg. samples / sec: 954.16
Iteration:  45920, Loss function: 3.449, Average Loss: 3.519, avg. samples / sec: 1000.19
Iteration:  45940, Loss function: 3.179, Average Loss: 3.515, avg. samples / sec: 1013.69
Iteration:  45960, Loss function: 3.358, Average Loss: 3.513, avg. samples / sec: 940.29
Iteration:  45980, Loss function: 3.313, Average Loss: 3.510, avg. samples / sec: 1027.47
Iteration:  46000, Loss function: 3.329, Average Loss: 3.507, avg. samples / sec: 1009.20
Iteration:  46020, Loss function: 3.394, Average Loss: 3.504, avg. samples / sec: 1033.38
Iteration:  46040, Loss function: 3.583, Average Loss: 3.499, avg. samples / sec: 946.97
Iteration:  46060, Loss function: 3.436, Average Loss: 3.496, avg. samples / sec: 1034.45
Iteration:  46080, Loss function: 3.451, Average Loss: 3.493, avg. samples / sec: 1010.31
Iteration:  46100, Loss function: 3.390, Average Loss: 3.489, avg. samples / sec: 1004.54
Iteration:  46120, Loss function: 3.601, Average Loss: 3.485, avg. samples / sec: 1011.16
Iteration:  46140, Loss function: 3.383, Average Loss: 3.481, avg. samples / sec: 1003.08
Iteration:  46160, Loss function: 3.128, Average Loss: 3.478, avg. samples / sec: 1030.96
Iteration:  46180, Loss function: 3.147, Average Loss: 3.476, avg. samples / sec: 1016.24
Iteration:  46200, Loss function: 3.538, Average Loss: 3.474, avg. samples / sec: 991.85
Iteration:  46220, Loss function: 3.492, Average Loss: 3.471, avg. samples / sec: 968.84
Iteration:  46240, Loss function: 3.730, Average Loss: 3.469, avg. samples / sec: 1031.08
Iteration:  46260, Loss function: 3.141, Average Loss: 3.465, avg. samples / sec: 1045.61
Iteration:  46280, Loss function: 3.202, Average Loss: 3.461, avg. samples / sec: 1015.38
:::MLLOG {"namespace": "", "time_ms": 1639477529879, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1639477529881, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 46, "current_iter_num": 46290}}
Iteration:  46300, Loss function: 3.622, Average Loss: 3.459, avg. samples / sec: 1036.65
Iteration:  46320, Loss function: 3.208, Average Loss: 3.455, avg. samples / sec: 1017.70
Iteration:  46340, Loss function: 3.544, Average Loss: 3.450, avg. samples / sec: 1021.48
Iteration:  46360, Loss function: 3.101, Average Loss: 3.449, avg. samples / sec: 965.92
Iteration:  46380, Loss function: 3.193, Average Loss: 3.445, avg. samples / sec: 971.02
Iteration:  46400, Loss function: 3.184, Average Loss: 3.441, avg. samples / sec: 968.85
Iteration:  46420, Loss function: 3.158, Average Loss: 3.438, avg. samples / sec: 1005.88
Iteration:  46440, Loss function: 3.408, Average Loss: 3.435, avg. samples / sec: 999.62
Iteration:  46460, Loss function: 2.953, Average Loss: 3.432, avg. samples / sec: 994.56
Iteration:  46480, Loss function: 3.295, Average Loss: 3.430, avg. samples / sec: 982.20
Iteration:  46500, Loss function: 3.456, Average Loss: 3.428, avg. samples / sec: 933.15
Iteration:  46520, Loss function: 3.255, Average Loss: 3.425, avg. samples / sec: 994.64
Iteration:  46540, Loss function: 3.372, Average Loss: 3.423, avg. samples / sec: 1013.98
Iteration:  46560, Loss function: 3.192, Average Loss: 3.421, avg. samples / sec: 970.23
Iteration:  46580, Loss function: 3.326, Average Loss: 3.419, avg. samples / sec: 1017.22
Iteration:  46600, Loss function: 3.416, Average Loss: 3.417, avg. samples / sec: 1012.54
Iteration:  46620, Loss function: 3.161, Average Loss: 3.414, avg. samples / sec: 1053.87
Iteration:  46640, Loss function: 3.484, Average Loss: 3.411, avg. samples / sec: 1067.78
Iteration:  46660, Loss function: 3.517, Average Loss: 3.408, avg. samples / sec: 917.82
Iteration:  46680, Loss function: 3.309, Average Loss: 3.405, avg. samples / sec: 1050.64
Iteration:  46700, Loss function: 3.151, Average Loss: 3.403, avg. samples / sec: 952.49
Iteration:  46720, Loss function: 3.521, Average Loss: 3.401, avg. samples / sec: 1037.07
Iteration:  46740, Loss function: 3.317, Average Loss: 3.398, avg. samples / sec: 964.17
Iteration:  46760, Loss function: 3.382, Average Loss: 3.395, avg. samples / sec: 986.17
Iteration:  46780, Loss function: 3.264, Average Loss: 3.393, avg. samples / sec: 1042.04
Iteration:  46800, Loss function: 2.955, Average Loss: 3.391, avg. samples / sec: 970.97
Iteration:  46820, Loss function: 3.307, Average Loss: 3.389, avg. samples / sec: 1016.17
Iteration:  46840, Loss function: 3.380, Average Loss: 3.389, avg. samples / sec: 1014.28
Iteration:  46860, Loss function: 3.411, Average Loss: 3.386, avg. samples / sec: 1020.91
Iteration:  46880, Loss function: 3.402, Average Loss: 3.384, avg. samples / sec: 1065.91
Iteration:  46900, Loss function: 3.159, Average Loss: 3.382, avg. samples / sec: 1074.54
Iteration:  46920, Loss function: 3.031, Average Loss: 3.379, avg. samples / sec: 1016.92
Iteration:  46940, Loss function: 3.241, Average Loss: 3.378, avg. samples / sec: 985.46
Iteration:  46960, Loss function: 3.496, Average Loss: 3.376, avg. samples / sec: 1058.52
Iteration:  46980, Loss function: 3.379, Average Loss: 3.374, avg. samples / sec: 1010.83
Iteration:  47000, Loss function: 3.002, Average Loss: 3.373, avg. samples / sec: 990.73
Iteration:  47020, Loss function: 3.482, Average Loss: 3.372, avg. samples / sec: 1056.71
Iteration:  47040, Loss function: 3.362, Average Loss: 3.370, avg. samples / sec: 1080.99
Iteration:  47060, Loss function: 3.470, Average Loss: 3.369, avg. samples / sec: 903.32
Iteration:  47080, Loss function: 3.303, Average Loss: 3.367, avg. samples / sec: 1021.26
Iteration:  47100, Loss function: 3.206, Average Loss: 3.365, avg. samples / sec: 929.21
Iteration:  47120, Loss function: 3.334, Average Loss: 3.362, avg. samples / sec: 991.34
Iteration:  47140, Loss function: 3.422, Average Loss: 3.361, avg. samples / sec: 989.52
Iteration:  47160, Loss function: 3.265, Average Loss: 3.359, avg. samples / sec: 1023.18
Iteration:  47180, Loss function: 3.129, Average Loss: 3.356, avg. samples / sec: 958.79
Iteration:  47200, Loss function: 3.174, Average Loss: 3.356, avg. samples / sec: 1024.25
Iteration:  47220, Loss function: 3.152, Average Loss: 3.353, avg. samples / sec: 1067.08
Iteration:  47240, Loss function: 3.302, Average Loss: 3.353, avg. samples / sec: 964.17
Iteration:  47260, Loss function: 3.387, Average Loss: 3.352, avg. samples / sec: 986.10
Iteration:  47280, Loss function: 3.407, Average Loss: 3.350, avg. samples / sec: 927.19
Iteration:  47300, Loss function: 3.618, Average Loss: 3.350, avg. samples / sec: 1013.49
:::MLLOG {"namespace": "", "time_ms": 1639477646968, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1639477646970, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 47, "current_iter_num": 47318}}
Iteration:  47320, Loss function: 3.285, Average Loss: 3.349, avg. samples / sec: 1050.59
Iteration:  47340, Loss function: 3.190, Average Loss: 3.347, avg. samples / sec: 1056.71
Iteration:  47360, Loss function: 3.225, Average Loss: 3.346, avg. samples / sec: 1007.60
Iteration:  47380, Loss function: 3.374, Average Loss: 3.345, avg. samples / sec: 1025.82
Iteration:  47400, Loss function: 3.263, Average Loss: 3.344, avg. samples / sec: 1041.57
Iteration:  47420, Loss function: 3.402, Average Loss: 3.342, avg. samples / sec: 1018.41
Iteration:  47440, Loss function: 3.039, Average Loss: 3.341, avg. samples / sec: 971.66
Iteration:  47460, Loss function: 3.421, Average Loss: 3.341, avg. samples / sec: 1069.22
Iteration:  47480, Loss function: 3.251, Average Loss: 3.339, avg. samples / sec: 1033.52
Iteration:  47500, Loss function: 3.303, Average Loss: 3.337, avg. samples / sec: 997.51
Iteration:  47520, Loss function: 3.033, Average Loss: 3.336, avg. samples / sec: 1010.09
Iteration:  47540, Loss function: 3.038, Average Loss: 3.334, avg. samples / sec: 1004.07
Iteration:  47560, Loss function: 2.930, Average Loss: 3.330, avg. samples / sec: 929.52
Iteration:  47580, Loss function: 3.266, Average Loss: 3.329, avg. samples / sec: 987.26
Iteration:  47600, Loss function: 3.345, Average Loss: 3.328, avg. samples / sec: 1034.58
Iteration:  47620, Loss function: 3.142, Average Loss: 3.327, avg. samples / sec: 1035.76
Iteration:  47640, Loss function: 3.293, Average Loss: 3.327, avg. samples / sec: 984.97
Iteration:  47660, Loss function: 3.197, Average Loss: 3.325, avg. samples / sec: 951.31
Iteration:  47680, Loss function: 3.483, Average Loss: 3.325, avg. samples / sec: 976.53
Iteration:  47700, Loss function: 3.322, Average Loss: 3.322, avg. samples / sec: 1009.30
Iteration:  47720, Loss function: 3.313, Average Loss: 3.320, avg. samples / sec: 997.77
Iteration:  47740, Loss function: 3.302, Average Loss: 3.319, avg. samples / sec: 983.90
Iteration:  47760, Loss function: 3.212, Average Loss: 3.318, avg. samples / sec: 1038.34
Iteration:  47780, Loss function: 3.260, Average Loss: 3.317, avg. samples / sec: 989.20
Iteration:  47800, Loss function: 3.540, Average Loss: 3.317, avg. samples / sec: 1037.35
Iteration:  47820, Loss function: 3.323, Average Loss: 3.315, avg. samples / sec: 975.82
Iteration:  47840, Loss function: 3.323, Average Loss: 3.315, avg. samples / sec: 1000.60
Iteration:  47860, Loss function: 3.525, Average Loss: 3.313, avg. samples / sec: 1014.10
Iteration:  47880, Loss function: 3.213, Average Loss: 3.313, avg. samples / sec: 967.54
Iteration:  47900, Loss function: 3.253, Average Loss: 3.312, avg. samples / sec: 1015.95
Iteration:  47920, Loss function: 3.035, Average Loss: 3.311, avg. samples / sec: 996.87
Iteration:  47940, Loss function: 3.041, Average Loss: 3.310, avg. samples / sec: 980.18
Iteration:  47960, Loss function: 3.290, Average Loss: 3.309, avg. samples / sec: 1040.60
Iteration:  47980, Loss function: 3.149, Average Loss: 3.307, avg. samples / sec: 1029.36
Iteration:  48000, Loss function: 3.094, Average Loss: 3.306, avg. samples / sec: 1038.23
Iteration:  48020, Loss function: 3.225, Average Loss: 3.306, avg. samples / sec: 1029.44
Iteration:  48040, Loss function: 3.199, Average Loss: 3.305, avg. samples / sec: 1058.00
Iteration:  48060, Loss function: 3.252, Average Loss: 3.304, avg. samples / sec: 971.89
Iteration:  48080, Loss function: 3.485, Average Loss: 3.304, avg. samples / sec: 1040.19
Iteration:  48100, Loss function: 3.189, Average Loss: 3.303, avg. samples / sec: 947.18
Iteration:  48120, Loss function: 3.276, Average Loss: 3.302, avg. samples / sec: 968.73
Iteration:  48140, Loss function: 3.216, Average Loss: 3.301, avg. samples / sec: 957.35
Iteration:  48160, Loss function: 3.207, Average Loss: 3.301, avg. samples / sec: 1041.24
Iteration:  48180, Loss function: 3.262, Average Loss: 3.299, avg. samples / sec: 1024.98
Iteration:  48200, Loss function: 3.130, Average Loss: 3.297, avg. samples / sec: 1054.73
Iteration:  48220, Loss function: 3.471, Average Loss: 3.297, avg. samples / sec: 1010.07
Iteration:  48240, Loss function: 3.307, Average Loss: 3.295, avg. samples / sec: 972.60
Iteration:  48260, Loss function: 3.423, Average Loss: 3.294, avg. samples / sec: 1004.81
Iteration:  48280, Loss function: 3.281, Average Loss: 3.292, avg. samples / sec: 981.59
Iteration:  48300, Loss function: 3.489, Average Loss: 3.293, avg. samples / sec: 987.17
Iteration:  48320, Loss function: 3.089, Average Loss: 3.292, avg. samples / sec: 939.51
Iteration:  48340, Loss function: 3.188, Average Loss: 3.290, avg. samples / sec: 961.87
:::MLLOG {"namespace": "", "time_ms": 1639477763856, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1639477763858, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 48, "current_iter_num": 48347}}
Iteration:  48360, Loss function: 3.129, Average Loss: 3.290, avg. samples / sec: 1050.79
Iteration:  48380, Loss function: 2.973, Average Loss: 3.288, avg. samples / sec: 1018.26
Iteration:  48400, Loss function: 3.231, Average Loss: 3.287, avg. samples / sec: 1038.17
Iteration:  48420, Loss function: 3.237, Average Loss: 3.285, avg. samples / sec: 1045.91
Iteration:  48440, Loss function: 3.097, Average Loss: 3.285, avg. samples / sec: 1039.18
Iteration:  48460, Loss function: 2.889, Average Loss: 3.284, avg. samples / sec: 973.30
Iteration:  48480, Loss function: 3.210, Average Loss: 3.282, avg. samples / sec: 1019.09
Iteration:  48500, Loss function: 3.190, Average Loss: 3.282, avg. samples / sec: 988.28
Iteration:  48520, Loss function: 3.182, Average Loss: 3.282, avg. samples / sec: 1071.11
Iteration:  48540, Loss function: 3.241, Average Loss: 3.281, avg. samples / sec: 1057.43
Iteration:  48560, Loss function: 3.274, Average Loss: 3.279, avg. samples / sec: 1006.90
Iteration:  48580, Loss function: 3.308, Average Loss: 3.279, avg. samples / sec: 1046.01
Iteration:  48600, Loss function: 3.237, Average Loss: 3.279, avg. samples / sec: 942.74
Iteration:  48620, Loss function: 3.308, Average Loss: 3.278, avg. samples / sec: 1008.64
Iteration:  48640, Loss function: 3.324, Average Loss: 3.275, avg. samples / sec: 924.84
Iteration:  48660, Loss function: 2.954, Average Loss: 3.274, avg. samples / sec: 1003.36
Iteration:  48680, Loss function: 3.535, Average Loss: 3.273, avg. samples / sec: 944.14
Iteration:  48700, Loss function: 3.127, Average Loss: 3.272, avg. samples / sec: 1016.82
Iteration:  48720, Loss function: 3.191, Average Loss: 3.273, avg. samples / sec: 1012.61
Iteration:  48740, Loss function: 3.469, Average Loss: 3.273, avg. samples / sec: 1044.68
Iteration:  48760, Loss function: 3.681, Average Loss: 3.274, avg. samples / sec: 991.12
Iteration:  48780, Loss function: 3.133, Average Loss: 3.274, avg. samples / sec: 966.76
Iteration:  48800, Loss function: 3.583, Average Loss: 3.273, avg. samples / sec: 1034.96
Iteration:  48820, Loss function: 3.156, Average Loss: 3.273, avg. samples / sec: 1001.62
Iteration:  48840, Loss function: 3.317, Average Loss: 3.274, avg. samples / sec: 980.38
Iteration:  48860, Loss function: 3.254, Average Loss: 3.273, avg. samples / sec: 1001.82
Iteration:  48880, Loss function: 2.975, Average Loss: 3.273, avg. samples / sec: 1003.98
Iteration:  48900, Loss function: 3.350, Average Loss: 3.271, avg. samples / sec: 1023.01
Iteration:  48920, Loss function: 3.411, Average Loss: 3.272, avg. samples / sec: 1085.39
Iteration:  48940, Loss function: 3.337, Average Loss: 3.272, avg. samples / sec: 1034.78
Iteration:  48960, Loss function: 3.416, Average Loss: 3.272, avg. samples / sec: 990.20
Iteration:  48980, Loss function: 3.186, Average Loss: 3.271, avg. samples / sec: 1067.11
Iteration:  49000, Loss function: 3.390, Average Loss: 3.270, avg. samples / sec: 1039.35
Iteration:  49020, Loss function: 3.002, Average Loss: 3.269, avg. samples / sec: 940.90
Iteration:  49040, Loss function: 3.264, Average Loss: 3.267, avg. samples / sec: 992.52
Iteration:  49060, Loss function: 3.433, Average Loss: 3.266, avg. samples / sec: 997.33
Iteration:  49080, Loss function: 3.465, Average Loss: 3.266, avg. samples / sec: 1010.11
Iteration:  49100, Loss function: 2.967, Average Loss: 3.265, avg. samples / sec: 1009.91
Iteration:  49120, Loss function: 3.220, Average Loss: 3.263, avg. samples / sec: 971.69
Iteration:  49140, Loss function: 3.357, Average Loss: 3.263, avg. samples / sec: 1035.05
Iteration:  49160, Loss function: 2.904, Average Loss: 3.262, avg. samples / sec: 1022.54
Iteration:  49180, Loss function: 3.448, Average Loss: 3.262, avg. samples / sec: 961.19
Iteration:  49200, Loss function: 3.124, Average Loss: 3.262, avg. samples / sec: 1031.93
Iteration:  49220, Loss function: 2.903, Average Loss: 3.263, avg. samples / sec: 1029.77
Iteration:  49240, Loss function: 3.272, Average Loss: 3.262, avg. samples / sec: 899.48
Iteration:  49260, Loss function: 3.402, Average Loss: 3.261, avg. samples / sec: 1037.26
Iteration:  49280, Loss function: 3.310, Average Loss: 3.261, avg. samples / sec: 999.27
Iteration:  49300, Loss function: 3.147, Average Loss: 3.259, avg. samples / sec: 1021.09
Iteration:  49320, Loss function: 3.282, Average Loss: 3.259, avg. samples / sec: 963.85
Iteration:  49340, Loss function: 3.216, Average Loss: 3.259, avg. samples / sec: 1019.01
Iteration:  49360, Loss function: 3.289, Average Loss: 3.258, avg. samples / sec: 1021.18
:::MLLOG {"namespace": "", "time_ms": 1639477880427, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1639477880428, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 49, "current_iter_num": 49376}}
Iteration:  49380, Loss function: 3.341, Average Loss: 3.258, avg. samples / sec: 1005.78
Iteration:  49400, Loss function: 3.242, Average Loss: 3.257, avg. samples / sec: 1059.11
Iteration:  49420, Loss function: 3.071, Average Loss: 3.256, avg. samples / sec: 937.11
Iteration:  49440, Loss function: 3.065, Average Loss: 3.255, avg. samples / sec: 990.35
Iteration:  49460, Loss function: 3.147, Average Loss: 3.254, avg. samples / sec: 955.32
Iteration:  49480, Loss function: 3.182, Average Loss: 3.252, avg. samples / sec: 904.28
Iteration:  49500, Loss function: 3.222, Average Loss: 3.251, avg. samples / sec: 1012.01
Iteration:  49520, Loss function: 3.179, Average Loss: 3.252, avg. samples / sec: 1012.53
Iteration:  49540, Loss function: 3.281, Average Loss: 3.252, avg. samples / sec: 964.94
Iteration:  49560, Loss function: 3.196, Average Loss: 3.251, avg. samples / sec: 997.19
Iteration:  49580, Loss function: 3.366, Average Loss: 3.250, avg. samples / sec: 969.73
Iteration:  49600, Loss function: 3.211, Average Loss: 3.251, avg. samples / sec: 1041.99
Iteration:  49620, Loss function: 3.514, Average Loss: 3.250, avg. samples / sec: 1035.53
Iteration:  49640, Loss function: 3.128, Average Loss: 3.251, avg. samples / sec: 999.40
Iteration:  49660, Loss function: 3.458, Average Loss: 3.249, avg. samples / sec: 1045.65
Iteration:  49680, Loss function: 3.105, Average Loss: 3.249, avg. samples / sec: 1014.99
Iteration:  49700, Loss function: 3.333, Average Loss: 3.248, avg. samples / sec: 1051.13
Iteration:  49720, Loss function: 3.259, Average Loss: 3.247, avg. samples / sec: 981.45
Iteration:  49740, Loss function: 3.260, Average Loss: 3.247, avg. samples / sec: 954.80
Iteration:  49760, Loss function: 2.922, Average Loss: 3.246, avg. samples / sec: 922.29
Iteration:  49780, Loss function: 3.205, Average Loss: 3.246, avg. samples / sec: 1047.76
Iteration:  49800, Loss function: 2.980, Average Loss: 3.246, avg. samples / sec: 1039.53
Iteration:  49820, Loss function: 3.199, Average Loss: 3.246, avg. samples / sec: 1004.77
Iteration:  49840, Loss function: 3.146, Average Loss: 3.245, avg. samples / sec: 1042.72
Iteration:  49860, Loss function: 3.327, Average Loss: 3.245, avg. samples / sec: 991.44
Iteration:  49880, Loss function: 3.267, Average Loss: 3.245, avg. samples / sec: 1020.10
Iteration:  49900, Loss function: 3.237, Average Loss: 3.244, avg. samples / sec: 1013.68
Iteration:  49920, Loss function: 3.416, Average Loss: 3.245, avg. samples / sec: 995.18
Iteration:  49940, Loss function: 3.303, Average Loss: 3.244, avg. samples / sec: 998.31
Iteration:  49960, Loss function: 3.120, Average Loss: 3.245, avg. samples / sec: 922.48
Iteration:  49980, Loss function: 3.325, Average Loss: 3.243, avg. samples / sec: 1022.56
Iteration:  50000, Loss function: 3.318, Average Loss: 3.243, avg. samples / sec: 987.96
Iteration:  50020, Loss function: 2.905, Average Loss: 3.243, avg. samples / sec: 1062.88
Iteration:  50040, Loss function: 3.231, Average Loss: 3.242, avg. samples / sec: 983.64
Iteration:  50060, Loss function: 3.081, Average Loss: 3.242, avg. samples / sec: 1066.56
Iteration:  50080, Loss function: 3.020, Average Loss: 3.241, avg. samples / sec: 978.30
Iteration:  50100, Loss function: 3.405, Average Loss: 3.240, avg. samples / sec: 1033.71
Iteration:  50120, Loss function: 3.596, Average Loss: 3.240, avg. samples / sec: 999.90
Iteration:  50140, Loss function: 3.117, Average Loss: 3.239, avg. samples / sec: 1021.20
Iteration:  50160, Loss function: 3.413, Average Loss: 3.238, avg. samples / sec: 950.36
Iteration:  50180, Loss function: 3.084, Average Loss: 3.239, avg. samples / sec: 935.85
Iteration:  50200, Loss function: 3.191, Average Loss: 3.238, avg. samples / sec: 1018.42
Iteration:  50220, Loss function: 3.080, Average Loss: 3.236, avg. samples / sec: 995.94
Iteration:  50240, Loss function: 3.149, Average Loss: 3.236, avg. samples / sec: 1029.96
Iteration:  50260, Loss function: 3.123, Average Loss: 3.237, avg. samples / sec: 944.18
Iteration:  50280, Loss function: 3.318, Average Loss: 3.236, avg. samples / sec: 1055.45
Iteration:  50300, Loss function: 3.470, Average Loss: 3.236, avg. samples / sec: 1041.00
Iteration:  50320, Loss function: 3.293, Average Loss: 3.236, avg. samples / sec: 995.96
Iteration:  50340, Loss function: 3.469, Average Loss: 3.235, avg. samples / sec: 976.36
Iteration:  50360, Loss function: 3.152, Average Loss: 3.234, avg. samples / sec: 1023.49
Iteration:  50380, Loss function: 3.247, Average Loss: 3.233, avg. samples / sec: 1012.91
Iteration:  50400, Loss function: 3.689, Average Loss: 3.233, avg. samples / sec: 958.80
:::MLLOG {"namespace": "", "time_ms": 1639477997770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1639477997772, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 50, "current_iter_num": 50404}}
Iteration:  50420, Loss function: 3.342, Average Loss: 3.233, avg. samples / sec: 987.77
Iteration:  50440, Loss function: 3.318, Average Loss: 3.232, avg. samples / sec: 1023.79
Iteration:  50460, Loss function: 3.174, Average Loss: 3.231, avg. samples / sec: 1016.60
Iteration:  50480, Loss function: 2.999, Average Loss: 3.231, avg. samples / sec: 983.68
Iteration:  50500, Loss function: 3.344, Average Loss: 3.231, avg. samples / sec: 1000.27
Iteration:  50520, Loss function: 3.118, Average Loss: 3.232, avg. samples / sec: 948.96
Iteration:  50540, Loss function: 3.163, Average Loss: 3.231, avg. samples / sec: 1011.38
Iteration:  50560, Loss function: 3.035, Average Loss: 3.230, avg. samples / sec: 990.40
Iteration:  50580, Loss function: 3.565, Average Loss: 3.230, avg. samples / sec: 950.98
Iteration:  50600, Loss function: 2.813, Average Loss: 3.229, avg. samples / sec: 947.12
Iteration:  50620, Loss function: 3.136, Average Loss: 3.228, avg. samples / sec: 948.04
Iteration:  50640, Loss function: 3.207, Average Loss: 3.228, avg. samples / sec: 975.86
Iteration:  50660, Loss function: 3.274, Average Loss: 3.227, avg. samples / sec: 1016.02
Iteration:  50680, Loss function: 3.367, Average Loss: 3.227, avg. samples / sec: 1003.93
Iteration:  50700, Loss function: 3.163, Average Loss: 3.228, avg. samples / sec: 936.37
Iteration:  50720, Loss function: 3.110, Average Loss: 3.227, avg. samples / sec: 1055.90
Iteration:  50740, Loss function: 3.099, Average Loss: 3.226, avg. samples / sec: 1016.36
Iteration:  50760, Loss function: 3.559, Average Loss: 3.226, avg. samples / sec: 980.74
Iteration:  50780, Loss function: 3.018, Average Loss: 3.226, avg. samples / sec: 1004.25
Iteration:  50800, Loss function: 2.991, Average Loss: 3.226, avg. samples / sec: 1019.83
Iteration:  50820, Loss function: 3.284, Average Loss: 3.227, avg. samples / sec: 977.30
Iteration:  50840, Loss function: 3.126, Average Loss: 3.227, avg. samples / sec: 1001.15
Iteration:  50860, Loss function: 3.203, Average Loss: 3.225, avg. samples / sec: 966.44
Iteration:  50880, Loss function: 3.187, Average Loss: 3.226, avg. samples / sec: 959.53
Iteration:  50900, Loss function: 3.343, Average Loss: 3.227, avg. samples / sec: 989.94
Iteration:  50920, Loss function: 3.243, Average Loss: 3.226, avg. samples / sec: 1076.68
Iteration:  50940, Loss function: 3.273, Average Loss: 3.226, avg. samples / sec: 965.40
Iteration:  50960, Loss function: 3.419, Average Loss: 3.224, avg. samples / sec: 925.51
Iteration:  50980, Loss function: 2.888, Average Loss: 3.224, avg. samples / sec: 1041.91
Iteration:  51000, Loss function: 2.996, Average Loss: 3.224, avg. samples / sec: 998.58
Iteration:  51020, Loss function: 3.159, Average Loss: 3.225, avg. samples / sec: 1037.81
Iteration:  51040, Loss function: 3.158, Average Loss: 3.226, avg. samples / sec: 1017.55
Iteration:  51060, Loss function: 3.055, Average Loss: 3.226, avg. samples / sec: 1022.50
Iteration:  51080, Loss function: 2.987, Average Loss: 3.225, avg. samples / sec: 1040.80
Iteration:  51100, Loss function: 3.132, Average Loss: 3.225, avg. samples / sec: 1032.21
Iteration:  51120, Loss function: 3.463, Average Loss: 3.226, avg. samples / sec: 972.96
Iteration:  51140, Loss function: 3.385, Average Loss: 3.225, avg. samples / sec: 972.21
Iteration:  51160, Loss function: 3.524, Average Loss: 3.226, avg. samples / sec: 1047.92
Iteration:  51180, Loss function: 3.292, Average Loss: 3.225, avg. samples / sec: 1044.99
Iteration:  51200, Loss function: 3.266, Average Loss: 3.224, avg. samples / sec: 1038.59
Iteration:  51220, Loss function: 3.179, Average Loss: 3.223, avg. samples / sec: 1029.66
Iteration:  51240, Loss function: 3.311, Average Loss: 3.222, avg. samples / sec: 1029.00
Iteration:  51260, Loss function: 3.377, Average Loss: 3.223, avg. samples / sec: 1081.81
Iteration:  51280, Loss function: 2.928, Average Loss: 3.223, avg. samples / sec: 1013.81
Iteration:  51300, Loss function: 3.175, Average Loss: 3.222, avg. samples / sec: 1006.17
Iteration:  51320, Loss function: 3.441, Average Loss: 3.224, avg. samples / sec: 1106.61
Iteration:  51340, Loss function: 3.044, Average Loss: 3.223, avg. samples / sec: 967.57
Iteration:  51360, Loss function: 3.077, Average Loss: 3.222, avg. samples / sec: 1036.33
Iteration:  51380, Loss function: 3.213, Average Loss: 3.222, avg. samples / sec: 1030.09
Iteration:  51400, Loss function: 3.207, Average Loss: 3.221, avg. samples / sec: 968.02
Iteration:  51420, Loss function: 3.205, Average Loss: 3.221, avg. samples / sec: 983.93
:::MLLOG {"namespace": "", "time_ms": 1639478114689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 50}}
Predicting Ended, total time: 35.99 s
:::MLLOG {"namespace": "", "time_ms": 1639478150703, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639478150794, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 51, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639478150795, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 51, "current_iter_num": 51433}}
Loading and preparing results...
Iteration:  51440, Loss function: 3.160, Average Loss: 3.221, avg. samples / sec: 59.81
DONE (t=1.33s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  51460, Loss function: 2.985, Average Loss: 3.219, avg. samples / sec: 1188.99
Iteration:  51480, Loss function: 3.022, Average Loss: 3.218, avg. samples / sec: 1195.26
Iteration:  51500, Loss function: 2.967, Average Loss: 3.217, avg. samples / sec: 1209.06
DONE (t=5.14s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23708
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.40318
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24075
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32183
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22673
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.33136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.34874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.34874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.23708 AP goal: 0.23000
Iteration:  51520, Loss function: 3.160, Average Loss: 3.216, avg. samples / sec: 1207.95
:::MLLOG {"namespace": "", "time_ms": 1639478159177, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159178, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23708266132505, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159178, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639478159390, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
++ date +%s
+ end=1639478161
++ date '+%Y-%m-%d %r'
+ end_fmt='2021-12-14 10:36:01 AM'
+ echo 'START TIMING RUN WAS 2021-12-14 08:56:29 AM'
START TIMING RUN WAS 2021-12-14 08:56:29 AM
ENDING TIMING RUN AT 2021-12-14 10:36:01 AM
+ echo 'ENDING TIMING RUN AT 2021-12-14 10:36:01 AM'
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-4dd97325-7fe6-abf1-d6a9-ba746fe0fdab)
+ result=5972
+ result_name=SINGLE_STAGE_DETECTOR
RESULT,SINGLE_STAGE_DETECTOR,,5972,nvidia,2021-12-14 08:56:29 AM
ALL FINISHED GPU: 1 x full x 8 Pods
+ echo 'RESULT,SINGLE_STAGE_DETECTOR,,5972,nvidia,2021-12-14 08:56:29 AM'
+ echo 'ALL FINISHED GPU: 1 x full x 8 Pods'
