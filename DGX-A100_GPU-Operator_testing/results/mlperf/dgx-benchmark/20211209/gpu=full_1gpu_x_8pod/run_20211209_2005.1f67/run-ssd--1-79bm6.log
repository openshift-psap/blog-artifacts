+ test -f /etc/shinit_v2
+ source /etc/shinit_v2
+++ sed -n 's/^NVRM.*Kernel Module *\([^() ]*\).*$/\1/p' /proc/driver/nvidia/version
+++ sed 's/^$/unknown/'
++ NV_DRIVER_VERS=470.82.01
++ export _CUDA_COMPAT_PATH=/usr/local/cuda/compat
++ _CUDA_COMPAT_PATH=/usr/local/cuda/compat
+++ hostname
++ _CUDA_COMPAT_CHECKFILE=/usr/local/cuda/compat/.470.82.01.run-ssd--1-79bm6.checked
++ _CUDA_COMPAT_REALLIB=/usr/local/cuda/compat/lib.real
++ _CUDA_COMPAT_SYMLINK=/usr/local/cuda/compat/lib
++ '[' -n 470.82.01 -a -e /dev/nvidiactl -a '!' -e /usr/local/cuda/compat/.470.82.01.run-ssd--1-79bm6.checked ']'
++ touch /usr/local/cuda/compat/.470.82.01.run-ssd--1-79bm6.checked
++ rm -f /usr/local/cuda/compat/lib
++ TIMEOUT=35
+++ LD_LIBRARY_PATH=/usr/local/cuda/compat/lib.real
+++ timeout -s KILL 35 /usr/local/bin/cudaCheck
++ export '_CUDA_COMPAT_STATUS=CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ _CUDA_COMPAT_STATUS='CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ export '_CUDA_COMPAT_STATUS=CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ _CUDA_COMPAT_STATUS='CUDA Driver UNAVAILABLE (cuInit(0) returned 100)'
++ '[' 'CUDA Driver UNAVAILABLE (cuInit(0) returned 100)' = 'CUDA Driver OK' ']'
++ unset _CUDA_COMPAT_CHECKFILE
++ unset _CUDA_COMPAT_REALLIB
++ unset _CUDA_COMPAT_SYMLINK
+ '[' -z '' ']'
+ return
+ export NCCL_DEBUG=INFO
+ NCCL_DEBUG=INFO
+ set -e
+ set -x
+ set -o pipefail
+ set -o nounset
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-c9297a60-5079-9a56-b935-51e08dc0f65e)
++ nvidia-smi -L
++ grep 'UUID: MIG-'
++ wc -l
++ true
+ NB_GPUS=0
+ [[ 0 == 0 ]]
++ nvidia-smi -L
++ grep 'UUID: GPU'
++ cut '-d ' -f6
++ cut '-d)' -f1
+ ALL_GPUS=GPU-c9297a60-5079-9a56-b935-51e08dc0f65e
++ nvidia-smi -L
++ grep 'UUID: GPU'
++ wc -l
+ NB_GPUS=1
+ MIG_MODE=0
+ [[ full != \f\u\l\l ]]
No MIG GPU available, using the full GPUs (GPU-c9297a60-5079-9a56-b935-51e08dc0f65e).
+ echo 'No MIG GPU available, using the full GPUs (GPU-c9297a60-5079-9a56-b935-51e08dc0f65e).'
+ [[ 1 != 1 ]]
+ SSD_THRESHOLD=0.23
++ date +%s
+ start=1639126587
++ date '+%Y-%m-%d %r'
+ start_fmt='2021-12-10 08:56:27 AM'
STARTING TIMING RUN AT 2021-12-10 08:56:27 AM GPU: 1 x full x 8 Pods
running benchmark
+ echo 'STARTING TIMING RUN AT 2021-12-10 08:56:27 AM GPU: 1 x full x 8 Pods'
+ set -x
+ NUMEPOCHS=80
+ echo 'running benchmark'
+ export DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ export TORCH_HOME=/data/coco2017/torchvision
+ TORCH_HOME=/data/coco2017/torchvision
Running in multi-gpu mode.
Patching 'bind_launch.py' to err-exit on failure ...
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_val2017.json ']'
+ '[' '!' -f /data/coco2017/annotations/bbox_only_instances_train2017.json ']'
+ EXTRA_PARAMS='--batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4'
+ DGXNSOCKET=1
+ DGXSOCKETCORES=8
+ [[ 0 == \1 ]]
+ DGXNGPU=1
+ echo 'Running in multi-gpu mode.'
+ declare -a CMD
+ echo 'Patching '\''bind_launch.py'\'' to err-exit on failure ...'
+ sed 's/process.wait()/if process.wait(): sys.exit(1)/' -i bind_launch.py
+ CMD=('python' '-u' '-m' 'bind_launch' "--nsockets_per_node=${DGXNSOCKET}" "--ncores_per_socket=${DGXSOCKETCORES}" "--nproc_per_node=${DGXNGPU}")
+ declare -a ARGS
+ ARGS=(train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs "${NUMEPOCHS}" --warmup-factor 0 --no-save --threshold=${SSD_THRESHOLD} --data ${DATASET_DIR} ${EXTRA_PARAMS})
+ [[ run == \f\a\s\t ]]
+ [[ run == \d\r\y ]]
+ trap 'date; echo failed; exit 1' ERR
+ [[ n != \y ]]
+ SYNC_DIR=/data/coco2017/sync
+ mkdir -p /data/coco2017/sync
+ for sync_f in "$SYNC_DIR/"*
+ [[ /data/coco2017/sync/2021-12-10_03-55-51 != \/\d\a\t\a\/\c\o\c\o\2\0\1\7\/\s\y\n\c\/\2\0\2\1\-\1\2\-\1\0\_\0\3\-\5\5\-\5\1 ]]
+ set +x
Fri Dec 10 08:56:27 UTC 2021 Waiting for all the 8 Pods to start ...
Adding run-ssd--1-79bm6 to the sync file ...
run-ssd--1-79bm6 Found 7 Pods, waiting to have 8 ...
     1	run-ssd--1-tf97l
     2	run-ssd--1-rmn6l
     3	run-ssd--1-bs59t
     4	run-ssd--1-bsprc
     5	run-ssd--1-jwb26
     6	run-ssd--1-chzc6
     7	run-ssd--1-79bm6
Fri Dec 10 08:56:32 UTC 2021 All the 8 Pods are running, launch the GPU workload.
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-c9297a60-5079-9a56-b935-51e08dc0f65e)
+ [[ 0 == 1 ]]
+ dest=/tmp/ssd_all.log
+ [[ 0 == 1 ]]
+ echo 'Running on all the 1 GPUs '
Running on all the 1 GPUs 
+ python -u -m bind_launch --nsockets_per_node=1 --ncores_per_socket=8 --nproc_per_node=1 train.py --use-fp16 --nhwc --pad-input --jit --delay-allreduce --opt-loss --epochs 80 --warmup-factor 0 --no-save --threshold=0.23 --data /data/coco2017 --batch-size=114 --warmup=650 --lr=3.2e-3 --wd=1.3e-4
+ tee -a /tmp/ssd_all.log
:::MLLOG {"namespace": "", "time_ms": 1639126594754, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639126594934, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3050714226, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 3050714226
/opt/conda/lib/python3.6/site-packages/torch/nn/_reduction.py:44: UserWarning: size_average and reduce args will be deprecated, please use reduction='none' instead.
  warnings.warn(warning.format(ret))
:::MLLOG {"namespace": "", "time_ms": 1639126596602, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639126596603, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639126596608, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639126596608, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639126620373, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639126620373, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
[/opt/dali/dali/operators/image/crop/bbox_crop.cc:348] WARNING: `ltrb` is deprecated. Please use `bbox_layout` to specify the format of the bounding box. E.g. For 2D bounding boxes, `ltrb=True`` is equivalent to `bbox_layout="xyXY"`, and `ltrb=False` is equivalent to `bbox_layout="xyWH"`
:::MLLOG {"namespace": "", "time_ms": 1639126622005, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639126622006, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.18s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639126622340, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639126622341, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639126622342, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.917, Average Loss: 0.023, avg. samples / sec: 4.48
Iteration:     20, Loss function: 20.969, Average Loss: 0.457, avg. samples / sec: 917.80
Iteration:     40, Loss function: 20.846, Average Loss: 0.859, avg. samples / sec: 932.81
Iteration:     60, Loss function: 20.429, Average Loss: 1.250, avg. samples / sec: 960.96
Iteration:     80, Loss function: 20.220, Average Loss: 1.625, avg. samples / sec: 912.18
Iteration:    100, Loss function: 16.357, Average Loss: 1.960, avg. samples / sec: 926.03
Iteration:    120, Loss function: 11.524, Average Loss: 2.176, avg. samples / sec: 925.73
Iteration:    140, Loss function: 9.888, Average Loss: 2.341, avg. samples / sec: 1023.86
Iteration:    160, Loss function: 9.238, Average Loss: 2.484, avg. samples / sec: 979.75
Iteration:    180, Loss function: 9.037, Average Loss: 2.614, avg. samples / sec: 978.89
Iteration:    200, Loss function: 8.645, Average Loss: 2.739, avg. samples / sec: 1020.30
Iteration:    220, Loss function: 8.530, Average Loss: 2.858, avg. samples / sec: 941.90
Iteration:    240, Loss function: 8.658, Average Loss: 2.974, avg. samples / sec: 1003.89
Iteration:    260, Loss function: 8.763, Average Loss: 3.086, avg. samples / sec: 1022.38
Iteration:    280, Loss function: 8.925, Average Loss: 3.198, avg. samples / sec: 991.60
Iteration:    300, Loss function: 8.418, Average Loss: 3.303, avg. samples / sec: 1012.87
Iteration:    320, Loss function: 8.340, Average Loss: 3.403, avg. samples / sec: 940.82
Iteration:    340, Loss function: 8.268, Average Loss: 3.500, avg. samples / sec: 942.10
Iteration:    360, Loss function: 7.854, Average Loss: 3.591, avg. samples / sec: 992.26
Iteration:    380, Loss function: 7.728, Average Loss: 3.679, avg. samples / sec: 1013.05
Iteration:    400, Loss function: 7.911, Average Loss: 3.763, avg. samples / sec: 713.77
Iteration:    420, Loss function: 7.672, Average Loss: 3.843, avg. samples / sec: 1043.87
Iteration:    440, Loss function: 7.770, Average Loss: 3.920, avg. samples / sec: 1022.03
Iteration:    460, Loss function: 7.602, Average Loss: 3.995, avg. samples / sec: 964.90
Iteration:    480, Loss function: 7.391, Average Loss: 4.067, avg. samples / sec: 993.74
Iteration:    500, Loss function: 7.445, Average Loss: 4.136, avg. samples / sec: 936.47
Iteration:    520, Loss function: 7.732, Average Loss: 4.204, avg. samples / sec: 980.83
Iteration:    540, Loss function: 7.555, Average Loss: 4.272, avg. samples / sec: 1049.91
Iteration:    560, Loss function: 7.086, Average Loss: 4.334, avg. samples / sec: 947.96
Iteration:    580, Loss function: 7.190, Average Loss: 4.394, avg. samples / sec: 1008.05
Iteration:    600, Loss function: 7.439, Average Loss: 4.454, avg. samples / sec: 1068.40
Iteration:    620, Loss function: 6.884, Average Loss: 4.509, avg. samples / sec: 1007.90
Iteration:    640, Loss function: 6.898, Average Loss: 4.562, avg. samples / sec: 1050.01
Iteration:    660, Loss function: 7.054, Average Loss: 4.615, avg. samples / sec: 1021.08
Iteration:    680, Loss function: 7.285, Average Loss: 4.667, avg. samples / sec: 1018.69
Iteration:    700, Loss function: 6.814, Average Loss: 4.716, avg. samples / sec: 1056.42
Iteration:    720, Loss function: 7.005, Average Loss: 4.764, avg. samples / sec: 1040.09
Iteration:    740, Loss function: 6.896, Average Loss: 4.808, avg. samples / sec: 1008.54
Iteration:    760, Loss function: 7.004, Average Loss: 4.851, avg. samples / sec: 1052.95
Iteration:    780, Loss function: 6.618, Average Loss: 4.893, avg. samples / sec: 1023.37
Iteration:    800, Loss function: 7.066, Average Loss: 4.932, avg. samples / sec: 979.10
Iteration:    820, Loss function: 6.772, Average Loss: 4.969, avg. samples / sec: 955.77
Iteration:    840, Loss function: 6.789, Average Loss: 5.004, avg. samples / sec: 1025.62
Iteration:    860, Loss function: 6.820, Average Loss: 5.038, avg. samples / sec: 987.24
Iteration:    880, Loss function: 6.570, Average Loss: 5.070, avg. samples / sec: 1039.13
Iteration:    900, Loss function: 6.779, Average Loss: 5.101, avg. samples / sec: 984.55
Iteration:    920, Loss function: 6.527, Average Loss: 5.130, avg. samples / sec: 1010.03
Iteration:    940, Loss function: 6.794, Average Loss: 5.160, avg. samples / sec: 1029.79
Iteration:    960, Loss function: 6.552, Average Loss: 5.189, avg. samples / sec: 990.05
Iteration:    980, Loss function: 6.552, Average Loss: 5.216, avg. samples / sec: 931.26
Iteration:   1000, Loss function: 6.697, Average Loss: 5.242, avg. samples / sec: 1042.40
Iteration:   1020, Loss function: 6.284, Average Loss: 5.265, avg. samples / sec: 1064.07
:::MLLOG {"namespace": "", "time_ms": 1639126741290, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639126741291, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.536, Average Loss: 5.289, avg. samples / sec: 961.90
Iteration:   1060, Loss function: 6.307, Average Loss: 5.312, avg. samples / sec: 1082.73
Iteration:   1080, Loss function: 6.381, Average Loss: 5.334, avg. samples / sec: 963.30
Iteration:   1100, Loss function: 6.197, Average Loss: 5.353, avg. samples / sec: 1037.10
Iteration:   1120, Loss function: 6.201, Average Loss: 5.373, avg. samples / sec: 1052.64
Iteration:   1140, Loss function: 6.298, Average Loss: 5.392, avg. samples / sec: 1019.70
Iteration:   1160, Loss function: 6.149, Average Loss: 5.409, avg. samples / sec: 1038.89
Iteration:   1180, Loss function: 6.309, Average Loss: 5.425, avg. samples / sec: 1095.55
Iteration:   1200, Loss function: 6.147, Average Loss: 5.441, avg. samples / sec: 1027.53
Iteration:   1220, Loss function: 6.161, Average Loss: 5.457, avg. samples / sec: 1015.85
Iteration:   1240, Loss function: 6.057, Average Loss: 5.469, avg. samples / sec: 1072.92
Iteration:   1260, Loss function: 6.085, Average Loss: 5.481, avg. samples / sec: 1060.61
Iteration:   1280, Loss function: 6.008, Average Loss: 5.493, avg. samples / sec: 998.82
Iteration:   1300, Loss function: 6.081, Average Loss: 5.506, avg. samples / sec: 928.23
Iteration:   1320, Loss function: 6.105, Average Loss: 5.518, avg. samples / sec: 1000.78
Iteration:   1340, Loss function: 5.922, Average Loss: 5.527, avg. samples / sec: 1037.47
Iteration:   1360, Loss function: 6.021, Average Loss: 5.537, avg. samples / sec: 984.52
Iteration:   1380, Loss function: 6.355, Average Loss: 5.546, avg. samples / sec: 1000.50
Iteration:   1400, Loss function: 6.143, Average Loss: 5.554, avg. samples / sec: 985.23
Iteration:   1420, Loss function: 5.904, Average Loss: 5.562, avg. samples / sec: 958.36
Iteration:   1440, Loss function: 6.245, Average Loss: 5.570, avg. samples / sec: 946.93
Iteration:   1460, Loss function: 6.055, Average Loss: 5.578, avg. samples / sec: 1053.11
Iteration:   1480, Loss function: 5.827, Average Loss: 5.586, avg. samples / sec: 1014.96
Iteration:   1500, Loss function: 6.008, Average Loss: 5.594, avg. samples / sec: 1068.25
Iteration:   1520, Loss function: 6.107, Average Loss: 5.600, avg. samples / sec: 912.68
Iteration:   1540, Loss function: 5.944, Average Loss: 5.604, avg. samples / sec: 1013.69
Iteration:   1560, Loss function: 5.644, Average Loss: 5.609, avg. samples / sec: 973.77
Iteration:   1580, Loss function: 5.510, Average Loss: 5.613, avg. samples / sec: 990.39
Iteration:   1600, Loss function: 6.240, Average Loss: 5.620, avg. samples / sec: 1005.58
Iteration:   1620, Loss function: 5.810, Average Loss: 5.625, avg. samples / sec: 968.80
Iteration:   1640, Loss function: 6.082, Average Loss: 5.628, avg. samples / sec: 968.96
Iteration:   1660, Loss function: 5.785, Average Loss: 5.633, avg. samples / sec: 1043.74
Iteration:   1680, Loss function: 5.732, Average Loss: 5.636, avg. samples / sec: 1003.20
Iteration:   1700, Loss function: 5.524, Average Loss: 5.639, avg. samples / sec: 1031.77
Iteration:   1720, Loss function: 5.666, Average Loss: 5.641, avg. samples / sec: 945.06
Iteration:   1740, Loss function: 5.857, Average Loss: 5.643, avg. samples / sec: 1040.42
Iteration:   1760, Loss function: 5.555, Average Loss: 5.644, avg. samples / sec: 970.73
Iteration:   1780, Loss function: 5.682, Average Loss: 5.645, avg. samples / sec: 1006.87
Iteration:   1800, Loss function: 5.568, Average Loss: 5.647, avg. samples / sec: 1049.88
Iteration:   1820, Loss function: 5.940, Average Loss: 5.649, avg. samples / sec: 1078.89
Iteration:   1840, Loss function: 5.909, Average Loss: 5.649, avg. samples / sec: 1055.53
Iteration:   1860, Loss function: 5.632, Average Loss: 5.648, avg. samples / sec: 980.94
Iteration:   1880, Loss function: 5.793, Average Loss: 5.650, avg. samples / sec: 1072.19
Iteration:   1900, Loss function: 5.827, Average Loss: 5.650, avg. samples / sec: 1024.99
Iteration:   1920, Loss function: 5.866, Average Loss: 5.650, avg. samples / sec: 991.82
Iteration:   1940, Loss function: 5.897, Average Loss: 5.649, avg. samples / sec: 1021.53
Iteration:   1960, Loss function: 5.524, Average Loss: 5.648, avg. samples / sec: 996.85
Iteration:   1980, Loss function: 5.809, Average Loss: 5.648, avg. samples / sec: 963.57
Iteration:   2000, Loss function: 5.634, Average Loss: 5.648, avg. samples / sec: 1001.78
Iteration:   2020, Loss function: 5.502, Average Loss: 5.646, avg. samples / sec: 975.23
Iteration:   2040, Loss function: 5.473, Average Loss: 5.645, avg. samples / sec: 992.03
:::MLLOG {"namespace": "", "time_ms": 1639126857781, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639126857783, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.570, Average Loss: 5.644, avg. samples / sec: 988.48
Iteration:   2080, Loss function: 5.110, Average Loss: 5.641, avg. samples / sec: 1080.23
Iteration:   2100, Loss function: 5.399, Average Loss: 5.639, avg. samples / sec: 999.89
Iteration:   2120, Loss function: 5.459, Average Loss: 5.637, avg. samples / sec: 999.96
Iteration:   2140, Loss function: 5.443, Average Loss: 5.634, avg. samples / sec: 931.27
Iteration:   2160, Loss function: 5.492, Average Loss: 5.632, avg. samples / sec: 924.45
Iteration:   2180, Loss function: 5.211, Average Loss: 5.629, avg. samples / sec: 975.63
Iteration:   2200, Loss function: 5.746, Average Loss: 5.626, avg. samples / sec: 1059.78
Iteration:   2220, Loss function: 5.712, Average Loss: 5.623, avg. samples / sec: 1014.23
Iteration:   2240, Loss function: 5.357, Average Loss: 5.621, avg. samples / sec: 985.38
Iteration:   2260, Loss function: 5.212, Average Loss: 5.617, avg. samples / sec: 1011.94
Iteration:   2280, Loss function: 5.411, Average Loss: 5.614, avg. samples / sec: 967.49
Iteration:   2300, Loss function: 5.097, Average Loss: 5.611, avg. samples / sec: 956.00
Iteration:   2320, Loss function: 5.250, Average Loss: 5.609, avg. samples / sec: 1007.23
Iteration:   2340, Loss function: 5.528, Average Loss: 5.605, avg. samples / sec: 994.67
Iteration:   2360, Loss function: 5.429, Average Loss: 5.601, avg. samples / sec: 953.73
Iteration:   2380, Loss function: 5.267, Average Loss: 5.598, avg. samples / sec: 984.09
Iteration:   2400, Loss function: 5.759, Average Loss: 5.595, avg. samples / sec: 1024.99
Iteration:   2420, Loss function: 5.437, Average Loss: 5.591, avg. samples / sec: 987.72
Iteration:   2440, Loss function: 5.412, Average Loss: 5.588, avg. samples / sec: 1044.10
Iteration:   2460, Loss function: 5.352, Average Loss: 5.584, avg. samples / sec: 992.46
Iteration:   2480, Loss function: 5.447, Average Loss: 5.581, avg. samples / sec: 967.52
Iteration:   2500, Loss function: 5.379, Average Loss: 5.577, avg. samples / sec: 1030.91
Iteration:   2520, Loss function: 5.327, Average Loss: 5.571, avg. samples / sec: 992.49
Iteration:   2540, Loss function: 5.264, Average Loss: 5.568, avg. samples / sec: 1000.20
Iteration:   2560, Loss function: 5.488, Average Loss: 5.564, avg. samples / sec: 1034.84
Iteration:   2580, Loss function: 5.450, Average Loss: 5.561, avg. samples / sec: 1036.19
Iteration:   2600, Loss function: 5.448, Average Loss: 5.559, avg. samples / sec: 999.62
Iteration:   2620, Loss function: 5.485, Average Loss: 5.553, avg. samples / sec: 1034.38
Iteration:   2640, Loss function: 5.233, Average Loss: 5.551, avg. samples / sec: 1025.72
Iteration:   2660, Loss function: 5.339, Average Loss: 5.547, avg. samples / sec: 1023.22
Iteration:   2680, Loss function: 5.234, Average Loss: 5.544, avg. samples / sec: 1018.24
Iteration:   2700, Loss function: 5.285, Average Loss: 5.539, avg. samples / sec: 960.92
Iteration:   2720, Loss function: 5.258, Average Loss: 5.535, avg. samples / sec: 999.42
Iteration:   2740, Loss function: 5.011, Average Loss: 5.530, avg. samples / sec: 1010.33
Iteration:   2760, Loss function: 5.060, Average Loss: 5.525, avg. samples / sec: 1071.11
Iteration:   2780, Loss function: 5.492, Average Loss: 5.521, avg. samples / sec: 991.95
Iteration:   2800, Loss function: 5.307, Average Loss: 5.515, avg. samples / sec: 1008.18
Iteration:   2820, Loss function: 5.467, Average Loss: 5.511, avg. samples / sec: 1029.34
Iteration:   2840, Loss function: 5.237, Average Loss: 5.507, avg. samples / sec: 1011.14
Iteration:   2860, Loss function: 4.982, Average Loss: 5.501, avg. samples / sec: 1030.96
Iteration:   2880, Loss function: 5.425, Average Loss: 5.496, avg. samples / sec: 954.25
Iteration:   2900, Loss function: 4.999, Average Loss: 5.492, avg. samples / sec: 1007.77
Iteration:   2920, Loss function: 5.288, Average Loss: 5.486, avg. samples / sec: 1002.40
Iteration:   2940, Loss function: 4.909, Average Loss: 5.482, avg. samples / sec: 995.59
Iteration:   2960, Loss function: 5.326, Average Loss: 5.477, avg. samples / sec: 941.75
Iteration:   2980, Loss function: 5.108, Average Loss: 5.473, avg. samples / sec: 1026.16
Iteration:   3000, Loss function: 5.383, Average Loss: 5.467, avg. samples / sec: 990.78
Iteration:   3020, Loss function: 5.283, Average Loss: 5.461, avg. samples / sec: 1044.92
Iteration:   3040, Loss function: 5.370, Average Loss: 5.456, avg. samples / sec: 1054.04
Iteration:   3060, Loss function: 5.015, Average Loss: 5.451, avg. samples / sec: 976.08
Iteration:   3080, Loss function: 4.868, Average Loss: 5.446, avg. samples / sec: 1048.45
:::MLLOG {"namespace": "", "time_ms": 1639126974609, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639126974622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.057, Average Loss: 5.440, avg. samples / sec: 1027.57
Iteration:   3120, Loss function: 5.104, Average Loss: 5.433, avg. samples / sec: 1021.22
Iteration:   3140, Loss function: 5.050, Average Loss: 5.427, avg. samples / sec: 1017.99
Iteration:   3160, Loss function: 5.668, Average Loss: 5.422, avg. samples / sec: 954.17
Iteration:   3180, Loss function: 5.043, Average Loss: 5.417, avg. samples / sec: 994.13
Iteration:   3200, Loss function: 5.305, Average Loss: 5.411, avg. samples / sec: 997.71
Iteration:   3220, Loss function: 5.169, Average Loss: 5.406, avg. samples / sec: 944.24
Iteration:   3240, Loss function: 5.131, Average Loss: 5.401, avg. samples / sec: 950.07
Iteration:   3260, Loss function: 5.280, Average Loss: 5.397, avg. samples / sec: 994.49
Iteration:   3280, Loss function: 4.776, Average Loss: 5.390, avg. samples / sec: 1010.44
Iteration:   3300, Loss function: 4.899, Average Loss: 5.384, avg. samples / sec: 1036.86
Iteration:   3320, Loss function: 4.954, Average Loss: 5.379, avg. samples / sec: 972.97
Iteration:   3340, Loss function: 5.015, Average Loss: 5.375, avg. samples / sec: 1023.91
Iteration:   3360, Loss function: 5.057, Average Loss: 5.368, avg. samples / sec: 1009.01
Iteration:   3380, Loss function: 5.286, Average Loss: 5.362, avg. samples / sec: 995.68
Iteration:   3400, Loss function: 5.012, Average Loss: 5.357, avg. samples / sec: 1010.95
Iteration:   3420, Loss function: 5.187, Average Loss: 5.352, avg. samples / sec: 941.41
Iteration:   3440, Loss function: 4.995, Average Loss: 5.347, avg. samples / sec: 1001.83
Iteration:   3460, Loss function: 5.193, Average Loss: 5.343, avg. samples / sec: 1015.48
Iteration:   3480, Loss function: 5.112, Average Loss: 5.338, avg. samples / sec: 1022.00
Iteration:   3500, Loss function: 5.194, Average Loss: 5.334, avg. samples / sec: 939.24
Iteration:   3520, Loss function: 5.152, Average Loss: 5.329, avg. samples / sec: 1003.18
Iteration:   3540, Loss function: 5.002, Average Loss: 5.324, avg. samples / sec: 952.10
Iteration:   3560, Loss function: 4.839, Average Loss: 5.320, avg. samples / sec: 1027.15
Iteration:   3580, Loss function: 5.191, Average Loss: 5.316, avg. samples / sec: 1001.15
Iteration:   3600, Loss function: 5.271, Average Loss: 5.309, avg. samples / sec: 957.60
Iteration:   3620, Loss function: 4.765, Average Loss: 5.304, avg. samples / sec: 923.63
Iteration:   3640, Loss function: 4.831, Average Loss: 5.298, avg. samples / sec: 1004.78
Iteration:   3660, Loss function: 5.023, Average Loss: 5.294, avg. samples / sec: 960.97
Iteration:   3680, Loss function: 5.063, Average Loss: 5.288, avg. samples / sec: 1031.75
Iteration:   3700, Loss function: 4.959, Average Loss: 5.283, avg. samples / sec: 972.17
Iteration:   3720, Loss function: 5.004, Average Loss: 5.277, avg. samples / sec: 970.33
Iteration:   3740, Loss function: 5.250, Average Loss: 5.273, avg. samples / sec: 996.60
Iteration:   3760, Loss function: 5.079, Average Loss: 5.270, avg. samples / sec: 987.73
Iteration:   3780, Loss function: 5.222, Average Loss: 5.265, avg. samples / sec: 1006.51
Iteration:   3800, Loss function: 5.033, Average Loss: 5.261, avg. samples / sec: 974.98
Iteration:   3820, Loss function: 5.168, Average Loss: 5.256, avg. samples / sec: 1041.90
Iteration:   3840, Loss function: 4.859, Average Loss: 5.252, avg. samples / sec: 993.12
Iteration:   3860, Loss function: 4.904, Average Loss: 5.247, avg. samples / sec: 1043.08
Iteration:   3880, Loss function: 4.963, Average Loss: 5.242, avg. samples / sec: 960.11
Iteration:   3900, Loss function: 5.299, Average Loss: 5.238, avg. samples / sec: 1029.05
Iteration:   3920, Loss function: 5.062, Average Loss: 5.232, avg. samples / sec: 1003.06
Iteration:   3940, Loss function: 5.157, Average Loss: 5.227, avg. samples / sec: 1005.61
Iteration:   3960, Loss function: 4.876, Average Loss: 5.222, avg. samples / sec: 1019.09
Iteration:   3980, Loss function: 4.831, Average Loss: 5.217, avg. samples / sec: 1032.48
Iteration:   4000, Loss function: 5.142, Average Loss: 5.213, avg. samples / sec: 1036.94
Iteration:   4020, Loss function: 4.914, Average Loss: 5.208, avg. samples / sec: 1041.80
Iteration:   4040, Loss function: 5.018, Average Loss: 5.204, avg. samples / sec: 999.98
Iteration:   4060, Loss function: 4.927, Average Loss: 5.200, avg. samples / sec: 977.11
Iteration:   4080, Loss function: 5.078, Average Loss: 5.196, avg. samples / sec: 968.17
Iteration:   4100, Loss function: 5.210, Average Loss: 5.194, avg. samples / sec: 991.10
:::MLLOG {"namespace": "", "time_ms": 1639127092572, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639127092575, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.012, Average Loss: 5.190, avg. samples / sec: 1015.40
Iteration:   4140, Loss function: 5.052, Average Loss: 5.184, avg. samples / sec: 998.61
Iteration:   4160, Loss function: 4.913, Average Loss: 5.179, avg. samples / sec: 1015.62
Iteration:   4180, Loss function: 4.900, Average Loss: 5.172, avg. samples / sec: 972.74
Iteration:   4200, Loss function: 4.744, Average Loss: 5.168, avg. samples / sec: 1020.58
Iteration:   4220, Loss function: 4.781, Average Loss: 5.162, avg. samples / sec: 1024.03
Iteration:   4240, Loss function: 4.859, Average Loss: 5.156, avg. samples / sec: 996.77
Iteration:   4260, Loss function: 5.212, Average Loss: 5.152, avg. samples / sec: 1028.56
Iteration:   4280, Loss function: 5.067, Average Loss: 5.146, avg. samples / sec: 967.52
Iteration:   4300, Loss function: 4.910, Average Loss: 5.141, avg. samples / sec: 1039.22
Iteration:   4320, Loss function: 4.784, Average Loss: 5.136, avg. samples / sec: 1028.81
Iteration:   4340, Loss function: 4.749, Average Loss: 5.130, avg. samples / sec: 1042.52
Iteration:   4360, Loss function: 4.900, Average Loss: 5.126, avg. samples / sec: 1030.94
Iteration:   4380, Loss function: 5.083, Average Loss: 5.122, avg. samples / sec: 947.09
Iteration:   4400, Loss function: 5.028, Average Loss: 5.118, avg. samples / sec: 1010.23
Iteration:   4420, Loss function: 4.898, Average Loss: 5.113, avg. samples / sec: 1057.29
Iteration:   4440, Loss function: 4.857, Average Loss: 5.109, avg. samples / sec: 1076.47
Iteration:   4460, Loss function: 5.336, Average Loss: 5.105, avg. samples / sec: 1014.10
Iteration:   4480, Loss function: 4.960, Average Loss: 5.102, avg. samples / sec: 1011.07
Iteration:   4500, Loss function: 4.987, Average Loss: 5.098, avg. samples / sec: 1007.12
Iteration:   4520, Loss function: 4.821, Average Loss: 5.094, avg. samples / sec: 1036.66
Iteration:   4540, Loss function: 5.016, Average Loss: 5.090, avg. samples / sec: 976.93
Iteration:   4560, Loss function: 4.655, Average Loss: 5.086, avg. samples / sec: 909.41
Iteration:   4580, Loss function: 4.788, Average Loss: 5.083, avg. samples / sec: 964.69
Iteration:   4600, Loss function: 4.926, Average Loss: 5.080, avg. samples / sec: 989.46
Iteration:   4620, Loss function: 4.754, Average Loss: 5.076, avg. samples / sec: 979.62
Iteration:   4640, Loss function: 4.720, Average Loss: 5.071, avg. samples / sec: 971.45
Iteration:   4660, Loss function: 4.871, Average Loss: 5.067, avg. samples / sec: 934.99
Iteration:   4680, Loss function: 5.516, Average Loss: 5.064, avg. samples / sec: 1007.15
Iteration:   4700, Loss function: 4.823, Average Loss: 5.061, avg. samples / sec: 1042.39
Iteration:   4720, Loss function: 4.742, Average Loss: 5.056, avg. samples / sec: 1044.00
Iteration:   4740, Loss function: 4.708, Average Loss: 5.051, avg. samples / sec: 1013.26
Iteration:   4760, Loss function: 4.732, Average Loss: 5.049, avg. samples / sec: 949.93
Iteration:   4780, Loss function: 5.131, Average Loss: 5.044, avg. samples / sec: 967.68
Iteration:   4800, Loss function: 5.190, Average Loss: 5.042, avg. samples / sec: 967.34
Iteration:   4820, Loss function: 4.749, Average Loss: 5.037, avg. samples / sec: 942.15
Iteration:   4840, Loss function: 5.045, Average Loss: 5.034, avg. samples / sec: 925.29
Iteration:   4860, Loss function: 4.560, Average Loss: 5.030, avg. samples / sec: 1028.89
Iteration:   4880, Loss function: 5.252, Average Loss: 5.026, avg. samples / sec: 962.94
Iteration:   4900, Loss function: 4.619, Average Loss: 5.021, avg. samples / sec: 951.48
Iteration:   4920, Loss function: 4.569, Average Loss: 5.017, avg. samples / sec: 1063.50
Iteration:   4940, Loss function: 4.796, Average Loss: 5.013, avg. samples / sec: 942.11
Iteration:   4960, Loss function: 4.665, Average Loss: 5.009, avg. samples / sec: 961.92
Iteration:   4980, Loss function: 4.771, Average Loss: 5.005, avg. samples / sec: 972.69
Iteration:   5000, Loss function: 4.905, Average Loss: 5.002, avg. samples / sec: 972.10
Iteration:   5020, Loss function: 5.006, Average Loss: 4.999, avg. samples / sec: 957.50
Iteration:   5040, Loss function: 4.900, Average Loss: 4.997, avg. samples / sec: 996.01
Iteration:   5060, Loss function: 4.658, Average Loss: 4.993, avg. samples / sec: 1032.48
Iteration:   5080, Loss function: 4.454, Average Loss: 4.989, avg. samples / sec: 1078.72
Iteration:   5100, Loss function: 4.862, Average Loss: 4.986, avg. samples / sec: 1006.77
Iteration:   5120, Loss function: 4.788, Average Loss: 4.982, avg. samples / sec: 1015.36
Iteration:   5140, Loss function: 4.856, Average Loss: 4.979, avg. samples / sec: 1059.71
:::MLLOG {"namespace": "", "time_ms": 1639127210190, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639127210192, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Iteration:   5160, Loss function: 4.921, Average Loss: 4.974, avg. samples / sec: 1058.35
Iteration:   5180, Loss function: 4.738, Average Loss: 4.970, avg. samples / sec: 1041.07
Iteration:   5200, Loss function: 4.717, Average Loss: 4.967, avg. samples / sec: 1042.92
Iteration:   5220, Loss function: 4.679, Average Loss: 4.963, avg. samples / sec: 985.75
Iteration:   5240, Loss function: 4.456, Average Loss: 4.958, avg. samples / sec: 1057.13
Iteration:   5260, Loss function: 4.743, Average Loss: 4.954, avg. samples / sec: 995.63
Iteration:   5280, Loss function: 4.908, Average Loss: 4.951, avg. samples / sec: 961.21
Iteration:   5300, Loss function: 4.919, Average Loss: 4.949, avg. samples / sec: 987.88
Iteration:   5320, Loss function: 5.052, Average Loss: 4.944, avg. samples / sec: 961.61
Iteration:   5340, Loss function: 4.733, Average Loss: 4.938, avg. samples / sec: 1047.68
Iteration:   5360, Loss function: 4.958, Average Loss: 4.936, avg. samples / sec: 958.09
Iteration:   5380, Loss function: 4.447, Average Loss: 4.932, avg. samples / sec: 1013.23
Iteration:   5400, Loss function: 4.543, Average Loss: 4.928, avg. samples / sec: 925.15
Iteration:   5420, Loss function: 4.748, Average Loss: 4.924, avg. samples / sec: 1005.02
Iteration:   5440, Loss function: 4.827, Average Loss: 4.921, avg. samples / sec: 1070.87
Iteration:   5460, Loss function: 4.767, Average Loss: 4.919, avg. samples / sec: 950.23
Iteration:   5480, Loss function: 4.671, Average Loss: 4.916, avg. samples / sec: 1054.75
Iteration:   5500, Loss function: 4.678, Average Loss: 4.913, avg. samples / sec: 978.65
Iteration:   5520, Loss function: 4.757, Average Loss: 4.910, avg. samples / sec: 1016.99
Iteration:   5540, Loss function: 4.699, Average Loss: 4.906, avg. samples / sec: 982.63
Iteration:   5560, Loss function: 4.792, Average Loss: 4.903, avg. samples / sec: 978.18
Iteration:   5580, Loss function: 4.857, Average Loss: 4.899, avg. samples / sec: 1011.91
Iteration:   5600, Loss function: 4.579, Average Loss: 4.897, avg. samples / sec: 919.50
Iteration:   5620, Loss function: 4.483, Average Loss: 4.893, avg. samples / sec: 973.26
Iteration:   5640, Loss function: 4.527, Average Loss: 4.890, avg. samples / sec: 1007.29
Iteration:   5660, Loss function: 4.472, Average Loss: 4.887, avg. samples / sec: 1039.48
Iteration:   5680, Loss function: 4.911, Average Loss: 4.884, avg. samples / sec: 1008.28
Iteration:   5700, Loss function: 4.490, Average Loss: 4.879, avg. samples / sec: 1009.34
Iteration:   5720, Loss function: 4.620, Average Loss: 4.877, avg. samples / sec: 1000.67
Iteration:   5740, Loss function: 4.687, Average Loss: 4.873, avg. samples / sec: 1019.54
Iteration:   5760, Loss function: 4.786, Average Loss: 4.870, avg. samples / sec: 1034.80
Iteration:   5780, Loss function: 4.714, Average Loss: 4.867, avg. samples / sec: 1042.63
Iteration:   5800, Loss function: 4.906, Average Loss: 4.864, avg. samples / sec: 920.89
Iteration:   5820, Loss function: 4.830, Average Loss: 4.860, avg. samples / sec: 1070.29
Iteration:   5840, Loss function: 4.485, Average Loss: 4.857, avg. samples / sec: 1040.84
Iteration:   5860, Loss function: 4.989, Average Loss: 4.853, avg. samples / sec: 937.06
Iteration:   5880, Loss function: 4.551, Average Loss: 4.850, avg. samples / sec: 1066.42
Iteration:   5900, Loss function: 4.869, Average Loss: 4.847, avg. samples / sec: 1028.77
Iteration:   5920, Loss function: 4.632, Average Loss: 4.844, avg. samples / sec: 976.98
Iteration:   5940, Loss function: 4.558, Average Loss: 4.841, avg. samples / sec: 1052.99
Iteration:   5960, Loss function: 4.627, Average Loss: 4.837, avg. samples / sec: 983.91
Iteration:   5980, Loss function: 4.618, Average Loss: 4.833, avg. samples / sec: 1015.39
Iteration:   6000, Loss function: 4.592, Average Loss: 4.831, avg. samples / sec: 995.82
Iteration:   6020, Loss function: 4.710, Average Loss: 4.828, avg. samples / sec: 1051.40
Iteration:   6040, Loss function: 4.731, Average Loss: 4.824, avg. samples / sec: 1012.96
Iteration:   6060, Loss function: 4.514, Average Loss: 4.822, avg. samples / sec: 1009.06
Iteration:   6080, Loss function: 4.527, Average Loss: 4.819, avg. samples / sec: 1010.71
Iteration:   6100, Loss function: 4.524, Average Loss: 4.817, avg. samples / sec: 1079.95
Iteration:   6120, Loss function: 4.681, Average Loss: 4.814, avg. samples / sec: 1008.18
Iteration:   6140, Loss function: 5.036, Average Loss: 4.813, avg. samples / sec: 967.77
Iteration:   6160, Loss function: 4.710, Average Loss: 4.810, avg. samples / sec: 1058.38
:::MLLOG {"namespace": "", "time_ms": 1639127326633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639127326634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.560, Average Loss: 4.806, avg. samples / sec: 1030.98
Iteration:   6200, Loss function: 4.864, Average Loss: 4.802, avg. samples / sec: 1082.49
Iteration:   6220, Loss function: 4.463, Average Loss: 4.798, avg. samples / sec: 983.93
Iteration:   6240, Loss function: 4.654, Average Loss: 4.795, avg. samples / sec: 1013.24
Iteration:   6260, Loss function: 4.485, Average Loss: 4.792, avg. samples / sec: 1027.29
Iteration:   6280, Loss function: 4.365, Average Loss: 4.789, avg. samples / sec: 984.03
Iteration:   6300, Loss function: 4.903, Average Loss: 4.786, avg. samples / sec: 1037.34
Iteration:   6320, Loss function: 4.365, Average Loss: 4.782, avg. samples / sec: 1049.98
Iteration:   6340, Loss function: 4.831, Average Loss: 4.781, avg. samples / sec: 1064.35
Iteration:   6360, Loss function: 4.585, Average Loss: 4.776, avg. samples / sec: 1030.03
Iteration:   6380, Loss function: 4.635, Average Loss: 4.772, avg. samples / sec: 948.00
Iteration:   6400, Loss function: 4.610, Average Loss: 4.770, avg. samples / sec: 1042.79
Iteration:   6420, Loss function: 4.553, Average Loss: 4.766, avg. samples / sec: 991.13
Iteration:   6440, Loss function: 4.637, Average Loss: 4.763, avg. samples / sec: 960.08
Iteration:   6460, Loss function: 4.592, Average Loss: 4.762, avg. samples / sec: 975.64
Iteration:   6480, Loss function: 4.639, Average Loss: 4.760, avg. samples / sec: 967.56
Iteration:   6500, Loss function: 4.682, Average Loss: 4.756, avg. samples / sec: 954.46
Iteration:   6520, Loss function: 4.717, Average Loss: 4.755, avg. samples / sec: 987.28
Iteration:   6540, Loss function: 4.830, Average Loss: 4.752, avg. samples / sec: 1033.71
Iteration:   6560, Loss function: 4.410, Average Loss: 4.749, avg. samples / sec: 1056.31
Iteration:   6580, Loss function: 4.777, Average Loss: 4.746, avg. samples / sec: 1042.67
Iteration:   6600, Loss function: 4.600, Average Loss: 4.743, avg. samples / sec: 1048.05
Iteration:   6620, Loss function: 4.621, Average Loss: 4.741, avg. samples / sec: 977.50
Iteration:   6640, Loss function: 4.495, Average Loss: 4.739, avg. samples / sec: 993.60
Iteration:   6660, Loss function: 4.725, Average Loss: 4.736, avg. samples / sec: 975.42
Iteration:   6680, Loss function: 4.473, Average Loss: 4.734, avg. samples / sec: 999.52
Iteration:   6700, Loss function: 4.450, Average Loss: 4.731, avg. samples / sec: 1036.19
Iteration:   6720, Loss function: 4.526, Average Loss: 4.728, avg. samples / sec: 1031.58
Iteration:   6740, Loss function: 4.543, Average Loss: 4.728, avg. samples / sec: 1035.06
Iteration:   6760, Loss function: 4.705, Average Loss: 4.725, avg. samples / sec: 1039.83
Iteration:   6780, Loss function: 4.478, Average Loss: 4.723, avg. samples / sec: 1043.94
Iteration:   6800, Loss function: 4.536, Average Loss: 4.720, avg. samples / sec: 990.37
Iteration:   6820, Loss function: 4.669, Average Loss: 4.717, avg. samples / sec: 1051.17
Iteration:   6840, Loss function: 4.557, Average Loss: 4.714, avg. samples / sec: 998.73
Iteration:   6860, Loss function: 4.767, Average Loss: 4.712, avg. samples / sec: 960.63
Iteration:   6880, Loss function: 4.500, Average Loss: 4.709, avg. samples / sec: 900.70
Iteration:   6900, Loss function: 4.805, Average Loss: 4.708, avg. samples / sec: 1032.91
Iteration:   6920, Loss function: 4.732, Average Loss: 4.705, avg. samples / sec: 1026.68
Iteration:   6940, Loss function: 4.210, Average Loss: 4.702, avg. samples / sec: 1063.82
Iteration:   6960, Loss function: 4.408, Average Loss: 4.700, avg. samples / sec: 1007.31
Iteration:   6980, Loss function: 4.351, Average Loss: 4.699, avg. samples / sec: 1008.11
Iteration:   7000, Loss function: 4.711, Average Loss: 4.696, avg. samples / sec: 1089.99
Iteration:   7020, Loss function: 4.640, Average Loss: 4.694, avg. samples / sec: 1024.10
Iteration:   7040, Loss function: 4.934, Average Loss: 4.692, avg. samples / sec: 1027.99
Iteration:   7060, Loss function: 4.848, Average Loss: 4.689, avg. samples / sec: 1052.80
Iteration:   7080, Loss function: 4.655, Average Loss: 4.689, avg. samples / sec: 1032.92
Iteration:   7100, Loss function: 4.550, Average Loss: 4.688, avg. samples / sec: 1043.05
Iteration:   7120, Loss function: 4.681, Average Loss: 4.687, avg. samples / sec: 1068.61
Iteration:   7140, Loss function: 4.695, Average Loss: 4.686, avg. samples / sec: 1022.45
Iteration:   7160, Loss function: 4.470, Average Loss: 4.683, avg. samples / sec: 995.98
Iteration:   7180, Loss function: 4.602, Average Loss: 4.682, avg. samples / sec: 998.87
Iteration:   7200, Loss function: 4.494, Average Loss: 4.680, avg. samples / sec: 965.37
:::MLLOG {"namespace": "", "time_ms": 1639127442385, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639127442387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.477, Average Loss: 4.677, avg. samples / sec: 947.54
Iteration:   7240, Loss function: 4.503, Average Loss: 4.673, avg. samples / sec: 955.48
Iteration:   7260, Loss function: 4.671, Average Loss: 4.672, avg. samples / sec: 978.40
Iteration:   7280, Loss function: 4.701, Average Loss: 4.669, avg. samples / sec: 940.85
Iteration:   7300, Loss function: 4.545, Average Loss: 4.664, avg. samples / sec: 985.75
Iteration:   7320, Loss function: 4.520, Average Loss: 4.661, avg. samples / sec: 1001.91
Iteration:   7340, Loss function: 4.659, Average Loss: 4.658, avg. samples / sec: 1007.73
Iteration:   7360, Loss function: 4.453, Average Loss: 4.656, avg. samples / sec: 1046.04
Iteration:   7380, Loss function: 4.473, Average Loss: 4.653, avg. samples / sec: 1061.01
Iteration:   7400, Loss function: 4.614, Average Loss: 4.651, avg. samples / sec: 1077.98
Iteration:   7420, Loss function: 4.476, Average Loss: 4.648, avg. samples / sec: 1000.77
Iteration:   7440, Loss function: 4.589, Average Loss: 4.647, avg. samples / sec: 1088.48
Iteration:   7460, Loss function: 4.496, Average Loss: 4.643, avg. samples / sec: 1015.84
Iteration:   7480, Loss function: 4.250, Average Loss: 4.641, avg. samples / sec: 977.77
Iteration:   7500, Loss function: 4.429, Average Loss: 4.638, avg. samples / sec: 1001.51
Iteration:   7520, Loss function: 4.485, Average Loss: 4.635, avg. samples / sec: 961.65
Iteration:   7540, Loss function: 4.673, Average Loss: 4.633, avg. samples / sec: 1046.22
Iteration:   7560, Loss function: 4.389, Average Loss: 4.631, avg. samples / sec: 1039.34
Iteration:   7580, Loss function: 4.471, Average Loss: 4.629, avg. samples / sec: 1019.94
Iteration:   7600, Loss function: 4.705, Average Loss: 4.627, avg. samples / sec: 917.30
Iteration:   7620, Loss function: 4.686, Average Loss: 4.625, avg. samples / sec: 908.21
Iteration:   7640, Loss function: 4.360, Average Loss: 4.622, avg. samples / sec: 971.44
Iteration:   7660, Loss function: 4.395, Average Loss: 4.621, avg. samples / sec: 982.60
Iteration:   7680, Loss function: 4.551, Average Loss: 4.619, avg. samples / sec: 1043.02
Iteration:   7700, Loss function: 4.413, Average Loss: 4.616, avg. samples / sec: 1012.74
Iteration:   7720, Loss function: 4.394, Average Loss: 4.614, avg. samples / sec: 1042.34
Iteration:   7740, Loss function: 4.291, Average Loss: 4.611, avg. samples / sec: 1002.61
Iteration:   7760, Loss function: 4.515, Average Loss: 4.609, avg. samples / sec: 968.73
Iteration:   7780, Loss function: 4.632, Average Loss: 4.608, avg. samples / sec: 1003.49
Iteration:   7800, Loss function: 4.611, Average Loss: 4.607, avg. samples / sec: 934.32
Iteration:   7820, Loss function: 4.313, Average Loss: 4.607, avg. samples / sec: 934.94
Iteration:   7840, Loss function: 4.538, Average Loss: 4.606, avg. samples / sec: 972.09
Iteration:   7860, Loss function: 4.466, Average Loss: 4.604, avg. samples / sec: 1016.79
Iteration:   7880, Loss function: 4.490, Average Loss: 4.603, avg. samples / sec: 1011.25
Iteration:   7900, Loss function: 4.715, Average Loss: 4.602, avg. samples / sec: 997.41
Iteration:   7920, Loss function: 4.372, Average Loss: 4.600, avg. samples / sec: 1067.29
Iteration:   7940, Loss function: 4.778, Average Loss: 4.599, avg. samples / sec: 982.67
Iteration:   7960, Loss function: 4.500, Average Loss: 4.597, avg. samples / sec: 1019.40
Iteration:   7980, Loss function: 4.658, Average Loss: 4.596, avg. samples / sec: 953.18
Iteration:   8000, Loss function: 4.729, Average Loss: 4.595, avg. samples / sec: 986.86
Iteration:   8020, Loss function: 4.510, Average Loss: 4.592, avg. samples / sec: 928.26
Iteration:   8040, Loss function: 4.602, Average Loss: 4.591, avg. samples / sec: 964.21
Iteration:   8060, Loss function: 4.604, Average Loss: 4.590, avg. samples / sec: 966.79
Iteration:   8080, Loss function: 4.542, Average Loss: 4.589, avg. samples / sec: 1108.80
Iteration:   8100, Loss function: 4.732, Average Loss: 4.587, avg. samples / sec: 927.81
Iteration:   8120, Loss function: 4.322, Average Loss: 4.584, avg. samples / sec: 984.23
Iteration:   8140, Loss function: 4.180, Average Loss: 4.582, avg. samples / sec: 1040.56
Iteration:   8160, Loss function: 4.288, Average Loss: 4.580, avg. samples / sec: 1045.79
Iteration:   8180, Loss function: 4.745, Average Loss: 4.580, avg. samples / sec: 998.81
Iteration:   8200, Loss function: 4.321, Average Loss: 4.579, avg. samples / sec: 978.19
Iteration:   8220, Loss function: 4.751, Average Loss: 4.579, avg. samples / sec: 935.77
:::MLLOG {"namespace": "", "time_ms": 1639127560541, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639127560542, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.600, Average Loss: 4.576, avg. samples / sec: 990.15
Iteration:   8260, Loss function: 4.425, Average Loss: 4.575, avg. samples / sec: 1058.95
Iteration:   8280, Loss function: 4.414, Average Loss: 4.572, avg. samples / sec: 1061.06
Iteration:   8300, Loss function: 4.202, Average Loss: 4.569, avg. samples / sec: 964.52
Iteration:   8320, Loss function: 4.829, Average Loss: 4.567, avg. samples / sec: 1003.91
Iteration:   8340, Loss function: 4.566, Average Loss: 4.564, avg. samples / sec: 1027.07
Iteration:   8360, Loss function: 4.516, Average Loss: 4.560, avg. samples / sec: 1035.45
Iteration:   8380, Loss function: 4.473, Average Loss: 4.558, avg. samples / sec: 985.38
Iteration:   8400, Loss function: 4.471, Average Loss: 4.555, avg. samples / sec: 1010.78
Iteration:   8420, Loss function: 4.571, Average Loss: 4.554, avg. samples / sec: 991.90
Iteration:   8440, Loss function: 4.593, Average Loss: 4.553, avg. samples / sec: 1000.99
Iteration:   8460, Loss function: 4.618, Average Loss: 4.553, avg. samples / sec: 1021.52
Iteration:   8480, Loss function: 4.447, Average Loss: 4.551, avg. samples / sec: 1022.24
Iteration:   8500, Loss function: 4.380, Average Loss: 4.548, avg. samples / sec: 1037.32
Iteration:   8520, Loss function: 4.288, Average Loss: 4.545, avg. samples / sec: 961.50
Iteration:   8540, Loss function: 4.433, Average Loss: 4.543, avg. samples / sec: 1035.34
Iteration:   8560, Loss function: 4.520, Average Loss: 4.541, avg. samples / sec: 993.40
Iteration:   8580, Loss function: 4.505, Average Loss: 4.541, avg. samples / sec: 1047.31
Iteration:   8600, Loss function: 4.525, Average Loss: 4.538, avg. samples / sec: 989.33
Iteration:   8620, Loss function: 4.315, Average Loss: 4.536, avg. samples / sec: 1008.02
Iteration:   8640, Loss function: 4.328, Average Loss: 4.534, avg. samples / sec: 1042.94
Iteration:   8660, Loss function: 4.485, Average Loss: 4.532, avg. samples / sec: 1018.68
Iteration:   8680, Loss function: 4.396, Average Loss: 4.530, avg. samples / sec: 1075.39
Iteration:   8700, Loss function: 4.514, Average Loss: 4.529, avg. samples / sec: 1056.78
Iteration:   8720, Loss function: 4.414, Average Loss: 4.527, avg. samples / sec: 1025.65
Iteration:   8740, Loss function: 4.386, Average Loss: 4.524, avg. samples / sec: 986.22
Iteration:   8760, Loss function: 4.501, Average Loss: 4.525, avg. samples / sec: 1035.84
Iteration:   8780, Loss function: 4.400, Average Loss: 4.522, avg. samples / sec: 1029.14
Iteration:   8800, Loss function: 4.526, Average Loss: 4.520, avg. samples / sec: 956.65
Iteration:   8820, Loss function: 4.178, Average Loss: 4.518, avg. samples / sec: 1051.43
Iteration:   8840, Loss function: 4.614, Average Loss: 4.516, avg. samples / sec: 1020.00
Iteration:   8860, Loss function: 4.548, Average Loss: 4.514, avg. samples / sec: 1071.55
Iteration:   8880, Loss function: 4.527, Average Loss: 4.512, avg. samples / sec: 1075.36
Iteration:   8900, Loss function: 4.385, Average Loss: 4.512, avg. samples / sec: 1007.20
Iteration:   8920, Loss function: 4.479, Average Loss: 4.510, avg. samples / sec: 1058.06
Iteration:   8940, Loss function: 4.415, Average Loss: 4.509, avg. samples / sec: 1026.78
Iteration:   8960, Loss function: 4.511, Average Loss: 4.506, avg. samples / sec: 1062.67
Iteration:   8980, Loss function: 4.460, Average Loss: 4.504, avg. samples / sec: 982.14
Iteration:   9000, Loss function: 4.336, Average Loss: 4.503, avg. samples / sec: 959.35
Iteration:   9020, Loss function: 4.831, Average Loss: 4.502, avg. samples / sec: 982.13
Iteration:   9040, Loss function: 4.461, Average Loss: 4.500, avg. samples / sec: 1063.66
Iteration:   9060, Loss function: 4.172, Average Loss: 4.497, avg. samples / sec: 1072.50
Iteration:   9080, Loss function: 4.597, Average Loss: 4.496, avg. samples / sec: 1016.72
Iteration:   9100, Loss function: 4.382, Average Loss: 4.496, avg. samples / sec: 994.71
Iteration:   9120, Loss function: 4.443, Average Loss: 4.494, avg. samples / sec: 959.55
Iteration:   9140, Loss function: 4.107, Average Loss: 4.492, avg. samples / sec: 989.58
Iteration:   9160, Loss function: 4.361, Average Loss: 4.491, avg. samples / sec: 1020.59
Iteration:   9180, Loss function: 4.120, Average Loss: 4.490, avg. samples / sec: 1015.47
Iteration:   9200, Loss function: 4.425, Average Loss: 4.489, avg. samples / sec: 916.44
Iteration:   9220, Loss function: 4.326, Average Loss: 4.489, avg. samples / sec: 1055.94
Iteration:   9240, Loss function: 4.611, Average Loss: 4.488, avg. samples / sec: 1049.44
:::MLLOG {"namespace": "", "time_ms": 1639127675735, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639127675737, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.448, Average Loss: 4.486, avg. samples / sec: 1028.30
Iteration:   9280, Loss function: 4.208, Average Loss: 4.484, avg. samples / sec: 1036.83
Iteration:   9300, Loss function: 4.533, Average Loss: 4.481, avg. samples / sec: 981.10
Iteration:   9320, Loss function: 4.100, Average Loss: 4.479, avg. samples / sec: 948.34
Iteration:   9340, Loss function: 4.676, Average Loss: 4.477, avg. samples / sec: 987.82
Iteration:   9360, Loss function: 4.103, Average Loss: 4.474, avg. samples / sec: 1000.69
Iteration:   9380, Loss function: 4.352, Average Loss: 4.472, avg. samples / sec: 923.38
Iteration:   9400, Loss function: 4.229, Average Loss: 4.470, avg. samples / sec: 1099.28
Iteration:   9420, Loss function: 4.234, Average Loss: 4.469, avg. samples / sec: 1002.89
Iteration:   9440, Loss function: 4.680, Average Loss: 4.467, avg. samples / sec: 1050.95
Iteration:   9460, Loss function: 4.273, Average Loss: 4.466, avg. samples / sec: 919.93
Iteration:   9480, Loss function: 4.389, Average Loss: 4.465, avg. samples / sec: 1023.91
Iteration:   9500, Loss function: 4.593, Average Loss: 4.464, avg. samples / sec: 940.20
Iteration:   9520, Loss function: 4.430, Average Loss: 4.460, avg. samples / sec: 963.67
Iteration:   9540, Loss function: 4.150, Average Loss: 4.459, avg. samples / sec: 969.09
Iteration:   9560, Loss function: 4.550, Average Loss: 4.457, avg. samples / sec: 1000.02
Iteration:   9580, Loss function: 4.325, Average Loss: 4.456, avg. samples / sec: 985.57
Iteration:   9600, Loss function: 3.993, Average Loss: 4.454, avg. samples / sec: 1005.91
Iteration:   9620, Loss function: 4.424, Average Loss: 4.454, avg. samples / sec: 1007.16
Iteration:   9640, Loss function: 4.368, Average Loss: 4.453, avg. samples / sec: 1041.44
Iteration:   9660, Loss function: 4.540, Average Loss: 4.453, avg. samples / sec: 957.38
Iteration:   9680, Loss function: 4.410, Average Loss: 4.452, avg. samples / sec: 1073.00
Iteration:   9700, Loss function: 4.488, Average Loss: 4.451, avg. samples / sec: 1030.24
Iteration:   9720, Loss function: 4.354, Average Loss: 4.450, avg. samples / sec: 950.98
Iteration:   9740, Loss function: 4.600, Average Loss: 4.448, avg. samples / sec: 1093.99
Iteration:   9760, Loss function: 4.203, Average Loss: 4.448, avg. samples / sec: 1048.76
Iteration:   9780, Loss function: 4.460, Average Loss: 4.446, avg. samples / sec: 1017.42
Iteration:   9800, Loss function: 4.553, Average Loss: 4.445, avg. samples / sec: 982.89
Iteration:   9820, Loss function: 4.166, Average Loss: 4.442, avg. samples / sec: 990.58
Iteration:   9840, Loss function: 4.605, Average Loss: 4.441, avg. samples / sec: 1053.23
Iteration:   9860, Loss function: 4.353, Average Loss: 4.439, avg. samples / sec: 1085.45
Iteration:   9880, Loss function: 4.248, Average Loss: 4.438, avg. samples / sec: 1037.10
Iteration:   9900, Loss function: 4.419, Average Loss: 4.437, avg. samples / sec: 1046.85
Iteration:   9920, Loss function: 4.805, Average Loss: 4.436, avg. samples / sec: 1028.18
Iteration:   9940, Loss function: 4.277, Average Loss: 4.433, avg. samples / sec: 1020.54
Iteration:   9960, Loss function: 4.323, Average Loss: 4.432, avg. samples / sec: 958.21
Iteration:   9980, Loss function: 4.412, Average Loss: 4.431, avg. samples / sec: 992.65
Iteration:  10000, Loss function: 3.995, Average Loss: 4.429, avg. samples / sec: 1034.72
Iteration:  10020, Loss function: 4.606, Average Loss: 4.428, avg. samples / sec: 988.67
Iteration:  10040, Loss function: 4.275, Average Loss: 4.426, avg. samples / sec: 1035.02
Iteration:  10060, Loss function: 4.039, Average Loss: 4.425, avg. samples / sec: 1004.33
Iteration:  10080, Loss function: 4.680, Average Loss: 4.423, avg. samples / sec: 983.88
Iteration:  10100, Loss function: 4.134, Average Loss: 4.423, avg. samples / sec: 1039.36
Iteration:  10120, Loss function: 4.455, Average Loss: 4.423, avg. samples / sec: 1013.83
Iteration:  10140, Loss function: 4.306, Average Loss: 4.420, avg. samples / sec: 1025.75
Iteration:  10160, Loss function: 4.475, Average Loss: 4.419, avg. samples / sec: 1010.96
Iteration:  10180, Loss function: 4.683, Average Loss: 4.418, avg. samples / sec: 992.59
Iteration:  10200, Loss function: 4.170, Average Loss: 4.417, avg. samples / sec: 998.39
Iteration:  10220, Loss function: 4.439, Average Loss: 4.417, avg. samples / sec: 1019.75
Iteration:  10240, Loss function: 4.348, Average Loss: 4.415, avg. samples / sec: 1013.41
Iteration:  10260, Loss function: 4.202, Average Loss: 4.414, avg. samples / sec: 988.16
Iteration:  10280, Loss function: 4.529, Average Loss: 4.413, avg. samples / sec: 990.35
:::MLLOG {"namespace": "", "time_ms": 1639127792358, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639127792360, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Iteration:  10300, Loss function: 4.444, Average Loss: 4.411, avg. samples / sec: 962.45
Iteration:  10320, Loss function: 4.306, Average Loss: 4.410, avg. samples / sec: 975.66
Iteration:  10340, Loss function: 4.131, Average Loss: 4.407, avg. samples / sec: 944.10
Iteration:  10360, Loss function: 4.476, Average Loss: 4.405, avg. samples / sec: 948.26
Iteration:  10380, Loss function: 4.305, Average Loss: 4.403, avg. samples / sec: 972.16
Iteration:  10400, Loss function: 4.213, Average Loss: 4.400, avg. samples / sec: 1093.54
Iteration:  10420, Loss function: 4.124, Average Loss: 4.399, avg. samples / sec: 1004.32
Iteration:  10440, Loss function: 4.249, Average Loss: 4.398, avg. samples / sec: 1019.55
Iteration:  10460, Loss function: 4.358, Average Loss: 4.396, avg. samples / sec: 991.38
Iteration:  10480, Loss function: 4.208, Average Loss: 4.394, avg. samples / sec: 958.69
Iteration:  10500, Loss function: 4.168, Average Loss: 4.393, avg. samples / sec: 1015.93
Iteration:  10520, Loss function: 4.642, Average Loss: 4.390, avg. samples / sec: 966.75
Iteration:  10540, Loss function: 4.082, Average Loss: 4.388, avg. samples / sec: 960.94
Iteration:  10560, Loss function: 4.068, Average Loss: 4.386, avg. samples / sec: 1057.57
Iteration:  10580, Loss function: 4.212, Average Loss: 4.384, avg. samples / sec: 998.99
Iteration:  10600, Loss function: 4.307, Average Loss: 4.383, avg. samples / sec: 945.31
Iteration:  10620, Loss function: 4.376, Average Loss: 4.382, avg. samples / sec: 1019.10
Iteration:  10640, Loss function: 4.203, Average Loss: 4.381, avg. samples / sec: 971.76
Iteration:  10660, Loss function: 4.580, Average Loss: 4.381, avg. samples / sec: 988.50
Iteration:  10680, Loss function: 4.206, Average Loss: 4.379, avg. samples / sec: 962.61
Iteration:  10700, Loss function: 4.072, Average Loss: 4.379, avg. samples / sec: 1002.82
Iteration:  10720, Loss function: 4.435, Average Loss: 4.378, avg. samples / sec: 1053.24
Iteration:  10740, Loss function: 4.237, Average Loss: 4.376, avg. samples / sec: 1043.66
Iteration:  10760, Loss function: 4.396, Average Loss: 4.375, avg. samples / sec: 1003.10
Iteration:  10780, Loss function: 4.654, Average Loss: 4.375, avg. samples / sec: 1088.83
Iteration:  10800, Loss function: 4.383, Average Loss: 4.374, avg. samples / sec: 1024.96
Iteration:  10820, Loss function: 4.208, Average Loss: 4.373, avg. samples / sec: 991.50
Iteration:  10840, Loss function: 4.102, Average Loss: 4.371, avg. samples / sec: 1059.74
Iteration:  10860, Loss function: 4.555, Average Loss: 4.370, avg. samples / sec: 1013.15
Iteration:  10880, Loss function: 4.389, Average Loss: 4.368, avg. samples / sec: 1050.33
Iteration:  10900, Loss function: 4.302, Average Loss: 4.368, avg. samples / sec: 937.56
Iteration:  10920, Loss function: 4.252, Average Loss: 4.367, avg. samples / sec: 1008.38
Iteration:  10940, Loss function: 4.252, Average Loss: 4.365, avg. samples / sec: 1072.05
Iteration:  10960, Loss function: 4.261, Average Loss: 4.364, avg. samples / sec: 1053.62
Iteration:  10980, Loss function: 4.204, Average Loss: 4.363, avg. samples / sec: 1022.33
Iteration:  11000, Loss function: 4.719, Average Loss: 4.362, avg. samples / sec: 965.90
Iteration:  11020, Loss function: 3.945, Average Loss: 4.361, avg. samples / sec: 1028.67
Iteration:  11040, Loss function: 4.311, Average Loss: 4.362, avg. samples / sec: 1015.65
Iteration:  11060, Loss function: 4.586, Average Loss: 4.360, avg. samples / sec: 1087.66
Iteration:  11080, Loss function: 4.274, Average Loss: 4.358, avg. samples / sec: 1056.35
Iteration:  11100, Loss function: 4.235, Average Loss: 4.356, avg. samples / sec: 1026.41
Iteration:  11120, Loss function: 4.377, Average Loss: 4.357, avg. samples / sec: 1087.65
Iteration:  11140, Loss function: 4.407, Average Loss: 4.355, avg. samples / sec: 1063.95
Iteration:  11160, Loss function: 4.229, Average Loss: 4.355, avg. samples / sec: 1059.60
Iteration:  11180, Loss function: 4.273, Average Loss: 4.353, avg. samples / sec: 1006.46
Iteration:  11200, Loss function: 4.002, Average Loss: 4.353, avg. samples / sec: 1001.47
Iteration:  11220, Loss function: 4.388, Average Loss: 4.352, avg. samples / sec: 1033.14
Iteration:  11240, Loss function: 4.339, Average Loss: 4.352, avg. samples / sec: 977.24
Iteration:  11260, Loss function: 4.378, Average Loss: 4.351, avg. samples / sec: 1023.72
Iteration:  11280, Loss function: 4.538, Average Loss: 4.351, avg. samples / sec: 975.02
Iteration:  11300, Loss function: 4.209, Average Loss: 4.349, avg. samples / sec: 1003.95
:::MLLOG {"namespace": "", "time_ms": 1639127908659, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1639127908662, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 12, "current_iter_num": 11316}}
Iteration:  11320, Loss function: 4.350, Average Loss: 4.349, avg. samples / sec: 934.50
Iteration:  11340, Loss function: 4.298, Average Loss: 4.347, avg. samples / sec: 1001.54
Iteration:  11360, Loss function: 4.001, Average Loss: 4.346, avg. samples / sec: 987.68
Iteration:  11380, Loss function: 4.399, Average Loss: 4.344, avg. samples / sec: 1036.31
Iteration:  11400, Loss function: 4.219, Average Loss: 4.343, avg. samples / sec: 994.35
Iteration:  11420, Loss function: 4.408, Average Loss: 4.342, avg. samples / sec: 1024.18
Iteration:  11440, Loss function: 4.339, Average Loss: 4.341, avg. samples / sec: 1016.94
Iteration:  11460, Loss function: 3.928, Average Loss: 4.339, avg. samples / sec: 1044.22
Iteration:  11480, Loss function: 4.403, Average Loss: 4.337, avg. samples / sec: 1036.06
Iteration:  11500, Loss function: 4.431, Average Loss: 4.336, avg. samples / sec: 1036.56
Iteration:  11520, Loss function: 4.322, Average Loss: 4.335, avg. samples / sec: 1036.05
Iteration:  11540, Loss function: 4.450, Average Loss: 4.336, avg. samples / sec: 1011.98
Iteration:  11560, Loss function: 4.038, Average Loss: 4.336, avg. samples / sec: 982.57
Iteration:  11580, Loss function: 4.098, Average Loss: 4.336, avg. samples / sec: 1074.22
Iteration:  11600, Loss function: 4.254, Average Loss: 4.336, avg. samples / sec: 977.18
Iteration:  11620, Loss function: 4.194, Average Loss: 4.334, avg. samples / sec: 996.93
Iteration:  11640, Loss function: 4.470, Average Loss: 4.333, avg. samples / sec: 996.16
Iteration:  11660, Loss function: 4.340, Average Loss: 4.332, avg. samples / sec: 1026.02
Iteration:  11680, Loss function: 4.263, Average Loss: 4.331, avg. samples / sec: 1013.76
Iteration:  11700, Loss function: 3.988, Average Loss: 4.328, avg. samples / sec: 1031.71
Iteration:  11720, Loss function: 4.265, Average Loss: 4.328, avg. samples / sec: 1053.57
Iteration:  11740, Loss function: 4.422, Average Loss: 4.326, avg. samples / sec: 1005.45
Iteration:  11760, Loss function: 4.329, Average Loss: 4.324, avg. samples / sec: 996.98
Iteration:  11780, Loss function: 4.278, Average Loss: 4.322, avg. samples / sec: 989.10
Iteration:  11800, Loss function: 4.436, Average Loss: 4.321, avg. samples / sec: 1040.82
Iteration:  11820, Loss function: 4.305, Average Loss: 4.320, avg. samples / sec: 1042.36
Iteration:  11840, Loss function: 4.610, Average Loss: 4.318, avg. samples / sec: 1046.20
Iteration:  11860, Loss function: 4.424, Average Loss: 4.317, avg. samples / sec: 998.17
Iteration:  11880, Loss function: 4.262, Average Loss: 4.317, avg. samples / sec: 996.27
Iteration:  11900, Loss function: 4.216, Average Loss: 4.316, avg. samples / sec: 960.14
Iteration:  11920, Loss function: 4.067, Average Loss: 4.313, avg. samples / sec: 932.48
Iteration:  11940, Loss function: 4.474, Average Loss: 4.312, avg. samples / sec: 968.88
Iteration:  11960, Loss function: 4.282, Average Loss: 4.311, avg. samples / sec: 952.24
Iteration:  11980, Loss function: 4.467, Average Loss: 4.310, avg. samples / sec: 1011.64
Iteration:  12000, Loss function: 4.301, Average Loss: 4.310, avg. samples / sec: 932.46
Iteration:  12020, Loss function: 4.226, Average Loss: 4.309, avg. samples / sec: 988.57
Iteration:  12040, Loss function: 4.440, Average Loss: 4.309, avg. samples / sec: 1048.71
Iteration:  12060, Loss function: 4.438, Average Loss: 4.308, avg. samples / sec: 997.42
Iteration:  12080, Loss function: 4.087, Average Loss: 4.308, avg. samples / sec: 972.75
Iteration:  12100, Loss function: 4.128, Average Loss: 4.307, avg. samples / sec: 974.22
Iteration:  12120, Loss function: 4.418, Average Loss: 4.306, avg. samples / sec: 1009.92
Iteration:  12140, Loss function: 4.384, Average Loss: 4.304, avg. samples / sec: 1099.42
Iteration:  12160, Loss function: 4.282, Average Loss: 4.303, avg. samples / sec: 990.12
Iteration:  12180, Loss function: 4.048, Average Loss: 4.302, avg. samples / sec: 981.95
Iteration:  12200, Loss function: 4.189, Average Loss: 4.301, avg. samples / sec: 1010.26
Iteration:  12220, Loss function: 4.315, Average Loss: 4.300, avg. samples / sec: 1030.69
Iteration:  12240, Loss function: 4.084, Average Loss: 4.299, avg. samples / sec: 1088.58
Iteration:  12260, Loss function: 4.148, Average Loss: 4.299, avg. samples / sec: 1034.12
Iteration:  12280, Loss function: 4.238, Average Loss: 4.297, avg. samples / sec: 1046.71
Iteration:  12300, Loss function: 4.339, Average Loss: 4.298, avg. samples / sec: 1010.77
Iteration:  12320, Loss function: 4.254, Average Loss: 4.297, avg. samples / sec: 993.85
Iteration:  12340, Loss function: 4.203, Average Loss: 4.295, avg. samples / sec: 1013.29
:::MLLOG {"namespace": "", "time_ms": 1639128024839, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1639128024841, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 13, "current_iter_num": 12344}}
Iteration:  12360, Loss function: 4.198, Average Loss: 4.293, avg. samples / sec: 990.41
Iteration:  12380, Loss function: 4.690, Average Loss: 4.293, avg. samples / sec: 1026.93
Iteration:  12400, Loss function: 4.074, Average Loss: 4.290, avg. samples / sec: 996.16
Iteration:  12420, Loss function: 4.116, Average Loss: 4.289, avg. samples / sec: 1013.55
Iteration:  12440, Loss function: 4.091, Average Loss: 4.289, avg. samples / sec: 981.45
Iteration:  12460, Loss function: 4.225, Average Loss: 4.287, avg. samples / sec: 989.47
Iteration:  12480, Loss function: 4.282, Average Loss: 4.285, avg. samples / sec: 1012.04
Iteration:  12500, Loss function: 4.469, Average Loss: 4.284, avg. samples / sec: 1020.65
Iteration:  12520, Loss function: 4.352, Average Loss: 4.284, avg. samples / sec: 1045.19
Iteration:  12540, Loss function: 4.516, Average Loss: 4.282, avg. samples / sec: 1011.89
Iteration:  12560, Loss function: 4.403, Average Loss: 4.280, avg. samples / sec: 1019.87
Iteration:  12580, Loss function: 4.040, Average Loss: 4.277, avg. samples / sec: 1058.69
Iteration:  12600, Loss function: 4.270, Average Loss: 4.277, avg. samples / sec: 1042.43
Iteration:  12620, Loss function: 4.176, Average Loss: 4.275, avg. samples / sec: 1008.82
Iteration:  12640, Loss function: 4.315, Average Loss: 4.276, avg. samples / sec: 952.85
Iteration:  12660, Loss function: 4.294, Average Loss: 4.274, avg. samples / sec: 1008.43
Iteration:  12680, Loss function: 3.684, Average Loss: 4.272, avg. samples / sec: 1054.80
Iteration:  12700, Loss function: 4.054, Average Loss: 4.271, avg. samples / sec: 953.29
Iteration:  12720, Loss function: 4.159, Average Loss: 4.270, avg. samples / sec: 1060.21
Iteration:  12740, Loss function: 3.982, Average Loss: 4.268, avg. samples / sec: 1000.74
Iteration:  12760, Loss function: 4.280, Average Loss: 4.267, avg. samples / sec: 954.17
Iteration:  12780, Loss function: 4.256, Average Loss: 4.268, avg. samples / sec: 940.73
Iteration:  12800, Loss function: 4.376, Average Loss: 4.266, avg. samples / sec: 1004.98
Iteration:  12820, Loss function: 4.322, Average Loss: 4.266, avg. samples / sec: 1034.81
Iteration:  12840, Loss function: 4.298, Average Loss: 4.267, avg. samples / sec: 984.79
Iteration:  12860, Loss function: 4.115, Average Loss: 4.267, avg. samples / sec: 991.49
Iteration:  12880, Loss function: 3.963, Average Loss: 4.266, avg. samples / sec: 1037.17
Iteration:  12900, Loss function: 4.261, Average Loss: 4.264, avg. samples / sec: 998.63
Iteration:  12920, Loss function: 4.411, Average Loss: 4.263, avg. samples / sec: 955.23
Iteration:  12940, Loss function: 4.143, Average Loss: 4.260, avg. samples / sec: 1003.51
Iteration:  12960, Loss function: 4.338, Average Loss: 4.260, avg. samples / sec: 908.37
Iteration:  12980, Loss function: 4.115, Average Loss: 4.259, avg. samples / sec: 986.67
Iteration:  13000, Loss function: 4.467, Average Loss: 4.258, avg. samples / sec: 1075.87
Iteration:  13020, Loss function: 4.049, Average Loss: 4.258, avg. samples / sec: 1037.23
Iteration:  13040, Loss function: 4.269, Average Loss: 4.257, avg. samples / sec: 1074.15
Iteration:  13060, Loss function: 4.235, Average Loss: 4.256, avg. samples / sec: 988.50
Iteration:  13080, Loss function: 4.259, Average Loss: 4.255, avg. samples / sec: 989.28
Iteration:  13100, Loss function: 4.179, Average Loss: 4.253, avg. samples / sec: 1017.23
Iteration:  13120, Loss function: 4.306, Average Loss: 4.252, avg. samples / sec: 940.73
Iteration:  13140, Loss function: 4.280, Average Loss: 4.252, avg. samples / sec: 975.09
Iteration:  13160, Loss function: 4.048, Average Loss: 4.251, avg. samples / sec: 961.69
Iteration:  13180, Loss function: 3.912, Average Loss: 4.250, avg. samples / sec: 951.38
Iteration:  13200, Loss function: 4.218, Average Loss: 4.250, avg. samples / sec: 972.63
Iteration:  13220, Loss function: 4.208, Average Loss: 4.249, avg. samples / sec: 997.07
Iteration:  13240, Loss function: 4.141, Average Loss: 4.249, avg. samples / sec: 975.46
Iteration:  13260, Loss function: 4.172, Average Loss: 4.248, avg. samples / sec: 943.02
Iteration:  13280, Loss function: 3.816, Average Loss: 4.246, avg. samples / sec: 952.27
Iteration:  13300, Loss function: 3.923, Average Loss: 4.245, avg. samples / sec: 952.54
Iteration:  13320, Loss function: 4.112, Average Loss: 4.245, avg. samples / sec: 977.22
Iteration:  13340, Loss function: 4.466, Average Loss: 4.245, avg. samples / sec: 1071.94
Iteration:  13360, Loss function: 4.258, Average Loss: 4.245, avg. samples / sec: 954.89
:::MLLOG {"namespace": "", "time_ms": 1639128142615, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1639128142623, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 14, "current_iter_num": 13373}}
Iteration:  13380, Loss function: 4.099, Average Loss: 4.244, avg. samples / sec: 973.79
Iteration:  13400, Loss function: 4.025, Average Loss: 4.242, avg. samples / sec: 981.85
Iteration:  13420, Loss function: 4.177, Average Loss: 4.241, avg. samples / sec: 991.36
Iteration:  13440, Loss function: 4.408, Average Loss: 4.240, avg. samples / sec: 968.79
Iteration:  13460, Loss function: 4.444, Average Loss: 4.240, avg. samples / sec: 902.69
Iteration:  13480, Loss function: 4.077, Average Loss: 4.239, avg. samples / sec: 1006.39
Iteration:  13500, Loss function: 4.503, Average Loss: 4.239, avg. samples / sec: 1052.83
Iteration:  13520, Loss function: 4.164, Average Loss: 4.238, avg. samples / sec: 1007.44
Iteration:  13540, Loss function: 4.057, Average Loss: 4.237, avg. samples / sec: 1120.03
Iteration:  13560, Loss function: 4.325, Average Loss: 4.236, avg. samples / sec: 998.48
Iteration:  13580, Loss function: 4.049, Average Loss: 4.234, avg. samples / sec: 1057.17
Iteration:  13600, Loss function: 4.244, Average Loss: 4.234, avg. samples / sec: 996.32
Iteration:  13620, Loss function: 4.141, Average Loss: 4.231, avg. samples / sec: 968.47
Iteration:  13640, Loss function: 4.192, Average Loss: 4.229, avg. samples / sec: 999.91
Iteration:  13660, Loss function: 4.082, Average Loss: 4.228, avg. samples / sec: 1074.80
Iteration:  13680, Loss function: 4.071, Average Loss: 4.227, avg. samples / sec: 1085.86
Iteration:  13700, Loss function: 4.250, Average Loss: 4.228, avg. samples / sec: 1031.56
Iteration:  13720, Loss function: 3.957, Average Loss: 4.228, avg. samples / sec: 980.95
Iteration:  13740, Loss function: 4.091, Average Loss: 4.227, avg. samples / sec: 1089.01
Iteration:  13760, Loss function: 4.257, Average Loss: 4.227, avg. samples / sec: 1003.61
Iteration:  13780, Loss function: 4.061, Average Loss: 4.225, avg. samples / sec: 995.51
Iteration:  13800, Loss function: 4.430, Average Loss: 4.224, avg. samples / sec: 987.60
Iteration:  13820, Loss function: 3.925, Average Loss: 4.224, avg. samples / sec: 978.73
Iteration:  13840, Loss function: 4.075, Average Loss: 4.222, avg. samples / sec: 986.19
Iteration:  13860, Loss function: 4.324, Average Loss: 4.222, avg. samples / sec: 1059.30
Iteration:  13880, Loss function: 4.507, Average Loss: 4.221, avg. samples / sec: 1002.49
Iteration:  13900, Loss function: 4.195, Average Loss: 4.220, avg. samples / sec: 1018.95
Iteration:  13920, Loss function: 4.073, Average Loss: 4.219, avg. samples / sec: 1041.58
Iteration:  13940, Loss function: 4.064, Average Loss: 4.218, avg. samples / sec: 1004.58
Iteration:  13960, Loss function: 4.367, Average Loss: 4.218, avg. samples / sec: 1009.84
Iteration:  13980, Loss function: 4.297, Average Loss: 4.217, avg. samples / sec: 969.87
Iteration:  14000, Loss function: 4.234, Average Loss: 4.216, avg. samples / sec: 981.33
Iteration:  14020, Loss function: 4.339, Average Loss: 4.216, avg. samples / sec: 940.21
Iteration:  14040, Loss function: 4.303, Average Loss: 4.215, avg. samples / sec: 1118.99
Iteration:  14060, Loss function: 4.075, Average Loss: 4.213, avg. samples / sec: 1070.70
Iteration:  14080, Loss function: 4.372, Average Loss: 4.212, avg. samples / sec: 960.51
Iteration:  14100, Loss function: 4.337, Average Loss: 4.211, avg. samples / sec: 1003.15
Iteration:  14120, Loss function: 4.255, Average Loss: 4.210, avg. samples / sec: 999.73
Iteration:  14140, Loss function: 4.342, Average Loss: 4.208, avg. samples / sec: 953.40
Iteration:  14160, Loss function: 4.154, Average Loss: 4.207, avg. samples / sec: 993.88
Iteration:  14180, Loss function: 4.045, Average Loss: 4.206, avg. samples / sec: 981.25
Iteration:  14200, Loss function: 4.319, Average Loss: 4.205, avg. samples / sec: 1073.21
Iteration:  14220, Loss function: 4.213, Average Loss: 4.205, avg. samples / sec: 993.65
Iteration:  14240, Loss function: 3.986, Average Loss: 4.205, avg. samples / sec: 946.92
Iteration:  14260, Loss function: 4.129, Average Loss: 4.205, avg. samples / sec: 984.19
Iteration:  14280, Loss function: 4.027, Average Loss: 4.204, avg. samples / sec: 1005.02
Iteration:  14300, Loss function: 4.126, Average Loss: 4.204, avg. samples / sec: 951.25
Iteration:  14320, Loss function: 4.196, Average Loss: 4.202, avg. samples / sec: 1069.06
Iteration:  14340, Loss function: 4.184, Average Loss: 4.203, avg. samples / sec: 954.09
Iteration:  14360, Loss function: 4.426, Average Loss: 4.202, avg. samples / sec: 1021.77
Iteration:  14380, Loss function: 4.453, Average Loss: 4.203, avg. samples / sec: 982.33
Iteration:  14400, Loss function: 4.199, Average Loss: 4.202, avg. samples / sec: 993.73
:::MLLOG {"namespace": "", "time_ms": 1639128259458, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1639128259459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 15, "current_iter_num": 14402}}
Iteration:  14420, Loss function: 4.107, Average Loss: 4.199, avg. samples / sec: 1029.60
Iteration:  14440, Loss function: 3.940, Average Loss: 4.196, avg. samples / sec: 998.42
Iteration:  14460, Loss function: 4.212, Average Loss: 4.195, avg. samples / sec: 1066.47
Iteration:  14480, Loss function: 3.885, Average Loss: 4.193, avg. samples / sec: 965.05
Iteration:  14500, Loss function: 4.138, Average Loss: 4.192, avg. samples / sec: 1011.42
Iteration:  14520, Loss function: 4.032, Average Loss: 4.191, avg. samples / sec: 1080.19
Iteration:  14540, Loss function: 4.190, Average Loss: 4.189, avg. samples / sec: 1076.56
Iteration:  14560, Loss function: 4.184, Average Loss: 4.189, avg. samples / sec: 1012.64
Iteration:  14580, Loss function: 4.331, Average Loss: 4.188, avg. samples / sec: 1066.64
Iteration:  14600, Loss function: 3.995, Average Loss: 4.188, avg. samples / sec: 1013.44
Iteration:  14620, Loss function: 4.348, Average Loss: 4.186, avg. samples / sec: 1026.47
Iteration:  14640, Loss function: 4.071, Average Loss: 4.186, avg. samples / sec: 1050.87
Iteration:  14660, Loss function: 3.759, Average Loss: 4.185, avg. samples / sec: 1021.95
Iteration:  14680, Loss function: 4.147, Average Loss: 4.184, avg. samples / sec: 957.43
Iteration:  14700, Loss function: 4.428, Average Loss: 4.185, avg. samples / sec: 1003.88
Iteration:  14720, Loss function: 4.054, Average Loss: 4.184, avg. samples / sec: 1006.79
Iteration:  14740, Loss function: 4.033, Average Loss: 4.184, avg. samples / sec: 1006.29
Iteration:  14760, Loss function: 4.021, Average Loss: 4.184, avg. samples / sec: 953.68
Iteration:  14780, Loss function: 4.165, Average Loss: 4.184, avg. samples / sec: 975.53
Iteration:  14800, Loss function: 4.028, Average Loss: 4.183, avg. samples / sec: 996.26
Iteration:  14820, Loss function: 4.080, Average Loss: 4.182, avg. samples / sec: 992.34
Iteration:  14840, Loss function: 4.201, Average Loss: 4.180, avg. samples / sec: 1019.90
Iteration:  14860, Loss function: 4.228, Average Loss: 4.179, avg. samples / sec: 1056.99
Iteration:  14880, Loss function: 4.122, Average Loss: 4.178, avg. samples / sec: 1029.30
Iteration:  14900, Loss function: 4.238, Average Loss: 4.178, avg. samples / sec: 1020.39
Iteration:  14920, Loss function: 3.987, Average Loss: 4.177, avg. samples / sec: 1005.37
Iteration:  14940, Loss function: 4.301, Average Loss: 4.176, avg. samples / sec: 994.12
Iteration:  14960, Loss function: 3.899, Average Loss: 4.175, avg. samples / sec: 1024.19
Iteration:  14980, Loss function: 4.344, Average Loss: 4.175, avg. samples / sec: 937.68
Iteration:  15000, Loss function: 4.302, Average Loss: 4.173, avg. samples / sec: 1008.24
Iteration:  15020, Loss function: 4.140, Average Loss: 4.174, avg. samples / sec: 1042.10
Iteration:  15040, Loss function: 4.170, Average Loss: 4.174, avg. samples / sec: 939.56
Iteration:  15060, Loss function: 3.855, Average Loss: 4.173, avg. samples / sec: 1025.18
Iteration:  15080, Loss function: 4.316, Average Loss: 4.172, avg. samples / sec: 1070.18
Iteration:  15100, Loss function: 4.198, Average Loss: 4.172, avg. samples / sec: 1006.26
Iteration:  15120, Loss function: 4.013, Average Loss: 4.170, avg. samples / sec: 1004.83
Iteration:  15140, Loss function: 4.073, Average Loss: 4.169, avg. samples / sec: 994.96
Iteration:  15160, Loss function: 4.270, Average Loss: 4.169, avg. samples / sec: 974.40
Iteration:  15180, Loss function: 4.074, Average Loss: 4.170, avg. samples / sec: 1000.69
Iteration:  15200, Loss function: 4.116, Average Loss: 4.170, avg. samples / sec: 997.88
Iteration:  15220, Loss function: 4.308, Average Loss: 4.171, avg. samples / sec: 992.45
Iteration:  15240, Loss function: 4.286, Average Loss: 4.171, avg. samples / sec: 1035.65
Iteration:  15260, Loss function: 4.095, Average Loss: 4.170, avg. samples / sec: 972.78
Iteration:  15280, Loss function: 3.969, Average Loss: 4.170, avg. samples / sec: 947.79
Iteration:  15300, Loss function: 4.151, Average Loss: 4.169, avg. samples / sec: 1053.27
Iteration:  15320, Loss function: 4.187, Average Loss: 4.167, avg. samples / sec: 1009.74
Iteration:  15340, Loss function: 4.020, Average Loss: 4.167, avg. samples / sec: 1003.19
Iteration:  15360, Loss function: 4.232, Average Loss: 4.167, avg. samples / sec: 1017.37
Iteration:  15380, Loss function: 3.993, Average Loss: 4.166, avg. samples / sec: 936.05
Iteration:  15400, Loss function: 4.546, Average Loss: 4.167, avg. samples / sec: 1007.16
Iteration:  15420, Loss function: 4.293, Average Loss: 4.167, avg. samples / sec: 986.57
:::MLLOG {"namespace": "", "time_ms": 1639128375816, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1639128375818, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 16, "current_iter_num": 15430}}
Iteration:  15440, Loss function: 4.177, Average Loss: 4.167, avg. samples / sec: 1020.81
Iteration:  15460, Loss function: 4.105, Average Loss: 4.165, avg. samples / sec: 1044.89
Iteration:  15480, Loss function: 4.196, Average Loss: 4.163, avg. samples / sec: 983.46
Iteration:  15500, Loss function: 4.120, Average Loss: 4.163, avg. samples / sec: 1002.07
Iteration:  15520, Loss function: 3.996, Average Loss: 4.162, avg. samples / sec: 990.88
Iteration:  15540, Loss function: 4.469, Average Loss: 4.162, avg. samples / sec: 1002.17
Iteration:  15560, Loss function: 4.250, Average Loss: 4.161, avg. samples / sec: 1060.71
Iteration:  15580, Loss function: 4.685, Average Loss: 4.161, avg. samples / sec: 1040.86
Iteration:  15600, Loss function: 4.291, Average Loss: 4.160, avg. samples / sec: 1032.95
Iteration:  15620, Loss function: 3.922, Average Loss: 4.159, avg. samples / sec: 980.83
Iteration:  15640, Loss function: 3.922, Average Loss: 4.157, avg. samples / sec: 979.88
Iteration:  15660, Loss function: 4.003, Average Loss: 4.154, avg. samples / sec: 987.23
Iteration:  15680, Loss function: 4.277, Average Loss: 4.154, avg. samples / sec: 1059.76
Iteration:  15700, Loss function: 4.133, Average Loss: 4.153, avg. samples / sec: 987.76
Iteration:  15720, Loss function: 3.942, Average Loss: 4.151, avg. samples / sec: 1041.15
Iteration:  15740, Loss function: 4.098, Average Loss: 4.149, avg. samples / sec: 1026.77
Iteration:  15760, Loss function: 3.813, Average Loss: 4.148, avg. samples / sec: 961.17
Iteration:  15780, Loss function: 4.165, Average Loss: 4.148, avg. samples / sec: 1013.75
Iteration:  15800, Loss function: 3.745, Average Loss: 4.147, avg. samples / sec: 960.75
Iteration:  15820, Loss function: 4.611, Average Loss: 4.147, avg. samples / sec: 986.84
Iteration:  15840, Loss function: 4.446, Average Loss: 4.146, avg. samples / sec: 982.83
Iteration:  15860, Loss function: 4.150, Average Loss: 4.145, avg. samples / sec: 967.64
Iteration:  15880, Loss function: 3.893, Average Loss: 4.143, avg. samples / sec: 1030.77
Iteration:  15900, Loss function: 3.945, Average Loss: 4.141, avg. samples / sec: 1029.04
Iteration:  15920, Loss function: 4.079, Average Loss: 4.140, avg. samples / sec: 970.56
Iteration:  15940, Loss function: 4.195, Average Loss: 4.141, avg. samples / sec: 1044.66
Iteration:  15960, Loss function: 4.068, Average Loss: 4.139, avg. samples / sec: 1029.06
Iteration:  15980, Loss function: 4.174, Average Loss: 4.138, avg. samples / sec: 1027.95
Iteration:  16000, Loss function: 4.015, Average Loss: 4.138, avg. samples / sec: 980.09
Iteration:  16020, Loss function: 4.277, Average Loss: 4.136, avg. samples / sec: 974.41
Iteration:  16040, Loss function: 3.896, Average Loss: 4.136, avg. samples / sec: 965.88
Iteration:  16060, Loss function: 3.940, Average Loss: 4.134, avg. samples / sec: 1062.13
Iteration:  16080, Loss function: 4.102, Average Loss: 4.134, avg. samples / sec: 960.21
Iteration:  16100, Loss function: 4.232, Average Loss: 4.135, avg. samples / sec: 950.43
Iteration:  16120, Loss function: 4.144, Average Loss: 4.134, avg. samples / sec: 996.34
Iteration:  16140, Loss function: 3.804, Average Loss: 4.133, avg. samples / sec: 989.15
Iteration:  16160, Loss function: 3.893, Average Loss: 4.132, avg. samples / sec: 1002.05
Iteration:  16180, Loss function: 4.281, Average Loss: 4.131, avg. samples / sec: 1002.05
Iteration:  16200, Loss function: 4.171, Average Loss: 4.131, avg. samples / sec: 975.75
Iteration:  16220, Loss function: 4.123, Average Loss: 4.131, avg. samples / sec: 991.63
Iteration:  16240, Loss function: 4.084, Average Loss: 4.129, avg. samples / sec: 998.38
Iteration:  16260, Loss function: 4.224, Average Loss: 4.129, avg. samples / sec: 1054.82
Iteration:  16280, Loss function: 4.103, Average Loss: 4.129, avg. samples / sec: 1019.62
Iteration:  16300, Loss function: 3.973, Average Loss: 4.128, avg. samples / sec: 1085.41
Iteration:  16320, Loss function: 4.090, Average Loss: 4.130, avg. samples / sec: 1022.29
Iteration:  16340, Loss function: 4.215, Average Loss: 4.129, avg. samples / sec: 972.27
Iteration:  16360, Loss function: 3.953, Average Loss: 4.130, avg. samples / sec: 1013.16
Iteration:  16380, Loss function: 3.984, Average Loss: 4.129, avg. samples / sec: 993.40
Iteration:  16400, Loss function: 3.955, Average Loss: 4.129, avg. samples / sec: 977.23
Iteration:  16420, Loss function: 3.791, Average Loss: 4.129, avg. samples / sec: 969.40
Iteration:  16440, Loss function: 3.934, Average Loss: 4.130, avg. samples / sec: 980.90
:::MLLOG {"namespace": "", "time_ms": 1639128492792, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1639128492793, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 17, "current_iter_num": 16459}}
Iteration:  16460, Loss function: 4.370, Average Loss: 4.131, avg. samples / sec: 1029.21
Iteration:  16480, Loss function: 4.005, Average Loss: 4.130, avg. samples / sec: 1065.78
Iteration:  16500, Loss function: 4.219, Average Loss: 4.129, avg. samples / sec: 983.01
Iteration:  16520, Loss function: 3.955, Average Loss: 4.127, avg. samples / sec: 1027.69
Iteration:  16540, Loss function: 3.927, Average Loss: 4.126, avg. samples / sec: 1036.55
Iteration:  16560, Loss function: 3.966, Average Loss: 4.123, avg. samples / sec: 959.29
Iteration:  16580, Loss function: 4.031, Average Loss: 4.121, avg. samples / sec: 1017.48
Iteration:  16600, Loss function: 4.328, Average Loss: 4.120, avg. samples / sec: 1053.74
Iteration:  16620, Loss function: 4.275, Average Loss: 4.119, avg. samples / sec: 988.70
Iteration:  16640, Loss function: 3.901, Average Loss: 4.119, avg. samples / sec: 1008.08
Iteration:  16660, Loss function: 4.587, Average Loss: 4.119, avg. samples / sec: 1006.48
Iteration:  16680, Loss function: 4.176, Average Loss: 4.117, avg. samples / sec: 993.90
Iteration:  16700, Loss function: 4.159, Average Loss: 4.116, avg. samples / sec: 1035.71
Iteration:  16720, Loss function: 3.850, Average Loss: 4.116, avg. samples / sec: 1032.33
Iteration:  16740, Loss function: 4.202, Average Loss: 4.114, avg. samples / sec: 1026.81
Iteration:  16760, Loss function: 4.036, Average Loss: 4.113, avg. samples / sec: 938.33
Iteration:  16780, Loss function: 3.728, Average Loss: 4.112, avg. samples / sec: 1033.20
Iteration:  16800, Loss function: 4.202, Average Loss: 4.111, avg. samples / sec: 1002.23
Iteration:  16820, Loss function: 4.139, Average Loss: 4.110, avg. samples / sec: 1039.40
Iteration:  16840, Loss function: 4.324, Average Loss: 4.110, avg. samples / sec: 1028.65
Iteration:  16860, Loss function: 4.180, Average Loss: 4.110, avg. samples / sec: 1007.55
Iteration:  16880, Loss function: 3.897, Average Loss: 4.109, avg. samples / sec: 1038.40
Iteration:  16900, Loss function: 4.278, Average Loss: 4.109, avg. samples / sec: 1041.52
Iteration:  16920, Loss function: 4.014, Average Loss: 4.107, avg. samples / sec: 934.91
Iteration:  16940, Loss function: 3.965, Average Loss: 4.106, avg. samples / sec: 1008.37
Iteration:  16960, Loss function: 4.334, Average Loss: 4.105, avg. samples / sec: 1016.09
Iteration:  16980, Loss function: 4.214, Average Loss: 4.105, avg. samples / sec: 1051.72
Iteration:  17000, Loss function: 4.125, Average Loss: 4.105, avg. samples / sec: 1015.04
Iteration:  17020, Loss function: 4.158, Average Loss: 4.104, avg. samples / sec: 971.11
Iteration:  17040, Loss function: 3.973, Average Loss: 4.104, avg. samples / sec: 1010.97
Iteration:  17060, Loss function: 4.093, Average Loss: 4.104, avg. samples / sec: 975.80
Iteration:  17080, Loss function: 4.068, Average Loss: 4.103, avg. samples / sec: 931.68
Iteration:  17100, Loss function: 4.133, Average Loss: 4.102, avg. samples / sec: 1002.25
Iteration:  17120, Loss function: 4.168, Average Loss: 4.100, avg. samples / sec: 998.84
Iteration:  17140, Loss function: 4.137, Average Loss: 4.099, avg. samples / sec: 1026.75
Iteration:  17160, Loss function: 3.737, Average Loss: 4.098, avg. samples / sec: 1012.23
Iteration:  17180, Loss function: 4.322, Average Loss: 4.098, avg. samples / sec: 1007.37
Iteration:  17200, Loss function: 4.213, Average Loss: 4.099, avg. samples / sec: 1039.50
Iteration:  17220, Loss function: 4.224, Average Loss: 4.099, avg. samples / sec: 1042.67
Iteration:  17240, Loss function: 3.945, Average Loss: 4.097, avg. samples / sec: 975.99
Iteration:  17260, Loss function: 4.235, Average Loss: 4.097, avg. samples / sec: 1007.43
Iteration:  17280, Loss function: 4.289, Average Loss: 4.096, avg. samples / sec: 1047.43
Iteration:  17300, Loss function: 4.045, Average Loss: 4.095, avg. samples / sec: 921.92
Iteration:  17320, Loss function: 4.098, Average Loss: 4.096, avg. samples / sec: 1102.53
Iteration:  17340, Loss function: 3.836, Average Loss: 4.096, avg. samples / sec: 968.47
Iteration:  17360, Loss function: 4.064, Average Loss: 4.096, avg. samples / sec: 953.82
Iteration:  17380, Loss function: 4.021, Average Loss: 4.095, avg. samples / sec: 1064.11
Iteration:  17400, Loss function: 3.937, Average Loss: 4.096, avg. samples / sec: 1027.57
Iteration:  17420, Loss function: 3.940, Average Loss: 4.095, avg. samples / sec: 993.57
Iteration:  17440, Loss function: 3.798, Average Loss: 4.094, avg. samples / sec: 1023.13
Iteration:  17460, Loss function: 4.393, Average Loss: 4.095, avg. samples / sec: 991.07
Iteration:  17480, Loss function: 4.183, Average Loss: 4.095, avg. samples / sec: 1020.26
:::MLLOG {"namespace": "", "time_ms": 1639128609142, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1639128609144, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 18, "current_iter_num": 17488}}
Iteration:  17500, Loss function: 3.830, Average Loss: 4.093, avg. samples / sec: 1005.53
Iteration:  17520, Loss function: 3.828, Average Loss: 4.092, avg. samples / sec: 997.75
Iteration:  17540, Loss function: 3.942, Average Loss: 4.090, avg. samples / sec: 996.69
Iteration:  17560, Loss function: 4.062, Average Loss: 4.089, avg. samples / sec: 1022.36
Iteration:  17580, Loss function: 3.728, Average Loss: 4.089, avg. samples / sec: 1092.45
Iteration:  17600, Loss function: 3.986, Average Loss: 4.088, avg. samples / sec: 1021.01
Iteration:  17620, Loss function: 4.119, Average Loss: 4.087, avg. samples / sec: 1032.18
Iteration:  17640, Loss function: 4.016, Average Loss: 4.086, avg. samples / sec: 1055.14
Iteration:  17660, Loss function: 3.843, Average Loss: 4.085, avg. samples / sec: 952.08
Iteration:  17680, Loss function: 3.697, Average Loss: 4.083, avg. samples / sec: 933.36
Iteration:  17700, Loss function: 4.091, Average Loss: 4.082, avg. samples / sec: 976.38
Iteration:  17720, Loss function: 3.788, Average Loss: 4.080, avg. samples / sec: 1001.67
Iteration:  17740, Loss function: 4.199, Average Loss: 4.078, avg. samples / sec: 977.79
Iteration:  17760, Loss function: 4.068, Average Loss: 4.077, avg. samples / sec: 957.54
Iteration:  17780, Loss function: 4.251, Average Loss: 4.077, avg. samples / sec: 1100.85
Iteration:  17800, Loss function: 3.942, Average Loss: 4.076, avg. samples / sec: 1034.43
Iteration:  17820, Loss function: 3.843, Average Loss: 4.075, avg. samples / sec: 1037.60
Iteration:  17840, Loss function: 3.861, Average Loss: 4.074, avg. samples / sec: 1048.88
Iteration:  17860, Loss function: 3.824, Average Loss: 4.074, avg. samples / sec: 1069.89
Iteration:  17880, Loss function: 3.962, Average Loss: 4.073, avg. samples / sec: 1022.04
Iteration:  17900, Loss function: 4.111, Average Loss: 4.072, avg. samples / sec: 1004.31
Iteration:  17920, Loss function: 4.090, Average Loss: 4.070, avg. samples / sec: 1008.82
Iteration:  17940, Loss function: 4.015, Average Loss: 4.068, avg. samples / sec: 1006.58
Iteration:  17960, Loss function: 3.783, Average Loss: 4.068, avg. samples / sec: 1014.78
Iteration:  17980, Loss function: 4.031, Average Loss: 4.067, avg. samples / sec: 1041.13
Iteration:  18000, Loss function: 4.140, Average Loss: 4.066, avg. samples / sec: 971.33
Iteration:  18020, Loss function: 4.169, Average Loss: 4.066, avg. samples / sec: 1042.38
Iteration:  18040, Loss function: 4.277, Average Loss: 4.064, avg. samples / sec: 1020.20
Iteration:  18060, Loss function: 4.169, Average Loss: 4.064, avg. samples / sec: 1006.76
Iteration:  18080, Loss function: 4.278, Average Loss: 4.064, avg. samples / sec: 1018.67
Iteration:  18100, Loss function: 3.714, Average Loss: 4.064, avg. samples / sec: 923.08
Iteration:  18120, Loss function: 4.094, Average Loss: 4.065, avg. samples / sec: 948.98
Iteration:  18140, Loss function: 4.086, Average Loss: 4.066, avg. samples / sec: 935.26
Iteration:  18160, Loss function: 4.148, Average Loss: 4.067, avg. samples / sec: 946.15
Iteration:  18180, Loss function: 3.906, Average Loss: 4.066, avg. samples / sec: 998.58
Iteration:  18200, Loss function: 4.294, Average Loss: 4.065, avg. samples / sec: 1021.65
Iteration:  18220, Loss function: 4.208, Average Loss: 4.065, avg. samples / sec: 984.44
Iteration:  18240, Loss function: 3.881, Average Loss: 4.064, avg. samples / sec: 957.02
Iteration:  18260, Loss function: 3.989, Average Loss: 4.063, avg. samples / sec: 950.53
Iteration:  18280, Loss function: 4.296, Average Loss: 4.063, avg. samples / sec: 971.42
Iteration:  18300, Loss function: 4.208, Average Loss: 4.063, avg. samples / sec: 1013.33
Iteration:  18320, Loss function: 4.169, Average Loss: 4.062, avg. samples / sec: 1040.78
Iteration:  18340, Loss function: 3.747, Average Loss: 4.061, avg. samples / sec: 1005.22
Iteration:  18360, Loss function: 4.265, Average Loss: 4.060, avg. samples / sec: 993.84
Iteration:  18380, Loss function: 3.845, Average Loss: 4.061, avg. samples / sec: 972.00
Iteration:  18400, Loss function: 4.121, Average Loss: 4.060, avg. samples / sec: 1038.55
Iteration:  18420, Loss function: 4.066, Average Loss: 4.060, avg. samples / sec: 973.63
Iteration:  18440, Loss function: 4.208, Average Loss: 4.060, avg. samples / sec: 986.99
Iteration:  18460, Loss function: 3.941, Average Loss: 4.061, avg. samples / sec: 931.49
Iteration:  18480, Loss function: 4.091, Average Loss: 4.060, avg. samples / sec: 1018.55
Iteration:  18500, Loss function: 3.972, Average Loss: 4.060, avg. samples / sec: 933.17
:::MLLOG {"namespace": "", "time_ms": 1639128726520, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1639128726522, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 19, "current_iter_num": 18516}}
Iteration:  18520, Loss function: 3.898, Average Loss: 4.059, avg. samples / sec: 1000.35
Iteration:  18540, Loss function: 4.212, Average Loss: 4.058, avg. samples / sec: 1048.05
Iteration:  18560, Loss function: 3.808, Average Loss: 4.056, avg. samples / sec: 1054.51
Iteration:  18580, Loss function: 3.776, Average Loss: 4.054, avg. samples / sec: 1098.58
Iteration:  18600, Loss function: 3.910, Average Loss: 4.052, avg. samples / sec: 896.16
Iteration:  18620, Loss function: 4.236, Average Loss: 4.051, avg. samples / sec: 954.14
Iteration:  18640, Loss function: 4.105, Average Loss: 4.051, avg. samples / sec: 961.95
Iteration:  18660, Loss function: 4.168, Average Loss: 4.051, avg. samples / sec: 1066.01
Iteration:  18680, Loss function: 4.191, Average Loss: 4.051, avg. samples / sec: 1051.53
Iteration:  18700, Loss function: 4.180, Average Loss: 4.051, avg. samples / sec: 1038.77
Iteration:  18720, Loss function: 3.869, Average Loss: 4.050, avg. samples / sec: 904.47
Iteration:  18740, Loss function: 3.956, Average Loss: 4.049, avg. samples / sec: 1046.90
Iteration:  18760, Loss function: 3.951, Average Loss: 4.049, avg. samples / sec: 1007.00
Iteration:  18780, Loss function: 4.205, Average Loss: 4.047, avg. samples / sec: 948.30
Iteration:  18800, Loss function: 4.302, Average Loss: 4.047, avg. samples / sec: 959.87
Iteration:  18820, Loss function: 4.222, Average Loss: 4.047, avg. samples / sec: 1053.64
Iteration:  18840, Loss function: 3.933, Average Loss: 4.048, avg. samples / sec: 1036.80
Iteration:  18860, Loss function: 4.062, Average Loss: 4.045, avg. samples / sec: 1035.59
Iteration:  18880, Loss function: 4.144, Average Loss: 4.045, avg. samples / sec: 988.32
Iteration:  18900, Loss function: 4.023, Average Loss: 4.045, avg. samples / sec: 1024.17
Iteration:  18920, Loss function: 3.998, Average Loss: 4.045, avg. samples / sec: 925.76
Iteration:  18940, Loss function: 3.954, Average Loss: 4.044, avg. samples / sec: 991.54
Iteration:  18960, Loss function: 4.243, Average Loss: 4.043, avg. samples / sec: 977.19
Iteration:  18980, Loss function: 3.923, Average Loss: 4.042, avg. samples / sec: 1054.04
Iteration:  19000, Loss function: 4.239, Average Loss: 4.040, avg. samples / sec: 1048.21
Iteration:  19020, Loss function: 4.235, Average Loss: 4.039, avg. samples / sec: 993.61
Iteration:  19040, Loss function: 4.259, Average Loss: 4.039, avg. samples / sec: 1054.17
Iteration:  19060, Loss function: 4.087, Average Loss: 4.038, avg. samples / sec: 1014.46
Iteration:  19080, Loss function: 4.191, Average Loss: 4.038, avg. samples / sec: 965.50
Iteration:  19100, Loss function: 3.815, Average Loss: 4.037, avg. samples / sec: 1027.67
Iteration:  19120, Loss function: 4.200, Average Loss: 4.038, avg. samples / sec: 1029.69
Iteration:  19140, Loss function: 4.209, Average Loss: 4.039, avg. samples / sec: 986.09
Iteration:  19160, Loss function: 4.036, Average Loss: 4.038, avg. samples / sec: 1130.27
Iteration:  19180, Loss function: 3.682, Average Loss: 4.036, avg. samples / sec: 971.18
Iteration:  19200, Loss function: 3.914, Average Loss: 4.036, avg. samples / sec: 973.90
Iteration:  19220, Loss function: 4.200, Average Loss: 4.035, avg. samples / sec: 982.23
Iteration:  19240, Loss function: 3.728, Average Loss: 4.035, avg. samples / sec: 1004.43
Iteration:  19260, Loss function: 4.040, Average Loss: 4.034, avg. samples / sec: 999.53
Iteration:  19280, Loss function: 4.230, Average Loss: 4.033, avg. samples / sec: 928.08
Iteration:  19300, Loss function: 4.039, Average Loss: 4.032, avg. samples / sec: 947.22
Iteration:  19320, Loss function: 3.951, Average Loss: 4.031, avg. samples / sec: 954.64
Iteration:  19340, Loss function: 3.583, Average Loss: 4.033, avg. samples / sec: 1103.03
Iteration:  19360, Loss function: 4.261, Average Loss: 4.033, avg. samples / sec: 1041.28
Iteration:  19380, Loss function: 3.822, Average Loss: 4.032, avg. samples / sec: 1039.37
Iteration:  19400, Loss function: 3.938, Average Loss: 4.032, avg. samples / sec: 1010.92
Iteration:  19420, Loss function: 3.929, Average Loss: 4.032, avg. samples / sec: 1013.39
Iteration:  19440, Loss function: 4.051, Average Loss: 4.031, avg. samples / sec: 937.95
Iteration:  19460, Loss function: 4.151, Average Loss: 4.031, avg. samples / sec: 954.88
Iteration:  19480, Loss function: 3.866, Average Loss: 4.030, avg. samples / sec: 985.77
Iteration:  19500, Loss function: 3.825, Average Loss: 4.029, avg. samples / sec: 1025.90
Iteration:  19520, Loss function: 4.227, Average Loss: 4.030, avg. samples / sec: 1000.19
Iteration:  19540, Loss function: 3.957, Average Loss: 4.031, avg. samples / sec: 1011.90
:::MLLOG {"namespace": "", "time_ms": 1639128843534, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1639128843535, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 20, "current_iter_num": 19545}}
Iteration:  19560, Loss function: 3.784, Average Loss: 4.029, avg. samples / sec: 1020.82
Iteration:  19580, Loss function: 3.936, Average Loss: 4.027, avg. samples / sec: 991.17
Iteration:  19600, Loss function: 4.138, Average Loss: 4.027, avg. samples / sec: 943.96
Iteration:  19620, Loss function: 4.022, Average Loss: 4.025, avg. samples / sec: 928.76
Iteration:  19640, Loss function: 3.955, Average Loss: 4.024, avg. samples / sec: 967.81
Iteration:  19660, Loss function: 3.924, Average Loss: 4.023, avg. samples / sec: 991.51
Iteration:  19680, Loss function: 4.306, Average Loss: 4.022, avg. samples / sec: 956.57
Iteration:  19700, Loss function: 4.145, Average Loss: 4.022, avg. samples / sec: 1043.62
Iteration:  19720, Loss function: 4.161, Average Loss: 4.022, avg. samples / sec: 1026.72
Iteration:  19740, Loss function: 4.041, Average Loss: 4.021, avg. samples / sec: 962.88
Iteration:  19760, Loss function: 4.063, Average Loss: 4.021, avg. samples / sec: 981.69
Iteration:  19780, Loss function: 4.056, Average Loss: 4.021, avg. samples / sec: 1026.68
Iteration:  19800, Loss function: 4.035, Average Loss: 4.020, avg. samples / sec: 981.17
Iteration:  19820, Loss function: 3.918, Average Loss: 4.020, avg. samples / sec: 1013.08
Iteration:  19840, Loss function: 4.079, Average Loss: 4.019, avg. samples / sec: 1023.48
Iteration:  19860, Loss function: 3.783, Average Loss: 4.018, avg. samples / sec: 922.94
Iteration:  19880, Loss function: 4.032, Average Loss: 4.017, avg. samples / sec: 996.99
Iteration:  19900, Loss function: 4.017, Average Loss: 4.015, avg. samples / sec: 1030.16
Iteration:  19920, Loss function: 4.051, Average Loss: 4.014, avg. samples / sec: 968.01
Iteration:  19940, Loss function: 3.899, Average Loss: 4.014, avg. samples / sec: 1058.26
Iteration:  19960, Loss function: 3.980, Average Loss: 4.014, avg. samples / sec: 979.33
Iteration:  19980, Loss function: 3.986, Average Loss: 4.014, avg. samples / sec: 1060.64
Iteration:  20000, Loss function: 3.771, Average Loss: 4.013, avg. samples / sec: 1011.31
Iteration:  20020, Loss function: 3.753, Average Loss: 4.011, avg. samples / sec: 1040.17
Iteration:  20040, Loss function: 4.015, Average Loss: 4.010, avg. samples / sec: 1095.69
Iteration:  20060, Loss function: 3.921, Average Loss: 4.007, avg. samples / sec: 1016.47
Iteration:  20080, Loss function: 3.885, Average Loss: 4.008, avg. samples / sec: 939.74
Iteration:  20100, Loss function: 4.095, Average Loss: 4.008, avg. samples / sec: 969.05
Iteration:  20120, Loss function: 4.009, Average Loss: 4.008, avg. samples / sec: 1053.12
Iteration:  20140, Loss function: 3.893, Average Loss: 4.007, avg. samples / sec: 1004.12
Iteration:  20160, Loss function: 3.837, Average Loss: 4.008, avg. samples / sec: 1053.52
Iteration:  20180, Loss function: 3.844, Average Loss: 4.008, avg. samples / sec: 917.25
Iteration:  20200, Loss function: 4.037, Average Loss: 4.009, avg. samples / sec: 996.19
Iteration:  20220, Loss function: 3.908, Average Loss: 4.009, avg. samples / sec: 1031.90
Iteration:  20240, Loss function: 3.942, Average Loss: 4.008, avg. samples / sec: 945.02
Iteration:  20260, Loss function: 3.962, Average Loss: 4.008, avg. samples / sec: 892.21
Iteration:  20280, Loss function: 3.673, Average Loss: 4.006, avg. samples / sec: 1002.27
Iteration:  20300, Loss function: 4.225, Average Loss: 4.006, avg. samples / sec: 973.63
Iteration:  20320, Loss function: 4.082, Average Loss: 4.006, avg. samples / sec: 1073.99
Iteration:  20340, Loss function: 4.035, Average Loss: 4.007, avg. samples / sec: 988.31
Iteration:  20360, Loss function: 3.843, Average Loss: 4.005, avg. samples / sec: 1046.16
Iteration:  20380, Loss function: 4.047, Average Loss: 4.006, avg. samples / sec: 942.06
Iteration:  20400, Loss function: 3.937, Average Loss: 4.007, avg. samples / sec: 1038.10
Iteration:  20420, Loss function: 3.840, Average Loss: 4.008, avg. samples / sec: 951.24
Iteration:  20440, Loss function: 4.028, Average Loss: 4.008, avg. samples / sec: 914.78
Iteration:  20460, Loss function: 4.076, Average Loss: 4.008, avg. samples / sec: 1032.99
Iteration:  20480, Loss function: 3.908, Average Loss: 4.008, avg. samples / sec: 997.20
Iteration:  20500, Loss function: 3.733, Average Loss: 4.007, avg. samples / sec: 990.09
Iteration:  20520, Loss function: 3.864, Average Loss: 4.008, avg. samples / sec: 983.35
Iteration:  20540, Loss function: 3.746, Average Loss: 4.007, avg. samples / sec: 969.46
Iteration:  20560, Loss function: 4.079, Average Loss: 4.007, avg. samples / sec: 1028.27
:::MLLOG {"namespace": "", "time_ms": 1639128961506, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1639128961508, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 21, "current_iter_num": 20573}}
Iteration:  20580, Loss function: 4.023, Average Loss: 4.008, avg. samples / sec: 997.36
Iteration:  20600, Loss function: 3.994, Average Loss: 4.006, avg. samples / sec: 1014.04
Iteration:  20620, Loss function: 4.019, Average Loss: 4.005, avg. samples / sec: 992.75
Iteration:  20640, Loss function: 4.131, Average Loss: 4.003, avg. samples / sec: 1028.67
Iteration:  20660, Loss function: 3.938, Average Loss: 4.002, avg. samples / sec: 1004.42
Iteration:  20680, Loss function: 4.031, Average Loss: 4.000, avg. samples / sec: 996.20
Iteration:  20700, Loss function: 3.666, Average Loss: 3.998, avg. samples / sec: 967.59
Iteration:  20720, Loss function: 3.925, Average Loss: 3.998, avg. samples / sec: 1020.09
Iteration:  20740, Loss function: 4.090, Average Loss: 3.999, avg. samples / sec: 1070.12
Iteration:  20760, Loss function: 4.014, Average Loss: 3.997, avg. samples / sec: 1012.05
Iteration:  20780, Loss function: 4.012, Average Loss: 3.997, avg. samples / sec: 965.39
Iteration:  20800, Loss function: 3.803, Average Loss: 3.997, avg. samples / sec: 1036.79
Iteration:  20820, Loss function: 4.121, Average Loss: 3.996, avg. samples / sec: 1022.81
Iteration:  20840, Loss function: 3.940, Average Loss: 3.997, avg. samples / sec: 1007.33
Iteration:  20860, Loss function: 4.229, Average Loss: 3.996, avg. samples / sec: 988.23
Iteration:  20880, Loss function: 4.097, Average Loss: 3.997, avg. samples / sec: 1015.14
Iteration:  20900, Loss function: 3.904, Average Loss: 3.997, avg. samples / sec: 1029.18
Iteration:  20920, Loss function: 4.226, Average Loss: 3.997, avg. samples / sec: 1056.73
Iteration:  20940, Loss function: 4.184, Average Loss: 3.997, avg. samples / sec: 953.39
Iteration:  20960, Loss function: 3.852, Average Loss: 3.997, avg. samples / sec: 969.69
Iteration:  20980, Loss function: 4.001, Average Loss: 3.995, avg. samples / sec: 992.03
Iteration:  21000, Loss function: 3.983, Average Loss: 3.995, avg. samples / sec: 980.82
Iteration:  21020, Loss function: 3.843, Average Loss: 3.993, avg. samples / sec: 987.24
Iteration:  21040, Loss function: 4.081, Average Loss: 3.993, avg. samples / sec: 977.84
Iteration:  21060, Loss function: 3.711, Average Loss: 3.991, avg. samples / sec: 931.19
Iteration:  21080, Loss function: 4.228, Average Loss: 3.991, avg. samples / sec: 984.20
Iteration:  21100, Loss function: 4.160, Average Loss: 3.991, avg. samples / sec: 933.64
Iteration:  21120, Loss function: 3.810, Average Loss: 3.991, avg. samples / sec: 940.81
Iteration:  21140, Loss function: 3.926, Average Loss: 3.990, avg. samples / sec: 998.02
Iteration:  21160, Loss function: 4.265, Average Loss: 3.989, avg. samples / sec: 958.17
Iteration:  21180, Loss function: 3.860, Average Loss: 3.988, avg. samples / sec: 991.00
Iteration:  21200, Loss function: 4.213, Average Loss: 3.987, avg. samples / sec: 942.39
Iteration:  21220, Loss function: 3.753, Average Loss: 3.985, avg. samples / sec: 983.69
Iteration:  21240, Loss function: 3.649, Average Loss: 3.985, avg. samples / sec: 944.72
Iteration:  21260, Loss function: 3.849, Average Loss: 3.985, avg. samples / sec: 989.53
Iteration:  21280, Loss function: 4.096, Average Loss: 3.985, avg. samples / sec: 1056.81
Iteration:  21300, Loss function: 3.719, Average Loss: 3.983, avg. samples / sec: 1028.98
Iteration:  21320, Loss function: 3.731, Average Loss: 3.983, avg. samples / sec: 983.26
Iteration:  21340, Loss function: 3.815, Average Loss: 3.983, avg. samples / sec: 971.67
Iteration:  21360, Loss function: 3.875, Average Loss: 3.982, avg. samples / sec: 922.07
Iteration:  21380, Loss function: 4.192, Average Loss: 3.983, avg. samples / sec: 989.84
Iteration:  21400, Loss function: 4.144, Average Loss: 3.984, avg. samples / sec: 940.69
Iteration:  21420, Loss function: 3.720, Average Loss: 3.983, avg. samples / sec: 972.38
Iteration:  21440, Loss function: 4.214, Average Loss: 3.986, avg. samples / sec: 921.83
Iteration:  21460, Loss function: 3.727, Average Loss: 3.985, avg. samples / sec: 930.61
Iteration:  21480, Loss function: 3.876, Average Loss: 3.984, avg. samples / sec: 1045.30
Iteration:  21500, Loss function: 3.851, Average Loss: 3.985, avg. samples / sec: 1027.58
Iteration:  21520, Loss function: 3.804, Average Loss: 3.985, avg. samples / sec: 1046.51
Iteration:  21540, Loss function: 4.012, Average Loss: 3.983, avg. samples / sec: 1017.61
Iteration:  21560, Loss function: 4.015, Average Loss: 3.984, avg. samples / sec: 979.41
Iteration:  21580, Loss function: 3.849, Average Loss: 3.984, avg. samples / sec: 1001.68
Iteration:  21600, Loss function: 3.964, Average Loss: 3.983, avg. samples / sec: 993.70
:::MLLOG {"namespace": "", "time_ms": 1639129080119, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1639129080121, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 22, "current_iter_num": 21602}}
Iteration:  21620, Loss function: 3.858, Average Loss: 3.983, avg. samples / sec: 1050.15
Iteration:  21640, Loss function: 3.778, Average Loss: 3.982, avg. samples / sec: 1015.77
Iteration:  21660, Loss function: 4.065, Average Loss: 3.982, avg. samples / sec: 911.03
Iteration:  21680, Loss function: 4.018, Average Loss: 3.981, avg. samples / sec: 1042.07
Iteration:  21700, Loss function: 4.241, Average Loss: 3.981, avg. samples / sec: 980.42
Iteration:  21720, Loss function: 3.863, Average Loss: 3.980, avg. samples / sec: 1010.70
Iteration:  21740, Loss function: 3.852, Average Loss: 3.978, avg. samples / sec: 1035.56
Iteration:  21760, Loss function: 3.806, Average Loss: 3.977, avg. samples / sec: 1003.12
Iteration:  21780, Loss function: 4.005, Average Loss: 3.975, avg. samples / sec: 1027.77
Iteration:  21800, Loss function: 3.921, Average Loss: 3.976, avg. samples / sec: 1004.26
Iteration:  21820, Loss function: 3.789, Average Loss: 3.975, avg. samples / sec: 966.68
Iteration:  21840, Loss function: 3.683, Average Loss: 3.975, avg. samples / sec: 966.97
Iteration:  21860, Loss function: 4.055, Average Loss: 3.974, avg. samples / sec: 1048.36
Iteration:  21880, Loss function: 4.276, Average Loss: 3.974, avg. samples / sec: 995.16
Iteration:  21900, Loss function: 3.924, Average Loss: 3.975, avg. samples / sec: 1083.63
Iteration:  21920, Loss function: 3.884, Average Loss: 3.974, avg. samples / sec: 1051.33
Iteration:  21940, Loss function: 4.034, Average Loss: 3.974, avg. samples / sec: 1045.02
Iteration:  21960, Loss function: 4.231, Average Loss: 3.973, avg. samples / sec: 1010.89
Iteration:  21980, Loss function: 3.924, Average Loss: 3.972, avg. samples / sec: 1038.96
Iteration:  22000, Loss function: 3.755, Average Loss: 3.971, avg. samples / sec: 1029.57
Iteration:  22020, Loss function: 3.928, Average Loss: 3.970, avg. samples / sec: 1054.75
Iteration:  22040, Loss function: 3.711, Average Loss: 3.970, avg. samples / sec: 1022.71
Iteration:  22060, Loss function: 3.991, Average Loss: 3.970, avg. samples / sec: 1000.86
Iteration:  22080, Loss function: 4.180, Average Loss: 3.970, avg. samples / sec: 967.51
Iteration:  22100, Loss function: 3.933, Average Loss: 3.969, avg. samples / sec: 953.00
Iteration:  22120, Loss function: 3.709, Average Loss: 3.969, avg. samples / sec: 906.22
Iteration:  22140, Loss function: 3.964, Average Loss: 3.968, avg. samples / sec: 999.02
Iteration:  22160, Loss function: 3.816, Average Loss: 3.969, avg. samples / sec: 1006.78
Iteration:  22180, Loss function: 3.712, Average Loss: 3.968, avg. samples / sec: 1016.84
Iteration:  22200, Loss function: 3.937, Average Loss: 3.967, avg. samples / sec: 1018.71
Iteration:  22220, Loss function: 4.027, Average Loss: 3.965, avg. samples / sec: 1043.48
Iteration:  22240, Loss function: 3.824, Average Loss: 3.963, avg. samples / sec: 985.42
Iteration:  22260, Loss function: 3.856, Average Loss: 3.964, avg. samples / sec: 1101.78
Iteration:  22280, Loss function: 4.077, Average Loss: 3.963, avg. samples / sec: 1038.71
Iteration:  22300, Loss function: 3.653, Average Loss: 3.961, avg. samples / sec: 1010.77
Iteration:  22320, Loss function: 4.087, Average Loss: 3.961, avg. samples / sec: 1020.25
Iteration:  22340, Loss function: 4.067, Average Loss: 3.961, avg. samples / sec: 959.24
Iteration:  22360, Loss function: 3.822, Average Loss: 3.960, avg. samples / sec: 1043.35
Iteration:  22380, Loss function: 3.954, Average Loss: 3.959, avg. samples / sec: 1025.81
Iteration:  22400, Loss function: 4.031, Average Loss: 3.960, avg. samples / sec: 1024.08
Iteration:  22420, Loss function: 3.885, Average Loss: 3.961, avg. samples / sec: 989.34
Iteration:  22440, Loss function: 4.021, Average Loss: 3.961, avg. samples / sec: 1058.06
Iteration:  22460, Loss function: 3.782, Average Loss: 3.961, avg. samples / sec: 941.92
Iteration:  22480, Loss function: 4.186, Average Loss: 3.961, avg. samples / sec: 1085.40
Iteration:  22500, Loss function: 4.090, Average Loss: 3.962, avg. samples / sec: 1032.41
Iteration:  22520, Loss function: 3.819, Average Loss: 3.961, avg. samples / sec: 982.67
Iteration:  22540, Loss function: 3.974, Average Loss: 3.960, avg. samples / sec: 1023.61
Iteration:  22560, Loss function: 3.761, Average Loss: 3.960, avg. samples / sec: 994.78
Iteration:  22580, Loss function: 3.798, Average Loss: 3.961, avg. samples / sec: 1033.76
Iteration:  22600, Loss function: 4.114, Average Loss: 3.962, avg. samples / sec: 1000.08
Iteration:  22620, Loss function: 3.965, Average Loss: 3.962, avg. samples / sec: 966.48
:::MLLOG {"namespace": "", "time_ms": 1639129196230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1639129196232, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 23, "current_iter_num": 22631}}
Iteration:  22640, Loss function: 3.894, Average Loss: 3.961, avg. samples / sec: 998.45
Iteration:  22660, Loss function: 4.021, Average Loss: 3.961, avg. samples / sec: 963.51
Iteration:  22680, Loss function: 3.631, Average Loss: 3.961, avg. samples / sec: 1003.70
Iteration:  22700, Loss function: 3.893, Average Loss: 3.960, avg. samples / sec: 1060.61
Iteration:  22720, Loss function: 3.722, Average Loss: 3.959, avg. samples / sec: 996.06
Iteration:  22740, Loss function: 3.719, Average Loss: 3.959, avg. samples / sec: 1038.83
Iteration:  22760, Loss function: 4.066, Average Loss: 3.957, avg. samples / sec: 1007.23
Iteration:  22780, Loss function: 3.672, Average Loss: 3.957, avg. samples / sec: 1017.30
Iteration:  22800, Loss function: 4.153, Average Loss: 3.957, avg. samples / sec: 990.50
Iteration:  22820, Loss function: 3.714, Average Loss: 3.956, avg. samples / sec: 913.25
Iteration:  22840, Loss function: 4.047, Average Loss: 3.955, avg. samples / sec: 1052.27
Iteration:  22860, Loss function: 3.820, Average Loss: 3.955, avg. samples / sec: 1045.90
Iteration:  22880, Loss function: 3.881, Average Loss: 3.953, avg. samples / sec: 1036.90
Iteration:  22900, Loss function: 3.888, Average Loss: 3.952, avg. samples / sec: 1035.96
Iteration:  22920, Loss function: 3.634, Average Loss: 3.950, avg. samples / sec: 1045.82
Iteration:  22940, Loss function: 4.082, Average Loss: 3.951, avg. samples / sec: 995.81
Iteration:  22960, Loss function: 4.217, Average Loss: 3.951, avg. samples / sec: 944.01
Iteration:  22980, Loss function: 3.962, Average Loss: 3.950, avg. samples / sec: 956.20
Iteration:  23000, Loss function: 3.994, Average Loss: 3.949, avg. samples / sec: 1068.61
Iteration:  23020, Loss function: 4.042, Average Loss: 3.950, avg. samples / sec: 970.51
Iteration:  23040, Loss function: 3.808, Average Loss: 3.950, avg. samples / sec: 957.87
Iteration:  23060, Loss function: 3.879, Average Loss: 3.949, avg. samples / sec: 967.84
Iteration:  23080, Loss function: 4.098, Average Loss: 3.949, avg. samples / sec: 1063.64
Iteration:  23100, Loss function: 3.772, Average Loss: 3.947, avg. samples / sec: 1091.47
Iteration:  23120, Loss function: 4.128, Average Loss: 3.947, avg. samples / sec: 975.02
Iteration:  23140, Loss function: 3.790, Average Loss: 3.946, avg. samples / sec: 1081.55
Iteration:  23160, Loss function: 3.981, Average Loss: 3.946, avg. samples / sec: 976.39
Iteration:  23180, Loss function: 3.890, Average Loss: 3.945, avg. samples / sec: 1039.37
Iteration:  23200, Loss function: 4.100, Average Loss: 3.945, avg. samples / sec: 995.51
Iteration:  23220, Loss function: 3.912, Average Loss: 3.945, avg. samples / sec: 960.28
Iteration:  23240, Loss function: 3.942, Average Loss: 3.944, avg. samples / sec: 992.52
Iteration:  23260, Loss function: 4.309, Average Loss: 3.944, avg. samples / sec: 922.51
Iteration:  23280, Loss function: 4.010, Average Loss: 3.943, avg. samples / sec: 1011.44
Iteration:  23300, Loss function: 3.847, Average Loss: 3.942, avg. samples / sec: 1004.26
Iteration:  23320, Loss function: 3.966, Average Loss: 3.943, avg. samples / sec: 979.11
Iteration:  23340, Loss function: 4.047, Average Loss: 3.942, avg. samples / sec: 1022.75
Iteration:  23360, Loss function: 3.725, Average Loss: 3.942, avg. samples / sec: 1017.43
Iteration:  23380, Loss function: 4.091, Average Loss: 3.942, avg. samples / sec: 948.51
Iteration:  23400, Loss function: 3.764, Average Loss: 3.942, avg. samples / sec: 1014.39
Iteration:  23420, Loss function: 3.853, Average Loss: 3.941, avg. samples / sec: 949.19
Iteration:  23440, Loss function: 4.121, Average Loss: 3.941, avg. samples / sec: 958.93
Iteration:  23460, Loss function: 3.864, Average Loss: 3.940, avg. samples / sec: 1030.91
Iteration:  23480, Loss function: 3.942, Average Loss: 3.939, avg. samples / sec: 967.27
Iteration:  23500, Loss function: 3.913, Average Loss: 3.939, avg. samples / sec: 1012.94
Iteration:  23520, Loss function: 4.154, Average Loss: 3.938, avg. samples / sec: 1028.67
Iteration:  23540, Loss function: 4.057, Average Loss: 3.938, avg. samples / sec: 997.94
Iteration:  23560, Loss function: 3.738, Average Loss: 3.937, avg. samples / sec: 956.93
Iteration:  23580, Loss function: 3.713, Average Loss: 3.937, avg. samples / sec: 985.14
Iteration:  23600, Loss function: 3.694, Average Loss: 3.937, avg. samples / sec: 1071.14
Iteration:  23620, Loss function: 4.100, Average Loss: 3.938, avg. samples / sec: 1008.29
Iteration:  23640, Loss function: 3.897, Average Loss: 3.938, avg. samples / sec: 991.44
:::MLLOG {"namespace": "", "time_ms": 1639129313366, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1639129313369, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 24, "current_iter_num": 23659}}
Iteration:  23660, Loss function: 3.542, Average Loss: 3.938, avg. samples / sec: 1019.51
Iteration:  23680, Loss function: 3.771, Average Loss: 3.937, avg. samples / sec: 962.36
Iteration:  23700, Loss function: 3.837, Average Loss: 3.936, avg. samples / sec: 933.33
Iteration:  23720, Loss function: 4.192, Average Loss: 3.935, avg. samples / sec: 957.15
Iteration:  23740, Loss function: 3.965, Average Loss: 3.933, avg. samples / sec: 1031.53
Iteration:  23760, Loss function: 3.783, Average Loss: 3.933, avg. samples / sec: 955.42
Iteration:  23780, Loss function: 4.087, Average Loss: 3.932, avg. samples / sec: 960.44
Iteration:  23800, Loss function: 3.963, Average Loss: 3.931, avg. samples / sec: 990.02
Iteration:  23820, Loss function: 4.165, Average Loss: 3.930, avg. samples / sec: 987.30
Iteration:  23840, Loss function: 4.061, Average Loss: 3.930, avg. samples / sec: 882.62
Iteration:  23860, Loss function: 4.344, Average Loss: 3.930, avg. samples / sec: 1001.87
Iteration:  23880, Loss function: 4.058, Average Loss: 3.930, avg. samples / sec: 1046.77
Iteration:  23900, Loss function: 3.928, Average Loss: 3.927, avg. samples / sec: 1004.52
Iteration:  23920, Loss function: 3.992, Average Loss: 3.928, avg. samples / sec: 1054.69
Iteration:  23940, Loss function: 3.737, Average Loss: 3.927, avg. samples / sec: 958.02
Iteration:  23960, Loss function: 3.668, Average Loss: 3.928, avg. samples / sec: 942.39
Iteration:  23980, Loss function: 4.060, Average Loss: 3.928, avg. samples / sec: 1045.98
Iteration:  24000, Loss function: 4.006, Average Loss: 3.927, avg. samples / sec: 970.75
Iteration:  24020, Loss function: 4.030, Average Loss: 3.927, avg. samples / sec: 1044.84
Iteration:  24040, Loss function: 3.969, Average Loss: 3.925, avg. samples / sec: 1040.35
Iteration:  24060, Loss function: 4.017, Average Loss: 3.925, avg. samples / sec: 1009.02
Iteration:  24080, Loss function: 3.769, Average Loss: 3.924, avg. samples / sec: 895.03
Iteration:  24100, Loss function: 3.885, Average Loss: 3.923, avg. samples / sec: 1025.42
Iteration:  24120, Loss function: 4.020, Average Loss: 3.925, avg. samples / sec: 1018.21
Iteration:  24140, Loss function: 3.854, Average Loss: 3.925, avg. samples / sec: 1053.03
Iteration:  24160, Loss function: 4.094, Average Loss: 3.924, avg. samples / sec: 1076.71
Iteration:  24180, Loss function: 4.066, Average Loss: 3.924, avg. samples / sec: 1077.58
Iteration:  24200, Loss function: 3.640, Average Loss: 3.923, avg. samples / sec: 943.69
Iteration:  24220, Loss function: 3.924, Average Loss: 3.923, avg. samples / sec: 1036.59
Iteration:  24240, Loss function: 3.690, Average Loss: 3.922, avg. samples / sec: 1016.92
Iteration:  24260, Loss function: 4.102, Average Loss: 3.923, avg. samples / sec: 998.51
Iteration:  24280, Loss function: 3.766, Average Loss: 3.922, avg. samples / sec: 1043.83
Iteration:  24300, Loss function: 3.788, Average Loss: 3.921, avg. samples / sec: 974.63
Iteration:  24320, Loss function: 3.982, Average Loss: 3.919, avg. samples / sec: 1027.32
Iteration:  24340, Loss function: 3.799, Average Loss: 3.919, avg. samples / sec: 915.93
Iteration:  24360, Loss function: 3.806, Average Loss: 3.918, avg. samples / sec: 1052.69
Iteration:  24380, Loss function: 3.819, Average Loss: 3.919, avg. samples / sec: 996.45
Iteration:  24400, Loss function: 3.885, Average Loss: 3.920, avg. samples / sec: 1019.63
Iteration:  24420, Loss function: 3.743, Average Loss: 3.919, avg. samples / sec: 1009.60
Iteration:  24440, Loss function: 3.666, Average Loss: 3.919, avg. samples / sec: 1029.18
Iteration:  24460, Loss function: 4.041, Average Loss: 3.920, avg. samples / sec: 950.83
Iteration:  24480, Loss function: 4.068, Average Loss: 3.920, avg. samples / sec: 1013.58
Iteration:  24500, Loss function: 3.769, Average Loss: 3.919, avg. samples / sec: 976.26
Iteration:  24520, Loss function: 4.222, Average Loss: 3.921, avg. samples / sec: 968.72
Iteration:  24540, Loss function: 3.947, Average Loss: 3.921, avg. samples / sec: 994.41
Iteration:  24560, Loss function: 4.262, Average Loss: 3.923, avg. samples / sec: 991.67
Iteration:  24580, Loss function: 4.287, Average Loss: 3.924, avg. samples / sec: 978.74
Iteration:  24600, Loss function: 3.948, Average Loss: 3.924, avg. samples / sec: 1000.86
Iteration:  24620, Loss function: 3.992, Average Loss: 3.924, avg. samples / sec: 1009.28
Iteration:  24640, Loss function: 4.085, Average Loss: 3.924, avg. samples / sec: 988.39
Iteration:  24660, Loss function: 3.974, Average Loss: 3.924, avg. samples / sec: 1025.01
Iteration:  24680, Loss function: 3.923, Average Loss: 3.925, avg. samples / sec: 1031.01
:::MLLOG {"namespace": "", "time_ms": 1639129431097, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1639129431098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 25, "current_iter_num": 24688}}
Iteration:  24700, Loss function: 3.826, Average Loss: 3.924, avg. samples / sec: 996.05
Iteration:  24720, Loss function: 3.800, Average Loss: 3.922, avg. samples / sec: 1016.94
Iteration:  24740, Loss function: 3.842, Average Loss: 3.921, avg. samples / sec: 1033.90
Iteration:  24760, Loss function: 3.701, Average Loss: 3.919, avg. samples / sec: 949.65
Iteration:  24780, Loss function: 3.953, Average Loss: 3.918, avg. samples / sec: 981.54
Iteration:  24800, Loss function: 3.864, Average Loss: 3.918, avg. samples / sec: 961.21
Iteration:  24820, Loss function: 3.628, Average Loss: 3.917, avg. samples / sec: 989.04
Iteration:  24840, Loss function: 3.728, Average Loss: 3.917, avg. samples / sec: 941.34
Iteration:  24860, Loss function: 3.961, Average Loss: 3.917, avg. samples / sec: 974.61
Iteration:  24880, Loss function: 3.705, Average Loss: 3.917, avg. samples / sec: 1037.82
Iteration:  24900, Loss function: 4.044, Average Loss: 3.916, avg. samples / sec: 1025.61
Iteration:  24920, Loss function: 3.882, Average Loss: 3.914, avg. samples / sec: 1055.21
Iteration:  24940, Loss function: 3.811, Average Loss: 3.913, avg. samples / sec: 1043.43
Iteration:  24960, Loss function: 3.773, Average Loss: 3.913, avg. samples / sec: 962.50
Iteration:  24980, Loss function: 3.639, Average Loss: 3.912, avg. samples / sec: 964.01
Iteration:  25000, Loss function: 3.805, Average Loss: 3.912, avg. samples / sec: 1006.42
Iteration:  25020, Loss function: 3.713, Average Loss: 3.911, avg. samples / sec: 964.82
Iteration:  25040, Loss function: 4.161, Average Loss: 3.911, avg. samples / sec: 1028.08
Iteration:  25060, Loss function: 3.995, Average Loss: 3.911, avg. samples / sec: 1051.86
Iteration:  25080, Loss function: 3.884, Average Loss: 3.910, avg. samples / sec: 915.10
Iteration:  25100, Loss function: 4.069, Average Loss: 3.911, avg. samples / sec: 913.62
Iteration:  25120, Loss function: 3.862, Average Loss: 3.912, avg. samples / sec: 942.45
Iteration:  25140, Loss function: 4.224, Average Loss: 3.913, avg. samples / sec: 1011.70
Iteration:  25160, Loss function: 3.693, Average Loss: 3.913, avg. samples / sec: 938.49
Iteration:  25180, Loss function: 4.209, Average Loss: 3.912, avg. samples / sec: 1006.34
Iteration:  25200, Loss function: 3.757, Average Loss: 3.911, avg. samples / sec: 1043.89
Iteration:  25220, Loss function: 3.740, Average Loss: 3.911, avg. samples / sec: 1049.36
Iteration:  25240, Loss function: 3.855, Average Loss: 3.910, avg. samples / sec: 1012.76
Iteration:  25260, Loss function: 3.707, Average Loss: 3.911, avg. samples / sec: 888.58
Iteration:  25280, Loss function: 4.023, Average Loss: 3.911, avg. samples / sec: 992.66
Iteration:  25300, Loss function: 3.811, Average Loss: 3.911, avg. samples / sec: 1034.47
Iteration:  25320, Loss function: 3.870, Average Loss: 3.910, avg. samples / sec: 998.83
Iteration:  25340, Loss function: 4.108, Average Loss: 3.909, avg. samples / sec: 993.03
Iteration:  25360, Loss function: 3.691, Average Loss: 3.907, avg. samples / sec: 984.65
Iteration:  25380, Loss function: 3.744, Average Loss: 3.908, avg. samples / sec: 988.62
Iteration:  25400, Loss function: 3.878, Average Loss: 3.906, avg. samples / sec: 940.08
Iteration:  25420, Loss function: 3.833, Average Loss: 3.906, avg. samples / sec: 932.19
Iteration:  25440, Loss function: 3.930, Average Loss: 3.905, avg. samples / sec: 991.52
Iteration:  25460, Loss function: 4.005, Average Loss: 3.905, avg. samples / sec: 977.03
Iteration:  25480, Loss function: 4.154, Average Loss: 3.903, avg. samples / sec: 939.16
Iteration:  25500, Loss function: 3.958, Average Loss: 3.905, avg. samples / sec: 992.36
Iteration:  25520, Loss function: 3.996, Average Loss: 3.904, avg. samples / sec: 998.14
Iteration:  25540, Loss function: 3.946, Average Loss: 3.904, avg. samples / sec: 974.53
Iteration:  25560, Loss function: 3.724, Average Loss: 3.903, avg. samples / sec: 1045.89
Iteration:  25580, Loss function: 3.726, Average Loss: 3.904, avg. samples / sec: 1035.16
Iteration:  25600, Loss function: 4.017, Average Loss: 3.905, avg. samples / sec: 1045.47
Iteration:  25620, Loss function: 3.877, Average Loss: 3.905, avg. samples / sec: 1016.75
Iteration:  25640, Loss function: 3.895, Average Loss: 3.905, avg. samples / sec: 990.83
Iteration:  25660, Loss function: 3.827, Average Loss: 3.906, avg. samples / sec: 1072.13
Iteration:  25680, Loss function: 4.038, Average Loss: 3.906, avg. samples / sec: 1020.29
Iteration:  25700, Loss function: 3.883, Average Loss: 3.907, avg. samples / sec: 981.76
:::MLLOG {"namespace": "", "time_ms": 1639129549523, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1639129549525, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 26, "current_iter_num": 25717}}
Iteration:  25720, Loss function: 3.788, Average Loss: 3.904, avg. samples / sec: 955.39
Iteration:  25740, Loss function: 3.844, Average Loss: 3.903, avg. samples / sec: 912.16
Iteration:  25760, Loss function: 4.058, Average Loss: 3.902, avg. samples / sec: 1003.83
Iteration:  25780, Loss function: 3.783, Average Loss: 3.901, avg. samples / sec: 968.20
Iteration:  25800, Loss function: 3.551, Average Loss: 3.899, avg. samples / sec: 1007.53
Iteration:  25820, Loss function: 3.925, Average Loss: 3.898, avg. samples / sec: 1030.04
Iteration:  25840, Loss function: 3.932, Average Loss: 3.898, avg. samples / sec: 999.66
Iteration:  25860, Loss function: 3.649, Average Loss: 3.896, avg. samples / sec: 1067.56
Iteration:  25880, Loss function: 3.972, Average Loss: 3.894, avg. samples / sec: 997.14
Iteration:  25900, Loss function: 3.514, Average Loss: 3.893, avg. samples / sec: 950.06
Iteration:  25920, Loss function: 3.516, Average Loss: 3.891, avg. samples / sec: 971.80
Iteration:  25940, Loss function: 3.841, Average Loss: 3.889, avg. samples / sec: 1012.08
Iteration:  25960, Loss function: 3.600, Average Loss: 3.888, avg. samples / sec: 1001.50
Iteration:  25980, Loss function: 3.809, Average Loss: 3.886, avg. samples / sec: 977.88
Iteration:  26000, Loss function: 3.480, Average Loss: 3.885, avg. samples / sec: 987.61
Iteration:  26020, Loss function: 4.045, Average Loss: 3.885, avg. samples / sec: 1014.47
Iteration:  26040, Loss function: 4.084, Average Loss: 3.884, avg. samples / sec: 997.50
Iteration:  26060, Loss function: 4.181, Average Loss: 3.883, avg. samples / sec: 1077.32
Iteration:  26080, Loss function: 3.823, Average Loss: 3.883, avg. samples / sec: 949.43
Iteration:  26100, Loss function: 3.912, Average Loss: 3.883, avg. samples / sec: 982.40
Iteration:  26120, Loss function: 4.053, Average Loss: 3.885, avg. samples / sec: 1008.80
Iteration:  26140, Loss function: 3.849, Average Loss: 3.885, avg. samples / sec: 1057.08
Iteration:  26160, Loss function: 3.755, Average Loss: 3.886, avg. samples / sec: 1022.07
Iteration:  26180, Loss function: 3.646, Average Loss: 3.886, avg. samples / sec: 1035.36
Iteration:  26200, Loss function: 3.766, Average Loss: 3.885, avg. samples / sec: 966.44
Iteration:  26220, Loss function: 3.696, Average Loss: 3.884, avg. samples / sec: 1059.17
Iteration:  26240, Loss function: 4.049, Average Loss: 3.885, avg. samples / sec: 1024.39
Iteration:  26260, Loss function: 3.967, Average Loss: 3.885, avg. samples / sec: 1018.10
Iteration:  26280, Loss function: 3.690, Average Loss: 3.885, avg. samples / sec: 974.39
Iteration:  26300, Loss function: 3.617, Average Loss: 3.885, avg. samples / sec: 1036.76
Iteration:  26320, Loss function: 3.952, Average Loss: 3.886, avg. samples / sec: 942.50
Iteration:  26340, Loss function: 3.819, Average Loss: 3.885, avg. samples / sec: 1027.13
Iteration:  26360, Loss function: 3.701, Average Loss: 3.886, avg. samples / sec: 1028.38
Iteration:  26380, Loss function: 3.942, Average Loss: 3.885, avg. samples / sec: 1044.21
Iteration:  26400, Loss function: 3.873, Average Loss: 3.885, avg. samples / sec: 949.95
Iteration:  26420, Loss function: 3.751, Average Loss: 3.883, avg. samples / sec: 1056.58
Iteration:  26440, Loss function: 3.915, Average Loss: 3.883, avg. samples / sec: 955.94
Iteration:  26460, Loss function: 3.856, Average Loss: 3.883, avg. samples / sec: 1064.13
Iteration:  26480, Loss function: 3.900, Average Loss: 3.884, avg. samples / sec: 988.59
Iteration:  26500, Loss function: 3.878, Average Loss: 3.885, avg. samples / sec: 1005.30
Iteration:  26520, Loss function: 3.928, Average Loss: 3.885, avg. samples / sec: 1022.75
Iteration:  26540, Loss function: 4.086, Average Loss: 3.887, avg. samples / sec: 1065.80
Iteration:  26560, Loss function: 4.022, Average Loss: 3.888, avg. samples / sec: 1033.46
Iteration:  26580, Loss function: 3.794, Average Loss: 3.887, avg. samples / sec: 1071.23
Iteration:  26600, Loss function: 4.043, Average Loss: 3.887, avg. samples / sec: 1023.64
Iteration:  26620, Loss function: 4.177, Average Loss: 3.887, avg. samples / sec: 1030.05
Iteration:  26640, Loss function: 3.990, Average Loss: 3.887, avg. samples / sec: 1043.54
Iteration:  26660, Loss function: 3.798, Average Loss: 3.887, avg. samples / sec: 998.34
Iteration:  26680, Loss function: 3.833, Average Loss: 3.886, avg. samples / sec: 942.97
Iteration:  26700, Loss function: 3.886, Average Loss: 3.886, avg. samples / sec: 994.05
Iteration:  26720, Loss function: 4.128, Average Loss: 3.885, avg. samples / sec: 1019.40
Iteration:  26740, Loss function: 3.734, Average Loss: 3.884, avg. samples / sec: 974.86
:::MLLOG {"namespace": "", "time_ms": 1639129666008, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1639129666009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 27, "current_iter_num": 26745}}
Iteration:  26760, Loss function: 3.788, Average Loss: 3.883, avg. samples / sec: 1040.86
Iteration:  26780, Loss function: 3.703, Average Loss: 3.882, avg. samples / sec: 1026.06
Iteration:  26800, Loss function: 3.720, Average Loss: 3.879, avg. samples / sec: 1011.87
Iteration:  26820, Loss function: 3.665, Average Loss: 3.877, avg. samples / sec: 1045.46
Iteration:  26840, Loss function: 3.897, Average Loss: 3.878, avg. samples / sec: 971.34
Iteration:  26860, Loss function: 3.831, Average Loss: 3.875, avg. samples / sec: 981.92
Iteration:  26880, Loss function: 3.705, Average Loss: 3.875, avg. samples / sec: 1028.85
Iteration:  26900, Loss function: 3.676, Average Loss: 3.874, avg. samples / sec: 1009.17
Iteration:  26920, Loss function: 4.012, Average Loss: 3.874, avg. samples / sec: 975.30
Iteration:  26940, Loss function: 3.853, Average Loss: 3.872, avg. samples / sec: 974.50
Iteration:  26960, Loss function: 4.086, Average Loss: 3.872, avg. samples / sec: 1038.17
Iteration:  26980, Loss function: 3.711, Average Loss: 3.872, avg. samples / sec: 1015.46
Iteration:  27000, Loss function: 3.699, Average Loss: 3.871, avg. samples / sec: 958.20
Iteration:  27020, Loss function: 3.905, Average Loss: 3.869, avg. samples / sec: 1000.61
Iteration:  27040, Loss function: 4.018, Average Loss: 3.870, avg. samples / sec: 999.15
Iteration:  27060, Loss function: 3.632, Average Loss: 3.869, avg. samples / sec: 1058.30
Iteration:  27080, Loss function: 3.797, Average Loss: 3.869, avg. samples / sec: 1045.00
Iteration:  27100, Loss function: 3.779, Average Loss: 3.868, avg. samples / sec: 984.48
Iteration:  27120, Loss function: 3.791, Average Loss: 3.869, avg. samples / sec: 975.44
Iteration:  27140, Loss function: 3.755, Average Loss: 3.869, avg. samples / sec: 1006.79
Iteration:  27160, Loss function: 3.986, Average Loss: 3.868, avg. samples / sec: 970.51
Iteration:  27180, Loss function: 3.924, Average Loss: 3.869, avg. samples / sec: 1057.73
Iteration:  27200, Loss function: 4.025, Average Loss: 3.869, avg. samples / sec: 1062.88
Iteration:  27220, Loss function: 3.995, Average Loss: 3.869, avg. samples / sec: 988.74
Iteration:  27240, Loss function: 3.858, Average Loss: 3.868, avg. samples / sec: 1079.42
Iteration:  27260, Loss function: 3.761, Average Loss: 3.868, avg. samples / sec: 1054.15
Iteration:  27280, Loss function: 4.002, Average Loss: 3.868, avg. samples / sec: 984.40
Iteration:  27300, Loss function: 3.494, Average Loss: 3.868, avg. samples / sec: 954.05
Iteration:  27320, Loss function: 3.690, Average Loss: 3.867, avg. samples / sec: 981.48
Iteration:  27340, Loss function: 3.995, Average Loss: 3.866, avg. samples / sec: 1031.70
Iteration:  27360, Loss function: 3.547, Average Loss: 3.864, avg. samples / sec: 1028.37
Iteration:  27380, Loss function: 3.820, Average Loss: 3.865, avg. samples / sec: 989.89
Iteration:  27400, Loss function: 3.591, Average Loss: 3.864, avg. samples / sec: 961.24
Iteration:  27420, Loss function: 3.827, Average Loss: 3.864, avg. samples / sec: 955.64
Iteration:  27440, Loss function: 4.141, Average Loss: 3.865, avg. samples / sec: 1001.31
Iteration:  27460, Loss function: 3.742, Average Loss: 3.864, avg. samples / sec: 1040.43
Iteration:  27480, Loss function: 4.142, Average Loss: 3.863, avg. samples / sec: 1028.20
Iteration:  27500, Loss function: 3.541, Average Loss: 3.864, avg. samples / sec: 1070.65
Iteration:  27520, Loss function: 4.152, Average Loss: 3.865, avg. samples / sec: 998.25
Iteration:  27540, Loss function: 3.738, Average Loss: 3.865, avg. samples / sec: 983.00
Iteration:  27560, Loss function: 3.955, Average Loss: 3.865, avg. samples / sec: 1032.49
Iteration:  27580, Loss function: 3.733, Average Loss: 3.864, avg. samples / sec: 1071.39
Iteration:  27600, Loss function: 3.779, Average Loss: 3.864, avg. samples / sec: 993.76
Iteration:  27620, Loss function: 3.761, Average Loss: 3.864, avg. samples / sec: 1004.87
Iteration:  27640, Loss function: 3.860, Average Loss: 3.864, avg. samples / sec: 966.99
Iteration:  27660, Loss function: 4.052, Average Loss: 3.864, avg. samples / sec: 977.75
Iteration:  27680, Loss function: 3.893, Average Loss: 3.865, avg. samples / sec: 950.86
Iteration:  27700, Loss function: 4.067, Average Loss: 3.866, avg. samples / sec: 987.84
Iteration:  27720, Loss function: 3.917, Average Loss: 3.866, avg. samples / sec: 1032.82
Iteration:  27740, Loss function: 4.074, Average Loss: 3.864, avg. samples / sec: 1046.25
Iteration:  27760, Loss function: 4.031, Average Loss: 3.865, avg. samples / sec: 997.33
:::MLLOG {"namespace": "", "time_ms": 1639129782501, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1639129782502, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 28, "current_iter_num": 27774}}
Iteration:  27780, Loss function: 3.968, Average Loss: 3.865, avg. samples / sec: 987.56
Iteration:  27800, Loss function: 4.018, Average Loss: 3.864, avg. samples / sec: 970.48
Iteration:  27820, Loss function: 3.879, Average Loss: 3.862, avg. samples / sec: 1024.04
Iteration:  27840, Loss function: 3.868, Average Loss: 3.861, avg. samples / sec: 1060.15
Iteration:  27860, Loss function: 3.583, Average Loss: 3.858, avg. samples / sec: 1045.10
Iteration:  27880, Loss function: 3.776, Average Loss: 3.858, avg. samples / sec: 1059.05
Iteration:  27900, Loss function: 3.918, Average Loss: 3.857, avg. samples / sec: 960.41
Iteration:  27920, Loss function: 3.747, Average Loss: 3.856, avg. samples / sec: 1041.63
Iteration:  27940, Loss function: 3.541, Average Loss: 3.855, avg. samples / sec: 1021.66
Iteration:  27960, Loss function: 3.977, Average Loss: 3.854, avg. samples / sec: 966.23
Iteration:  27980, Loss function: 3.649, Average Loss: 3.852, avg. samples / sec: 996.85
Iteration:  28000, Loss function: 3.652, Average Loss: 3.852, avg. samples / sec: 950.68
Iteration:  28020, Loss function: 4.141, Average Loss: 3.853, avg. samples / sec: 1015.51
Iteration:  28040, Loss function: 4.080, Average Loss: 3.852, avg. samples / sec: 985.93
Iteration:  28060, Loss function: 3.909, Average Loss: 3.853, avg. samples / sec: 927.69
Iteration:  28080, Loss function: 3.579, Average Loss: 3.852, avg. samples / sec: 1007.86
Iteration:  28100, Loss function: 3.836, Average Loss: 3.852, avg. samples / sec: 981.47
Iteration:  28120, Loss function: 3.635, Average Loss: 3.852, avg. samples / sec: 967.78
Iteration:  28140, Loss function: 3.760, Average Loss: 3.852, avg. samples / sec: 997.41
Iteration:  28160, Loss function: 3.723, Average Loss: 3.851, avg. samples / sec: 1018.16
Iteration:  28180, Loss function: 3.716, Average Loss: 3.851, avg. samples / sec: 1041.23
Iteration:  28200, Loss function: 3.505, Average Loss: 3.850, avg. samples / sec: 994.15
Iteration:  28220, Loss function: 3.838, Average Loss: 3.849, avg. samples / sec: 979.13
Iteration:  28240, Loss function: 3.823, Average Loss: 3.849, avg. samples / sec: 1032.09
Iteration:  28260, Loss function: 3.664, Average Loss: 3.848, avg. samples / sec: 1023.25
Iteration:  28280, Loss function: 4.124, Average Loss: 3.848, avg. samples / sec: 1046.75
Iteration:  28300, Loss function: 3.952, Average Loss: 3.849, avg. samples / sec: 1028.66
Iteration:  28320, Loss function: 3.811, Average Loss: 3.849, avg. samples / sec: 991.26
Iteration:  28340, Loss function: 3.477, Average Loss: 3.848, avg. samples / sec: 988.81
Iteration:  28360, Loss function: 3.882, Average Loss: 3.848, avg. samples / sec: 1002.24
Iteration:  28380, Loss function: 3.846, Average Loss: 3.848, avg. samples / sec: 1022.17
Iteration:  28400, Loss function: 3.890, Average Loss: 3.848, avg. samples / sec: 1061.22
Iteration:  28420, Loss function: 3.824, Average Loss: 3.847, avg. samples / sec: 1055.77
Iteration:  28440, Loss function: 3.963, Average Loss: 3.849, avg. samples / sec: 1028.04
Iteration:  28460, Loss function: 3.705, Average Loss: 3.849, avg. samples / sec: 949.19
Iteration:  28480, Loss function: 3.903, Average Loss: 3.847, avg. samples / sec: 948.08
Iteration:  28500, Loss function: 3.874, Average Loss: 3.848, avg. samples / sec: 1005.63
Iteration:  28520, Loss function: 3.462, Average Loss: 3.846, avg. samples / sec: 943.62
Iteration:  28540, Loss function: 3.789, Average Loss: 3.845, avg. samples / sec: 1014.14
Iteration:  28560, Loss function: 4.053, Average Loss: 3.845, avg. samples / sec: 1002.46
Iteration:  28580, Loss function: 3.460, Average Loss: 3.844, avg. samples / sec: 1003.73
Iteration:  28600, Loss function: 3.861, Average Loss: 3.843, avg. samples / sec: 1003.35
Iteration:  28620, Loss function: 3.950, Average Loss: 3.844, avg. samples / sec: 1028.08
Iteration:  28640, Loss function: 3.786, Average Loss: 3.844, avg. samples / sec: 1022.53
Iteration:  28660, Loss function: 3.925, Average Loss: 3.844, avg. samples / sec: 993.31
Iteration:  28680, Loss function: 3.933, Average Loss: 3.844, avg. samples / sec: 1028.23
Iteration:  28700, Loss function: 3.938, Average Loss: 3.845, avg. samples / sec: 1019.55
Iteration:  28720, Loss function: 3.801, Average Loss: 3.845, avg. samples / sec: 1028.19
Iteration:  28740, Loss function: 3.891, Average Loss: 3.845, avg. samples / sec: 1039.79
Iteration:  28760, Loss function: 3.748, Average Loss: 3.848, avg. samples / sec: 949.52
Iteration:  28780, Loss function: 3.971, Average Loss: 3.848, avg. samples / sec: 1013.04
Iteration:  28800, Loss function: 3.700, Average Loss: 3.848, avg. samples / sec: 1030.16
:::MLLOG {"namespace": "", "time_ms": 1639129899298, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1639129899299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 29, "current_iter_num": 28803}}
Iteration:  28820, Loss function: 3.591, Average Loss: 3.849, avg. samples / sec: 952.40
Iteration:  28840, Loss function: 3.691, Average Loss: 3.849, avg. samples / sec: 975.81
Iteration:  28860, Loss function: 3.850, Average Loss: 3.847, avg. samples / sec: 954.30
Iteration:  28880, Loss function: 3.608, Average Loss: 3.846, avg. samples / sec: 1001.16
Iteration:  28900, Loss function: 3.751, Average Loss: 3.845, avg. samples / sec: 951.11
Iteration:  28920, Loss function: 3.684, Average Loss: 3.845, avg. samples / sec: 1014.13
Iteration:  28940, Loss function: 3.714, Average Loss: 3.844, avg. samples / sec: 1013.23
Iteration:  28960, Loss function: 3.729, Average Loss: 3.843, avg. samples / sec: 1056.17
Iteration:  28980, Loss function: 3.737, Average Loss: 3.842, avg. samples / sec: 1012.12
Iteration:  29000, Loss function: 3.437, Average Loss: 3.841, avg. samples / sec: 942.04
Iteration:  29020, Loss function: 4.061, Average Loss: 3.841, avg. samples / sec: 942.11
Iteration:  29040, Loss function: 3.669, Average Loss: 3.840, avg. samples / sec: 1088.79
Iteration:  29060, Loss function: 3.759, Average Loss: 3.841, avg. samples / sec: 984.99
Iteration:  29080, Loss function: 3.632, Average Loss: 3.841, avg. samples / sec: 941.77
Iteration:  29100, Loss function: 3.609, Average Loss: 3.840, avg. samples / sec: 1013.85
Iteration:  29120, Loss function: 3.785, Average Loss: 3.840, avg. samples / sec: 1024.72
Iteration:  29140, Loss function: 3.871, Average Loss: 3.841, avg. samples / sec: 946.40
Iteration:  29160, Loss function: 3.964, Average Loss: 3.841, avg. samples / sec: 1011.75
Iteration:  29180, Loss function: 3.846, Average Loss: 3.841, avg. samples / sec: 1021.65
Iteration:  29200, Loss function: 3.648, Average Loss: 3.840, avg. samples / sec: 933.03
Iteration:  29220, Loss function: 3.758, Average Loss: 3.841, avg. samples / sec: 1003.37
Iteration:  29240, Loss function: 3.746, Average Loss: 3.839, avg. samples / sec: 999.04
Iteration:  29260, Loss function: 3.918, Average Loss: 3.840, avg. samples / sec: 986.66
Iteration:  29280, Loss function: 3.728, Average Loss: 3.841, avg. samples / sec: 953.66
Iteration:  29300, Loss function: 3.919, Average Loss: 3.840, avg. samples / sec: 1023.48
Iteration:  29320, Loss function: 3.574, Average Loss: 3.839, avg. samples / sec: 1000.30
Iteration:  29340, Loss function: 3.487, Average Loss: 3.838, avg. samples / sec: 1016.18
Iteration:  29360, Loss function: 3.964, Average Loss: 3.839, avg. samples / sec: 1011.61
Iteration:  29380, Loss function: 4.022, Average Loss: 3.839, avg. samples / sec: 948.86
Iteration:  29400, Loss function: 3.720, Average Loss: 3.839, avg. samples / sec: 1032.45
Iteration:  29420, Loss function: 3.773, Average Loss: 3.838, avg. samples / sec: 1011.03
Iteration:  29440, Loss function: 3.824, Average Loss: 3.838, avg. samples / sec: 1037.82
Iteration:  29460, Loss function: 3.819, Average Loss: 3.837, avg. samples / sec: 1062.67
Iteration:  29480, Loss function: 3.812, Average Loss: 3.837, avg. samples / sec: 990.15
Iteration:  29500, Loss function: 3.950, Average Loss: 3.835, avg. samples / sec: 993.50
Iteration:  29520, Loss function: 3.882, Average Loss: 3.837, avg. samples / sec: 986.29
Iteration:  29540, Loss function: 3.764, Average Loss: 3.836, avg. samples / sec: 1045.85
Iteration:  29560, Loss function: 3.875, Average Loss: 3.835, avg. samples / sec: 1004.97
Iteration:  29580, Loss function: 3.598, Average Loss: 3.833, avg. samples / sec: 992.18
Iteration:  29600, Loss function: 3.916, Average Loss: 3.832, avg. samples / sec: 952.37
Iteration:  29620, Loss function: 3.910, Average Loss: 3.832, avg. samples / sec: 1030.66
Iteration:  29640, Loss function: 3.763, Average Loss: 3.831, avg. samples / sec: 979.24
Iteration:  29660, Loss function: 3.830, Average Loss: 3.830, avg. samples / sec: 961.08
Iteration:  29680, Loss function: 3.816, Average Loss: 3.830, avg. samples / sec: 966.77
Iteration:  29700, Loss function: 3.756, Average Loss: 3.831, avg. samples / sec: 991.92
Iteration:  29720, Loss function: 3.775, Average Loss: 3.830, avg. samples / sec: 992.76
Iteration:  29740, Loss function: 3.741, Average Loss: 3.831, avg. samples / sec: 996.59
Iteration:  29760, Loss function: 3.920, Average Loss: 3.831, avg. samples / sec: 953.13
Iteration:  29780, Loss function: 3.636, Average Loss: 3.830, avg. samples / sec: 1010.92
Iteration:  29800, Loss function: 3.637, Average Loss: 3.831, avg. samples / sec: 1020.17
Iteration:  29820, Loss function: 3.628, Average Loss: 3.831, avg. samples / sec: 957.45
:::MLLOG {"namespace": "", "time_ms": 1639130017355, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1639130017357, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 30, "current_iter_num": 29831}}
Iteration:  29840, Loss function: 3.738, Average Loss: 3.829, avg. samples / sec: 969.30
Iteration:  29860, Loss function: 3.692, Average Loss: 3.828, avg. samples / sec: 956.98
Iteration:  29880, Loss function: 3.749, Average Loss: 3.826, avg. samples / sec: 932.22
Iteration:  29900, Loss function: 3.702, Average Loss: 3.825, avg. samples / sec: 1060.94
Iteration:  29920, Loss function: 3.956, Average Loss: 3.823, avg. samples / sec: 990.99
Iteration:  29940, Loss function: 3.869, Average Loss: 3.822, avg. samples / sec: 1000.76
Iteration:  29960, Loss function: 3.789, Average Loss: 3.821, avg. samples / sec: 964.91
Iteration:  29980, Loss function: 3.654, Average Loss: 3.821, avg. samples / sec: 1051.62
Iteration:  30000, Loss function: 3.861, Average Loss: 3.820, avg. samples / sec: 1014.25
Iteration:  30020, Loss function: 3.867, Average Loss: 3.819, avg. samples / sec: 916.23
Iteration:  30040, Loss function: 3.966, Average Loss: 3.820, avg. samples / sec: 971.53
Iteration:  30060, Loss function: 3.418, Average Loss: 3.818, avg. samples / sec: 1060.44
Iteration:  30080, Loss function: 3.480, Average Loss: 3.817, avg. samples / sec: 1066.60
Iteration:  30100, Loss function: 3.900, Average Loss: 3.817, avg. samples / sec: 1016.05
Iteration:  30120, Loss function: 3.867, Average Loss: 3.817, avg. samples / sec: 993.17
Iteration:  30140, Loss function: 3.926, Average Loss: 3.817, avg. samples / sec: 969.26
Iteration:  30160, Loss function: 3.901, Average Loss: 3.818, avg. samples / sec: 1001.66
Iteration:  30180, Loss function: 3.705, Average Loss: 3.819, avg. samples / sec: 1038.31
Iteration:  30200, Loss function: 3.928, Average Loss: 3.819, avg. samples / sec: 998.73
Iteration:  30220, Loss function: 3.831, Average Loss: 3.819, avg. samples / sec: 1023.92
Iteration:  30240, Loss function: 3.676, Average Loss: 3.819, avg. samples / sec: 1072.01
Iteration:  30260, Loss function: 3.609, Average Loss: 3.819, avg. samples / sec: 1014.41
Iteration:  30280, Loss function: 4.028, Average Loss: 3.818, avg. samples / sec: 995.62
Iteration:  30300, Loss function: 3.971, Average Loss: 3.817, avg. samples / sec: 935.60
Iteration:  30320, Loss function: 3.793, Average Loss: 3.816, avg. samples / sec: 1049.69
Iteration:  30340, Loss function: 3.738, Average Loss: 3.815, avg. samples / sec: 980.10
Iteration:  30360, Loss function: 3.794, Average Loss: 3.816, avg. samples / sec: 971.18
Iteration:  30380, Loss function: 3.861, Average Loss: 3.816, avg. samples / sec: 1012.07
Iteration:  30400, Loss function: 3.837, Average Loss: 3.815, avg. samples / sec: 1011.41
Iteration:  30420, Loss function: 3.674, Average Loss: 3.815, avg. samples / sec: 995.29
Iteration:  30440, Loss function: 3.867, Average Loss: 3.815, avg. samples / sec: 964.23
Iteration:  30460, Loss function: 3.865, Average Loss: 3.816, avg. samples / sec: 942.88
Iteration:  30480, Loss function: 3.742, Average Loss: 3.817, avg. samples / sec: 1003.94
Iteration:  30500, Loss function: 3.967, Average Loss: 3.818, avg. samples / sec: 1098.18
Iteration:  30520, Loss function: 3.854, Average Loss: 3.818, avg. samples / sec: 968.11
Iteration:  30540, Loss function: 3.599, Average Loss: 3.818, avg. samples / sec: 906.27
Iteration:  30560, Loss function: 3.937, Average Loss: 3.819, avg. samples / sec: 988.46
Iteration:  30580, Loss function: 4.146, Average Loss: 3.819, avg. samples / sec: 1003.05
Iteration:  30600, Loss function: 3.521, Average Loss: 3.819, avg. samples / sec: 999.12
Iteration:  30620, Loss function: 3.651, Average Loss: 3.817, avg. samples / sec: 1002.26
Iteration:  30640, Loss function: 3.717, Average Loss: 3.817, avg. samples / sec: 1028.55
Iteration:  30660, Loss function: 3.612, Average Loss: 3.817, avg. samples / sec: 998.76
Iteration:  30680, Loss function: 3.692, Average Loss: 3.818, avg. samples / sec: 929.52
Iteration:  30700, Loss function: 3.777, Average Loss: 3.818, avg. samples / sec: 885.09
Iteration:  30720, Loss function: 3.747, Average Loss: 3.818, avg. samples / sec: 1024.26
Iteration:  30740, Loss function: 3.829, Average Loss: 3.818, avg. samples / sec: 991.20
Iteration:  30760, Loss function: 3.940, Average Loss: 3.819, avg. samples / sec: 973.42
Iteration:  30780, Loss function: 4.042, Average Loss: 3.818, avg. samples / sec: 1021.39
Iteration:  30800, Loss function: 3.778, Average Loss: 3.818, avg. samples / sec: 988.36
Iteration:  30820, Loss function: 3.892, Average Loss: 3.819, avg. samples / sec: 997.56
Iteration:  30840, Loss function: 3.633, Average Loss: 3.817, avg. samples / sec: 1087.57
:::MLLOG {"namespace": "", "time_ms": 1639130135161, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1639130135163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 31, "current_iter_num": 30860}}
Iteration:  30860, Loss function: 3.608, Average Loss: 3.817, avg. samples / sec: 1053.48
Iteration:  30880, Loss function: 3.702, Average Loss: 3.816, avg. samples / sec: 1008.80
Iteration:  30900, Loss function: 3.756, Average Loss: 3.813, avg. samples / sec: 987.38
Iteration:  30920, Loss function: 3.769, Average Loss: 3.814, avg. samples / sec: 1061.89
Iteration:  30940, Loss function: 3.929, Average Loss: 3.813, avg. samples / sec: 1067.47
Iteration:  30960, Loss function: 3.981, Average Loss: 3.812, avg. samples / sec: 1017.80
Iteration:  30980, Loss function: 3.816, Average Loss: 3.811, avg. samples / sec: 1042.61
Iteration:  31000, Loss function: 3.794, Average Loss: 3.810, avg. samples / sec: 1002.35
Iteration:  31020, Loss function: 3.822, Average Loss: 3.810, avg. samples / sec: 1001.02
Iteration:  31040, Loss function: 3.852, Average Loss: 3.811, avg. samples / sec: 1003.65
Iteration:  31060, Loss function: 4.002, Average Loss: 3.811, avg. samples / sec: 965.48
Iteration:  31080, Loss function: 4.034, Average Loss: 3.810, avg. samples / sec: 1047.86
Iteration:  31100, Loss function: 3.658, Average Loss: 3.809, avg. samples / sec: 1031.45
Iteration:  31120, Loss function: 3.534, Average Loss: 3.808, avg. samples / sec: 1064.17
Iteration:  31140, Loss function: 3.960, Average Loss: 3.808, avg. samples / sec: 1006.50
Iteration:  31160, Loss function: 4.090, Average Loss: 3.808, avg. samples / sec: 1036.70
Iteration:  31180, Loss function: 3.798, Average Loss: 3.809, avg. samples / sec: 991.68
Iteration:  31200, Loss function: 3.702, Average Loss: 3.808, avg. samples / sec: 920.99
Iteration:  31220, Loss function: 3.727, Average Loss: 3.809, avg. samples / sec: 982.42
Iteration:  31240, Loss function: 3.747, Average Loss: 3.810, avg. samples / sec: 930.07
Iteration:  31260, Loss function: 3.826, Average Loss: 3.808, avg. samples / sec: 1009.01
Iteration:  31280, Loss function: 4.013, Average Loss: 3.809, avg. samples / sec: 1033.33
Iteration:  31300, Loss function: 3.848, Average Loss: 3.810, avg. samples / sec: 1020.52
Iteration:  31320, Loss function: 3.722, Average Loss: 3.809, avg. samples / sec: 1074.26
Iteration:  31340, Loss function: 3.628, Average Loss: 3.811, avg. samples / sec: 980.61
Iteration:  31360, Loss function: 3.777, Average Loss: 3.810, avg. samples / sec: 1027.45
Iteration:  31380, Loss function: 4.090, Average Loss: 3.809, avg. samples / sec: 1014.92
Iteration:  31400, Loss function: 4.191, Average Loss: 3.809, avg. samples / sec: 1046.38
Iteration:  31420, Loss function: 3.764, Average Loss: 3.808, avg. samples / sec: 999.78
Iteration:  31440, Loss function: 3.709, Average Loss: 3.806, avg. samples / sec: 1040.60
Iteration:  31460, Loss function: 3.802, Average Loss: 3.806, avg. samples / sec: 1042.73
Iteration:  31480, Loss function: 3.687, Average Loss: 3.806, avg. samples / sec: 1032.74
Iteration:  31500, Loss function: 3.953, Average Loss: 3.805, avg. samples / sec: 955.66
Iteration:  31520, Loss function: 3.694, Average Loss: 3.804, avg. samples / sec: 1023.62
Iteration:  31540, Loss function: 3.800, Average Loss: 3.804, avg. samples / sec: 1046.61
Iteration:  31560, Loss function: 3.810, Average Loss: 3.803, avg. samples / sec: 967.35
Iteration:  31580, Loss function: 3.712, Average Loss: 3.802, avg. samples / sec: 1000.32
Iteration:  31600, Loss function: 3.739, Average Loss: 3.803, avg. samples / sec: 1029.96
Iteration:  31620, Loss function: 3.791, Average Loss: 3.804, avg. samples / sec: 1002.36
Iteration:  31640, Loss function: 3.683, Average Loss: 3.805, avg. samples / sec: 960.59
Iteration:  31660, Loss function: 3.645, Average Loss: 3.805, avg. samples / sec: 1010.78
Iteration:  31680, Loss function: 3.727, Average Loss: 3.805, avg. samples / sec: 974.59
Iteration:  31700, Loss function: 3.607, Average Loss: 3.804, avg. samples / sec: 963.99
Iteration:  31720, Loss function: 3.686, Average Loss: 3.805, avg. samples / sec: 938.62
Iteration:  31740, Loss function: 3.607, Average Loss: 3.804, avg. samples / sec: 1001.70
Iteration:  31760, Loss function: 3.952, Average Loss: 3.803, avg. samples / sec: 1029.13
Iteration:  31780, Loss function: 3.575, Average Loss: 3.803, avg. samples / sec: 991.56
Iteration:  31800, Loss function: 3.822, Average Loss: 3.803, avg. samples / sec: 1010.35
Iteration:  31820, Loss function: 3.774, Average Loss: 3.803, avg. samples / sec: 978.80
Iteration:  31840, Loss function: 3.931, Average Loss: 3.803, avg. samples / sec: 1046.67
Iteration:  31860, Loss function: 3.880, Average Loss: 3.803, avg. samples / sec: 971.02
Iteration:  31880, Loss function: 4.038, Average Loss: 3.804, avg. samples / sec: 1027.24
:::MLLOG {"namespace": "", "time_ms": 1639130251647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1639130251649, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 32, "current_iter_num": 31889}}
Iteration:  31900, Loss function: 3.367, Average Loss: 3.803, avg. samples / sec: 1052.89
Iteration:  31920, Loss function: 3.419, Average Loss: 3.802, avg. samples / sec: 1013.40
Iteration:  31940, Loss function: 4.069, Average Loss: 3.801, avg. samples / sec: 942.17
Iteration:  31960, Loss function: 3.897, Average Loss: 3.800, avg. samples / sec: 1014.05
Iteration:  31980, Loss function: 3.526, Average Loss: 3.799, avg. samples / sec: 1009.41
Iteration:  32000, Loss function: 3.696, Average Loss: 3.798, avg. samples / sec: 1073.02
Iteration:  32020, Loss function: 3.708, Average Loss: 3.796, avg. samples / sec: 1056.09
Iteration:  32040, Loss function: 4.009, Average Loss: 3.796, avg. samples / sec: 1031.28
Iteration:  32060, Loss function: 3.820, Average Loss: 3.794, avg. samples / sec: 1025.73
Iteration:  32080, Loss function: 3.710, Average Loss: 3.793, avg. samples / sec: 952.33
Iteration:  32100, Loss function: 3.893, Average Loss: 3.794, avg. samples / sec: 996.54
Iteration:  32120, Loss function: 3.867, Average Loss: 3.794, avg. samples / sec: 1071.65
Iteration:  32140, Loss function: 3.539, Average Loss: 3.792, avg. samples / sec: 999.56
Iteration:  32160, Loss function: 3.778, Average Loss: 3.792, avg. samples / sec: 1014.11
Iteration:  32180, Loss function: 3.602, Average Loss: 3.791, avg. samples / sec: 954.71
Iteration:  32200, Loss function: 3.613, Average Loss: 3.790, avg. samples / sec: 1014.46
Iteration:  32220, Loss function: 4.008, Average Loss: 3.790, avg. samples / sec: 1029.83
Iteration:  32240, Loss function: 3.572, Average Loss: 3.791, avg. samples / sec: 1024.84
Iteration:  32260, Loss function: 3.756, Average Loss: 3.790, avg. samples / sec: 1030.40
Iteration:  32280, Loss function: 3.466, Average Loss: 3.789, avg. samples / sec: 1020.56
Iteration:  32300, Loss function: 3.717, Average Loss: 3.788, avg. samples / sec: 961.89
Iteration:  32320, Loss function: 3.957, Average Loss: 3.788, avg. samples / sec: 1031.30
Iteration:  32340, Loss function: 3.790, Average Loss: 3.787, avg. samples / sec: 1001.83
Iteration:  32360, Loss function: 3.657, Average Loss: 3.787, avg. samples / sec: 1026.77
Iteration:  32380, Loss function: 3.694, Average Loss: 3.788, avg. samples / sec: 980.56
Iteration:  32400, Loss function: 3.416, Average Loss: 3.788, avg. samples / sec: 1039.39
Iteration:  32420, Loss function: 3.629, Average Loss: 3.788, avg. samples / sec: 1001.04
Iteration:  32440, Loss function: 3.554, Average Loss: 3.788, avg. samples / sec: 971.77
Iteration:  32460, Loss function: 3.734, Average Loss: 3.788, avg. samples / sec: 975.04
Iteration:  32480, Loss function: 3.589, Average Loss: 3.789, avg. samples / sec: 997.21
Iteration:  32500, Loss function: 3.536, Average Loss: 3.788, avg. samples / sec: 983.37
Iteration:  32520, Loss function: 4.055, Average Loss: 3.789, avg. samples / sec: 986.09
Iteration:  32540, Loss function: 3.923, Average Loss: 3.790, avg. samples / sec: 1046.03
Iteration:  32560, Loss function: 4.050, Average Loss: 3.790, avg. samples / sec: 1029.50
Iteration:  32580, Loss function: 3.724, Average Loss: 3.791, avg. samples / sec: 1030.69
Iteration:  32600, Loss function: 3.533, Average Loss: 3.789, avg. samples / sec: 1040.11
Iteration:  32620, Loss function: 3.706, Average Loss: 3.789, avg. samples / sec: 1028.87
Iteration:  32640, Loss function: 3.812, Average Loss: 3.790, avg. samples / sec: 1038.17
Iteration:  32660, Loss function: 4.012, Average Loss: 3.790, avg. samples / sec: 1042.36
Iteration:  32680, Loss function: 3.848, Average Loss: 3.791, avg. samples / sec: 1071.31
Iteration:  32700, Loss function: 3.821, Average Loss: 3.792, avg. samples / sec: 989.37
Iteration:  32720, Loss function: 4.028, Average Loss: 3.791, avg. samples / sec: 974.54
Iteration:  32740, Loss function: 4.017, Average Loss: 3.790, avg. samples / sec: 988.47
Iteration:  32760, Loss function: 3.608, Average Loss: 3.788, avg. samples / sec: 1026.48
Iteration:  32780, Loss function: 3.765, Average Loss: 3.788, avg. samples / sec: 932.86
Iteration:  32800, Loss function: 4.009, Average Loss: 3.789, avg. samples / sec: 972.57
Iteration:  32820, Loss function: 3.848, Average Loss: 3.788, avg. samples / sec: 1001.09
Iteration:  32840, Loss function: 4.128, Average Loss: 3.789, avg. samples / sec: 1060.01
Iteration:  32860, Loss function: 3.638, Average Loss: 3.789, avg. samples / sec: 1040.69
Iteration:  32880, Loss function: 3.815, Average Loss: 3.788, avg. samples / sec: 1024.83
Iteration:  32900, Loss function: 3.581, Average Loss: 3.788, avg. samples / sec: 1045.97
:::MLLOG {"namespace": "", "time_ms": 1639130367482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1639130367484, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 33, "current_iter_num": 32917}}
Iteration:  32920, Loss function: 3.525, Average Loss: 3.786, avg. samples / sec: 1031.04
Iteration:  32940, Loss function: 3.862, Average Loss: 3.785, avg. samples / sec: 981.63
Iteration:  32960, Loss function: 3.968, Average Loss: 3.785, avg. samples / sec: 949.05
Iteration:  32980, Loss function: 3.813, Average Loss: 3.784, avg. samples / sec: 1004.83
Iteration:  33000, Loss function: 3.901, Average Loss: 3.783, avg. samples / sec: 1047.81
Iteration:  33020, Loss function: 3.739, Average Loss: 3.782, avg. samples / sec: 969.43
Iteration:  33040, Loss function: 3.863, Average Loss: 3.782, avg. samples / sec: 1012.65
Iteration:  33060, Loss function: 3.974, Average Loss: 3.782, avg. samples / sec: 1001.89
Iteration:  33080, Loss function: 3.705, Average Loss: 3.782, avg. samples / sec: 1002.97
Iteration:  33100, Loss function: 3.777, Average Loss: 3.781, avg. samples / sec: 1027.40
Iteration:  33120, Loss function: 3.899, Average Loss: 3.780, avg. samples / sec: 975.06
Iteration:  33140, Loss function: 3.571, Average Loss: 3.780, avg. samples / sec: 934.27
Iteration:  33160, Loss function: 3.808, Average Loss: 3.779, avg. samples / sec: 919.88
Iteration:  33180, Loss function: 3.535, Average Loss: 3.779, avg. samples / sec: 1028.19
Iteration:  33200, Loss function: 3.423, Average Loss: 3.778, avg. samples / sec: 989.03
Iteration:  33220, Loss function: 3.882, Average Loss: 3.778, avg. samples / sec: 985.32
Iteration:  33240, Loss function: 3.781, Average Loss: 3.776, avg. samples / sec: 931.83
Iteration:  33260, Loss function: 3.952, Average Loss: 3.776, avg. samples / sec: 994.60
Iteration:  33280, Loss function: 3.882, Average Loss: 3.775, avg. samples / sec: 1038.54
Iteration:  33300, Loss function: 3.620, Average Loss: 3.774, avg. samples / sec: 1008.49
Iteration:  33320, Loss function: 3.673, Average Loss: 3.773, avg. samples / sec: 1041.17
Iteration:  33340, Loss function: 3.788, Average Loss: 3.772, avg. samples / sec: 1085.06
Iteration:  33360, Loss function: 3.544, Average Loss: 3.772, avg. samples / sec: 987.04
Iteration:  33380, Loss function: 3.623, Average Loss: 3.772, avg. samples / sec: 1004.07
Iteration:  33400, Loss function: 4.141, Average Loss: 3.771, avg. samples / sec: 969.19
Iteration:  33420, Loss function: 3.988, Average Loss: 3.771, avg. samples / sec: 1070.09
Iteration:  33440, Loss function: 3.509, Average Loss: 3.771, avg. samples / sec: 964.78
Iteration:  33460, Loss function: 3.617, Average Loss: 3.771, avg. samples / sec: 977.83
Iteration:  33480, Loss function: 3.845, Average Loss: 3.772, avg. samples / sec: 1025.75
Iteration:  33500, Loss function: 3.750, Average Loss: 3.773, avg. samples / sec: 989.29
Iteration:  33520, Loss function: 4.010, Average Loss: 3.773, avg. samples / sec: 942.85
Iteration:  33540, Loss function: 3.904, Average Loss: 3.773, avg. samples / sec: 1031.68
Iteration:  33560, Loss function: 3.914, Average Loss: 3.773, avg. samples / sec: 981.11
Iteration:  33580, Loss function: 3.902, Average Loss: 3.772, avg. samples / sec: 1005.63
Iteration:  33600, Loss function: 3.784, Average Loss: 3.773, avg. samples / sec: 1048.84
Iteration:  33620, Loss function: 3.509, Average Loss: 3.772, avg. samples / sec: 1043.51
Iteration:  33640, Loss function: 3.578, Average Loss: 3.770, avg. samples / sec: 1011.54
Iteration:  33660, Loss function: 4.109, Average Loss: 3.772, avg. samples / sec: 1033.14
Iteration:  33680, Loss function: 3.767, Average Loss: 3.773, avg. samples / sec: 1010.21
Iteration:  33700, Loss function: 3.882, Average Loss: 3.772, avg. samples / sec: 1024.85
Iteration:  33720, Loss function: 3.472, Average Loss: 3.772, avg. samples / sec: 952.65
Iteration:  33740, Loss function: 3.584, Average Loss: 3.772, avg. samples / sec: 961.76
Iteration:  33760, Loss function: 3.678, Average Loss: 3.772, avg. samples / sec: 955.69
Iteration:  33780, Loss function: 3.809, Average Loss: 3.772, avg. samples / sec: 1019.10
Iteration:  33800, Loss function: 3.895, Average Loss: 3.773, avg. samples / sec: 974.22
Iteration:  33820, Loss function: 3.774, Average Loss: 3.773, avg. samples / sec: 955.22
Iteration:  33840, Loss function: 3.693, Average Loss: 3.775, avg. samples / sec: 978.58
Iteration:  33860, Loss function: 3.411, Average Loss: 3.774, avg. samples / sec: 1019.31
Iteration:  33880, Loss function: 3.589, Average Loss: 3.774, avg. samples / sec: 1007.33
Iteration:  33900, Loss function: 3.894, Average Loss: 3.774, avg. samples / sec: 1028.40
Iteration:  33920, Loss function: 3.562, Average Loss: 3.773, avg. samples / sec: 1039.91
Iteration:  33940, Loss function: 3.754, Average Loss: 3.773, avg. samples / sec: 1007.21
:::MLLOG {"namespace": "", "time_ms": 1639130485125, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1639130485126, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 34, "current_iter_num": 33946}}
Iteration:  33960, Loss function: 3.523, Average Loss: 3.773, avg. samples / sec: 985.14
Iteration:  33980, Loss function: 3.626, Average Loss: 3.772, avg. samples / sec: 977.56
Iteration:  34000, Loss function: 3.710, Average Loss: 3.770, avg. samples / sec: 1004.85
Iteration:  34020, Loss function: 3.469, Average Loss: 3.769, avg. samples / sec: 1020.58
Iteration:  34040, Loss function: 3.783, Average Loss: 3.768, avg. samples / sec: 1039.08
Iteration:  34060, Loss function: 3.730, Average Loss: 3.768, avg. samples / sec: 1030.57
Iteration:  34080, Loss function: 4.011, Average Loss: 3.767, avg. samples / sec: 1104.60
Iteration:  34100, Loss function: 3.644, Average Loss: 3.767, avg. samples / sec: 969.31
Iteration:  34120, Loss function: 3.565, Average Loss: 3.767, avg. samples / sec: 975.25
Iteration:  34140, Loss function: 3.842, Average Loss: 3.766, avg. samples / sec: 964.75
Iteration:  34160, Loss function: 3.644, Average Loss: 3.766, avg. samples / sec: 1058.50
Iteration:  34180, Loss function: 4.009, Average Loss: 3.766, avg. samples / sec: 1056.85
Iteration:  34200, Loss function: 3.684, Average Loss: 3.767, avg. samples / sec: 1015.14
Iteration:  34220, Loss function: 3.892, Average Loss: 3.766, avg. samples / sec: 1013.86
Iteration:  34240, Loss function: 3.585, Average Loss: 3.767, avg. samples / sec: 964.93
Iteration:  34260, Loss function: 3.844, Average Loss: 3.765, avg. samples / sec: 1024.27
Iteration:  34280, Loss function: 3.748, Average Loss: 3.765, avg. samples / sec: 971.89
Iteration:  34300, Loss function: 3.743, Average Loss: 3.765, avg. samples / sec: 1002.56
Iteration:  34320, Loss function: 3.577, Average Loss: 3.765, avg. samples / sec: 1018.78
Iteration:  34340, Loss function: 3.805, Average Loss: 3.764, avg. samples / sec: 981.33
Iteration:  34360, Loss function: 3.782, Average Loss: 3.764, avg. samples / sec: 1048.36
Iteration:  34380, Loss function: 3.889, Average Loss: 3.765, avg. samples / sec: 1008.74
Iteration:  34400, Loss function: 3.895, Average Loss: 3.764, avg. samples / sec: 1010.45
Iteration:  34420, Loss function: 3.652, Average Loss: 3.764, avg. samples / sec: 1041.73
Iteration:  34440, Loss function: 4.035, Average Loss: 3.764, avg. samples / sec: 996.05
Iteration:  34460, Loss function: 3.640, Average Loss: 3.765, avg. samples / sec: 1071.18
Iteration:  34480, Loss function: 3.896, Average Loss: 3.765, avg. samples / sec: 1004.42
Iteration:  34500, Loss function: 3.947, Average Loss: 3.766, avg. samples / sec: 1007.30
Iteration:  34520, Loss function: 3.626, Average Loss: 3.766, avg. samples / sec: 988.01
Iteration:  34540, Loss function: 3.646, Average Loss: 3.765, avg. samples / sec: 1050.18
Iteration:  34560, Loss function: 3.588, Average Loss: 3.765, avg. samples / sec: 1076.48
Iteration:  34580, Loss function: 3.760, Average Loss: 3.765, avg. samples / sec: 1037.64
Iteration:  34600, Loss function: 3.799, Average Loss: 3.766, avg. samples / sec: 983.95
Iteration:  34620, Loss function: 4.031, Average Loss: 3.766, avg. samples / sec: 1021.67
Iteration:  34640, Loss function: 3.618, Average Loss: 3.765, avg. samples / sec: 1036.89
Iteration:  34660, Loss function: 3.858, Average Loss: 3.766, avg. samples / sec: 1023.73
Iteration:  34680, Loss function: 3.875, Average Loss: 3.768, avg. samples / sec: 993.07
Iteration:  34700, Loss function: 4.048, Average Loss: 3.768, avg. samples / sec: 1041.58
Iteration:  34720, Loss function: 3.568, Average Loss: 3.767, avg. samples / sec: 1013.79
Iteration:  34740, Loss function: 4.014, Average Loss: 3.765, avg. samples / sec: 1034.43
Iteration:  34760, Loss function: 3.636, Average Loss: 3.764, avg. samples / sec: 974.23
Iteration:  34780, Loss function: 3.774, Average Loss: 3.764, avg. samples / sec: 1023.61
Iteration:  34800, Loss function: 3.887, Average Loss: 3.764, avg. samples / sec: 1057.51
Iteration:  34820, Loss function: 3.901, Average Loss: 3.763, avg. samples / sec: 985.99
Iteration:  34840, Loss function: 3.888, Average Loss: 3.763, avg. samples / sec: 1005.54
Iteration:  34860, Loss function: 3.736, Average Loss: 3.762, avg. samples / sec: 999.03
Iteration:  34880, Loss function: 4.164, Average Loss: 3.761, avg. samples / sec: 929.41
Iteration:  34900, Loss function: 3.973, Average Loss: 3.762, avg. samples / sec: 986.84
Iteration:  34920, Loss function: 3.527, Average Loss: 3.762, avg. samples / sec: 962.38
Iteration:  34940, Loss function: 3.492, Average Loss: 3.762, avg. samples / sec: 857.90
Iteration:  34960, Loss function: 3.899, Average Loss: 3.762, avg. samples / sec: 972.01
:::MLLOG {"namespace": "", "time_ms": 1639130601689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1639130601691, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 35, "current_iter_num": 34975}}
Iteration:  34980, Loss function: 3.657, Average Loss: 3.762, avg. samples / sec: 954.96
Iteration:  35000, Loss function: 3.856, Average Loss: 3.761, avg. samples / sec: 1045.91
Iteration:  35020, Loss function: 4.049, Average Loss: 3.760, avg. samples / sec: 1089.07
Iteration:  35040, Loss function: 4.010, Average Loss: 3.761, avg. samples / sec: 943.07
Iteration:  35060, Loss function: 3.568, Average Loss: 3.761, avg. samples / sec: 1005.97
Iteration:  35080, Loss function: 3.497, Average Loss: 3.760, avg. samples / sec: 1038.89
Iteration:  35100, Loss function: 3.754, Average Loss: 3.758, avg. samples / sec: 996.08
Iteration:  35120, Loss function: 4.075, Average Loss: 3.758, avg. samples / sec: 1018.18
Iteration:  35140, Loss function: 3.568, Average Loss: 3.757, avg. samples / sec: 982.95
Iteration:  35160, Loss function: 3.867, Average Loss: 3.757, avg. samples / sec: 1047.99
Iteration:  35180, Loss function: 3.776, Average Loss: 3.756, avg. samples / sec: 998.20
Iteration:  35200, Loss function: 3.702, Average Loss: 3.755, avg. samples / sec: 976.77
Iteration:  35220, Loss function: 3.870, Average Loss: 3.755, avg. samples / sec: 1022.66
Iteration:  35240, Loss function: 3.574, Average Loss: 3.755, avg. samples / sec: 936.36
Iteration:  35260, Loss function: 3.726, Average Loss: 3.754, avg. samples / sec: 1013.61
Iteration:  35280, Loss function: 3.705, Average Loss: 3.753, avg. samples / sec: 1014.56
Iteration:  35300, Loss function: 3.615, Average Loss: 3.752, avg. samples / sec: 1029.51
Iteration:  35320, Loss function: 3.865, Average Loss: 3.752, avg. samples / sec: 1056.59
Iteration:  35340, Loss function: 3.962, Average Loss: 3.752, avg. samples / sec: 965.64
Iteration:  35360, Loss function: 3.814, Average Loss: 3.752, avg. samples / sec: 963.37
Iteration:  35380, Loss function: 3.687, Average Loss: 3.753, avg. samples / sec: 1010.50
Iteration:  35400, Loss function: 3.894, Average Loss: 3.753, avg. samples / sec: 1104.96
Iteration:  35420, Loss function: 3.886, Average Loss: 3.754, avg. samples / sec: 1012.00
Iteration:  35440, Loss function: 3.772, Average Loss: 3.755, avg. samples / sec: 1047.56
Iteration:  35460, Loss function: 3.749, Average Loss: 3.755, avg. samples / sec: 1017.04
Iteration:  35480, Loss function: 3.570, Average Loss: 3.755, avg. samples / sec: 948.10
Iteration:  35500, Loss function: 3.764, Average Loss: 3.755, avg. samples / sec: 930.05
Iteration:  35520, Loss function: 3.775, Average Loss: 3.755, avg. samples / sec: 965.16
Iteration:  35540, Loss function: 3.461, Average Loss: 3.754, avg. samples / sec: 1000.68
Iteration:  35560, Loss function: 3.816, Average Loss: 3.753, avg. samples / sec: 1033.45
Iteration:  35580, Loss function: 3.624, Average Loss: 3.753, avg. samples / sec: 1027.03
Iteration:  35600, Loss function: 3.681, Average Loss: 3.752, avg. samples / sec: 1047.52
Iteration:  35620, Loss function: 3.811, Average Loss: 3.751, avg. samples / sec: 992.91
Iteration:  35640, Loss function: 3.798, Average Loss: 3.751, avg. samples / sec: 989.56
Iteration:  35660, Loss function: 3.671, Average Loss: 3.751, avg. samples / sec: 991.66
Iteration:  35680, Loss function: 3.606, Average Loss: 3.753, avg. samples / sec: 986.11
Iteration:  35700, Loss function: 3.933, Average Loss: 3.753, avg. samples / sec: 1033.44
Iteration:  35720, Loss function: 3.836, Average Loss: 3.753, avg. samples / sec: 973.34
Iteration:  35740, Loss function: 3.749, Average Loss: 3.752, avg. samples / sec: 957.48
Iteration:  35760, Loss function: 3.690, Average Loss: 3.751, avg. samples / sec: 1063.37
Iteration:  35780, Loss function: 3.414, Average Loss: 3.751, avg. samples / sec: 1009.26
Iteration:  35800, Loss function: 3.999, Average Loss: 3.751, avg. samples / sec: 976.48
Iteration:  35820, Loss function: 4.188, Average Loss: 3.752, avg. samples / sec: 976.56
Iteration:  35840, Loss function: 3.582, Average Loss: 3.751, avg. samples / sec: 991.76
Iteration:  35860, Loss function: 3.741, Average Loss: 3.750, avg. samples / sec: 1014.00
Iteration:  35880, Loss function: 3.914, Average Loss: 3.751, avg. samples / sec: 1066.51
Iteration:  35900, Loss function: 3.556, Average Loss: 3.751, avg. samples / sec: 1007.45
Iteration:  35920, Loss function: 3.878, Average Loss: 3.751, avg. samples / sec: 1001.49
Iteration:  35940, Loss function: 3.717, Average Loss: 3.750, avg. samples / sec: 952.58
Iteration:  35960, Loss function: 3.700, Average Loss: 3.751, avg. samples / sec: 906.36
Iteration:  35980, Loss function: 3.550, Average Loss: 3.751, avg. samples / sec: 967.71
Iteration:  36000, Loss function: 3.757, Average Loss: 3.751, avg. samples / sec: 1005.56
:::MLLOG {"namespace": "", "time_ms": 1639130718775, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1639130718777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 36, "current_iter_num": 36003}}
Iteration:  36020, Loss function: 3.744, Average Loss: 3.749, avg. samples / sec: 903.66
Iteration:  36040, Loss function: 3.413, Average Loss: 3.748, avg. samples / sec: 990.40
Iteration:  36060, Loss function: 3.501, Average Loss: 3.747, avg. samples / sec: 1007.60
Iteration:  36080, Loss function: 3.847, Average Loss: 3.745, avg. samples / sec: 1036.11
Iteration:  36100, Loss function: 3.886, Average Loss: 3.745, avg. samples / sec: 1056.22
Iteration:  36120, Loss function: 3.619, Average Loss: 3.745, avg. samples / sec: 1034.90
Iteration:  36140, Loss function: 3.775, Average Loss: 3.744, avg. samples / sec: 1008.55
Iteration:  36160, Loss function: 3.928, Average Loss: 3.743, avg. samples / sec: 1042.22
Iteration:  36180, Loss function: 3.678, Average Loss: 3.742, avg. samples / sec: 1055.41
Iteration:  36200, Loss function: 3.637, Average Loss: 3.742, avg. samples / sec: 1004.77
Iteration:  36220, Loss function: 3.942, Average Loss: 3.743, avg. samples / sec: 945.03
Iteration:  36240, Loss function: 3.553, Average Loss: 3.741, avg. samples / sec: 1023.64
Iteration:  36260, Loss function: 3.769, Average Loss: 3.740, avg. samples / sec: 1036.21
Iteration:  36280, Loss function: 3.626, Average Loss: 3.740, avg. samples / sec: 935.36
Iteration:  36300, Loss function: 3.600, Average Loss: 3.739, avg. samples / sec: 986.45
Iteration:  36320, Loss function: 3.947, Average Loss: 3.738, avg. samples / sec: 959.15
Iteration:  36340, Loss function: 3.576, Average Loss: 3.738, avg. samples / sec: 987.46
Iteration:  36360, Loss function: 3.541, Average Loss: 3.737, avg. samples / sec: 1017.19
Iteration:  36380, Loss function: 4.089, Average Loss: 3.738, avg. samples / sec: 931.58
Iteration:  36400, Loss function: 3.572, Average Loss: 3.738, avg. samples / sec: 949.35
Iteration:  36420, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 977.07
Iteration:  36440, Loss function: 3.616, Average Loss: 3.740, avg. samples / sec: 943.90
Iteration:  36460, Loss function: 3.664, Average Loss: 3.740, avg. samples / sec: 1035.69
Iteration:  36480, Loss function: 3.923, Average Loss: 3.741, avg. samples / sec: 1031.35
Iteration:  36500, Loss function: 3.942, Average Loss: 3.741, avg. samples / sec: 955.93
Iteration:  36520, Loss function: 3.806, Average Loss: 3.741, avg. samples / sec: 1028.57
Iteration:  36540, Loss function: 3.747, Average Loss: 3.741, avg. samples / sec: 948.29
Iteration:  36560, Loss function: 3.509, Average Loss: 3.741, avg. samples / sec: 1016.55
Iteration:  36580, Loss function: 3.871, Average Loss: 3.741, avg. samples / sec: 1021.07
Iteration:  36600, Loss function: 3.730, Average Loss: 3.740, avg. samples / sec: 1013.30
Iteration:  36620, Loss function: 3.490, Average Loss: 3.740, avg. samples / sec: 967.71
Iteration:  36640, Loss function: 3.574, Average Loss: 3.739, avg. samples / sec: 1009.60
Iteration:  36660, Loss function: 3.654, Average Loss: 3.740, avg. samples / sec: 1017.38
Iteration:  36680, Loss function: 3.671, Average Loss: 3.738, avg. samples / sec: 1054.09
Iteration:  36700, Loss function: 4.213, Average Loss: 3.739, avg. samples / sec: 1007.31
Iteration:  36720, Loss function: 3.641, Average Loss: 3.738, avg. samples / sec: 997.07
Iteration:  36740, Loss function: 3.570, Average Loss: 3.737, avg. samples / sec: 982.50
Iteration:  36760, Loss function: 3.527, Average Loss: 3.738, avg. samples / sec: 1045.45
Iteration:  36780, Loss function: 4.114, Average Loss: 3.739, avg. samples / sec: 1072.00
Iteration:  36800, Loss function: 3.870, Average Loss: 3.740, avg. samples / sec: 928.45
Iteration:  36820, Loss function: 3.778, Average Loss: 3.739, avg. samples / sec: 957.91
Iteration:  36840, Loss function: 3.615, Average Loss: 3.739, avg. samples / sec: 1053.96
Iteration:  36860, Loss function: 3.541, Average Loss: 3.738, avg. samples / sec: 1062.96
Iteration:  36880, Loss function: 3.643, Average Loss: 3.738, avg. samples / sec: 1072.72
Iteration:  36900, Loss function: 3.673, Average Loss: 3.737, avg. samples / sec: 972.38
Iteration:  36920, Loss function: 3.479, Average Loss: 3.737, avg. samples / sec: 1023.64
Iteration:  36940, Loss function: 3.910, Average Loss: 3.737, avg. samples / sec: 1021.99
Iteration:  36960, Loss function: 3.656, Average Loss: 3.736, avg. samples / sec: 967.51
Iteration:  36980, Loss function: 3.712, Average Loss: 3.737, avg. samples / sec: 1004.42
Iteration:  37000, Loss function: 3.503, Average Loss: 3.736, avg. samples / sec: 1041.98
Iteration:  37020, Loss function: 3.321, Average Loss: 3.734, avg. samples / sec: 973.93
:::MLLOG {"namespace": "", "time_ms": 1639130835980, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1639130835982, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 37, "current_iter_num": 37032}}
Iteration:  37040, Loss function: 3.607, Average Loss: 3.734, avg. samples / sec: 1016.16
Iteration:  37060, Loss function: 3.252, Average Loss: 3.733, avg. samples / sec: 1001.00
Iteration:  37080, Loss function: 3.882, Average Loss: 3.731, avg. samples / sec: 1095.58
Iteration:  37100, Loss function: 3.835, Average Loss: 3.732, avg. samples / sec: 985.14
Iteration:  37120, Loss function: 3.675, Average Loss: 3.731, avg. samples / sec: 933.12
Iteration:  37140, Loss function: 3.851, Average Loss: 3.732, avg. samples / sec: 945.79
Iteration:  37160, Loss function: 3.695, Average Loss: 3.731, avg. samples / sec: 1050.52
Iteration:  37180, Loss function: 3.681, Average Loss: 3.730, avg. samples / sec: 965.58
Iteration:  37200, Loss function: 3.654, Average Loss: 3.729, avg. samples / sec: 985.54
Iteration:  37220, Loss function: 3.813, Average Loss: 3.730, avg. samples / sec: 970.59
Iteration:  37240, Loss function: 3.771, Average Loss: 3.729, avg. samples / sec: 1050.52
Iteration:  37260, Loss function: 3.578, Average Loss: 3.727, avg. samples / sec: 1021.61
Iteration:  37280, Loss function: 3.726, Average Loss: 3.728, avg. samples / sec: 969.35
Iteration:  37300, Loss function: 3.913, Average Loss: 3.728, avg. samples / sec: 1022.19
Iteration:  37320, Loss function: 3.977, Average Loss: 3.729, avg. samples / sec: 965.15
Iteration:  37340, Loss function: 3.591, Average Loss: 3.729, avg. samples / sec: 994.59
Iteration:  37360, Loss function: 3.439, Average Loss: 3.728, avg. samples / sec: 1019.69
Iteration:  37380, Loss function: 3.995, Average Loss: 3.727, avg. samples / sec: 1014.90
Iteration:  37400, Loss function: 3.785, Average Loss: 3.727, avg. samples / sec: 1021.84
Iteration:  37420, Loss function: 3.890, Average Loss: 3.725, avg. samples / sec: 1027.33
Iteration:  37440, Loss function: 3.878, Average Loss: 3.724, avg. samples / sec: 990.93
Iteration:  37460, Loss function: 3.472, Average Loss: 3.725, avg. samples / sec: 930.49
Iteration:  37480, Loss function: 3.422, Average Loss: 3.725, avg. samples / sec: 899.09
Iteration:  37500, Loss function: 3.605, Average Loss: 3.726, avg. samples / sec: 950.13
Iteration:  37520, Loss function: 3.945, Average Loss: 3.726, avg. samples / sec: 996.61
Iteration:  37540, Loss function: 3.696, Average Loss: 3.726, avg. samples / sec: 964.97
Iteration:  37560, Loss function: 3.516, Average Loss: 3.726, avg. samples / sec: 970.16
Iteration:  37580, Loss function: 3.661, Average Loss: 3.726, avg. samples / sec: 1034.83
Iteration:  37600, Loss function: 3.883, Average Loss: 3.725, avg. samples / sec: 1094.32
Iteration:  37620, Loss function: 3.505, Average Loss: 3.725, avg. samples / sec: 1040.73
Iteration:  37640, Loss function: 3.653, Average Loss: 3.727, avg. samples / sec: 956.87
Iteration:  37660, Loss function: 3.792, Average Loss: 3.726, avg. samples / sec: 965.35
Iteration:  37680, Loss function: 3.766, Average Loss: 3.727, avg. samples / sec: 943.87
Iteration:  37700, Loss function: 3.710, Average Loss: 3.725, avg. samples / sec: 984.68
Iteration:  37720, Loss function: 3.659, Average Loss: 3.725, avg. samples / sec: 925.62
Iteration:  37740, Loss function: 3.649, Average Loss: 3.725, avg. samples / sec: 934.55
Iteration:  37760, Loss function: 3.566, Average Loss: 3.725, avg. samples / sec: 1003.75
Iteration:  37780, Loss function: 3.798, Average Loss: 3.725, avg. samples / sec: 1035.10
Iteration:  37800, Loss function: 4.039, Average Loss: 3.725, avg. samples / sec: 984.82
Iteration:  37820, Loss function: 3.608, Average Loss: 3.725, avg. samples / sec: 1016.40
Iteration:  37840, Loss function: 3.578, Average Loss: 3.726, avg. samples / sec: 992.75
Iteration:  37860, Loss function: 3.817, Average Loss: 3.727, avg. samples / sec: 1023.93
Iteration:  37880, Loss function: 4.084, Average Loss: 3.729, avg. samples / sec: 1040.90
Iteration:  37900, Loss function: 3.871, Average Loss: 3.730, avg. samples / sec: 1019.10
Iteration:  37920, Loss function: 3.699, Average Loss: 3.730, avg. samples / sec: 1016.96
Iteration:  37940, Loss function: 3.762, Average Loss: 3.729, avg. samples / sec: 1102.30
Iteration:  37960, Loss function: 3.557, Average Loss: 3.727, avg. samples / sec: 1021.98
Iteration:  37980, Loss function: 3.669, Average Loss: 3.727, avg. samples / sec: 891.09
Iteration:  38000, Loss function: 3.682, Average Loss: 3.726, avg. samples / sec: 1021.20
Iteration:  38020, Loss function: 3.830, Average Loss: 3.727, avg. samples / sec: 1032.12
Iteration:  38040, Loss function: 3.623, Average Loss: 3.726, avg. samples / sec: 965.39
Iteration:  38060, Loss function: 3.708, Average Loss: 3.726, avg. samples / sec: 1007.29
:::MLLOG {"namespace": "", "time_ms": 1639130954022, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1639130954024, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 38, "current_iter_num": 38061}}
Iteration:  38080, Loss function: 3.785, Average Loss: 3.724, avg. samples / sec: 1024.07
Iteration:  38100, Loss function: 3.446, Average Loss: 3.722, avg. samples / sec: 999.69
Iteration:  38120, Loss function: 3.835, Average Loss: 3.722, avg. samples / sec: 1049.21
Iteration:  38140, Loss function: 3.616, Average Loss: 3.721, avg. samples / sec: 1005.10
Iteration:  38160, Loss function: 3.526, Average Loss: 3.719, avg. samples / sec: 1042.94
Iteration:  38180, Loss function: 3.749, Average Loss: 3.720, avg. samples / sec: 940.69
Iteration:  38200, Loss function: 3.386, Average Loss: 3.719, avg. samples / sec: 981.20
Iteration:  38220, Loss function: 3.567, Average Loss: 3.717, avg. samples / sec: 1005.81
Iteration:  38240, Loss function: 3.589, Average Loss: 3.716, avg. samples / sec: 984.68
Iteration:  38260, Loss function: 3.599, Average Loss: 3.714, avg. samples / sec: 961.48
Iteration:  38280, Loss function: 3.557, Average Loss: 3.714, avg. samples / sec: 978.60
Iteration:  38300, Loss function: 3.543, Average Loss: 3.713, avg. samples / sec: 949.81
Iteration:  38320, Loss function: 3.670, Average Loss: 3.714, avg. samples / sec: 978.15
Iteration:  38340, Loss function: 3.623, Average Loss: 3.713, avg. samples / sec: 1006.29
Iteration:  38360, Loss function: 3.800, Average Loss: 3.714, avg. samples / sec: 983.89
Iteration:  38380, Loss function: 4.004, Average Loss: 3.714, avg. samples / sec: 1050.68
Iteration:  38400, Loss function: 3.767, Average Loss: 3.715, avg. samples / sec: 980.71
Iteration:  38420, Loss function: 3.612, Average Loss: 3.715, avg. samples / sec: 1021.13
Iteration:  38440, Loss function: 3.994, Average Loss: 3.716, avg. samples / sec: 1028.94
Iteration:  38460, Loss function: 3.561, Average Loss: 3.714, avg. samples / sec: 1005.13
Iteration:  38480, Loss function: 3.528, Average Loss: 3.715, avg. samples / sec: 1005.30
Iteration:  38500, Loss function: 3.772, Average Loss: 3.715, avg. samples / sec: 981.64
Iteration:  38520, Loss function: 3.829, Average Loss: 3.717, avg. samples / sec: 1037.30
Iteration:  38540, Loss function: 3.487, Average Loss: 3.716, avg. samples / sec: 1065.20
Iteration:  38560, Loss function: 3.845, Average Loss: 3.717, avg. samples / sec: 959.72
Iteration:  38580, Loss function: 3.540, Average Loss: 3.716, avg. samples / sec: 927.77
Iteration:  38600, Loss function: 3.957, Average Loss: 3.717, avg. samples / sec: 1030.45
Iteration:  38620, Loss function: 3.709, Average Loss: 3.717, avg. samples / sec: 1040.37
Iteration:  38640, Loss function: 3.554, Average Loss: 3.715, avg. samples / sec: 998.58
Iteration:  38660, Loss function: 3.718, Average Loss: 3.716, avg. samples / sec: 1019.78
Iteration:  38680, Loss function: 3.761, Average Loss: 3.716, avg. samples / sec: 1031.52
Iteration:  38700, Loss function: 3.895, Average Loss: 3.716, avg. samples / sec: 1042.76
Iteration:  38720, Loss function: 3.699, Average Loss: 3.715, avg. samples / sec: 1020.15
Iteration:  38740, Loss function: 3.707, Average Loss: 3.715, avg. samples / sec: 1042.61
Iteration:  38760, Loss function: 3.812, Average Loss: 3.716, avg. samples / sec: 979.98
Iteration:  38780, Loss function: 3.836, Average Loss: 3.715, avg. samples / sec: 1050.39
Iteration:  38800, Loss function: 3.576, Average Loss: 3.715, avg. samples / sec: 1029.79
Iteration:  38820, Loss function: 3.569, Average Loss: 3.716, avg. samples / sec: 998.88
Iteration:  38840, Loss function: 3.673, Average Loss: 3.717, avg. samples / sec: 1029.83
Iteration:  38860, Loss function: 3.650, Average Loss: 3.716, avg. samples / sec: 1003.36
Iteration:  38880, Loss function: 3.668, Average Loss: 3.714, avg. samples / sec: 1024.29
Iteration:  38900, Loss function: 3.563, Average Loss: 3.715, avg. samples / sec: 970.50
Iteration:  38920, Loss function: 3.652, Average Loss: 3.715, avg. samples / sec: 1028.73
Iteration:  38940, Loss function: 3.801, Average Loss: 3.716, avg. samples / sec: 1010.60
Iteration:  38960, Loss function: 3.478, Average Loss: 3.715, avg. samples / sec: 985.12
Iteration:  38980, Loss function: 3.544, Average Loss: 3.715, avg. samples / sec: 1069.05
Iteration:  39000, Loss function: 3.778, Average Loss: 3.715, avg. samples / sec: 1015.43
Iteration:  39020, Loss function: 3.474, Average Loss: 3.714, avg. samples / sec: 994.74
Iteration:  39040, Loss function: 4.112, Average Loss: 3.716, avg. samples / sec: 1095.63
Iteration:  39060, Loss function: 3.712, Average Loss: 3.717, avg. samples / sec: 966.23
Iteration:  39080, Loss function: 3.649, Average Loss: 3.718, avg. samples / sec: 1032.13
:::MLLOG {"namespace": "", "time_ms": 1639131070321, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1639131070324, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 39, "current_iter_num": 39089}}
Iteration:  39100, Loss function: 3.655, Average Loss: 3.716, avg. samples / sec: 984.07
Iteration:  39120, Loss function: 3.238, Average Loss: 3.715, avg. samples / sec: 996.28
Iteration:  39140, Loss function: 3.457, Average Loss: 3.713, avg. samples / sec: 1073.11
Iteration:  39160, Loss function: 3.592, Average Loss: 3.712, avg. samples / sec: 1055.92
Iteration:  39180, Loss function: 3.634, Average Loss: 3.711, avg. samples / sec: 1031.19
Iteration:  39200, Loss function: 3.630, Average Loss: 3.710, avg. samples / sec: 1023.12
Iteration:  39220, Loss function: 3.477, Average Loss: 3.709, avg. samples / sec: 1056.98
Iteration:  39240, Loss function: 3.593, Average Loss: 3.708, avg. samples / sec: 1008.14
Iteration:  39260, Loss function: 3.700, Average Loss: 3.707, avg. samples / sec: 1059.55
Iteration:  39280, Loss function: 3.817, Average Loss: 3.707, avg. samples / sec: 1033.85
Iteration:  39300, Loss function: 3.634, Average Loss: 3.706, avg. samples / sec: 1059.10
Iteration:  39320, Loss function: 3.844, Average Loss: 3.706, avg. samples / sec: 1041.67
Iteration:  39340, Loss function: 3.591, Average Loss: 3.705, avg. samples / sec: 1001.17
Iteration:  39360, Loss function: 3.588, Average Loss: 3.704, avg. samples / sec: 1028.11
Iteration:  39380, Loss function: 3.714, Average Loss: 3.703, avg. samples / sec: 1006.20
Iteration:  39400, Loss function: 3.623, Average Loss: 3.703, avg. samples / sec: 1000.50
Iteration:  39420, Loss function: 3.837, Average Loss: 3.703, avg. samples / sec: 1036.30
Iteration:  39440, Loss function: 3.607, Average Loss: 3.703, avg. samples / sec: 978.01
Iteration:  39460, Loss function: 3.681, Average Loss: 3.701, avg. samples / sec: 1005.75
Iteration:  39480, Loss function: 3.771, Average Loss: 3.702, avg. samples / sec: 1010.59
Iteration:  39500, Loss function: 3.531, Average Loss: 3.702, avg. samples / sec: 948.96
Iteration:  39520, Loss function: 3.662, Average Loss: 3.702, avg. samples / sec: 1006.52
Iteration:  39540, Loss function: 3.641, Average Loss: 3.701, avg. samples / sec: 1030.76
Iteration:  39560, Loss function: 3.641, Average Loss: 3.701, avg. samples / sec: 998.39
Iteration:  39580, Loss function: 3.509, Average Loss: 3.701, avg. samples / sec: 1016.72
Iteration:  39600, Loss function: 3.532, Average Loss: 3.700, avg. samples / sec: 976.17
Iteration:  39620, Loss function: 3.904, Average Loss: 3.699, avg. samples / sec: 956.56
Iteration:  39640, Loss function: 3.446, Average Loss: 3.699, avg. samples / sec: 982.79
Iteration:  39660, Loss function: 3.678, Average Loss: 3.700, avg. samples / sec: 921.94
Iteration:  39680, Loss function: 3.532, Average Loss: 3.701, avg. samples / sec: 1018.36
Iteration:  39700, Loss function: 3.606, Average Loss: 3.701, avg. samples / sec: 965.64
Iteration:  39720, Loss function: 3.802, Average Loss: 3.702, avg. samples / sec: 1013.78
Iteration:  39740, Loss function: 3.791, Average Loss: 3.701, avg. samples / sec: 999.62
Iteration:  39760, Loss function: 3.837, Average Loss: 3.701, avg. samples / sec: 966.95
Iteration:  39780, Loss function: 3.810, Average Loss: 3.702, avg. samples / sec: 946.19
Iteration:  39800, Loss function: 3.722, Average Loss: 3.702, avg. samples / sec: 988.02
Iteration:  39820, Loss function: 3.694, Average Loss: 3.703, avg. samples / sec: 1030.66
Iteration:  39840, Loss function: 3.552, Average Loss: 3.703, avg. samples / sec: 972.51
Iteration:  39860, Loss function: 3.546, Average Loss: 3.706, avg. samples / sec: 1026.35
Iteration:  39880, Loss function: 3.849, Average Loss: 3.705, avg. samples / sec: 921.25
Iteration:  39900, Loss function: 3.582, Average Loss: 3.705, avg. samples / sec: 975.86
Iteration:  39920, Loss function: 3.824, Average Loss: 3.705, avg. samples / sec: 1010.68
Iteration:  39940, Loss function: 3.932, Average Loss: 3.705, avg. samples / sec: 1007.03
Iteration:  39960, Loss function: 3.676, Average Loss: 3.704, avg. samples / sec: 1014.47
Iteration:  39980, Loss function: 3.678, Average Loss: 3.704, avg. samples / sec: 1059.35
Iteration:  40000, Loss function: 3.627, Average Loss: 3.704, avg. samples / sec: 981.20
Iteration:  40020, Loss function: 3.655, Average Loss: 3.704, avg. samples / sec: 972.24
Iteration:  40040, Loss function: 3.606, Average Loss: 3.704, avg. samples / sec: 1000.83
Iteration:  40060, Loss function: 3.798, Average Loss: 3.703, avg. samples / sec: 1043.74
Iteration:  40080, Loss function: 3.657, Average Loss: 3.704, avg. samples / sec: 1013.04
Iteration:  40100, Loss function: 3.609, Average Loss: 3.704, avg. samples / sec: 1086.34
:::MLLOG {"namespace": "", "time_ms": 1639131187018, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1639131187019, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 40, "current_iter_num": 40118}}
Iteration:  40120, Loss function: 3.751, Average Loss: 3.705, avg. samples / sec: 997.13
Iteration:  40140, Loss function: 3.672, Average Loss: 3.705, avg. samples / sec: 1023.87
Iteration:  40160, Loss function: 3.859, Average Loss: 3.705, avg. samples / sec: 987.78
Iteration:  40180, Loss function: 3.698, Average Loss: 3.706, avg. samples / sec: 975.14
Iteration:  40200, Loss function: 3.832, Average Loss: 3.705, avg. samples / sec: 977.78
Iteration:  40220, Loss function: 3.664, Average Loss: 3.704, avg. samples / sec: 1010.24
Iteration:  40240, Loss function: 3.639, Average Loss: 3.704, avg. samples / sec: 1098.07
Iteration:  40260, Loss function: 3.541, Average Loss: 3.703, avg. samples / sec: 967.28
Iteration:  40280, Loss function: 3.743, Average Loss: 3.703, avg. samples / sec: 982.73
Iteration:  40300, Loss function: 3.436, Average Loss: 3.702, avg. samples / sec: 960.04
Iteration:  40320, Loss function: 3.304, Average Loss: 3.701, avg. samples / sec: 964.39
Iteration:  40340, Loss function: 3.693, Average Loss: 3.701, avg. samples / sec: 1001.59
Iteration:  40360, Loss function: 3.584, Average Loss: 3.699, avg. samples / sec: 970.33
Iteration:  40380, Loss function: 3.598, Average Loss: 3.698, avg. samples / sec: 987.43
Iteration:  40400, Loss function: 3.732, Average Loss: 3.699, avg. samples / sec: 1004.76
Iteration:  40420, Loss function: 3.643, Average Loss: 3.698, avg. samples / sec: 968.86
Iteration:  40440, Loss function: 3.702, Average Loss: 3.697, avg. samples / sec: 994.49
Iteration:  40460, Loss function: 3.919, Average Loss: 3.698, avg. samples / sec: 1013.50
Iteration:  40480, Loss function: 3.548, Average Loss: 3.698, avg. samples / sec: 965.43
Iteration:  40500, Loss function: 3.752, Average Loss: 3.697, avg. samples / sec: 1068.90
Iteration:  40520, Loss function: 3.930, Average Loss: 3.696, avg. samples / sec: 1031.66
Iteration:  40540, Loss function: 3.763, Average Loss: 3.696, avg. samples / sec: 988.32
Iteration:  40560, Loss function: 3.387, Average Loss: 3.696, avg. samples / sec: 1027.49
Iteration:  40580, Loss function: 3.601, Average Loss: 3.695, avg. samples / sec: 957.02
Iteration:  40600, Loss function: 3.507, Average Loss: 3.695, avg. samples / sec: 1005.21
Iteration:  40620, Loss function: 3.762, Average Loss: 3.695, avg. samples / sec: 981.01
Iteration:  40640, Loss function: 3.829, Average Loss: 3.695, avg. samples / sec: 1046.43
Iteration:  40660, Loss function: 3.602, Average Loss: 3.697, avg. samples / sec: 1045.90
Iteration:  40680, Loss function: 3.683, Average Loss: 3.697, avg. samples / sec: 1001.30
Iteration:  40700, Loss function: 3.802, Average Loss: 3.698, avg. samples / sec: 1025.08
Iteration:  40720, Loss function: 3.575, Average Loss: 3.698, avg. samples / sec: 1066.75
Iteration:  40740, Loss function: 3.706, Average Loss: 3.698, avg. samples / sec: 975.88
Iteration:  40760, Loss function: 3.736, Average Loss: 3.698, avg. samples / sec: 1018.89
Iteration:  40780, Loss function: 3.964, Average Loss: 3.699, avg. samples / sec: 981.72
Iteration:  40800, Loss function: 3.526, Average Loss: 3.699, avg. samples / sec: 973.56
Iteration:  40820, Loss function: 3.742, Average Loss: 3.699, avg. samples / sec: 976.13
Iteration:  40840, Loss function: 3.661, Average Loss: 3.698, avg. samples / sec: 1019.73
Iteration:  40860, Loss function: 3.564, Average Loss: 3.699, avg. samples / sec: 1015.32
Iteration:  40880, Loss function: 3.492, Average Loss: 3.698, avg. samples / sec: 991.04
Iteration:  40900, Loss function: 3.483, Average Loss: 3.699, avg. samples / sec: 946.60
Iteration:  40920, Loss function: 3.869, Average Loss: 3.701, avg. samples / sec: 993.18
Iteration:  40940, Loss function: 3.515, Average Loss: 3.700, avg. samples / sec: 1037.48
Iteration:  40960, Loss function: 3.585, Average Loss: 3.699, avg. samples / sec: 1050.61
Iteration:  40980, Loss function: 3.527, Average Loss: 3.699, avg. samples / sec: 1107.77
Iteration:  41000, Loss function: 3.660, Average Loss: 3.698, avg. samples / sec: 1071.02
Iteration:  41020, Loss function: 3.959, Average Loss: 3.697, avg. samples / sec: 1093.91
Iteration:  41040, Loss function: 3.786, Average Loss: 3.697, avg. samples / sec: 1167.34
Iteration:  41060, Loss function: 3.516, Average Loss: 3.698, avg. samples / sec: 1208.47
Iteration:  41080, Loss function: 3.579, Average Loss: 3.698, avg. samples / sec: 1200.48
Iteration:  41100, Loss function: 3.749, Average Loss: 3.698, avg. samples / sec: 1197.06
Iteration:  41120, Loss function: 3.588, Average Loss: 3.699, avg. samples / sec: 1204.15
Iteration:  41140, Loss function: 3.528, Average Loss: 3.699, avg. samples / sec: 1208.39
:::MLLOG {"namespace": "", "time_ms": 1639131301247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 40}}
Predicting Ended, total time: 33.76 s
:::MLLOG {"namespace": "", "time_ms": 1639131335117, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639131335126, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 41, "epoch_count": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639131335127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 41, "current_iter_num": 41146}}
Loading and preparing results...
Iteration:  41160, Loss function: 3.666, Average Loss: 3.698, avg. samples / sec: 62.75
DONE (t=1.83s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  41180, Loss function: 3.844, Average Loss: 3.698, avg. samples / sec: 948.00
Iteration:  41200, Loss function: 3.373, Average Loss: 3.696, avg. samples / sec: 864.28
DONE (t=5.45s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19388
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34832
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19466
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19886
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28899
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.30388
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30388
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.19388 AP goal: 0.23000
Iteration:  41220, Loss function: 3.916, Average Loss: 3.694, avg. samples / sec: 964.54
:::MLLOG {"namespace": "", "time_ms": 1639131344516, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639131344517, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19388477391026257, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639131344517, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 40}}
Iteration:  41240, Loss function: 3.476, Average Loss: 3.693, avg. samples / sec: 932.03
Iteration:  41260, Loss function: 3.632, Average Loss: 3.692, avg. samples / sec: 953.32
Iteration:  41280, Loss function: 3.777, Average Loss: 3.691, avg. samples / sec: 976.03
Iteration:  41300, Loss function: 3.389, Average Loss: 3.690, avg. samples / sec: 996.29
Iteration:  41320, Loss function: 3.508, Average Loss: 3.689, avg. samples / sec: 1032.70
Iteration:  41340, Loss function: 3.757, Average Loss: 3.688, avg. samples / sec: 962.77
Iteration:  41360, Loss function: 3.908, Average Loss: 3.687, avg. samples / sec: 913.77
Iteration:  41380, Loss function: 3.880, Average Loss: 3.687, avg. samples / sec: 976.31
Iteration:  41400, Loss function: 4.016, Average Loss: 3.688, avg. samples / sec: 998.97
Iteration:  41420, Loss function: 3.834, Average Loss: 3.688, avg. samples / sec: 1050.81
Iteration:  41440, Loss function: 3.274, Average Loss: 3.687, avg. samples / sec: 1020.91
Iteration:  41460, Loss function: 3.524, Average Loss: 3.687, avg. samples / sec: 990.41
Iteration:  41480, Loss function: 3.304, Average Loss: 3.687, avg. samples / sec: 1007.91
Iteration:  41500, Loss function: 4.042, Average Loss: 3.687, avg. samples / sec: 1017.92
Iteration:  41520, Loss function: 3.793, Average Loss: 3.686, avg. samples / sec: 965.70
Iteration:  41540, Loss function: 3.463, Average Loss: 3.686, avg. samples / sec: 1094.30
Iteration:  41560, Loss function: 3.801, Average Loss: 3.686, avg. samples / sec: 1019.20
Iteration:  41580, Loss function: 3.507, Average Loss: 3.684, avg. samples / sec: 969.38
Iteration:  41600, Loss function: 3.825, Average Loss: 3.685, avg. samples / sec: 962.97
Iteration:  41620, Loss function: 3.788, Average Loss: 3.684, avg. samples / sec: 993.98
Iteration:  41640, Loss function: 3.991, Average Loss: 3.685, avg. samples / sec: 1023.67
Iteration:  41660, Loss function: 3.749, Average Loss: 3.686, avg. samples / sec: 1039.61
Iteration:  41680, Loss function: 3.623, Average Loss: 3.684, avg. samples / sec: 1007.15
Iteration:  41700, Loss function: 4.047, Average Loss: 3.686, avg. samples / sec: 900.32
Iteration:  41720, Loss function: 3.513, Average Loss: 3.684, avg. samples / sec: 953.63
Iteration:  41740, Loss function: 3.505, Average Loss: 3.684, avg. samples / sec: 924.41
Iteration:  41760, Loss function: 3.589, Average Loss: 3.685, avg. samples / sec: 906.96
Iteration:  41780, Loss function: 3.731, Average Loss: 3.685, avg. samples / sec: 1017.40
Iteration:  41800, Loss function: 3.541, Average Loss: 3.684, avg. samples / sec: 1051.50
Iteration:  41820, Loss function: 3.600, Average Loss: 3.683, avg. samples / sec: 1024.55
Iteration:  41840, Loss function: 3.725, Average Loss: 3.683, avg. samples / sec: 1058.22
Iteration:  41860, Loss function: 3.883, Average Loss: 3.683, avg. samples / sec: 1036.81
Iteration:  41880, Loss function: 3.421, Average Loss: 3.682, avg. samples / sec: 982.54
Iteration:  41900, Loss function: 3.616, Average Loss: 3.681, avg. samples / sec: 1027.53
Iteration:  41920, Loss function: 3.906, Average Loss: 3.684, avg. samples / sec: 1067.68
Iteration:  41940, Loss function: 3.634, Average Loss: 3.683, avg. samples / sec: 1045.62
Iteration:  41960, Loss function: 3.787, Average Loss: 3.683, avg. samples / sec: 979.23
Iteration:  41980, Loss function: 3.554, Average Loss: 3.682, avg. samples / sec: 957.16
Iteration:  42000, Loss function: 4.180, Average Loss: 3.684, avg. samples / sec: 936.85
Iteration:  42020, Loss function: 3.812, Average Loss: 3.684, avg. samples / sec: 973.36
Iteration:  42040, Loss function: 3.399, Average Loss: 3.685, avg. samples / sec: 1037.24
Iteration:  42060, Loss function: 3.905, Average Loss: 3.686, avg. samples / sec: 969.72
Iteration:  42080, Loss function: 3.528, Average Loss: 3.686, avg. samples / sec: 966.74
Iteration:  42100, Loss function: 3.722, Average Loss: 3.687, avg. samples / sec: 1039.74
Iteration:  42120, Loss function: 3.576, Average Loss: 3.687, avg. samples / sec: 997.32
Iteration:  42140, Loss function: 3.670, Average Loss: 3.687, avg. samples / sec: 957.24
Iteration:  42160, Loss function: 3.342, Average Loss: 3.686, avg. samples / sec: 998.87
:::MLLOG {"namespace": "", "time_ms": 1639131454189, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639131454190, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 42, "current_iter_num": 42175}}
Iteration:  42180, Loss function: 3.710, Average Loss: 3.686, avg. samples / sec: 976.79
Iteration:  42200, Loss function: 3.503, Average Loss: 3.686, avg. samples / sec: 989.40
Iteration:  42220, Loss function: 3.314, Average Loss: 3.685, avg. samples / sec: 1056.57
Iteration:  42240, Loss function: 3.607, Average Loss: 3.684, avg. samples / sec: 986.26
Iteration:  42260, Loss function: 3.833, Average Loss: 3.684, avg. samples / sec: 986.63
Iteration:  42280, Loss function: 3.471, Average Loss: 3.683, avg. samples / sec: 1010.71
Iteration:  42300, Loss function: 3.383, Average Loss: 3.682, avg. samples / sec: 981.48
Iteration:  42320, Loss function: 3.975, Average Loss: 3.683, avg. samples / sec: 944.18
Iteration:  42340, Loss function: 3.722, Average Loss: 3.684, avg. samples / sec: 1011.35
Iteration:  42360, Loss function: 3.526, Average Loss: 3.684, avg. samples / sec: 992.42
Iteration:  42380, Loss function: 3.568, Average Loss: 3.683, avg. samples / sec: 952.57
Iteration:  42400, Loss function: 3.871, Average Loss: 3.684, avg. samples / sec: 990.57
Iteration:  42420, Loss function: 3.756, Average Loss: 3.682, avg. samples / sec: 1008.01
Iteration:  42440, Loss function: 3.295, Average Loss: 3.681, avg. samples / sec: 964.57
Iteration:  42460, Loss function: 3.674, Average Loss: 3.682, avg. samples / sec: 1065.50
Iteration:  42480, Loss function: 3.616, Average Loss: 3.682, avg. samples / sec: 1000.33
Iteration:  42500, Loss function: 3.532, Average Loss: 3.683, avg. samples / sec: 1062.41
Iteration:  42520, Loss function: 3.736, Average Loss: 3.682, avg. samples / sec: 1010.73
Iteration:  42540, Loss function: 3.734, Average Loss: 3.682, avg. samples / sec: 997.25
Iteration:  42560, Loss function: 3.591, Average Loss: 3.681, avg. samples / sec: 993.54
Iteration:  42580, Loss function: 3.780, Average Loss: 3.683, avg. samples / sec: 1060.55
Iteration:  42600, Loss function: 3.832, Average Loss: 3.682, avg. samples / sec: 1001.07
Iteration:  42620, Loss function: 4.016, Average Loss: 3.681, avg. samples / sec: 991.80
Iteration:  42640, Loss function: 3.709, Average Loss: 3.681, avg. samples / sec: 1033.25
Iteration:  42660, Loss function: 3.582, Average Loss: 3.681, avg. samples / sec: 993.38
Iteration:  42680, Loss function: 3.884, Average Loss: 3.681, avg. samples / sec: 1062.22
Iteration:  42700, Loss function: 3.882, Average Loss: 3.681, avg. samples / sec: 1062.02
Iteration:  42720, Loss function: 3.763, Average Loss: 3.680, avg. samples / sec: 984.23
Iteration:  42740, Loss function: 3.550, Average Loss: 3.679, avg. samples / sec: 994.24
Iteration:  42760, Loss function: 3.758, Average Loss: 3.679, avg. samples / sec: 1025.77
Iteration:  42780, Loss function: 3.525, Average Loss: 3.677, avg. samples / sec: 997.39
Iteration:  42800, Loss function: 3.743, Average Loss: 3.677, avg. samples / sec: 950.37
Iteration:  42820, Loss function: 3.982, Average Loss: 3.678, avg. samples / sec: 950.54
Iteration:  42840, Loss function: 3.710, Average Loss: 3.678, avg. samples / sec: 979.21
Iteration:  42860, Loss function: 3.540, Average Loss: 3.676, avg. samples / sec: 1034.78
Iteration:  42880, Loss function: 3.615, Average Loss: 3.676, avg. samples / sec: 1052.71
Iteration:  42900, Loss function: 3.609, Average Loss: 3.676, avg. samples / sec: 1020.10
Iteration:  42920, Loss function: 3.541, Average Loss: 3.676, avg. samples / sec: 987.78
Iteration:  42940, Loss function: 3.603, Average Loss: 3.677, avg. samples / sec: 919.03
Iteration:  42960, Loss function: 3.617, Average Loss: 3.676, avg. samples / sec: 1018.66
Iteration:  42980, Loss function: 3.592, Average Loss: 3.675, avg. samples / sec: 985.96
Iteration:  43000, Loss function: 3.805, Average Loss: 3.675, avg. samples / sec: 1053.43
Iteration:  43020, Loss function: 3.649, Average Loss: 3.673, avg. samples / sec: 968.35
Iteration:  43040, Loss function: 3.609, Average Loss: 3.674, avg. samples / sec: 952.82
Iteration:  43060, Loss function: 3.734, Average Loss: 3.676, avg. samples / sec: 992.11
Iteration:  43080, Loss function: 3.765, Average Loss: 3.676, avg. samples / sec: 972.62
Iteration:  43100, Loss function: 3.792, Average Loss: 3.676, avg. samples / sec: 1002.16
Iteration:  43120, Loss function: 3.882, Average Loss: 3.676, avg. samples / sec: 1103.15
Iteration:  43140, Loss function: 3.838, Average Loss: 3.677, avg. samples / sec: 1003.16
Iteration:  43160, Loss function: 3.562, Average Loss: 3.677, avg. samples / sec: 957.85
Iteration:  43180, Loss function: 3.898, Average Loss: 3.677, avg. samples / sec: 1002.80
Iteration:  43200, Loss function: 3.768, Average Loss: 3.677, avg. samples / sec: 995.39
:::MLLOG {"namespace": "", "time_ms": 1639131571451, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1639131571452, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 43, "current_iter_num": 43204}}
Iteration:  43220, Loss function: 3.803, Average Loss: 3.678, avg. samples / sec: 982.51
Iteration:  43240, Loss function: 3.591, Average Loss: 3.677, avg. samples / sec: 886.95
Iteration:  43260, Loss function: 3.518, Average Loss: 3.677, avg. samples / sec: 985.72
Iteration:  43280, Loss function: 3.916, Average Loss: 3.676, avg. samples / sec: 1004.29
Iteration:  43300, Loss function: 3.359, Average Loss: 3.675, avg. samples / sec: 1055.47
Iteration:  43320, Loss function: 3.836, Average Loss: 3.674, avg. samples / sec: 932.50
Iteration:  43340, Loss function: 3.593, Average Loss: 3.673, avg. samples / sec: 941.04
Iteration:  43360, Loss function: 3.744, Average Loss: 3.674, avg. samples / sec: 1029.63
Iteration:  43380, Loss function: 3.753, Average Loss: 3.674, avg. samples / sec: 1033.92
Iteration:  43400, Loss function: 3.878, Average Loss: 3.674, avg. samples / sec: 951.86
Iteration:  43420, Loss function: 3.685, Average Loss: 3.674, avg. samples / sec: 1003.47
Iteration:  43440, Loss function: 3.803, Average Loss: 3.673, avg. samples / sec: 980.42
Iteration:  43460, Loss function: 3.622, Average Loss: 3.672, avg. samples / sec: 978.96
Iteration:  43480, Loss function: 3.644, Average Loss: 3.672, avg. samples / sec: 1019.44
Iteration:  43500, Loss function: 3.809, Average Loss: 3.672, avg. samples / sec: 940.68
Iteration:  43520, Loss function: 3.535, Average Loss: 3.671, avg. samples / sec: 1011.39
Iteration:  43540, Loss function: 3.660, Average Loss: 3.670, avg. samples / sec: 954.19
Iteration:  43560, Loss function: 3.638, Average Loss: 3.671, avg. samples / sec: 953.49
Iteration:  43580, Loss function: 3.551, Average Loss: 3.671, avg. samples / sec: 1017.25
Iteration:  43600, Loss function: 3.895, Average Loss: 3.670, avg. samples / sec: 967.20
Iteration:  43620, Loss function: 3.709, Average Loss: 3.670, avg. samples / sec: 932.27
Iteration:  43640, Loss function: 3.828, Average Loss: 3.669, avg. samples / sec: 998.74
Iteration:  43660, Loss function: 3.565, Average Loss: 3.669, avg. samples / sec: 977.09
Iteration:  43680, Loss function: 3.713, Average Loss: 3.668, avg. samples / sec: 1021.98
Iteration:  43700, Loss function: 3.710, Average Loss: 3.668, avg. samples / sec: 999.67
Iteration:  43720, Loss function: 3.513, Average Loss: 3.668, avg. samples / sec: 917.86
Iteration:  43740, Loss function: 3.618, Average Loss: 3.667, avg. samples / sec: 1044.91
Iteration:  43760, Loss function: 3.601, Average Loss: 3.669, avg. samples / sec: 965.89
Iteration:  43780, Loss function: 3.638, Average Loss: 3.670, avg. samples / sec: 962.25
Iteration:  43800, Loss function: 3.617, Average Loss: 3.670, avg. samples / sec: 993.84
Iteration:  43820, Loss function: 3.788, Average Loss: 3.670, avg. samples / sec: 1064.67
Iteration:  43840, Loss function: 3.585, Average Loss: 3.670, avg. samples / sec: 1024.61
Iteration:  43860, Loss function: 3.447, Average Loss: 3.668, avg. samples / sec: 1070.56
Iteration:  43880, Loss function: 3.715, Average Loss: 3.668, avg. samples / sec: 985.50
Iteration:  43900, Loss function: 3.994, Average Loss: 3.667, avg. samples / sec: 1007.46
Iteration:  43920, Loss function: 3.958, Average Loss: 3.667, avg. samples / sec: 996.47
Iteration:  43940, Loss function: 3.548, Average Loss: 3.666, avg. samples / sec: 1004.37
Iteration:  43960, Loss function: 3.655, Average Loss: 3.666, avg. samples / sec: 1061.01
Iteration:  43980, Loss function: 3.700, Average Loss: 3.667, avg. samples / sec: 1050.85
Iteration:  44000, Loss function: 3.613, Average Loss: 3.666, avg. samples / sec: 1025.82
Iteration:  44020, Loss function: 3.937, Average Loss: 3.666, avg. samples / sec: 967.30
Iteration:  44040, Loss function: 3.786, Average Loss: 3.667, avg. samples / sec: 948.62
Iteration:  44060, Loss function: 3.723, Average Loss: 3.667, avg. samples / sec: 1040.42
Iteration:  44080, Loss function: 3.753, Average Loss: 3.667, avg. samples / sec: 939.09
Iteration:  44100, Loss function: 3.584, Average Loss: 3.665, avg. samples / sec: 1054.62
Iteration:  44120, Loss function: 3.977, Average Loss: 3.665, avg. samples / sec: 955.51
Iteration:  44140, Loss function: 3.625, Average Loss: 3.666, avg. samples / sec: 967.16
Iteration:  44160, Loss function: 3.621, Average Loss: 3.666, avg. samples / sec: 1054.03
Iteration:  44180, Loss function: 3.443, Average Loss: 3.665, avg. samples / sec: 1032.28
Iteration:  44200, Loss function: 3.634, Average Loss: 3.665, avg. samples / sec: 1057.07
Iteration:  44220, Loss function: 3.711, Average Loss: 3.664, avg. samples / sec: 1004.14
:::MLLOG {"namespace": "", "time_ms": 1639131689418, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1639131689419, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 44, "current_iter_num": 44232}}
Iteration:  44240, Loss function: 3.773, Average Loss: 3.664, avg. samples / sec: 1021.38
Iteration:  44260, Loss function: 3.466, Average Loss: 3.663, avg. samples / sec: 1029.70
Iteration:  44280, Loss function: 3.275, Average Loss: 3.662, avg. samples / sec: 1041.34
Iteration:  44300, Loss function: 3.533, Average Loss: 3.661, avg. samples / sec: 1081.01
Iteration:  44320, Loss function: 3.485, Average Loss: 3.660, avg. samples / sec: 1041.32
Iteration:  44340, Loss function: 3.730, Average Loss: 3.660, avg. samples / sec: 1009.79
Iteration:  44360, Loss function: 3.461, Average Loss: 3.659, avg. samples / sec: 1002.47
Iteration:  44380, Loss function: 3.649, Average Loss: 3.658, avg. samples / sec: 948.21
Iteration:  44400, Loss function: 3.534, Average Loss: 3.659, avg. samples / sec: 1012.80
Iteration:  44420, Loss function: 3.666, Average Loss: 3.658, avg. samples / sec: 962.08
Iteration:  44440, Loss function: 3.553, Average Loss: 3.657, avg. samples / sec: 986.75
Iteration:  44460, Loss function: 3.827, Average Loss: 3.656, avg. samples / sec: 1012.33
Iteration:  44480, Loss function: 3.511, Average Loss: 3.657, avg. samples / sec: 902.72
Iteration:  44500, Loss function: 3.754, Average Loss: 3.656, avg. samples / sec: 956.98
Iteration:  44520, Loss function: 3.694, Average Loss: 3.657, avg. samples / sec: 1009.58
Iteration:  44540, Loss function: 3.574, Average Loss: 3.656, avg. samples / sec: 1035.14
Iteration:  44560, Loss function: 3.891, Average Loss: 3.657, avg. samples / sec: 1001.51
Iteration:  44580, Loss function: 3.457, Average Loss: 3.657, avg. samples / sec: 983.42
Iteration:  44600, Loss function: 3.577, Average Loss: 3.655, avg. samples / sec: 978.37
Iteration:  44620, Loss function: 3.695, Average Loss: 3.655, avg. samples / sec: 1011.25
Iteration:  44640, Loss function: 3.654, Average Loss: 3.655, avg. samples / sec: 1000.23
Iteration:  44660, Loss function: 3.696, Average Loss: 3.655, avg. samples / sec: 976.58
Iteration:  44680, Loss function: 3.757, Average Loss: 3.655, avg. samples / sec: 998.03
Iteration:  44700, Loss function: 3.489, Average Loss: 3.654, avg. samples / sec: 1042.77
Iteration:  44720, Loss function: 3.696, Average Loss: 3.654, avg. samples / sec: 1061.52
Iteration:  44740, Loss function: 3.565, Average Loss: 3.654, avg. samples / sec: 1023.63
Iteration:  44760, Loss function: 3.568, Average Loss: 3.654, avg. samples / sec: 972.87
Iteration:  44780, Loss function: 3.700, Average Loss: 3.653, avg. samples / sec: 986.26
Iteration:  44800, Loss function: 3.737, Average Loss: 3.653, avg. samples / sec: 1009.78
Iteration:  44820, Loss function: 3.671, Average Loss: 3.652, avg. samples / sec: 953.43
Iteration:  44840, Loss function: 3.637, Average Loss: 3.653, avg. samples / sec: 965.14
Iteration:  44860, Loss function: 3.820, Average Loss: 3.654, avg. samples / sec: 985.14
Iteration:  44880, Loss function: 3.614, Average Loss: 3.654, avg. samples / sec: 867.81
Iteration:  44900, Loss function: 3.653, Average Loss: 3.652, avg. samples / sec: 972.31
Iteration:  44920, Loss function: 3.735, Average Loss: 3.653, avg. samples / sec: 981.78
Iteration:  44940, Loss function: 3.354, Average Loss: 3.652, avg. samples / sec: 1066.12
Iteration:  44960, Loss function: 3.691, Average Loss: 3.652, avg. samples / sec: 997.59
Iteration:  44980, Loss function: 3.730, Average Loss: 3.651, avg. samples / sec: 1098.39
Iteration:  45000, Loss function: 3.822, Average Loss: 3.653, avg. samples / sec: 932.52
Iteration:  45020, Loss function: 3.665, Average Loss: 3.652, avg. samples / sec: 918.61
Iteration:  45040, Loss function: 3.588, Average Loss: 3.652, avg. samples / sec: 960.15
Iteration:  45060, Loss function: 3.731, Average Loss: 3.653, avg. samples / sec: 952.82
Iteration:  45080, Loss function: 3.677, Average Loss: 3.653, avg. samples / sec: 1013.78
Iteration:  45100, Loss function: 3.435, Average Loss: 3.652, avg. samples / sec: 996.26
Iteration:  45120, Loss function: 3.615, Average Loss: 3.653, avg. samples / sec: 952.94
Iteration:  45140, Loss function: 3.758, Average Loss: 3.652, avg. samples / sec: 1036.77
Iteration:  45160, Loss function: 3.598, Average Loss: 3.653, avg. samples / sec: 957.77
Iteration:  45180, Loss function: 3.530, Average Loss: 3.654, avg. samples / sec: 1085.62
Iteration:  45200, Loss function: 3.366, Average Loss: 3.653, avg. samples / sec: 1051.10
Iteration:  45220, Loss function: 3.782, Average Loss: 3.655, avg. samples / sec: 1003.03
Iteration:  45240, Loss function: 3.545, Average Loss: 3.656, avg. samples / sec: 1037.61
Iteration:  45260, Loss function: 3.880, Average Loss: 3.657, avg. samples / sec: 1022.11
:::MLLOG {"namespace": "", "time_ms": 1639131807226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 44}}
lr decay step #1
:::MLLOG {"namespace": "", "time_ms": 1639131807227, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 45, "current_iter_num": 45261}}
Iteration:  45280, Loss function: 3.719, Average Loss: 3.656, avg. samples / sec: 965.84
Iteration:  45300, Loss function: 3.418, Average Loss: 3.653, avg. samples / sec: 1051.35
Iteration:  45320, Loss function: 3.577, Average Loss: 3.649, avg. samples / sec: 1087.57
Iteration:  45340, Loss function: 3.362, Average Loss: 3.645, avg. samples / sec: 1016.98
Iteration:  45360, Loss function: 3.467, Average Loss: 3.639, avg. samples / sec: 1001.32
Iteration:  45380, Loss function: 3.381, Average Loss: 3.634, avg. samples / sec: 971.76
Iteration:  45400, Loss function: 3.323, Average Loss: 3.631, avg. samples / sec: 979.95
Iteration:  45420, Loss function: 3.206, Average Loss: 3.627, avg. samples / sec: 1033.94
Iteration:  45440, Loss function: 3.164, Average Loss: 3.622, avg. samples / sec: 914.26
Iteration:  45460, Loss function: 3.083, Average Loss: 3.615, avg. samples / sec: 959.81
Iteration:  45480, Loss function: 3.815, Average Loss: 3.611, avg. samples / sec: 994.15
Iteration:  45500, Loss function: 3.369, Average Loss: 3.606, avg. samples / sec: 961.10
Iteration:  45520, Loss function: 3.443, Average Loss: 3.601, avg. samples / sec: 1044.06
Iteration:  45540, Loss function: 3.212, Average Loss: 3.596, avg. samples / sec: 1059.84
Iteration:  45560, Loss function: 3.534, Average Loss: 3.592, avg. samples / sec: 1005.49
Iteration:  45580, Loss function: 3.419, Average Loss: 3.588, avg. samples / sec: 1025.09
Iteration:  45600, Loss function: 3.366, Average Loss: 3.582, avg. samples / sec: 1046.01
Iteration:  45620, Loss function: 3.372, Average Loss: 3.579, avg. samples / sec: 1048.72
Iteration:  45640, Loss function: 3.535, Average Loss: 3.574, avg. samples / sec: 1083.90
Iteration:  45660, Loss function: 3.404, Average Loss: 3.571, avg. samples / sec: 989.87
Iteration:  45680, Loss function: 3.543, Average Loss: 3.568, avg. samples / sec: 1055.83
Iteration:  45700, Loss function: 3.292, Average Loss: 3.564, avg. samples / sec: 1026.59
Iteration:  45720, Loss function: 3.578, Average Loss: 3.560, avg. samples / sec: 1052.91
Iteration:  45740, Loss function: 3.531, Average Loss: 3.555, avg. samples / sec: 1009.90
Iteration:  45760, Loss function: 3.244, Average Loss: 3.551, avg. samples / sec: 1006.08
Iteration:  45780, Loss function: 3.463, Average Loss: 3.547, avg. samples / sec: 1005.77
Iteration:  45800, Loss function: 3.334, Average Loss: 3.542, avg. samples / sec: 1034.47
Iteration:  45820, Loss function: 3.187, Average Loss: 3.537, avg. samples / sec: 964.52
Iteration:  45840, Loss function: 3.073, Average Loss: 3.534, avg. samples / sec: 904.52
Iteration:  45860, Loss function: 3.713, Average Loss: 3.531, avg. samples / sec: 964.54
Iteration:  45880, Loss function: 3.322, Average Loss: 3.527, avg. samples / sec: 956.79
Iteration:  45900, Loss function: 3.310, Average Loss: 3.523, avg. samples / sec: 1008.86
Iteration:  45920, Loss function: 3.283, Average Loss: 3.518, avg. samples / sec: 999.58
Iteration:  45940, Loss function: 3.411, Average Loss: 3.514, avg. samples / sec: 991.32
Iteration:  45960, Loss function: 3.204, Average Loss: 3.512, avg. samples / sec: 929.61
Iteration:  45980, Loss function: 3.432, Average Loss: 3.508, avg. samples / sec: 973.09
Iteration:  46000, Loss function: 3.453, Average Loss: 3.506, avg. samples / sec: 972.73
Iteration:  46020, Loss function: 3.406, Average Loss: 3.503, avg. samples / sec: 973.73
Iteration:  46040, Loss function: 3.450, Average Loss: 3.499, avg. samples / sec: 1037.10
Iteration:  46060, Loss function: 3.389, Average Loss: 3.495, avg. samples / sec: 1007.31
Iteration:  46080, Loss function: 3.445, Average Loss: 3.492, avg. samples / sec: 963.15
Iteration:  46100, Loss function: 3.287, Average Loss: 3.489, avg. samples / sec: 1016.34
Iteration:  46120, Loss function: 3.559, Average Loss: 3.484, avg. samples / sec: 952.47
Iteration:  46140, Loss function: 3.323, Average Loss: 3.481, avg. samples / sec: 1031.79
Iteration:  46160, Loss function: 3.096, Average Loss: 3.478, avg. samples / sec: 1071.09
Iteration:  46180, Loss function: 3.108, Average Loss: 3.476, avg. samples / sec: 1037.80
Iteration:  46200, Loss function: 3.383, Average Loss: 3.473, avg. samples / sec: 1027.16
Iteration:  46220, Loss function: 3.491, Average Loss: 3.470, avg. samples / sec: 1010.62
Iteration:  46240, Loss function: 3.742, Average Loss: 3.468, avg. samples / sec: 1033.63
Iteration:  46260, Loss function: 3.357, Average Loss: 3.465, avg. samples / sec: 992.90
Iteration:  46280, Loss function: 3.364, Average Loss: 3.461, avg. samples / sec: 1014.09
:::MLLOG {"namespace": "", "time_ms": 1639131924171, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1639131924172, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 46, "current_iter_num": 46290}}
Iteration:  46300, Loss function: 3.490, Average Loss: 3.458, avg. samples / sec: 1005.31
Iteration:  46320, Loss function: 3.301, Average Loss: 3.454, avg. samples / sec: 977.22
Iteration:  46340, Loss function: 3.389, Average Loss: 3.450, avg. samples / sec: 956.49
Iteration:  46360, Loss function: 3.431, Average Loss: 3.449, avg. samples / sec: 1001.04
Iteration:  46380, Loss function: 3.227, Average Loss: 3.444, avg. samples / sec: 960.85
Iteration:  46400, Loss function: 3.215, Average Loss: 3.440, avg. samples / sec: 1042.08
Iteration:  46420, Loss function: 3.285, Average Loss: 3.438, avg. samples / sec: 1030.36
Iteration:  46440, Loss function: 3.315, Average Loss: 3.434, avg. samples / sec: 1012.15
Iteration:  46460, Loss function: 2.942, Average Loss: 3.431, avg. samples / sec: 1041.90
Iteration:  46480, Loss function: 3.460, Average Loss: 3.428, avg. samples / sec: 1093.55
Iteration:  46500, Loss function: 3.471, Average Loss: 3.426, avg. samples / sec: 976.16
Iteration:  46520, Loss function: 3.265, Average Loss: 3.423, avg. samples / sec: 989.93
Iteration:  46540, Loss function: 3.181, Average Loss: 3.422, avg. samples / sec: 1006.14
Iteration:  46560, Loss function: 3.258, Average Loss: 3.418, avg. samples / sec: 935.56
Iteration:  46580, Loss function: 3.309, Average Loss: 3.417, avg. samples / sec: 1083.28
Iteration:  46600, Loss function: 3.355, Average Loss: 3.415, avg. samples / sec: 967.43
Iteration:  46620, Loss function: 3.136, Average Loss: 3.412, avg. samples / sec: 1071.63
Iteration:  46640, Loss function: 3.600, Average Loss: 3.410, avg. samples / sec: 964.02
Iteration:  46660, Loss function: 3.623, Average Loss: 3.407, avg. samples / sec: 982.51
Iteration:  46680, Loss function: 3.285, Average Loss: 3.404, avg. samples / sec: 1003.04
Iteration:  46700, Loss function: 3.313, Average Loss: 3.401, avg. samples / sec: 1063.18
Iteration:  46720, Loss function: 3.482, Average Loss: 3.399, avg. samples / sec: 1034.72
Iteration:  46740, Loss function: 3.286, Average Loss: 3.396, avg. samples / sec: 976.67
Iteration:  46760, Loss function: 3.572, Average Loss: 3.394, avg. samples / sec: 1024.70
Iteration:  46780, Loss function: 3.150, Average Loss: 3.392, avg. samples / sec: 969.84
Iteration:  46800, Loss function: 3.130, Average Loss: 3.389, avg. samples / sec: 1017.87
Iteration:  46820, Loss function: 3.201, Average Loss: 3.387, avg. samples / sec: 1008.10
Iteration:  46840, Loss function: 3.346, Average Loss: 3.385, avg. samples / sec: 979.41
Iteration:  46860, Loss function: 3.491, Average Loss: 3.383, avg. samples / sec: 984.81
Iteration:  46880, Loss function: 3.263, Average Loss: 3.381, avg. samples / sec: 1025.71
Iteration:  46900, Loss function: 3.239, Average Loss: 3.379, avg. samples / sec: 1066.79
Iteration:  46920, Loss function: 2.884, Average Loss: 3.375, avg. samples / sec: 1012.57
Iteration:  46940, Loss function: 3.338, Average Loss: 3.373, avg. samples / sec: 1039.36
Iteration:  46960, Loss function: 3.414, Average Loss: 3.370, avg. samples / sec: 1009.82
Iteration:  46980, Loss function: 3.219, Average Loss: 3.368, avg. samples / sec: 1008.95
Iteration:  47000, Loss function: 3.065, Average Loss: 3.367, avg. samples / sec: 1000.73
Iteration:  47020, Loss function: 3.505, Average Loss: 3.365, avg. samples / sec: 959.41
Iteration:  47040, Loss function: 3.188, Average Loss: 3.362, avg. samples / sec: 1005.74
Iteration:  47060, Loss function: 3.277, Average Loss: 3.361, avg. samples / sec: 930.36
Iteration:  47080, Loss function: 3.322, Average Loss: 3.359, avg. samples / sec: 1018.78
Iteration:  47100, Loss function: 3.109, Average Loss: 3.358, avg. samples / sec: 1020.45
Iteration:  47120, Loss function: 3.205, Average Loss: 3.356, avg. samples / sec: 1030.34
Iteration:  47140, Loss function: 3.318, Average Loss: 3.355, avg. samples / sec: 933.72
Iteration:  47160, Loss function: 3.328, Average Loss: 3.352, avg. samples / sec: 979.47
Iteration:  47180, Loss function: 3.248, Average Loss: 3.350, avg. samples / sec: 1022.00
Iteration:  47200, Loss function: 3.321, Average Loss: 3.350, avg. samples / sec: 947.32
Iteration:  47220, Loss function: 3.331, Average Loss: 3.348, avg. samples / sec: 942.71
Iteration:  47240, Loss function: 3.181, Average Loss: 3.347, avg. samples / sec: 1028.49
Iteration:  47260, Loss function: 3.308, Average Loss: 3.346, avg. samples / sec: 1035.09
Iteration:  47280, Loss function: 3.321, Average Loss: 3.344, avg. samples / sec: 1000.40
Iteration:  47300, Loss function: 3.521, Average Loss: 3.342, avg. samples / sec: 924.66
:::MLLOG {"namespace": "", "time_ms": 1639132041282, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1639132041285, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 47, "current_iter_num": 47318}}
Iteration:  47320, Loss function: 3.230, Average Loss: 3.342, avg. samples / sec: 1030.00
Iteration:  47340, Loss function: 3.198, Average Loss: 3.340, avg. samples / sec: 1036.15
Iteration:  47360, Loss function: 3.196, Average Loss: 3.339, avg. samples / sec: 953.67
Iteration:  47380, Loss function: 3.419, Average Loss: 3.338, avg. samples / sec: 1007.76
Iteration:  47400, Loss function: 3.264, Average Loss: 3.336, avg. samples / sec: 1014.44
Iteration:  47420, Loss function: 3.295, Average Loss: 3.334, avg. samples / sec: 974.21
Iteration:  47440, Loss function: 3.320, Average Loss: 3.333, avg. samples / sec: 935.87
Iteration:  47460, Loss function: 3.381, Average Loss: 3.333, avg. samples / sec: 948.75
Iteration:  47480, Loss function: 3.351, Average Loss: 3.332, avg. samples / sec: 921.55
Iteration:  47500, Loss function: 3.487, Average Loss: 3.331, avg. samples / sec: 971.19
Iteration:  47520, Loss function: 2.986, Average Loss: 3.331, avg. samples / sec: 917.40
Iteration:  47540, Loss function: 3.130, Average Loss: 3.329, avg. samples / sec: 918.54
Iteration:  47560, Loss function: 3.263, Average Loss: 3.327, avg. samples / sec: 1027.66
Iteration:  47580, Loss function: 3.221, Average Loss: 3.325, avg. samples / sec: 1037.42
Iteration:  47600, Loss function: 3.330, Average Loss: 3.324, avg. samples / sec: 992.80
Iteration:  47620, Loss function: 3.229, Average Loss: 3.323, avg. samples / sec: 991.66
Iteration:  47640, Loss function: 3.332, Average Loss: 3.322, avg. samples / sec: 1019.65
Iteration:  47660, Loss function: 3.054, Average Loss: 3.320, avg. samples / sec: 1005.67
Iteration:  47680, Loss function: 3.384, Average Loss: 3.320, avg. samples / sec: 936.89
Iteration:  47700, Loss function: 3.111, Average Loss: 3.318, avg. samples / sec: 980.64
Iteration:  47720, Loss function: 3.047, Average Loss: 3.316, avg. samples / sec: 1043.54
Iteration:  47740, Loss function: 3.297, Average Loss: 3.314, avg. samples / sec: 976.63
Iteration:  47760, Loss function: 3.158, Average Loss: 3.314, avg. samples / sec: 1039.38
Iteration:  47780, Loss function: 3.083, Average Loss: 3.313, avg. samples / sec: 1040.68
Iteration:  47800, Loss function: 3.537, Average Loss: 3.313, avg. samples / sec: 885.11
Iteration:  47820, Loss function: 3.203, Average Loss: 3.311, avg. samples / sec: 1009.58
Iteration:  47840, Loss function: 3.505, Average Loss: 3.310, avg. samples / sec: 1029.16
Iteration:  47860, Loss function: 3.438, Average Loss: 3.308, avg. samples / sec: 1020.24
Iteration:  47880, Loss function: 3.297, Average Loss: 3.308, avg. samples / sec: 958.41
Iteration:  47900, Loss function: 3.295, Average Loss: 3.307, avg. samples / sec: 1040.76
Iteration:  47920, Loss function: 3.080, Average Loss: 3.306, avg. samples / sec: 981.93
Iteration:  47940, Loss function: 3.202, Average Loss: 3.305, avg. samples / sec: 1064.65
Iteration:  47960, Loss function: 3.225, Average Loss: 3.304, avg. samples / sec: 1096.77
Iteration:  47980, Loss function: 3.176, Average Loss: 3.302, avg. samples / sec: 1087.14
Iteration:  48000, Loss function: 3.098, Average Loss: 3.301, avg. samples / sec: 1006.10
Iteration:  48020, Loss function: 3.269, Average Loss: 3.301, avg. samples / sec: 1019.32
Iteration:  48040, Loss function: 3.260, Average Loss: 3.302, avg. samples / sec: 925.28
Iteration:  48060, Loss function: 3.309, Average Loss: 3.301, avg. samples / sec: 1003.57
Iteration:  48080, Loss function: 3.739, Average Loss: 3.301, avg. samples / sec: 1015.21
Iteration:  48100, Loss function: 3.439, Average Loss: 3.300, avg. samples / sec: 986.61
Iteration:  48120, Loss function: 3.317, Average Loss: 3.298, avg. samples / sec: 992.66
Iteration:  48140, Loss function: 3.182, Average Loss: 3.298, avg. samples / sec: 1014.03
Iteration:  48160, Loss function: 3.202, Average Loss: 3.298, avg. samples / sec: 997.33
Iteration:  48180, Loss function: 3.162, Average Loss: 3.296, avg. samples / sec: 993.80
Iteration:  48200, Loss function: 3.406, Average Loss: 3.294, avg. samples / sec: 1011.29
Iteration:  48220, Loss function: 3.370, Average Loss: 3.294, avg. samples / sec: 1053.81
Iteration:  48240, Loss function: 3.184, Average Loss: 3.293, avg. samples / sec: 1041.81
Iteration:  48260, Loss function: 3.299, Average Loss: 3.292, avg. samples / sec: 975.34
Iteration:  48280, Loss function: 3.439, Average Loss: 3.291, avg. samples / sec: 986.28
Iteration:  48300, Loss function: 3.435, Average Loss: 3.291, avg. samples / sec: 1084.32
Iteration:  48320, Loss function: 2.896, Average Loss: 3.290, avg. samples / sec: 1035.54
Iteration:  48340, Loss function: 3.185, Average Loss: 3.289, avg. samples / sec: 1009.03
:::MLLOG {"namespace": "", "time_ms": 1639132158799, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1639132158801, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 48, "current_iter_num": 48347}}
Iteration:  48360, Loss function: 3.227, Average Loss: 3.289, avg. samples / sec: 951.22
Iteration:  48380, Loss function: 2.928, Average Loss: 3.287, avg. samples / sec: 1062.86
Iteration:  48400, Loss function: 3.387, Average Loss: 3.286, avg. samples / sec: 1032.87
Iteration:  48420, Loss function: 3.376, Average Loss: 3.284, avg. samples / sec: 1028.93
Iteration:  48440, Loss function: 3.098, Average Loss: 3.284, avg. samples / sec: 1009.88
Iteration:  48460, Loss function: 2.867, Average Loss: 3.281, avg. samples / sec: 993.24
Iteration:  48480, Loss function: 3.125, Average Loss: 3.280, avg. samples / sec: 966.39
Iteration:  48500, Loss function: 3.396, Average Loss: 3.280, avg. samples / sec: 1006.05
Iteration:  48520, Loss function: 3.303, Average Loss: 3.280, avg. samples / sec: 1013.62
Iteration:  48540, Loss function: 3.262, Average Loss: 3.280, avg. samples / sec: 954.86
Iteration:  48560, Loss function: 3.005, Average Loss: 3.279, avg. samples / sec: 987.36
Iteration:  48580, Loss function: 3.060, Average Loss: 3.277, avg. samples / sec: 997.07
Iteration:  48600, Loss function: 3.470, Average Loss: 3.277, avg. samples / sec: 1027.44
Iteration:  48620, Loss function: 3.286, Average Loss: 3.276, avg. samples / sec: 995.01
Iteration:  48640, Loss function: 3.598, Average Loss: 3.274, avg. samples / sec: 998.65
Iteration:  48660, Loss function: 3.158, Average Loss: 3.272, avg. samples / sec: 1023.11
Iteration:  48680, Loss function: 3.413, Average Loss: 3.272, avg. samples / sec: 964.94
Iteration:  48700, Loss function: 3.123, Average Loss: 3.272, avg. samples / sec: 965.07
Iteration:  48720, Loss function: 3.098, Average Loss: 3.271, avg. samples / sec: 955.98
Iteration:  48740, Loss function: 3.551, Average Loss: 3.273, avg. samples / sec: 983.38
Iteration:  48760, Loss function: 3.360, Average Loss: 3.273, avg. samples / sec: 981.76
Iteration:  48780, Loss function: 3.296, Average Loss: 3.274, avg. samples / sec: 963.75
Iteration:  48800, Loss function: 3.492, Average Loss: 3.274, avg. samples / sec: 991.01
Iteration:  48820, Loss function: 3.214, Average Loss: 3.273, avg. samples / sec: 957.10
Iteration:  48840, Loss function: 3.145, Average Loss: 3.273, avg. samples / sec: 1020.40
Iteration:  48860, Loss function: 3.216, Average Loss: 3.272, avg. samples / sec: 1005.62
Iteration:  48880, Loss function: 3.133, Average Loss: 3.271, avg. samples / sec: 1021.25
Iteration:  48900, Loss function: 3.322, Average Loss: 3.271, avg. samples / sec: 984.67
Iteration:  48920, Loss function: 3.313, Average Loss: 3.272, avg. samples / sec: 1005.85
Iteration:  48940, Loss function: 3.273, Average Loss: 3.271, avg. samples / sec: 1031.08
Iteration:  48960, Loss function: 3.352, Average Loss: 3.271, avg. samples / sec: 959.73
Iteration:  48980, Loss function: 3.177, Average Loss: 3.271, avg. samples / sec: 961.54
Iteration:  49000, Loss function: 3.338, Average Loss: 3.271, avg. samples / sec: 1022.69
Iteration:  49020, Loss function: 3.052, Average Loss: 3.269, avg. samples / sec: 942.80
Iteration:  49040, Loss function: 3.348, Average Loss: 3.268, avg. samples / sec: 1060.74
Iteration:  49060, Loss function: 3.322, Average Loss: 3.266, avg. samples / sec: 1075.61
Iteration:  49080, Loss function: 3.452, Average Loss: 3.266, avg. samples / sec: 996.06
Iteration:  49100, Loss function: 3.112, Average Loss: 3.266, avg. samples / sec: 966.39
Iteration:  49120, Loss function: 3.341, Average Loss: 3.264, avg. samples / sec: 1066.90
Iteration:  49140, Loss function: 3.389, Average Loss: 3.264, avg. samples / sec: 993.06
Iteration:  49160, Loss function: 3.007, Average Loss: 3.263, avg. samples / sec: 944.87
Iteration:  49180, Loss function: 3.406, Average Loss: 3.263, avg. samples / sec: 995.69
Iteration:  49200, Loss function: 3.038, Average Loss: 3.263, avg. samples / sec: 994.67
Iteration:  49220, Loss function: 3.019, Average Loss: 3.262, avg. samples / sec: 981.37
Iteration:  49240, Loss function: 3.341, Average Loss: 3.262, avg. samples / sec: 951.62
Iteration:  49260, Loss function: 3.178, Average Loss: 3.262, avg. samples / sec: 966.52
Iteration:  49280, Loss function: 3.612, Average Loss: 3.261, avg. samples / sec: 963.52
Iteration:  49300, Loss function: 3.099, Average Loss: 3.259, avg. samples / sec: 951.38
Iteration:  49320, Loss function: 3.367, Average Loss: 3.259, avg. samples / sec: 1010.33
Iteration:  49340, Loss function: 3.150, Average Loss: 3.258, avg. samples / sec: 1036.84
Iteration:  49360, Loss function: 3.253, Average Loss: 3.258, avg. samples / sec: 1073.16
:::MLLOG {"namespace": "", "time_ms": 1639132276622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1639132276624, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 49, "current_iter_num": 49376}}
Iteration:  49380, Loss function: 3.296, Average Loss: 3.257, avg. samples / sec: 1039.06
Iteration:  49400, Loss function: 3.117, Average Loss: 3.256, avg. samples / sec: 951.79
Iteration:  49420, Loss function: 3.183, Average Loss: 3.255, avg. samples / sec: 987.99
Iteration:  49440, Loss function: 3.164, Average Loss: 3.254, avg. samples / sec: 1061.94
Iteration:  49460, Loss function: 3.282, Average Loss: 3.254, avg. samples / sec: 1047.58
Iteration:  49480, Loss function: 3.118, Average Loss: 3.253, avg. samples / sec: 1020.85
Iteration:  49500, Loss function: 3.117, Average Loss: 3.251, avg. samples / sec: 969.83
Iteration:  49520, Loss function: 3.083, Average Loss: 3.251, avg. samples / sec: 1080.79
Iteration:  49540, Loss function: 3.254, Average Loss: 3.251, avg. samples / sec: 979.49
Iteration:  49560, Loss function: 3.337, Average Loss: 3.250, avg. samples / sec: 1000.18
Iteration:  49580, Loss function: 3.252, Average Loss: 3.250, avg. samples / sec: 991.46
Iteration:  49600, Loss function: 3.262, Average Loss: 3.250, avg. samples / sec: 1081.68
Iteration:  49620, Loss function: 3.473, Average Loss: 3.250, avg. samples / sec: 1014.56
Iteration:  49640, Loss function: 3.198, Average Loss: 3.251, avg. samples / sec: 1030.65
Iteration:  49660, Loss function: 3.427, Average Loss: 3.250, avg. samples / sec: 964.84
Iteration:  49680, Loss function: 3.153, Average Loss: 3.248, avg. samples / sec: 1041.29
Iteration:  49700, Loss function: 3.256, Average Loss: 3.247, avg. samples / sec: 869.10
Iteration:  49720, Loss function: 3.308, Average Loss: 3.246, avg. samples / sec: 948.04
Iteration:  49740, Loss function: 3.388, Average Loss: 3.245, avg. samples / sec: 1032.85
Iteration:  49760, Loss function: 3.067, Average Loss: 3.245, avg. samples / sec: 977.08
Iteration:  49780, Loss function: 3.132, Average Loss: 3.244, avg. samples / sec: 1034.80
Iteration:  49800, Loss function: 3.060, Average Loss: 3.243, avg. samples / sec: 1044.29
Iteration:  49820, Loss function: 3.256, Average Loss: 3.244, avg. samples / sec: 1000.97
Iteration:  49840, Loss function: 3.269, Average Loss: 3.243, avg. samples / sec: 965.08
Iteration:  49860, Loss function: 3.258, Average Loss: 3.243, avg. samples / sec: 993.86
Iteration:  49880, Loss function: 3.055, Average Loss: 3.242, avg. samples / sec: 1010.28
Iteration:  49900, Loss function: 3.107, Average Loss: 3.241, avg. samples / sec: 1020.32
Iteration:  49920, Loss function: 3.294, Average Loss: 3.240, avg. samples / sec: 1030.51
Iteration:  49940, Loss function: 3.262, Average Loss: 3.240, avg. samples / sec: 991.99
Iteration:  49960, Loss function: 3.106, Average Loss: 3.241, avg. samples / sec: 1050.85
Iteration:  49980, Loss function: 3.313, Average Loss: 3.240, avg. samples / sec: 1022.51
Iteration:  50000, Loss function: 3.256, Average Loss: 3.239, avg. samples / sec: 1011.41
Iteration:  50020, Loss function: 3.046, Average Loss: 3.239, avg. samples / sec: 1048.11
Iteration:  50040, Loss function: 3.156, Average Loss: 3.238, avg. samples / sec: 974.81
Iteration:  50060, Loss function: 3.164, Average Loss: 3.238, avg. samples / sec: 977.69
Iteration:  50080, Loss function: 3.057, Average Loss: 3.238, avg. samples / sec: 1069.02
Iteration:  50100, Loss function: 3.478, Average Loss: 3.238, avg. samples / sec: 977.48
Iteration:  50120, Loss function: 3.632, Average Loss: 3.238, avg. samples / sec: 994.84
Iteration:  50140, Loss function: 2.937, Average Loss: 3.237, avg. samples / sec: 972.82
Iteration:  50160, Loss function: 3.363, Average Loss: 3.236, avg. samples / sec: 1017.67
Iteration:  50180, Loss function: 3.071, Average Loss: 3.237, avg. samples / sec: 1040.20
Iteration:  50200, Loss function: 3.244, Average Loss: 3.237, avg. samples / sec: 976.42
Iteration:  50220, Loss function: 3.189, Average Loss: 3.236, avg. samples / sec: 1008.08
Iteration:  50240, Loss function: 3.145, Average Loss: 3.236, avg. samples / sec: 1030.16
Iteration:  50260, Loss function: 3.091, Average Loss: 3.236, avg. samples / sec: 969.51
Iteration:  50280, Loss function: 3.095, Average Loss: 3.235, avg. samples / sec: 1058.54
Iteration:  50300, Loss function: 3.390, Average Loss: 3.235, avg. samples / sec: 977.56
Iteration:  50320, Loss function: 3.257, Average Loss: 3.235, avg. samples / sec: 1006.41
Iteration:  50340, Loss function: 3.486, Average Loss: 3.234, avg. samples / sec: 961.59
Iteration:  50360, Loss function: 3.303, Average Loss: 3.233, avg. samples / sec: 937.62
Iteration:  50380, Loss function: 3.231, Average Loss: 3.232, avg. samples / sec: 964.01
Iteration:  50400, Loss function: 3.517, Average Loss: 3.232, avg. samples / sec: 980.93
:::MLLOG {"namespace": "", "time_ms": 1639132393634, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1639132393636, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 50, "current_iter_num": 50404}}
Iteration:  50420, Loss function: 3.227, Average Loss: 3.231, avg. samples / sec: 996.91
Iteration:  50440, Loss function: 3.357, Average Loss: 3.230, avg. samples / sec: 969.39
Iteration:  50460, Loss function: 3.353, Average Loss: 3.230, avg. samples / sec: 1013.15
Iteration:  50480, Loss function: 2.890, Average Loss: 3.230, avg. samples / sec: 1034.61
Iteration:  50500, Loss function: 3.451, Average Loss: 3.230, avg. samples / sec: 1039.15
Iteration:  50520, Loss function: 3.207, Average Loss: 3.229, avg. samples / sec: 1028.37
Iteration:  50540, Loss function: 3.092, Average Loss: 3.228, avg. samples / sec: 946.21
Iteration:  50560, Loss function: 2.877, Average Loss: 3.228, avg. samples / sec: 998.52
Iteration:  50580, Loss function: 3.403, Average Loss: 3.228, avg. samples / sec: 982.80
Iteration:  50600, Loss function: 2.844, Average Loss: 3.226, avg. samples / sec: 1022.64
Iteration:  50620, Loss function: 3.024, Average Loss: 3.226, avg. samples / sec: 1021.16
Iteration:  50640, Loss function: 3.256, Average Loss: 3.225, avg. samples / sec: 1017.30
Iteration:  50660, Loss function: 3.222, Average Loss: 3.224, avg. samples / sec: 985.43
Iteration:  50680, Loss function: 3.292, Average Loss: 3.225, avg. samples / sec: 951.79
Iteration:  50700, Loss function: 3.263, Average Loss: 3.225, avg. samples / sec: 1015.70
Iteration:  50720, Loss function: 3.119, Average Loss: 3.224, avg. samples / sec: 1014.61
Iteration:  50740, Loss function: 3.025, Average Loss: 3.223, avg. samples / sec: 1076.77
Iteration:  50760, Loss function: 3.534, Average Loss: 3.222, avg. samples / sec: 1022.09
Iteration:  50780, Loss function: 2.984, Average Loss: 3.221, avg. samples / sec: 943.60
Iteration:  50800, Loss function: 3.036, Average Loss: 3.222, avg. samples / sec: 995.13
Iteration:  50820, Loss function: 3.326, Average Loss: 3.223, avg. samples / sec: 974.48
Iteration:  50840, Loss function: 3.132, Average Loss: 3.223, avg. samples / sec: 998.40
Iteration:  50860, Loss function: 3.310, Average Loss: 3.222, avg. samples / sec: 1045.72
Iteration:  50880, Loss function: 3.123, Average Loss: 3.221, avg. samples / sec: 997.90
Iteration:  50900, Loss function: 3.153, Average Loss: 3.222, avg. samples / sec: 994.97
Iteration:  50920, Loss function: 3.366, Average Loss: 3.221, avg. samples / sec: 1044.94
Iteration:  50940, Loss function: 3.353, Average Loss: 3.221, avg. samples / sec: 1008.61
Iteration:  50960, Loss function: 3.649, Average Loss: 3.220, avg. samples / sec: 981.64
Iteration:  50980, Loss function: 3.030, Average Loss: 3.219, avg. samples / sec: 1008.86
Iteration:  51000, Loss function: 2.988, Average Loss: 3.218, avg. samples / sec: 1052.89
Iteration:  51020, Loss function: 3.426, Average Loss: 3.219, avg. samples / sec: 980.97
Iteration:  51040, Loss function: 3.114, Average Loss: 3.220, avg. samples / sec: 1009.62
Iteration:  51060, Loss function: 3.111, Average Loss: 3.220, avg. samples / sec: 990.86
Iteration:  51080, Loss function: 2.955, Average Loss: 3.219, avg. samples / sec: 1035.50
Iteration:  51100, Loss function: 3.274, Average Loss: 3.219, avg. samples / sec: 990.81
Iteration:  51120, Loss function: 3.488, Average Loss: 3.221, avg. samples / sec: 973.59
Iteration:  51140, Loss function: 3.340, Average Loss: 3.221, avg. samples / sec: 988.47
Iteration:  51160, Loss function: 3.201, Average Loss: 3.221, avg. samples / sec: 1094.80
Iteration:  51180, Loss function: 3.335, Average Loss: 3.221, avg. samples / sec: 1102.65
Iteration:  51200, Loss function: 3.282, Average Loss: 3.220, avg. samples / sec: 1095.59
Iteration:  51220, Loss function: 3.126, Average Loss: 3.218, avg. samples / sec: 1135.84
Iteration:  51240, Loss function: 3.416, Average Loss: 3.217, avg. samples / sec: 1138.99
Iteration:  51260, Loss function: 3.190, Average Loss: 3.216, avg. samples / sec: 1095.39
Iteration:  51280, Loss function: 2.950, Average Loss: 3.217, avg. samples / sec: 1173.05
Iteration:  51300, Loss function: 3.253, Average Loss: 3.216, avg. samples / sec: 1180.02
Iteration:  51320, Loss function: 3.448, Average Loss: 3.217, avg. samples / sec: 1180.11
Iteration:  51340, Loss function: 2.922, Average Loss: 3.217, avg. samples / sec: 1173.37
Iteration:  51360, Loss function: 3.216, Average Loss: 3.217, avg. samples / sec: 1182.45
Iteration:  51380, Loss function: 3.001, Average Loss: 3.216, avg. samples / sec: 1178.93
Iteration:  51400, Loss function: 3.386, Average Loss: 3.216, avg. samples / sec: 1201.60
Iteration:  51420, Loss function: 3.123, Average Loss: 3.216, avg. samples / sec: 1211.69
:::MLLOG {"namespace": "", "time_ms": 1639132506254, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 50}}
Predicting Ended, total time: 28.43 s
:::MLLOG {"namespace": "", "time_ms": 1639132534702, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639132534754, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 51, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639132534754, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 51, "current_iter_num": 51433}}
Loading and preparing results...
Iteration:  51440, Loss function: 3.207, Average Loss: 3.216, avg. samples / sec: 75.10
DONE (t=0.81s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  51460, Loss function: 3.022, Average Loss: 3.215, avg. samples / sec: 1234.47
DONE (t=2.04s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23918
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.40536
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24607
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32362
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.23011
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.33470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.35114
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.35114
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.23918 AP goal: 0.23000
Iteration:  51480, Loss function: 3.054, Average Loss: 3.214, avg. samples / sec: 1234.02
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23918185300659617, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539296, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
+ [[ run == \d\r\y ]]
++ date
+ echo 'Fri Dec 10 10:35:40 UTC 2021: done waiting for 1 executions'
Fri Dec 10 10:35:40 UTC 2021: done waiting for 1 executions
+ ls /tmp/ssd_all.log
/tmp/ssd_all.log
+ grep . /tmp/ssd_all.log
:::MLLOG {"namespace": "", "time_ms": 1639126594754, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train.py", "lineno": 434}}
:::MLLOG {"namespace": "", "time_ms": 1639126594934, "event_type": "POINT_IN_TIME", "key": "seed", "value": 3050714226, "metadata": {"file": "/workspace/single_stage_detector/mlperf_logger.py", "lineno": 92}}
0 Using seed = 3050714226
:::MLLOG {"namespace": "", "time_ms": 1639126596602, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 114, "metadata": {"file": "train.py", "lineno": 170}}
:::MLLOG {"namespace": "", "time_ms": 1639126596603, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 114, "metadata": {"file": "train.py", "lineno": 171}}
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.
Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : 128.0
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.0125, "metadata": {"file": "train.py", "lineno": 199}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 200}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_steps", "value": [44, 55], "metadata": {"file": "train.py", "lineno": 201}}
:::MLLOG {"namespace": "", "time_ms": 1639126596607, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.00013, "metadata": {"file": "train.py", "lineno": 202}}
:::MLLOG {"namespace": "", "time_ms": 1639126596608, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 650, "metadata": {"file": "train.py", "lineno": 204}}
:::MLLOG {"namespace": "", "time_ms": 1639126596608, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "train.py", "lineno": 205}}
epoch nbatch loss
:::MLLOG {"namespace": "", "time_ms": 1639126620373, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train.py", "lineno": 267}}
:::MLLOG {"namespace": "", "time_ms": 1639126620373, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "train.py", "lineno": 274}}
:::MLLOG {"namespace": "", "time_ms": 1639126622005, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/single_stage_detector/data/build_pipeline.py", "lineno": 48}}
epoch size is:  117266  images
:::MLLOG {"namespace": "", "time_ms": 1639126622006, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/single_stage_detector/utils.py", "lineno": 156}}
loading annotations into memory...
Done (t=0.18s)
creating index...
:::MLLOG {"namespace": "", "time_ms": 1639126622340, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 4952, "metadata": {"file": "/workspace/single_stage_detector/data/native_pipeline.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1639126622341, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 293, "first_epoch_num": 1, "epoch_count": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639126622342, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 1, "current_iter_num": 0}}
Iteration:      0, Loss function: 22.917, Average Loss: 0.023, avg. samples / sec: 4.48
Iteration:     20, Loss function: 20.969, Average Loss: 0.457, avg. samples / sec: 917.80
Iteration:     40, Loss function: 20.846, Average Loss: 0.859, avg. samples / sec: 932.81
Iteration:     60, Loss function: 20.429, Average Loss: 1.250, avg. samples / sec: 960.96
Iteration:     80, Loss function: 20.220, Average Loss: 1.625, avg. samples / sec: 912.18
Iteration:    100, Loss function: 16.357, Average Loss: 1.960, avg. samples / sec: 926.03
Iteration:    120, Loss function: 11.524, Average Loss: 2.176, avg. samples / sec: 925.73
Iteration:    140, Loss function: 9.888, Average Loss: 2.341, avg. samples / sec: 1023.86
Iteration:    160, Loss function: 9.238, Average Loss: 2.484, avg. samples / sec: 979.75
Iteration:    180, Loss function: 9.037, Average Loss: 2.614, avg. samples / sec: 978.89
Iteration:    200, Loss function: 8.645, Average Loss: 2.739, avg. samples / sec: 1020.30
Iteration:    220, Loss function: 8.530, Average Loss: 2.858, avg. samples / sec: 941.90
Iteration:    240, Loss function: 8.658, Average Loss: 2.974, avg. samples / sec: 1003.89
Iteration:    260, Loss function: 8.763, Average Loss: 3.086, avg. samples / sec: 1022.38
Iteration:    280, Loss function: 8.925, Average Loss: 3.198, avg. samples / sec: 991.60
Iteration:    300, Loss function: 8.418, Average Loss: 3.303, avg. samples / sec: 1012.87
Iteration:    320, Loss function: 8.340, Average Loss: 3.403, avg. samples / sec: 940.82
Iteration:    340, Loss function: 8.268, Average Loss: 3.500, avg. samples / sec: 942.10
Iteration:    360, Loss function: 7.854, Average Loss: 3.591, avg. samples / sec: 992.26
Iteration:    380, Loss function: 7.728, Average Loss: 3.679, avg. samples / sec: 1013.05
Iteration:    400, Loss function: 7.911, Average Loss: 3.763, avg. samples / sec: 713.77
Iteration:    420, Loss function: 7.672, Average Loss: 3.843, avg. samples / sec: 1043.87
Iteration:    440, Loss function: 7.770, Average Loss: 3.920, avg. samples / sec: 1022.03
Iteration:    460, Loss function: 7.602, Average Loss: 3.995, avg. samples / sec: 964.90
Iteration:    480, Loss function: 7.391, Average Loss: 4.067, avg. samples / sec: 993.74
Iteration:    500, Loss function: 7.445, Average Loss: 4.136, avg. samples / sec: 936.47
Iteration:    520, Loss function: 7.732, Average Loss: 4.204, avg. samples / sec: 980.83
Iteration:    540, Loss function: 7.555, Average Loss: 4.272, avg. samples / sec: 1049.91
Iteration:    560, Loss function: 7.086, Average Loss: 4.334, avg. samples / sec: 947.96
Iteration:    580, Loss function: 7.190, Average Loss: 4.394, avg. samples / sec: 1008.05
Iteration:    600, Loss function: 7.439, Average Loss: 4.454, avg. samples / sec: 1068.40
Iteration:    620, Loss function: 6.884, Average Loss: 4.509, avg. samples / sec: 1007.90
Iteration:    640, Loss function: 6.898, Average Loss: 4.562, avg. samples / sec: 1050.01
Iteration:    660, Loss function: 7.054, Average Loss: 4.615, avg. samples / sec: 1021.08
Iteration:    680, Loss function: 7.285, Average Loss: 4.667, avg. samples / sec: 1018.69
Iteration:    700, Loss function: 6.814, Average Loss: 4.716, avg. samples / sec: 1056.42
Iteration:    720, Loss function: 7.005, Average Loss: 4.764, avg. samples / sec: 1040.09
Iteration:    740, Loss function: 6.896, Average Loss: 4.808, avg. samples / sec: 1008.54
Iteration:    760, Loss function: 7.004, Average Loss: 4.851, avg. samples / sec: 1052.95
Iteration:    780, Loss function: 6.618, Average Loss: 4.893, avg. samples / sec: 1023.37
Iteration:    800, Loss function: 7.066, Average Loss: 4.932, avg. samples / sec: 979.10
Iteration:    820, Loss function: 6.772, Average Loss: 4.969, avg. samples / sec: 955.77
Iteration:    840, Loss function: 6.789, Average Loss: 5.004, avg. samples / sec: 1025.62
Iteration:    860, Loss function: 6.820, Average Loss: 5.038, avg. samples / sec: 987.24
Iteration:    880, Loss function: 6.570, Average Loss: 5.070, avg. samples / sec: 1039.13
Iteration:    900, Loss function: 6.779, Average Loss: 5.101, avg. samples / sec: 984.55
Iteration:    920, Loss function: 6.527, Average Loss: 5.130, avg. samples / sec: 1010.03
Iteration:    940, Loss function: 6.794, Average Loss: 5.160, avg. samples / sec: 1029.79
Iteration:    960, Loss function: 6.552, Average Loss: 5.189, avg. samples / sec: 990.05
Iteration:    980, Loss function: 6.552, Average Loss: 5.216, avg. samples / sec: 931.26
Iteration:   1000, Loss function: 6.697, Average Loss: 5.242, avg. samples / sec: 1042.40
Iteration:   1020, Loss function: 6.284, Average Loss: 5.265, avg. samples / sec: 1064.07
:::MLLOG {"namespace": "", "time_ms": 1639126741290, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639126741291, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 2, "current_iter_num": 1029}}
Iteration:   1040, Loss function: 6.536, Average Loss: 5.289, avg. samples / sec: 961.90
Iteration:   1060, Loss function: 6.307, Average Loss: 5.312, avg. samples / sec: 1082.73
Iteration:   1080, Loss function: 6.381, Average Loss: 5.334, avg. samples / sec: 963.30
Iteration:   1100, Loss function: 6.197, Average Loss: 5.353, avg. samples / sec: 1037.10
Iteration:   1120, Loss function: 6.201, Average Loss: 5.373, avg. samples / sec: 1052.64
Iteration:   1140, Loss function: 6.298, Average Loss: 5.392, avg. samples / sec: 1019.70
Iteration:   1160, Loss function: 6.149, Average Loss: 5.409, avg. samples / sec: 1038.89
Iteration:   1180, Loss function: 6.309, Average Loss: 5.425, avg. samples / sec: 1095.55
Iteration:   1200, Loss function: 6.147, Average Loss: 5.441, avg. samples / sec: 1027.53
Iteration:   1220, Loss function: 6.161, Average Loss: 5.457, avg. samples / sec: 1015.85
Iteration:   1240, Loss function: 6.057, Average Loss: 5.469, avg. samples / sec: 1072.92
Iteration:   1260, Loss function: 6.085, Average Loss: 5.481, avg. samples / sec: 1060.61
Iteration:   1280, Loss function: 6.008, Average Loss: 5.493, avg. samples / sec: 998.82
Iteration:   1300, Loss function: 6.081, Average Loss: 5.506, avg. samples / sec: 928.23
Iteration:   1320, Loss function: 6.105, Average Loss: 5.518, avg. samples / sec: 1000.78
Iteration:   1340, Loss function: 5.922, Average Loss: 5.527, avg. samples / sec: 1037.47
Iteration:   1360, Loss function: 6.021, Average Loss: 5.537, avg. samples / sec: 984.52
Iteration:   1380, Loss function: 6.355, Average Loss: 5.546, avg. samples / sec: 1000.50
Iteration:   1400, Loss function: 6.143, Average Loss: 5.554, avg. samples / sec: 985.23
Iteration:   1420, Loss function: 5.904, Average Loss: 5.562, avg. samples / sec: 958.36
Iteration:   1440, Loss function: 6.245, Average Loss: 5.570, avg. samples / sec: 946.93
Iteration:   1460, Loss function: 6.055, Average Loss: 5.578, avg. samples / sec: 1053.11
Iteration:   1480, Loss function: 5.827, Average Loss: 5.586, avg. samples / sec: 1014.96
Iteration:   1500, Loss function: 6.008, Average Loss: 5.594, avg. samples / sec: 1068.25
Iteration:   1520, Loss function: 6.107, Average Loss: 5.600, avg. samples / sec: 912.68
Iteration:   1540, Loss function: 5.944, Average Loss: 5.604, avg. samples / sec: 1013.69
Iteration:   1560, Loss function: 5.644, Average Loss: 5.609, avg. samples / sec: 973.77
Iteration:   1580, Loss function: 5.510, Average Loss: 5.613, avg. samples / sec: 990.39
Iteration:   1600, Loss function: 6.240, Average Loss: 5.620, avg. samples / sec: 1005.58
Iteration:   1620, Loss function: 5.810, Average Loss: 5.625, avg. samples / sec: 968.80
Iteration:   1640, Loss function: 6.082, Average Loss: 5.628, avg. samples / sec: 968.96
Iteration:   1660, Loss function: 5.785, Average Loss: 5.633, avg. samples / sec: 1043.74
Iteration:   1680, Loss function: 5.732, Average Loss: 5.636, avg. samples / sec: 1003.20
Iteration:   1700, Loss function: 5.524, Average Loss: 5.639, avg. samples / sec: 1031.77
Iteration:   1720, Loss function: 5.666, Average Loss: 5.641, avg. samples / sec: 945.06
Iteration:   1740, Loss function: 5.857, Average Loss: 5.643, avg. samples / sec: 1040.42
Iteration:   1760, Loss function: 5.555, Average Loss: 5.644, avg. samples / sec: 970.73
Iteration:   1780, Loss function: 5.682, Average Loss: 5.645, avg. samples / sec: 1006.87
Iteration:   1800, Loss function: 5.568, Average Loss: 5.647, avg. samples / sec: 1049.88
Iteration:   1820, Loss function: 5.940, Average Loss: 5.649, avg. samples / sec: 1078.89
Iteration:   1840, Loss function: 5.909, Average Loss: 5.649, avg. samples / sec: 1055.53
Iteration:   1860, Loss function: 5.632, Average Loss: 5.648, avg. samples / sec: 980.94
Iteration:   1880, Loss function: 5.793, Average Loss: 5.650, avg. samples / sec: 1072.19
Iteration:   1900, Loss function: 5.827, Average Loss: 5.650, avg. samples / sec: 1024.99
Iteration:   1920, Loss function: 5.866, Average Loss: 5.650, avg. samples / sec: 991.82
Iteration:   1940, Loss function: 5.897, Average Loss: 5.649, avg. samples / sec: 1021.53
Iteration:   1960, Loss function: 5.524, Average Loss: 5.648, avg. samples / sec: 996.85
Iteration:   1980, Loss function: 5.809, Average Loss: 5.648, avg. samples / sec: 963.57
Iteration:   2000, Loss function: 5.634, Average Loss: 5.648, avg. samples / sec: 1001.78
Iteration:   2020, Loss function: 5.502, Average Loss: 5.646, avg. samples / sec: 975.23
Iteration:   2040, Loss function: 5.473, Average Loss: 5.645, avg. samples / sec: 992.03
:::MLLOG {"namespace": "", "time_ms": 1639126857781, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1639126857783, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 3, "current_iter_num": 2058}}
Iteration:   2060, Loss function: 5.570, Average Loss: 5.644, avg. samples / sec: 988.48
Iteration:   2080, Loss function: 5.110, Average Loss: 5.641, avg. samples / sec: 1080.23
Iteration:   2100, Loss function: 5.399, Average Loss: 5.639, avg. samples / sec: 999.89
Iteration:   2120, Loss function: 5.459, Average Loss: 5.637, avg. samples / sec: 999.96
Iteration:   2140, Loss function: 5.443, Average Loss: 5.634, avg. samples / sec: 931.27
Iteration:   2160, Loss function: 5.492, Average Loss: 5.632, avg. samples / sec: 924.45
Iteration:   2180, Loss function: 5.211, Average Loss: 5.629, avg. samples / sec: 975.63
Iteration:   2200, Loss function: 5.746, Average Loss: 5.626, avg. samples / sec: 1059.78
Iteration:   2220, Loss function: 5.712, Average Loss: 5.623, avg. samples / sec: 1014.23
Iteration:   2240, Loss function: 5.357, Average Loss: 5.621, avg. samples / sec: 985.38
Iteration:   2260, Loss function: 5.212, Average Loss: 5.617, avg. samples / sec: 1011.94
Iteration:   2280, Loss function: 5.411, Average Loss: 5.614, avg. samples / sec: 967.49
Iteration:   2300, Loss function: 5.097, Average Loss: 5.611, avg. samples / sec: 956.00
Iteration:   2320, Loss function: 5.250, Average Loss: 5.609, avg. samples / sec: 1007.23
Iteration:   2340, Loss function: 5.528, Average Loss: 5.605, avg. samples / sec: 994.67
Iteration:   2360, Loss function: 5.429, Average Loss: 5.601, avg. samples / sec: 953.73
Iteration:   2380, Loss function: 5.267, Average Loss: 5.598, avg. samples / sec: 984.09
Iteration:   2400, Loss function: 5.759, Average Loss: 5.595, avg. samples / sec: 1024.99
Iteration:   2420, Loss function: 5.437, Average Loss: 5.591, avg. samples / sec: 987.72
Iteration:   2440, Loss function: 5.412, Average Loss: 5.588, avg. samples / sec: 1044.10
Iteration:   2460, Loss function: 5.352, Average Loss: 5.584, avg. samples / sec: 992.46
Iteration:   2480, Loss function: 5.447, Average Loss: 5.581, avg. samples / sec: 967.52
Iteration:   2500, Loss function: 5.379, Average Loss: 5.577, avg. samples / sec: 1030.91
Iteration:   2520, Loss function: 5.327, Average Loss: 5.571, avg. samples / sec: 992.49
Iteration:   2540, Loss function: 5.264, Average Loss: 5.568, avg. samples / sec: 1000.20
Iteration:   2560, Loss function: 5.488, Average Loss: 5.564, avg. samples / sec: 1034.84
Iteration:   2580, Loss function: 5.450, Average Loss: 5.561, avg. samples / sec: 1036.19
Iteration:   2600, Loss function: 5.448, Average Loss: 5.559, avg. samples / sec: 999.62
Iteration:   2620, Loss function: 5.485, Average Loss: 5.553, avg. samples / sec: 1034.38
Iteration:   2640, Loss function: 5.233, Average Loss: 5.551, avg. samples / sec: 1025.72
Iteration:   2660, Loss function: 5.339, Average Loss: 5.547, avg. samples / sec: 1023.22
Iteration:   2680, Loss function: 5.234, Average Loss: 5.544, avg. samples / sec: 1018.24
Iteration:   2700, Loss function: 5.285, Average Loss: 5.539, avg. samples / sec: 960.92
Iteration:   2720, Loss function: 5.258, Average Loss: 5.535, avg. samples / sec: 999.42
Iteration:   2740, Loss function: 5.011, Average Loss: 5.530, avg. samples / sec: 1010.33
Iteration:   2760, Loss function: 5.060, Average Loss: 5.525, avg. samples / sec: 1071.11
Iteration:   2780, Loss function: 5.492, Average Loss: 5.521, avg. samples / sec: 991.95
Iteration:   2800, Loss function: 5.307, Average Loss: 5.515, avg. samples / sec: 1008.18
Iteration:   2820, Loss function: 5.467, Average Loss: 5.511, avg. samples / sec: 1029.34
Iteration:   2840, Loss function: 5.237, Average Loss: 5.507, avg. samples / sec: 1011.14
Iteration:   2860, Loss function: 4.982, Average Loss: 5.501, avg. samples / sec: 1030.96
Iteration:   2880, Loss function: 5.425, Average Loss: 5.496, avg. samples / sec: 954.25
Iteration:   2900, Loss function: 4.999, Average Loss: 5.492, avg. samples / sec: 1007.77
Iteration:   2920, Loss function: 5.288, Average Loss: 5.486, avg. samples / sec: 1002.40
Iteration:   2940, Loss function: 4.909, Average Loss: 5.482, avg. samples / sec: 995.59
Iteration:   2960, Loss function: 5.326, Average Loss: 5.477, avg. samples / sec: 941.75
Iteration:   2980, Loss function: 5.108, Average Loss: 5.473, avg. samples / sec: 1026.16
Iteration:   3000, Loss function: 5.383, Average Loss: 5.467, avg. samples / sec: 990.78
Iteration:   3020, Loss function: 5.283, Average Loss: 5.461, avg. samples / sec: 1044.92
Iteration:   3040, Loss function: 5.370, Average Loss: 5.456, avg. samples / sec: 1054.04
Iteration:   3060, Loss function: 5.015, Average Loss: 5.451, avg. samples / sec: 976.08
Iteration:   3080, Loss function: 4.868, Average Loss: 5.446, avg. samples / sec: 1048.45
:::MLLOG {"namespace": "", "time_ms": 1639126974609, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1639126974622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 4, "current_iter_num": 3086}}
Iteration:   3100, Loss function: 5.057, Average Loss: 5.440, avg. samples / sec: 1027.57
Iteration:   3120, Loss function: 5.104, Average Loss: 5.433, avg. samples / sec: 1021.22
Iteration:   3140, Loss function: 5.050, Average Loss: 5.427, avg. samples / sec: 1017.99
Iteration:   3160, Loss function: 5.668, Average Loss: 5.422, avg. samples / sec: 954.17
Iteration:   3180, Loss function: 5.043, Average Loss: 5.417, avg. samples / sec: 994.13
Iteration:   3200, Loss function: 5.305, Average Loss: 5.411, avg. samples / sec: 997.71
Iteration:   3220, Loss function: 5.169, Average Loss: 5.406, avg. samples / sec: 944.24
Iteration:   3240, Loss function: 5.131, Average Loss: 5.401, avg. samples / sec: 950.07
Iteration:   3260, Loss function: 5.280, Average Loss: 5.397, avg. samples / sec: 994.49
Iteration:   3280, Loss function: 4.776, Average Loss: 5.390, avg. samples / sec: 1010.44
Iteration:   3300, Loss function: 4.899, Average Loss: 5.384, avg. samples / sec: 1036.86
Iteration:   3320, Loss function: 4.954, Average Loss: 5.379, avg. samples / sec: 972.97
Iteration:   3340, Loss function: 5.015, Average Loss: 5.375, avg. samples / sec: 1023.91
Iteration:   3360, Loss function: 5.057, Average Loss: 5.368, avg. samples / sec: 1009.01
Iteration:   3380, Loss function: 5.286, Average Loss: 5.362, avg. samples / sec: 995.68
Iteration:   3400, Loss function: 5.012, Average Loss: 5.357, avg. samples / sec: 1010.95
Iteration:   3420, Loss function: 5.187, Average Loss: 5.352, avg. samples / sec: 941.41
Iteration:   3440, Loss function: 4.995, Average Loss: 5.347, avg. samples / sec: 1001.83
Iteration:   3460, Loss function: 5.193, Average Loss: 5.343, avg. samples / sec: 1015.48
Iteration:   3480, Loss function: 5.112, Average Loss: 5.338, avg. samples / sec: 1022.00
Iteration:   3500, Loss function: 5.194, Average Loss: 5.334, avg. samples / sec: 939.24
Iteration:   3520, Loss function: 5.152, Average Loss: 5.329, avg. samples / sec: 1003.18
Iteration:   3540, Loss function: 5.002, Average Loss: 5.324, avg. samples / sec: 952.10
Iteration:   3560, Loss function: 4.839, Average Loss: 5.320, avg. samples / sec: 1027.15
Iteration:   3580, Loss function: 5.191, Average Loss: 5.316, avg. samples / sec: 1001.15
Iteration:   3600, Loss function: 5.271, Average Loss: 5.309, avg. samples / sec: 957.60
Iteration:   3620, Loss function: 4.765, Average Loss: 5.304, avg. samples / sec: 923.63
Iteration:   3640, Loss function: 4.831, Average Loss: 5.298, avg. samples / sec: 1004.78
Iteration:   3660, Loss function: 5.023, Average Loss: 5.294, avg. samples / sec: 960.97
Iteration:   3680, Loss function: 5.063, Average Loss: 5.288, avg. samples / sec: 1031.75
Iteration:   3700, Loss function: 4.959, Average Loss: 5.283, avg. samples / sec: 972.17
Iteration:   3720, Loss function: 5.004, Average Loss: 5.277, avg. samples / sec: 970.33
Iteration:   3740, Loss function: 5.250, Average Loss: 5.273, avg. samples / sec: 996.60
Iteration:   3760, Loss function: 5.079, Average Loss: 5.270, avg. samples / sec: 987.73
Iteration:   3780, Loss function: 5.222, Average Loss: 5.265, avg. samples / sec: 1006.51
Iteration:   3800, Loss function: 5.033, Average Loss: 5.261, avg. samples / sec: 974.98
Iteration:   3820, Loss function: 5.168, Average Loss: 5.256, avg. samples / sec: 1041.90
Iteration:   3840, Loss function: 4.859, Average Loss: 5.252, avg. samples / sec: 993.12
Iteration:   3860, Loss function: 4.904, Average Loss: 5.247, avg. samples / sec: 1043.08
Iteration:   3880, Loss function: 4.963, Average Loss: 5.242, avg. samples / sec: 960.11
Iteration:   3900, Loss function: 5.299, Average Loss: 5.238, avg. samples / sec: 1029.05
Iteration:   3920, Loss function: 5.062, Average Loss: 5.232, avg. samples / sec: 1003.06
Iteration:   3940, Loss function: 5.157, Average Loss: 5.227, avg. samples / sec: 1005.61
Iteration:   3960, Loss function: 4.876, Average Loss: 5.222, avg. samples / sec: 1019.09
Iteration:   3980, Loss function: 4.831, Average Loss: 5.217, avg. samples / sec: 1032.48
Iteration:   4000, Loss function: 5.142, Average Loss: 5.213, avg. samples / sec: 1036.94
Iteration:   4020, Loss function: 4.914, Average Loss: 5.208, avg. samples / sec: 1041.80
Iteration:   4040, Loss function: 5.018, Average Loss: 5.204, avg. samples / sec: 999.98
Iteration:   4060, Loss function: 4.927, Average Loss: 5.200, avg. samples / sec: 977.11
Iteration:   4080, Loss function: 5.078, Average Loss: 5.196, avg. samples / sec: 968.17
Iteration:   4100, Loss function: 5.210, Average Loss: 5.194, avg. samples / sec: 991.10
:::MLLOG {"namespace": "", "time_ms": 1639127092572, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1639127092575, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 5, "current_iter_num": 4115}}
Iteration:   4120, Loss function: 5.012, Average Loss: 5.190, avg. samples / sec: 1015.40
Iteration:   4140, Loss function: 5.052, Average Loss: 5.184, avg. samples / sec: 998.61
Iteration:   4160, Loss function: 4.913, Average Loss: 5.179, avg. samples / sec: 1015.62
Iteration:   4180, Loss function: 4.900, Average Loss: 5.172, avg. samples / sec: 972.74
Iteration:   4200, Loss function: 4.744, Average Loss: 5.168, avg. samples / sec: 1020.58
Iteration:   4220, Loss function: 4.781, Average Loss: 5.162, avg. samples / sec: 1024.03
Iteration:   4240, Loss function: 4.859, Average Loss: 5.156, avg. samples / sec: 996.77
Iteration:   4260, Loss function: 5.212, Average Loss: 5.152, avg. samples / sec: 1028.56
Iteration:   4280, Loss function: 5.067, Average Loss: 5.146, avg. samples / sec: 967.52
Iteration:   4300, Loss function: 4.910, Average Loss: 5.141, avg. samples / sec: 1039.22
Iteration:   4320, Loss function: 4.784, Average Loss: 5.136, avg. samples / sec: 1028.81
Iteration:   4340, Loss function: 4.749, Average Loss: 5.130, avg. samples / sec: 1042.52
Iteration:   4360, Loss function: 4.900, Average Loss: 5.126, avg. samples / sec: 1030.94
Iteration:   4380, Loss function: 5.083, Average Loss: 5.122, avg. samples / sec: 947.09
Iteration:   4400, Loss function: 5.028, Average Loss: 5.118, avg. samples / sec: 1010.23
Iteration:   4420, Loss function: 4.898, Average Loss: 5.113, avg. samples / sec: 1057.29
Iteration:   4440, Loss function: 4.857, Average Loss: 5.109, avg. samples / sec: 1076.47
Iteration:   4460, Loss function: 5.336, Average Loss: 5.105, avg. samples / sec: 1014.10
Iteration:   4480, Loss function: 4.960, Average Loss: 5.102, avg. samples / sec: 1011.07
Iteration:   4500, Loss function: 4.987, Average Loss: 5.098, avg. samples / sec: 1007.12
Iteration:   4520, Loss function: 4.821, Average Loss: 5.094, avg. samples / sec: 1036.66
Iteration:   4540, Loss function: 5.016, Average Loss: 5.090, avg. samples / sec: 976.93
Iteration:   4560, Loss function: 4.655, Average Loss: 5.086, avg. samples / sec: 909.41
Iteration:   4580, Loss function: 4.788, Average Loss: 5.083, avg. samples / sec: 964.69
Iteration:   4600, Loss function: 4.926, Average Loss: 5.080, avg. samples / sec: 989.46
Iteration:   4620, Loss function: 4.754, Average Loss: 5.076, avg. samples / sec: 979.62
Iteration:   4640, Loss function: 4.720, Average Loss: 5.071, avg. samples / sec: 971.45
Iteration:   4660, Loss function: 4.871, Average Loss: 5.067, avg. samples / sec: 934.99
Iteration:   4680, Loss function: 5.516, Average Loss: 5.064, avg. samples / sec: 1007.15
Iteration:   4700, Loss function: 4.823, Average Loss: 5.061, avg. samples / sec: 1042.39
Iteration:   4720, Loss function: 4.742, Average Loss: 5.056, avg. samples / sec: 1044.00
Iteration:   4740, Loss function: 4.708, Average Loss: 5.051, avg. samples / sec: 1013.26
Iteration:   4760, Loss function: 4.732, Average Loss: 5.049, avg. samples / sec: 949.93
Iteration:   4780, Loss function: 5.131, Average Loss: 5.044, avg. samples / sec: 967.68
Iteration:   4800, Loss function: 5.190, Average Loss: 5.042, avg. samples / sec: 967.34
Iteration:   4820, Loss function: 4.749, Average Loss: 5.037, avg. samples / sec: 942.15
Iteration:   4840, Loss function: 5.045, Average Loss: 5.034, avg. samples / sec: 925.29
Iteration:   4860, Loss function: 4.560, Average Loss: 5.030, avg. samples / sec: 1028.89
Iteration:   4880, Loss function: 5.252, Average Loss: 5.026, avg. samples / sec: 962.94
Iteration:   4900, Loss function: 4.619, Average Loss: 5.021, avg. samples / sec: 951.48
Iteration:   4920, Loss function: 4.569, Average Loss: 5.017, avg. samples / sec: 1063.50
Iteration:   4940, Loss function: 4.796, Average Loss: 5.013, avg. samples / sec: 942.11
Iteration:   4960, Loss function: 4.665, Average Loss: 5.009, avg. samples / sec: 961.92
Iteration:   4980, Loss function: 4.771, Average Loss: 5.005, avg. samples / sec: 972.69
Iteration:   5000, Loss function: 4.905, Average Loss: 5.002, avg. samples / sec: 972.10
Iteration:   5020, Loss function: 5.006, Average Loss: 4.999, avg. samples / sec: 957.50
Iteration:   5040, Loss function: 4.900, Average Loss: 4.997, avg. samples / sec: 996.01
Iteration:   5060, Loss function: 4.658, Average Loss: 4.993, avg. samples / sec: 1032.48
Iteration:   5080, Loss function: 4.454, Average Loss: 4.989, avg. samples / sec: 1078.72
Iteration:   5100, Loss function: 4.862, Average Loss: 4.986, avg. samples / sec: 1006.77
Iteration:   5120, Loss function: 4.788, Average Loss: 4.982, avg. samples / sec: 1015.36
Iteration:   5140, Loss function: 4.856, Average Loss: 4.979, avg. samples / sec: 1059.71
:::MLLOG {"namespace": "", "time_ms": 1639127210190, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639127210192, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 6, "current_iter_num": 5144}}
Iteration:   5160, Loss function: 4.921, Average Loss: 4.974, avg. samples / sec: 1058.35
Iteration:   5180, Loss function: 4.738, Average Loss: 4.970, avg. samples / sec: 1041.07
Iteration:   5200, Loss function: 4.717, Average Loss: 4.967, avg. samples / sec: 1042.92
Iteration:   5220, Loss function: 4.679, Average Loss: 4.963, avg. samples / sec: 985.75
Iteration:   5240, Loss function: 4.456, Average Loss: 4.958, avg. samples / sec: 1057.13
Iteration:   5260, Loss function: 4.743, Average Loss: 4.954, avg. samples / sec: 995.63
Iteration:   5280, Loss function: 4.908, Average Loss: 4.951, avg. samples / sec: 961.21
Iteration:   5300, Loss function: 4.919, Average Loss: 4.949, avg. samples / sec: 987.88
Iteration:   5320, Loss function: 5.052, Average Loss: 4.944, avg. samples / sec: 961.61
Iteration:   5340, Loss function: 4.733, Average Loss: 4.938, avg. samples / sec: 1047.68
Iteration:   5360, Loss function: 4.958, Average Loss: 4.936, avg. samples / sec: 958.09
Iteration:   5380, Loss function: 4.447, Average Loss: 4.932, avg. samples / sec: 1013.23
Iteration:   5400, Loss function: 4.543, Average Loss: 4.928, avg. samples / sec: 925.15
Iteration:   5420, Loss function: 4.748, Average Loss: 4.924, avg. samples / sec: 1005.02
Iteration:   5440, Loss function: 4.827, Average Loss: 4.921, avg. samples / sec: 1070.87
Iteration:   5460, Loss function: 4.767, Average Loss: 4.919, avg. samples / sec: 950.23
Iteration:   5480, Loss function: 4.671, Average Loss: 4.916, avg. samples / sec: 1054.75
Iteration:   5500, Loss function: 4.678, Average Loss: 4.913, avg. samples / sec: 978.65
Iteration:   5520, Loss function: 4.757, Average Loss: 4.910, avg. samples / sec: 1016.99
Iteration:   5540, Loss function: 4.699, Average Loss: 4.906, avg. samples / sec: 982.63
Iteration:   5560, Loss function: 4.792, Average Loss: 4.903, avg. samples / sec: 978.18
Iteration:   5580, Loss function: 4.857, Average Loss: 4.899, avg. samples / sec: 1011.91
Iteration:   5600, Loss function: 4.579, Average Loss: 4.897, avg. samples / sec: 919.50
Iteration:   5620, Loss function: 4.483, Average Loss: 4.893, avg. samples / sec: 973.26
Iteration:   5640, Loss function: 4.527, Average Loss: 4.890, avg. samples / sec: 1007.29
Iteration:   5660, Loss function: 4.472, Average Loss: 4.887, avg. samples / sec: 1039.48
Iteration:   5680, Loss function: 4.911, Average Loss: 4.884, avg. samples / sec: 1008.28
Iteration:   5700, Loss function: 4.490, Average Loss: 4.879, avg. samples / sec: 1009.34
Iteration:   5720, Loss function: 4.620, Average Loss: 4.877, avg. samples / sec: 1000.67
Iteration:   5740, Loss function: 4.687, Average Loss: 4.873, avg. samples / sec: 1019.54
Iteration:   5760, Loss function: 4.786, Average Loss: 4.870, avg. samples / sec: 1034.80
Iteration:   5780, Loss function: 4.714, Average Loss: 4.867, avg. samples / sec: 1042.63
Iteration:   5800, Loss function: 4.906, Average Loss: 4.864, avg. samples / sec: 920.89
Iteration:   5820, Loss function: 4.830, Average Loss: 4.860, avg. samples / sec: 1070.29
Iteration:   5840, Loss function: 4.485, Average Loss: 4.857, avg. samples / sec: 1040.84
Iteration:   5860, Loss function: 4.989, Average Loss: 4.853, avg. samples / sec: 937.06
Iteration:   5880, Loss function: 4.551, Average Loss: 4.850, avg. samples / sec: 1066.42
Iteration:   5900, Loss function: 4.869, Average Loss: 4.847, avg. samples / sec: 1028.77
Iteration:   5920, Loss function: 4.632, Average Loss: 4.844, avg. samples / sec: 976.98
Iteration:   5940, Loss function: 4.558, Average Loss: 4.841, avg. samples / sec: 1052.99
Iteration:   5960, Loss function: 4.627, Average Loss: 4.837, avg. samples / sec: 983.91
Iteration:   5980, Loss function: 4.618, Average Loss: 4.833, avg. samples / sec: 1015.39
Iteration:   6000, Loss function: 4.592, Average Loss: 4.831, avg. samples / sec: 995.82
Iteration:   6020, Loss function: 4.710, Average Loss: 4.828, avg. samples / sec: 1051.40
Iteration:   6040, Loss function: 4.731, Average Loss: 4.824, avg. samples / sec: 1012.96
Iteration:   6060, Loss function: 4.514, Average Loss: 4.822, avg. samples / sec: 1009.06
Iteration:   6080, Loss function: 4.527, Average Loss: 4.819, avg. samples / sec: 1010.71
Iteration:   6100, Loss function: 4.524, Average Loss: 4.817, avg. samples / sec: 1079.95
Iteration:   6120, Loss function: 4.681, Average Loss: 4.814, avg. samples / sec: 1008.18
Iteration:   6140, Loss function: 5.036, Average Loss: 4.813, avg. samples / sec: 967.77
Iteration:   6160, Loss function: 4.710, Average Loss: 4.810, avg. samples / sec: 1058.38
:::MLLOG {"namespace": "", "time_ms": 1639127326633, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1639127326634, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 7, "current_iter_num": 6172}}
Iteration:   6180, Loss function: 4.560, Average Loss: 4.806, avg. samples / sec: 1030.98
Iteration:   6200, Loss function: 4.864, Average Loss: 4.802, avg. samples / sec: 1082.49
Iteration:   6220, Loss function: 4.463, Average Loss: 4.798, avg. samples / sec: 983.93
Iteration:   6240, Loss function: 4.654, Average Loss: 4.795, avg. samples / sec: 1013.24
Iteration:   6260, Loss function: 4.485, Average Loss: 4.792, avg. samples / sec: 1027.29
Iteration:   6280, Loss function: 4.365, Average Loss: 4.789, avg. samples / sec: 984.03
Iteration:   6300, Loss function: 4.903, Average Loss: 4.786, avg. samples / sec: 1037.34
Iteration:   6320, Loss function: 4.365, Average Loss: 4.782, avg. samples / sec: 1049.98
Iteration:   6340, Loss function: 4.831, Average Loss: 4.781, avg. samples / sec: 1064.35
Iteration:   6360, Loss function: 4.585, Average Loss: 4.776, avg. samples / sec: 1030.03
Iteration:   6380, Loss function: 4.635, Average Loss: 4.772, avg. samples / sec: 948.00
Iteration:   6400, Loss function: 4.610, Average Loss: 4.770, avg. samples / sec: 1042.79
Iteration:   6420, Loss function: 4.553, Average Loss: 4.766, avg. samples / sec: 991.13
Iteration:   6440, Loss function: 4.637, Average Loss: 4.763, avg. samples / sec: 960.08
Iteration:   6460, Loss function: 4.592, Average Loss: 4.762, avg. samples / sec: 975.64
Iteration:   6480, Loss function: 4.639, Average Loss: 4.760, avg. samples / sec: 967.56
Iteration:   6500, Loss function: 4.682, Average Loss: 4.756, avg. samples / sec: 954.46
Iteration:   6520, Loss function: 4.717, Average Loss: 4.755, avg. samples / sec: 987.28
Iteration:   6540, Loss function: 4.830, Average Loss: 4.752, avg. samples / sec: 1033.71
Iteration:   6560, Loss function: 4.410, Average Loss: 4.749, avg. samples / sec: 1056.31
Iteration:   6580, Loss function: 4.777, Average Loss: 4.746, avg. samples / sec: 1042.67
Iteration:   6600, Loss function: 4.600, Average Loss: 4.743, avg. samples / sec: 1048.05
Iteration:   6620, Loss function: 4.621, Average Loss: 4.741, avg. samples / sec: 977.50
Iteration:   6640, Loss function: 4.495, Average Loss: 4.739, avg. samples / sec: 993.60
Iteration:   6660, Loss function: 4.725, Average Loss: 4.736, avg. samples / sec: 975.42
Iteration:   6680, Loss function: 4.473, Average Loss: 4.734, avg. samples / sec: 999.52
Iteration:   6700, Loss function: 4.450, Average Loss: 4.731, avg. samples / sec: 1036.19
Iteration:   6720, Loss function: 4.526, Average Loss: 4.728, avg. samples / sec: 1031.58
Iteration:   6740, Loss function: 4.543, Average Loss: 4.728, avg. samples / sec: 1035.06
Iteration:   6760, Loss function: 4.705, Average Loss: 4.725, avg. samples / sec: 1039.83
Iteration:   6780, Loss function: 4.478, Average Loss: 4.723, avg. samples / sec: 1043.94
Iteration:   6800, Loss function: 4.536, Average Loss: 4.720, avg. samples / sec: 990.37
Iteration:   6820, Loss function: 4.669, Average Loss: 4.717, avg. samples / sec: 1051.17
Iteration:   6840, Loss function: 4.557, Average Loss: 4.714, avg. samples / sec: 998.73
Iteration:   6860, Loss function: 4.767, Average Loss: 4.712, avg. samples / sec: 960.63
Iteration:   6880, Loss function: 4.500, Average Loss: 4.709, avg. samples / sec: 900.70
Iteration:   6900, Loss function: 4.805, Average Loss: 4.708, avg. samples / sec: 1032.91
Iteration:   6920, Loss function: 4.732, Average Loss: 4.705, avg. samples / sec: 1026.68
Iteration:   6940, Loss function: 4.210, Average Loss: 4.702, avg. samples / sec: 1063.82
Iteration:   6960, Loss function: 4.408, Average Loss: 4.700, avg. samples / sec: 1007.31
Iteration:   6980, Loss function: 4.351, Average Loss: 4.699, avg. samples / sec: 1008.11
Iteration:   7000, Loss function: 4.711, Average Loss: 4.696, avg. samples / sec: 1089.99
Iteration:   7020, Loss function: 4.640, Average Loss: 4.694, avg. samples / sec: 1024.10
Iteration:   7040, Loss function: 4.934, Average Loss: 4.692, avg. samples / sec: 1027.99
Iteration:   7060, Loss function: 4.848, Average Loss: 4.689, avg. samples / sec: 1052.80
Iteration:   7080, Loss function: 4.655, Average Loss: 4.689, avg. samples / sec: 1032.92
Iteration:   7100, Loss function: 4.550, Average Loss: 4.688, avg. samples / sec: 1043.05
Iteration:   7120, Loss function: 4.681, Average Loss: 4.687, avg. samples / sec: 1068.61
Iteration:   7140, Loss function: 4.695, Average Loss: 4.686, avg. samples / sec: 1022.45
Iteration:   7160, Loss function: 4.470, Average Loss: 4.683, avg. samples / sec: 995.98
Iteration:   7180, Loss function: 4.602, Average Loss: 4.682, avg. samples / sec: 998.87
Iteration:   7200, Loss function: 4.494, Average Loss: 4.680, avg. samples / sec: 965.37
:::MLLOG {"namespace": "", "time_ms": 1639127442385, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1639127442387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 8, "current_iter_num": 7201}}
Iteration:   7220, Loss function: 4.477, Average Loss: 4.677, avg. samples / sec: 947.54
Iteration:   7240, Loss function: 4.503, Average Loss: 4.673, avg. samples / sec: 955.48
Iteration:   7260, Loss function: 4.671, Average Loss: 4.672, avg. samples / sec: 978.40
Iteration:   7280, Loss function: 4.701, Average Loss: 4.669, avg. samples / sec: 940.85
Iteration:   7300, Loss function: 4.545, Average Loss: 4.664, avg. samples / sec: 985.75
Iteration:   7320, Loss function: 4.520, Average Loss: 4.661, avg. samples / sec: 1001.91
Iteration:   7340, Loss function: 4.659, Average Loss: 4.658, avg. samples / sec: 1007.73
Iteration:   7360, Loss function: 4.453, Average Loss: 4.656, avg. samples / sec: 1046.04
Iteration:   7380, Loss function: 4.473, Average Loss: 4.653, avg. samples / sec: 1061.01
Iteration:   7400, Loss function: 4.614, Average Loss: 4.651, avg. samples / sec: 1077.98
Iteration:   7420, Loss function: 4.476, Average Loss: 4.648, avg. samples / sec: 1000.77
Iteration:   7440, Loss function: 4.589, Average Loss: 4.647, avg. samples / sec: 1088.48
Iteration:   7460, Loss function: 4.496, Average Loss: 4.643, avg. samples / sec: 1015.84
Iteration:   7480, Loss function: 4.250, Average Loss: 4.641, avg. samples / sec: 977.77
Iteration:   7500, Loss function: 4.429, Average Loss: 4.638, avg. samples / sec: 1001.51
Iteration:   7520, Loss function: 4.485, Average Loss: 4.635, avg. samples / sec: 961.65
Iteration:   7540, Loss function: 4.673, Average Loss: 4.633, avg. samples / sec: 1046.22
Iteration:   7560, Loss function: 4.389, Average Loss: 4.631, avg. samples / sec: 1039.34
Iteration:   7580, Loss function: 4.471, Average Loss: 4.629, avg. samples / sec: 1019.94
Iteration:   7600, Loss function: 4.705, Average Loss: 4.627, avg. samples / sec: 917.30
Iteration:   7620, Loss function: 4.686, Average Loss: 4.625, avg. samples / sec: 908.21
Iteration:   7640, Loss function: 4.360, Average Loss: 4.622, avg. samples / sec: 971.44
Iteration:   7660, Loss function: 4.395, Average Loss: 4.621, avg. samples / sec: 982.60
Iteration:   7680, Loss function: 4.551, Average Loss: 4.619, avg. samples / sec: 1043.02
Iteration:   7700, Loss function: 4.413, Average Loss: 4.616, avg. samples / sec: 1012.74
Iteration:   7720, Loss function: 4.394, Average Loss: 4.614, avg. samples / sec: 1042.34
Iteration:   7740, Loss function: 4.291, Average Loss: 4.611, avg. samples / sec: 1002.61
Iteration:   7760, Loss function: 4.515, Average Loss: 4.609, avg. samples / sec: 968.73
Iteration:   7780, Loss function: 4.632, Average Loss: 4.608, avg. samples / sec: 1003.49
Iteration:   7800, Loss function: 4.611, Average Loss: 4.607, avg. samples / sec: 934.32
Iteration:   7820, Loss function: 4.313, Average Loss: 4.607, avg. samples / sec: 934.94
Iteration:   7840, Loss function: 4.538, Average Loss: 4.606, avg. samples / sec: 972.09
Iteration:   7860, Loss function: 4.466, Average Loss: 4.604, avg. samples / sec: 1016.79
Iteration:   7880, Loss function: 4.490, Average Loss: 4.603, avg. samples / sec: 1011.25
Iteration:   7900, Loss function: 4.715, Average Loss: 4.602, avg. samples / sec: 997.41
Iteration:   7920, Loss function: 4.372, Average Loss: 4.600, avg. samples / sec: 1067.29
Iteration:   7940, Loss function: 4.778, Average Loss: 4.599, avg. samples / sec: 982.67
Iteration:   7960, Loss function: 4.500, Average Loss: 4.597, avg. samples / sec: 1019.40
Iteration:   7980, Loss function: 4.658, Average Loss: 4.596, avg. samples / sec: 953.18
Iteration:   8000, Loss function: 4.729, Average Loss: 4.595, avg. samples / sec: 986.86
Iteration:   8020, Loss function: 4.510, Average Loss: 4.592, avg. samples / sec: 928.26
Iteration:   8040, Loss function: 4.602, Average Loss: 4.591, avg. samples / sec: 964.21
Iteration:   8060, Loss function: 4.604, Average Loss: 4.590, avg. samples / sec: 966.79
Iteration:   8080, Loss function: 4.542, Average Loss: 4.589, avg. samples / sec: 1108.80
Iteration:   8100, Loss function: 4.732, Average Loss: 4.587, avg. samples / sec: 927.81
Iteration:   8120, Loss function: 4.322, Average Loss: 4.584, avg. samples / sec: 984.23
Iteration:   8140, Loss function: 4.180, Average Loss: 4.582, avg. samples / sec: 1040.56
Iteration:   8160, Loss function: 4.288, Average Loss: 4.580, avg. samples / sec: 1045.79
Iteration:   8180, Loss function: 4.745, Average Loss: 4.580, avg. samples / sec: 998.81
Iteration:   8200, Loss function: 4.321, Average Loss: 4.579, avg. samples / sec: 978.19
Iteration:   8220, Loss function: 4.751, Average Loss: 4.579, avg. samples / sec: 935.77
:::MLLOG {"namespace": "", "time_ms": 1639127560541, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1639127560542, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 9, "current_iter_num": 8230}}
Iteration:   8240, Loss function: 4.600, Average Loss: 4.576, avg. samples / sec: 990.15
Iteration:   8260, Loss function: 4.425, Average Loss: 4.575, avg. samples / sec: 1058.95
Iteration:   8280, Loss function: 4.414, Average Loss: 4.572, avg. samples / sec: 1061.06
Iteration:   8300, Loss function: 4.202, Average Loss: 4.569, avg. samples / sec: 964.52
Iteration:   8320, Loss function: 4.829, Average Loss: 4.567, avg. samples / sec: 1003.91
Iteration:   8340, Loss function: 4.566, Average Loss: 4.564, avg. samples / sec: 1027.07
Iteration:   8360, Loss function: 4.516, Average Loss: 4.560, avg. samples / sec: 1035.45
Iteration:   8380, Loss function: 4.473, Average Loss: 4.558, avg. samples / sec: 985.38
Iteration:   8400, Loss function: 4.471, Average Loss: 4.555, avg. samples / sec: 1010.78
Iteration:   8420, Loss function: 4.571, Average Loss: 4.554, avg. samples / sec: 991.90
Iteration:   8440, Loss function: 4.593, Average Loss: 4.553, avg. samples / sec: 1000.99
Iteration:   8460, Loss function: 4.618, Average Loss: 4.553, avg. samples / sec: 1021.52
Iteration:   8480, Loss function: 4.447, Average Loss: 4.551, avg. samples / sec: 1022.24
Iteration:   8500, Loss function: 4.380, Average Loss: 4.548, avg. samples / sec: 1037.32
Iteration:   8520, Loss function: 4.288, Average Loss: 4.545, avg. samples / sec: 961.50
Iteration:   8540, Loss function: 4.433, Average Loss: 4.543, avg. samples / sec: 1035.34
Iteration:   8560, Loss function: 4.520, Average Loss: 4.541, avg. samples / sec: 993.40
Iteration:   8580, Loss function: 4.505, Average Loss: 4.541, avg. samples / sec: 1047.31
Iteration:   8600, Loss function: 4.525, Average Loss: 4.538, avg. samples / sec: 989.33
Iteration:   8620, Loss function: 4.315, Average Loss: 4.536, avg. samples / sec: 1008.02
Iteration:   8640, Loss function: 4.328, Average Loss: 4.534, avg. samples / sec: 1042.94
Iteration:   8660, Loss function: 4.485, Average Loss: 4.532, avg. samples / sec: 1018.68
Iteration:   8680, Loss function: 4.396, Average Loss: 4.530, avg. samples / sec: 1075.39
Iteration:   8700, Loss function: 4.514, Average Loss: 4.529, avg. samples / sec: 1056.78
Iteration:   8720, Loss function: 4.414, Average Loss: 4.527, avg. samples / sec: 1025.65
Iteration:   8740, Loss function: 4.386, Average Loss: 4.524, avg. samples / sec: 986.22
Iteration:   8760, Loss function: 4.501, Average Loss: 4.525, avg. samples / sec: 1035.84
Iteration:   8780, Loss function: 4.400, Average Loss: 4.522, avg. samples / sec: 1029.14
Iteration:   8800, Loss function: 4.526, Average Loss: 4.520, avg. samples / sec: 956.65
Iteration:   8820, Loss function: 4.178, Average Loss: 4.518, avg. samples / sec: 1051.43
Iteration:   8840, Loss function: 4.614, Average Loss: 4.516, avg. samples / sec: 1020.00
Iteration:   8860, Loss function: 4.548, Average Loss: 4.514, avg. samples / sec: 1071.55
Iteration:   8880, Loss function: 4.527, Average Loss: 4.512, avg. samples / sec: 1075.36
Iteration:   8900, Loss function: 4.385, Average Loss: 4.512, avg. samples / sec: 1007.20
Iteration:   8920, Loss function: 4.479, Average Loss: 4.510, avg. samples / sec: 1058.06
Iteration:   8940, Loss function: 4.415, Average Loss: 4.509, avg. samples / sec: 1026.78
Iteration:   8960, Loss function: 4.511, Average Loss: 4.506, avg. samples / sec: 1062.67
Iteration:   8980, Loss function: 4.460, Average Loss: 4.504, avg. samples / sec: 982.14
Iteration:   9000, Loss function: 4.336, Average Loss: 4.503, avg. samples / sec: 959.35
Iteration:   9020, Loss function: 4.831, Average Loss: 4.502, avg. samples / sec: 982.13
Iteration:   9040, Loss function: 4.461, Average Loss: 4.500, avg. samples / sec: 1063.66
Iteration:   9060, Loss function: 4.172, Average Loss: 4.497, avg. samples / sec: 1072.50
Iteration:   9080, Loss function: 4.597, Average Loss: 4.496, avg. samples / sec: 1016.72
Iteration:   9100, Loss function: 4.382, Average Loss: 4.496, avg. samples / sec: 994.71
Iteration:   9120, Loss function: 4.443, Average Loss: 4.494, avg. samples / sec: 959.55
Iteration:   9140, Loss function: 4.107, Average Loss: 4.492, avg. samples / sec: 989.58
Iteration:   9160, Loss function: 4.361, Average Loss: 4.491, avg. samples / sec: 1020.59
Iteration:   9180, Loss function: 4.120, Average Loss: 4.490, avg. samples / sec: 1015.47
Iteration:   9200, Loss function: 4.425, Average Loss: 4.489, avg. samples / sec: 916.44
Iteration:   9220, Loss function: 4.326, Average Loss: 4.489, avg. samples / sec: 1055.94
Iteration:   9240, Loss function: 4.611, Average Loss: 4.488, avg. samples / sec: 1049.44
:::MLLOG {"namespace": "", "time_ms": 1639127675735, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1639127675737, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 10, "current_iter_num": 9258}}
Iteration:   9260, Loss function: 4.448, Average Loss: 4.486, avg. samples / sec: 1028.30
Iteration:   9280, Loss function: 4.208, Average Loss: 4.484, avg. samples / sec: 1036.83
Iteration:   9300, Loss function: 4.533, Average Loss: 4.481, avg. samples / sec: 981.10
Iteration:   9320, Loss function: 4.100, Average Loss: 4.479, avg. samples / sec: 948.34
Iteration:   9340, Loss function: 4.676, Average Loss: 4.477, avg. samples / sec: 987.82
Iteration:   9360, Loss function: 4.103, Average Loss: 4.474, avg. samples / sec: 1000.69
Iteration:   9380, Loss function: 4.352, Average Loss: 4.472, avg. samples / sec: 923.38
Iteration:   9400, Loss function: 4.229, Average Loss: 4.470, avg. samples / sec: 1099.28
Iteration:   9420, Loss function: 4.234, Average Loss: 4.469, avg. samples / sec: 1002.89
Iteration:   9440, Loss function: 4.680, Average Loss: 4.467, avg. samples / sec: 1050.95
Iteration:   9460, Loss function: 4.273, Average Loss: 4.466, avg. samples / sec: 919.93
Iteration:   9480, Loss function: 4.389, Average Loss: 4.465, avg. samples / sec: 1023.91
Iteration:   9500, Loss function: 4.593, Average Loss: 4.464, avg. samples / sec: 940.20
Iteration:   9520, Loss function: 4.430, Average Loss: 4.460, avg. samples / sec: 963.67
Iteration:   9540, Loss function: 4.150, Average Loss: 4.459, avg. samples / sec: 969.09
Iteration:   9560, Loss function: 4.550, Average Loss: 4.457, avg. samples / sec: 1000.02
Iteration:   9580, Loss function: 4.325, Average Loss: 4.456, avg. samples / sec: 985.57
Iteration:   9600, Loss function: 3.993, Average Loss: 4.454, avg. samples / sec: 1005.91
Iteration:   9620, Loss function: 4.424, Average Loss: 4.454, avg. samples / sec: 1007.16
Iteration:   9640, Loss function: 4.368, Average Loss: 4.453, avg. samples / sec: 1041.44
Iteration:   9660, Loss function: 4.540, Average Loss: 4.453, avg. samples / sec: 957.38
Iteration:   9680, Loss function: 4.410, Average Loss: 4.452, avg. samples / sec: 1073.00
Iteration:   9700, Loss function: 4.488, Average Loss: 4.451, avg. samples / sec: 1030.24
Iteration:   9720, Loss function: 4.354, Average Loss: 4.450, avg. samples / sec: 950.98
Iteration:   9740, Loss function: 4.600, Average Loss: 4.448, avg. samples / sec: 1093.99
Iteration:   9760, Loss function: 4.203, Average Loss: 4.448, avg. samples / sec: 1048.76
Iteration:   9780, Loss function: 4.460, Average Loss: 4.446, avg. samples / sec: 1017.42
Iteration:   9800, Loss function: 4.553, Average Loss: 4.445, avg. samples / sec: 982.89
Iteration:   9820, Loss function: 4.166, Average Loss: 4.442, avg. samples / sec: 990.58
Iteration:   9840, Loss function: 4.605, Average Loss: 4.441, avg. samples / sec: 1053.23
Iteration:   9860, Loss function: 4.353, Average Loss: 4.439, avg. samples / sec: 1085.45
Iteration:   9880, Loss function: 4.248, Average Loss: 4.438, avg. samples / sec: 1037.10
Iteration:   9900, Loss function: 4.419, Average Loss: 4.437, avg. samples / sec: 1046.85
Iteration:   9920, Loss function: 4.805, Average Loss: 4.436, avg. samples / sec: 1028.18
Iteration:   9940, Loss function: 4.277, Average Loss: 4.433, avg. samples / sec: 1020.54
Iteration:   9960, Loss function: 4.323, Average Loss: 4.432, avg. samples / sec: 958.21
Iteration:   9980, Loss function: 4.412, Average Loss: 4.431, avg. samples / sec: 992.65
Iteration:  10000, Loss function: 3.995, Average Loss: 4.429, avg. samples / sec: 1034.72
Iteration:  10020, Loss function: 4.606, Average Loss: 4.428, avg. samples / sec: 988.67
Iteration:  10040, Loss function: 4.275, Average Loss: 4.426, avg. samples / sec: 1035.02
Iteration:  10060, Loss function: 4.039, Average Loss: 4.425, avg. samples / sec: 1004.33
Iteration:  10080, Loss function: 4.680, Average Loss: 4.423, avg. samples / sec: 983.88
Iteration:  10100, Loss function: 4.134, Average Loss: 4.423, avg. samples / sec: 1039.36
Iteration:  10120, Loss function: 4.455, Average Loss: 4.423, avg. samples / sec: 1013.83
Iteration:  10140, Loss function: 4.306, Average Loss: 4.420, avg. samples / sec: 1025.75
Iteration:  10160, Loss function: 4.475, Average Loss: 4.419, avg. samples / sec: 1010.96
Iteration:  10180, Loss function: 4.683, Average Loss: 4.418, avg. samples / sec: 992.59
Iteration:  10200, Loss function: 4.170, Average Loss: 4.417, avg. samples / sec: 998.39
Iteration:  10220, Loss function: 4.439, Average Loss: 4.417, avg. samples / sec: 1019.75
Iteration:  10240, Loss function: 4.348, Average Loss: 4.415, avg. samples / sec: 1013.41
Iteration:  10260, Loss function: 4.202, Average Loss: 4.414, avg. samples / sec: 988.16
Iteration:  10280, Loss function: 4.529, Average Loss: 4.413, avg. samples / sec: 990.35
:::MLLOG {"namespace": "", "time_ms": 1639127792358, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639127792360, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 11, "current_iter_num": 10287}}
Iteration:  10300, Loss function: 4.444, Average Loss: 4.411, avg. samples / sec: 962.45
Iteration:  10320, Loss function: 4.306, Average Loss: 4.410, avg. samples / sec: 975.66
Iteration:  10340, Loss function: 4.131, Average Loss: 4.407, avg. samples / sec: 944.10
Iteration:  10360, Loss function: 4.476, Average Loss: 4.405, avg. samples / sec: 948.26
Iteration:  10380, Loss function: 4.305, Average Loss: 4.403, avg. samples / sec: 972.16
Iteration:  10400, Loss function: 4.213, Average Loss: 4.400, avg. samples / sec: 1093.54
Iteration:  10420, Loss function: 4.124, Average Loss: 4.399, avg. samples / sec: 1004.32
Iteration:  10440, Loss function: 4.249, Average Loss: 4.398, avg. samples / sec: 1019.55
Iteration:  10460, Loss function: 4.358, Average Loss: 4.396, avg. samples / sec: 991.38
Iteration:  10480, Loss function: 4.208, Average Loss: 4.394, avg. samples / sec: 958.69
Iteration:  10500, Loss function: 4.168, Average Loss: 4.393, avg. samples / sec: 1015.93
Iteration:  10520, Loss function: 4.642, Average Loss: 4.390, avg. samples / sec: 966.75
Iteration:  10540, Loss function: 4.082, Average Loss: 4.388, avg. samples / sec: 960.94
Iteration:  10560, Loss function: 4.068, Average Loss: 4.386, avg. samples / sec: 1057.57
Iteration:  10580, Loss function: 4.212, Average Loss: 4.384, avg. samples / sec: 998.99
Iteration:  10600, Loss function: 4.307, Average Loss: 4.383, avg. samples / sec: 945.31
Iteration:  10620, Loss function: 4.376, Average Loss: 4.382, avg. samples / sec: 1019.10
Iteration:  10640, Loss function: 4.203, Average Loss: 4.381, avg. samples / sec: 971.76
Iteration:  10660, Loss function: 4.580, Average Loss: 4.381, avg. samples / sec: 988.50
Iteration:  10680, Loss function: 4.206, Average Loss: 4.379, avg. samples / sec: 962.61
Iteration:  10700, Loss function: 4.072, Average Loss: 4.379, avg. samples / sec: 1002.82
Iteration:  10720, Loss function: 4.435, Average Loss: 4.378, avg. samples / sec: 1053.24
Iteration:  10740, Loss function: 4.237, Average Loss: 4.376, avg. samples / sec: 1043.66
Iteration:  10760, Loss function: 4.396, Average Loss: 4.375, avg. samples / sec: 1003.10
Iteration:  10780, Loss function: 4.654, Average Loss: 4.375, avg. samples / sec: 1088.83
Iteration:  10800, Loss function: 4.383, Average Loss: 4.374, avg. samples / sec: 1024.96
Iteration:  10820, Loss function: 4.208, Average Loss: 4.373, avg. samples / sec: 991.50
Iteration:  10840, Loss function: 4.102, Average Loss: 4.371, avg. samples / sec: 1059.74
Iteration:  10860, Loss function: 4.555, Average Loss: 4.370, avg. samples / sec: 1013.15
Iteration:  10880, Loss function: 4.389, Average Loss: 4.368, avg. samples / sec: 1050.33
Iteration:  10900, Loss function: 4.302, Average Loss: 4.368, avg. samples / sec: 937.56
Iteration:  10920, Loss function: 4.252, Average Loss: 4.367, avg. samples / sec: 1008.38
Iteration:  10940, Loss function: 4.252, Average Loss: 4.365, avg. samples / sec: 1072.05
Iteration:  10960, Loss function: 4.261, Average Loss: 4.364, avg. samples / sec: 1053.62
Iteration:  10980, Loss function: 4.204, Average Loss: 4.363, avg. samples / sec: 1022.33
Iteration:  11000, Loss function: 4.719, Average Loss: 4.362, avg. samples / sec: 965.90
Iteration:  11020, Loss function: 3.945, Average Loss: 4.361, avg. samples / sec: 1028.67
Iteration:  11040, Loss function: 4.311, Average Loss: 4.362, avg. samples / sec: 1015.65
Iteration:  11060, Loss function: 4.586, Average Loss: 4.360, avg. samples / sec: 1087.66
Iteration:  11080, Loss function: 4.274, Average Loss: 4.358, avg. samples / sec: 1056.35
Iteration:  11100, Loss function: 4.235, Average Loss: 4.356, avg. samples / sec: 1026.41
Iteration:  11120, Loss function: 4.377, Average Loss: 4.357, avg. samples / sec: 1087.65
Iteration:  11140, Loss function: 4.407, Average Loss: 4.355, avg. samples / sec: 1063.95
Iteration:  11160, Loss function: 4.229, Average Loss: 4.355, avg. samples / sec: 1059.60
Iteration:  11180, Loss function: 4.273, Average Loss: 4.353, avg. samples / sec: 1006.46
Iteration:  11200, Loss function: 4.002, Average Loss: 4.353, avg. samples / sec: 1001.47
Iteration:  11220, Loss function: 4.388, Average Loss: 4.352, avg. samples / sec: 1033.14
Iteration:  11240, Loss function: 4.339, Average Loss: 4.352, avg. samples / sec: 977.24
Iteration:  11260, Loss function: 4.378, Average Loss: 4.351, avg. samples / sec: 1023.72
Iteration:  11280, Loss function: 4.538, Average Loss: 4.351, avg. samples / sec: 975.02
Iteration:  11300, Loss function: 4.209, Average Loss: 4.349, avg. samples / sec: 1003.95
:::MLLOG {"namespace": "", "time_ms": 1639127908659, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1639127908662, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 12, "current_iter_num": 11316}}
Iteration:  11320, Loss function: 4.350, Average Loss: 4.349, avg. samples / sec: 934.50
Iteration:  11340, Loss function: 4.298, Average Loss: 4.347, avg. samples / sec: 1001.54
Iteration:  11360, Loss function: 4.001, Average Loss: 4.346, avg. samples / sec: 987.68
Iteration:  11380, Loss function: 4.399, Average Loss: 4.344, avg. samples / sec: 1036.31
Iteration:  11400, Loss function: 4.219, Average Loss: 4.343, avg. samples / sec: 994.35
Iteration:  11420, Loss function: 4.408, Average Loss: 4.342, avg. samples / sec: 1024.18
Iteration:  11440, Loss function: 4.339, Average Loss: 4.341, avg. samples / sec: 1016.94
Iteration:  11460, Loss function: 3.928, Average Loss: 4.339, avg. samples / sec: 1044.22
Iteration:  11480, Loss function: 4.403, Average Loss: 4.337, avg. samples / sec: 1036.06
Iteration:  11500, Loss function: 4.431, Average Loss: 4.336, avg. samples / sec: 1036.56
Iteration:  11520, Loss function: 4.322, Average Loss: 4.335, avg. samples / sec: 1036.05
Iteration:  11540, Loss function: 4.450, Average Loss: 4.336, avg. samples / sec: 1011.98
Iteration:  11560, Loss function: 4.038, Average Loss: 4.336, avg. samples / sec: 982.57
Iteration:  11580, Loss function: 4.098, Average Loss: 4.336, avg. samples / sec: 1074.22
Iteration:  11600, Loss function: 4.254, Average Loss: 4.336, avg. samples / sec: 977.18
Iteration:  11620, Loss function: 4.194, Average Loss: 4.334, avg. samples / sec: 996.93
Iteration:  11640, Loss function: 4.470, Average Loss: 4.333, avg. samples / sec: 996.16
Iteration:  11660, Loss function: 4.340, Average Loss: 4.332, avg. samples / sec: 1026.02
Iteration:  11680, Loss function: 4.263, Average Loss: 4.331, avg. samples / sec: 1013.76
Iteration:  11700, Loss function: 3.988, Average Loss: 4.328, avg. samples / sec: 1031.71
Iteration:  11720, Loss function: 4.265, Average Loss: 4.328, avg. samples / sec: 1053.57
Iteration:  11740, Loss function: 4.422, Average Loss: 4.326, avg. samples / sec: 1005.45
Iteration:  11760, Loss function: 4.329, Average Loss: 4.324, avg. samples / sec: 996.98
Iteration:  11780, Loss function: 4.278, Average Loss: 4.322, avg. samples / sec: 989.10
Iteration:  11800, Loss function: 4.436, Average Loss: 4.321, avg. samples / sec: 1040.82
Iteration:  11820, Loss function: 4.305, Average Loss: 4.320, avg. samples / sec: 1042.36
Iteration:  11840, Loss function: 4.610, Average Loss: 4.318, avg. samples / sec: 1046.20
Iteration:  11860, Loss function: 4.424, Average Loss: 4.317, avg. samples / sec: 998.17
Iteration:  11880, Loss function: 4.262, Average Loss: 4.317, avg. samples / sec: 996.27
Iteration:  11900, Loss function: 4.216, Average Loss: 4.316, avg. samples / sec: 960.14
Iteration:  11920, Loss function: 4.067, Average Loss: 4.313, avg. samples / sec: 932.48
Iteration:  11940, Loss function: 4.474, Average Loss: 4.312, avg. samples / sec: 968.88
Iteration:  11960, Loss function: 4.282, Average Loss: 4.311, avg. samples / sec: 952.24
Iteration:  11980, Loss function: 4.467, Average Loss: 4.310, avg. samples / sec: 1011.64
Iteration:  12000, Loss function: 4.301, Average Loss: 4.310, avg. samples / sec: 932.46
Iteration:  12020, Loss function: 4.226, Average Loss: 4.309, avg. samples / sec: 988.57
Iteration:  12040, Loss function: 4.440, Average Loss: 4.309, avg. samples / sec: 1048.71
Iteration:  12060, Loss function: 4.438, Average Loss: 4.308, avg. samples / sec: 997.42
Iteration:  12080, Loss function: 4.087, Average Loss: 4.308, avg. samples / sec: 972.75
Iteration:  12100, Loss function: 4.128, Average Loss: 4.307, avg. samples / sec: 974.22
Iteration:  12120, Loss function: 4.418, Average Loss: 4.306, avg. samples / sec: 1009.92
Iteration:  12140, Loss function: 4.384, Average Loss: 4.304, avg. samples / sec: 1099.42
Iteration:  12160, Loss function: 4.282, Average Loss: 4.303, avg. samples / sec: 990.12
Iteration:  12180, Loss function: 4.048, Average Loss: 4.302, avg. samples / sec: 981.95
Iteration:  12200, Loss function: 4.189, Average Loss: 4.301, avg. samples / sec: 1010.26
Iteration:  12220, Loss function: 4.315, Average Loss: 4.300, avg. samples / sec: 1030.69
Iteration:  12240, Loss function: 4.084, Average Loss: 4.299, avg. samples / sec: 1088.58
Iteration:  12260, Loss function: 4.148, Average Loss: 4.299, avg. samples / sec: 1034.12
Iteration:  12280, Loss function: 4.238, Average Loss: 4.297, avg. samples / sec: 1046.71
Iteration:  12300, Loss function: 4.339, Average Loss: 4.298, avg. samples / sec: 1010.77
Iteration:  12320, Loss function: 4.254, Average Loss: 4.297, avg. samples / sec: 993.85
Iteration:  12340, Loss function: 4.203, Average Loss: 4.295, avg. samples / sec: 1013.29
:::MLLOG {"namespace": "", "time_ms": 1639128024839, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1639128024841, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 13, "current_iter_num": 12344}}
Iteration:  12360, Loss function: 4.198, Average Loss: 4.293, avg. samples / sec: 990.41
Iteration:  12380, Loss function: 4.690, Average Loss: 4.293, avg. samples / sec: 1026.93
Iteration:  12400, Loss function: 4.074, Average Loss: 4.290, avg. samples / sec: 996.16
Iteration:  12420, Loss function: 4.116, Average Loss: 4.289, avg. samples / sec: 1013.55
Iteration:  12440, Loss function: 4.091, Average Loss: 4.289, avg. samples / sec: 981.45
Iteration:  12460, Loss function: 4.225, Average Loss: 4.287, avg. samples / sec: 989.47
Iteration:  12480, Loss function: 4.282, Average Loss: 4.285, avg. samples / sec: 1012.04
Iteration:  12500, Loss function: 4.469, Average Loss: 4.284, avg. samples / sec: 1020.65
Iteration:  12520, Loss function: 4.352, Average Loss: 4.284, avg. samples / sec: 1045.19
Iteration:  12540, Loss function: 4.516, Average Loss: 4.282, avg. samples / sec: 1011.89
Iteration:  12560, Loss function: 4.403, Average Loss: 4.280, avg. samples / sec: 1019.87
Iteration:  12580, Loss function: 4.040, Average Loss: 4.277, avg. samples / sec: 1058.69
Iteration:  12600, Loss function: 4.270, Average Loss: 4.277, avg. samples / sec: 1042.43
Iteration:  12620, Loss function: 4.176, Average Loss: 4.275, avg. samples / sec: 1008.82
Iteration:  12640, Loss function: 4.315, Average Loss: 4.276, avg. samples / sec: 952.85
Iteration:  12660, Loss function: 4.294, Average Loss: 4.274, avg. samples / sec: 1008.43
Iteration:  12680, Loss function: 3.684, Average Loss: 4.272, avg. samples / sec: 1054.80
Iteration:  12700, Loss function: 4.054, Average Loss: 4.271, avg. samples / sec: 953.29
Iteration:  12720, Loss function: 4.159, Average Loss: 4.270, avg. samples / sec: 1060.21
Iteration:  12740, Loss function: 3.982, Average Loss: 4.268, avg. samples / sec: 1000.74
Iteration:  12760, Loss function: 4.280, Average Loss: 4.267, avg. samples / sec: 954.17
Iteration:  12780, Loss function: 4.256, Average Loss: 4.268, avg. samples / sec: 940.73
Iteration:  12800, Loss function: 4.376, Average Loss: 4.266, avg. samples / sec: 1004.98
Iteration:  12820, Loss function: 4.322, Average Loss: 4.266, avg. samples / sec: 1034.81
Iteration:  12840, Loss function: 4.298, Average Loss: 4.267, avg. samples / sec: 984.79
Iteration:  12860, Loss function: 4.115, Average Loss: 4.267, avg. samples / sec: 991.49
Iteration:  12880, Loss function: 3.963, Average Loss: 4.266, avg. samples / sec: 1037.17
Iteration:  12900, Loss function: 4.261, Average Loss: 4.264, avg. samples / sec: 998.63
Iteration:  12920, Loss function: 4.411, Average Loss: 4.263, avg. samples / sec: 955.23
Iteration:  12940, Loss function: 4.143, Average Loss: 4.260, avg. samples / sec: 1003.51
Iteration:  12960, Loss function: 4.338, Average Loss: 4.260, avg. samples / sec: 908.37
Iteration:  12980, Loss function: 4.115, Average Loss: 4.259, avg. samples / sec: 986.67
Iteration:  13000, Loss function: 4.467, Average Loss: 4.258, avg. samples / sec: 1075.87
Iteration:  13020, Loss function: 4.049, Average Loss: 4.258, avg. samples / sec: 1037.23
Iteration:  13040, Loss function: 4.269, Average Loss: 4.257, avg. samples / sec: 1074.15
Iteration:  13060, Loss function: 4.235, Average Loss: 4.256, avg. samples / sec: 988.50
Iteration:  13080, Loss function: 4.259, Average Loss: 4.255, avg. samples / sec: 989.28
Iteration:  13100, Loss function: 4.179, Average Loss: 4.253, avg. samples / sec: 1017.23
Iteration:  13120, Loss function: 4.306, Average Loss: 4.252, avg. samples / sec: 940.73
Iteration:  13140, Loss function: 4.280, Average Loss: 4.252, avg. samples / sec: 975.09
Iteration:  13160, Loss function: 4.048, Average Loss: 4.251, avg. samples / sec: 961.69
Iteration:  13180, Loss function: 3.912, Average Loss: 4.250, avg. samples / sec: 951.38
Iteration:  13200, Loss function: 4.218, Average Loss: 4.250, avg. samples / sec: 972.63
Iteration:  13220, Loss function: 4.208, Average Loss: 4.249, avg. samples / sec: 997.07
Iteration:  13240, Loss function: 4.141, Average Loss: 4.249, avg. samples / sec: 975.46
Iteration:  13260, Loss function: 4.172, Average Loss: 4.248, avg. samples / sec: 943.02
Iteration:  13280, Loss function: 3.816, Average Loss: 4.246, avg. samples / sec: 952.27
Iteration:  13300, Loss function: 3.923, Average Loss: 4.245, avg. samples / sec: 952.54
Iteration:  13320, Loss function: 4.112, Average Loss: 4.245, avg. samples / sec: 977.22
Iteration:  13340, Loss function: 4.466, Average Loss: 4.245, avg. samples / sec: 1071.94
Iteration:  13360, Loss function: 4.258, Average Loss: 4.245, avg. samples / sec: 954.89
:::MLLOG {"namespace": "", "time_ms": 1639128142615, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1639128142623, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 14, "current_iter_num": 13373}}
Iteration:  13380, Loss function: 4.099, Average Loss: 4.244, avg. samples / sec: 973.79
Iteration:  13400, Loss function: 4.025, Average Loss: 4.242, avg. samples / sec: 981.85
Iteration:  13420, Loss function: 4.177, Average Loss: 4.241, avg. samples / sec: 991.36
Iteration:  13440, Loss function: 4.408, Average Loss: 4.240, avg. samples / sec: 968.79
Iteration:  13460, Loss function: 4.444, Average Loss: 4.240, avg. samples / sec: 902.69
Iteration:  13480, Loss function: 4.077, Average Loss: 4.239, avg. samples / sec: 1006.39
Iteration:  13500, Loss function: 4.503, Average Loss: 4.239, avg. samples / sec: 1052.83
Iteration:  13520, Loss function: 4.164, Average Loss: 4.238, avg. samples / sec: 1007.44
Iteration:  13540, Loss function: 4.057, Average Loss: 4.237, avg. samples / sec: 1120.03
Iteration:  13560, Loss function: 4.325, Average Loss: 4.236, avg. samples / sec: 998.48
Iteration:  13580, Loss function: 4.049, Average Loss: 4.234, avg. samples / sec: 1057.17
Iteration:  13600, Loss function: 4.244, Average Loss: 4.234, avg. samples / sec: 996.32
Iteration:  13620, Loss function: 4.141, Average Loss: 4.231, avg. samples / sec: 968.47
Iteration:  13640, Loss function: 4.192, Average Loss: 4.229, avg. samples / sec: 999.91
Iteration:  13660, Loss function: 4.082, Average Loss: 4.228, avg. samples / sec: 1074.80
Iteration:  13680, Loss function: 4.071, Average Loss: 4.227, avg. samples / sec: 1085.86
Iteration:  13700, Loss function: 4.250, Average Loss: 4.228, avg. samples / sec: 1031.56
Iteration:  13720, Loss function: 3.957, Average Loss: 4.228, avg. samples / sec: 980.95
Iteration:  13740, Loss function: 4.091, Average Loss: 4.227, avg. samples / sec: 1089.01
Iteration:  13760, Loss function: 4.257, Average Loss: 4.227, avg. samples / sec: 1003.61
Iteration:  13780, Loss function: 4.061, Average Loss: 4.225, avg. samples / sec: 995.51
Iteration:  13800, Loss function: 4.430, Average Loss: 4.224, avg. samples / sec: 987.60
Iteration:  13820, Loss function: 3.925, Average Loss: 4.224, avg. samples / sec: 978.73
Iteration:  13840, Loss function: 4.075, Average Loss: 4.222, avg. samples / sec: 986.19
Iteration:  13860, Loss function: 4.324, Average Loss: 4.222, avg. samples / sec: 1059.30
Iteration:  13880, Loss function: 4.507, Average Loss: 4.221, avg. samples / sec: 1002.49
Iteration:  13900, Loss function: 4.195, Average Loss: 4.220, avg. samples / sec: 1018.95
Iteration:  13920, Loss function: 4.073, Average Loss: 4.219, avg. samples / sec: 1041.58
Iteration:  13940, Loss function: 4.064, Average Loss: 4.218, avg. samples / sec: 1004.58
Iteration:  13960, Loss function: 4.367, Average Loss: 4.218, avg. samples / sec: 1009.84
Iteration:  13980, Loss function: 4.297, Average Loss: 4.217, avg. samples / sec: 969.87
Iteration:  14000, Loss function: 4.234, Average Loss: 4.216, avg. samples / sec: 981.33
Iteration:  14020, Loss function: 4.339, Average Loss: 4.216, avg. samples / sec: 940.21
Iteration:  14040, Loss function: 4.303, Average Loss: 4.215, avg. samples / sec: 1118.99
Iteration:  14060, Loss function: 4.075, Average Loss: 4.213, avg. samples / sec: 1070.70
Iteration:  14080, Loss function: 4.372, Average Loss: 4.212, avg. samples / sec: 960.51
Iteration:  14100, Loss function: 4.337, Average Loss: 4.211, avg. samples / sec: 1003.15
Iteration:  14120, Loss function: 4.255, Average Loss: 4.210, avg. samples / sec: 999.73
Iteration:  14140, Loss function: 4.342, Average Loss: 4.208, avg. samples / sec: 953.40
Iteration:  14160, Loss function: 4.154, Average Loss: 4.207, avg. samples / sec: 993.88
Iteration:  14180, Loss function: 4.045, Average Loss: 4.206, avg. samples / sec: 981.25
Iteration:  14200, Loss function: 4.319, Average Loss: 4.205, avg. samples / sec: 1073.21
Iteration:  14220, Loss function: 4.213, Average Loss: 4.205, avg. samples / sec: 993.65
Iteration:  14240, Loss function: 3.986, Average Loss: 4.205, avg. samples / sec: 946.92
Iteration:  14260, Loss function: 4.129, Average Loss: 4.205, avg. samples / sec: 984.19
Iteration:  14280, Loss function: 4.027, Average Loss: 4.204, avg. samples / sec: 1005.02
Iteration:  14300, Loss function: 4.126, Average Loss: 4.204, avg. samples / sec: 951.25
Iteration:  14320, Loss function: 4.196, Average Loss: 4.202, avg. samples / sec: 1069.06
Iteration:  14340, Loss function: 4.184, Average Loss: 4.203, avg. samples / sec: 954.09
Iteration:  14360, Loss function: 4.426, Average Loss: 4.202, avg. samples / sec: 1021.77
Iteration:  14380, Loss function: 4.453, Average Loss: 4.203, avg. samples / sec: 982.33
Iteration:  14400, Loss function: 4.199, Average Loss: 4.202, avg. samples / sec: 993.73
:::MLLOG {"namespace": "", "time_ms": 1639128259458, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1639128259459, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 15, "current_iter_num": 14402}}
Iteration:  14420, Loss function: 4.107, Average Loss: 4.199, avg. samples / sec: 1029.60
Iteration:  14440, Loss function: 3.940, Average Loss: 4.196, avg. samples / sec: 998.42
Iteration:  14460, Loss function: 4.212, Average Loss: 4.195, avg. samples / sec: 1066.47
Iteration:  14480, Loss function: 3.885, Average Loss: 4.193, avg. samples / sec: 965.05
Iteration:  14500, Loss function: 4.138, Average Loss: 4.192, avg. samples / sec: 1011.42
Iteration:  14520, Loss function: 4.032, Average Loss: 4.191, avg. samples / sec: 1080.19
Iteration:  14540, Loss function: 4.190, Average Loss: 4.189, avg. samples / sec: 1076.56
Iteration:  14560, Loss function: 4.184, Average Loss: 4.189, avg. samples / sec: 1012.64
Iteration:  14580, Loss function: 4.331, Average Loss: 4.188, avg. samples / sec: 1066.64
Iteration:  14600, Loss function: 3.995, Average Loss: 4.188, avg. samples / sec: 1013.44
Iteration:  14620, Loss function: 4.348, Average Loss: 4.186, avg. samples / sec: 1026.47
Iteration:  14640, Loss function: 4.071, Average Loss: 4.186, avg. samples / sec: 1050.87
Iteration:  14660, Loss function: 3.759, Average Loss: 4.185, avg. samples / sec: 1021.95
Iteration:  14680, Loss function: 4.147, Average Loss: 4.184, avg. samples / sec: 957.43
Iteration:  14700, Loss function: 4.428, Average Loss: 4.185, avg. samples / sec: 1003.88
Iteration:  14720, Loss function: 4.054, Average Loss: 4.184, avg. samples / sec: 1006.79
Iteration:  14740, Loss function: 4.033, Average Loss: 4.184, avg. samples / sec: 1006.29
Iteration:  14760, Loss function: 4.021, Average Loss: 4.184, avg. samples / sec: 953.68
Iteration:  14780, Loss function: 4.165, Average Loss: 4.184, avg. samples / sec: 975.53
Iteration:  14800, Loss function: 4.028, Average Loss: 4.183, avg. samples / sec: 996.26
Iteration:  14820, Loss function: 4.080, Average Loss: 4.182, avg. samples / sec: 992.34
Iteration:  14840, Loss function: 4.201, Average Loss: 4.180, avg. samples / sec: 1019.90
Iteration:  14860, Loss function: 4.228, Average Loss: 4.179, avg. samples / sec: 1056.99
Iteration:  14880, Loss function: 4.122, Average Loss: 4.178, avg. samples / sec: 1029.30
Iteration:  14900, Loss function: 4.238, Average Loss: 4.178, avg. samples / sec: 1020.39
Iteration:  14920, Loss function: 3.987, Average Loss: 4.177, avg. samples / sec: 1005.37
Iteration:  14940, Loss function: 4.301, Average Loss: 4.176, avg. samples / sec: 994.12
Iteration:  14960, Loss function: 3.899, Average Loss: 4.175, avg. samples / sec: 1024.19
Iteration:  14980, Loss function: 4.344, Average Loss: 4.175, avg. samples / sec: 937.68
Iteration:  15000, Loss function: 4.302, Average Loss: 4.173, avg. samples / sec: 1008.24
Iteration:  15020, Loss function: 4.140, Average Loss: 4.174, avg. samples / sec: 1042.10
Iteration:  15040, Loss function: 4.170, Average Loss: 4.174, avg. samples / sec: 939.56
Iteration:  15060, Loss function: 3.855, Average Loss: 4.173, avg. samples / sec: 1025.18
Iteration:  15080, Loss function: 4.316, Average Loss: 4.172, avg. samples / sec: 1070.18
Iteration:  15100, Loss function: 4.198, Average Loss: 4.172, avg. samples / sec: 1006.26
Iteration:  15120, Loss function: 4.013, Average Loss: 4.170, avg. samples / sec: 1004.83
Iteration:  15140, Loss function: 4.073, Average Loss: 4.169, avg. samples / sec: 994.96
Iteration:  15160, Loss function: 4.270, Average Loss: 4.169, avg. samples / sec: 974.40
Iteration:  15180, Loss function: 4.074, Average Loss: 4.170, avg. samples / sec: 1000.69
Iteration:  15200, Loss function: 4.116, Average Loss: 4.170, avg. samples / sec: 997.88
Iteration:  15220, Loss function: 4.308, Average Loss: 4.171, avg. samples / sec: 992.45
Iteration:  15240, Loss function: 4.286, Average Loss: 4.171, avg. samples / sec: 1035.65
Iteration:  15260, Loss function: 4.095, Average Loss: 4.170, avg. samples / sec: 972.78
Iteration:  15280, Loss function: 3.969, Average Loss: 4.170, avg. samples / sec: 947.79
Iteration:  15300, Loss function: 4.151, Average Loss: 4.169, avg. samples / sec: 1053.27
Iteration:  15320, Loss function: 4.187, Average Loss: 4.167, avg. samples / sec: 1009.74
Iteration:  15340, Loss function: 4.020, Average Loss: 4.167, avg. samples / sec: 1003.19
Iteration:  15360, Loss function: 4.232, Average Loss: 4.167, avg. samples / sec: 1017.37
Iteration:  15380, Loss function: 3.993, Average Loss: 4.166, avg. samples / sec: 936.05
Iteration:  15400, Loss function: 4.546, Average Loss: 4.167, avg. samples / sec: 1007.16
Iteration:  15420, Loss function: 4.293, Average Loss: 4.167, avg. samples / sec: 986.57
:::MLLOG {"namespace": "", "time_ms": 1639128375816, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1639128375818, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 16, "current_iter_num": 15430}}
Iteration:  15440, Loss function: 4.177, Average Loss: 4.167, avg. samples / sec: 1020.81
Iteration:  15460, Loss function: 4.105, Average Loss: 4.165, avg. samples / sec: 1044.89
Iteration:  15480, Loss function: 4.196, Average Loss: 4.163, avg. samples / sec: 983.46
Iteration:  15500, Loss function: 4.120, Average Loss: 4.163, avg. samples / sec: 1002.07
Iteration:  15520, Loss function: 3.996, Average Loss: 4.162, avg. samples / sec: 990.88
Iteration:  15540, Loss function: 4.469, Average Loss: 4.162, avg. samples / sec: 1002.17
Iteration:  15560, Loss function: 4.250, Average Loss: 4.161, avg. samples / sec: 1060.71
Iteration:  15580, Loss function: 4.685, Average Loss: 4.161, avg. samples / sec: 1040.86
Iteration:  15600, Loss function: 4.291, Average Loss: 4.160, avg. samples / sec: 1032.95
Iteration:  15620, Loss function: 3.922, Average Loss: 4.159, avg. samples / sec: 980.83
Iteration:  15640, Loss function: 3.922, Average Loss: 4.157, avg. samples / sec: 979.88
Iteration:  15660, Loss function: 4.003, Average Loss: 4.154, avg. samples / sec: 987.23
Iteration:  15680, Loss function: 4.277, Average Loss: 4.154, avg. samples / sec: 1059.76
Iteration:  15700, Loss function: 4.133, Average Loss: 4.153, avg. samples / sec: 987.76
Iteration:  15720, Loss function: 3.942, Average Loss: 4.151, avg. samples / sec: 1041.15
Iteration:  15740, Loss function: 4.098, Average Loss: 4.149, avg. samples / sec: 1026.77
Iteration:  15760, Loss function: 3.813, Average Loss: 4.148, avg. samples / sec: 961.17
Iteration:  15780, Loss function: 4.165, Average Loss: 4.148, avg. samples / sec: 1013.75
Iteration:  15800, Loss function: 3.745, Average Loss: 4.147, avg. samples / sec: 960.75
Iteration:  15820, Loss function: 4.611, Average Loss: 4.147, avg. samples / sec: 986.84
Iteration:  15840, Loss function: 4.446, Average Loss: 4.146, avg. samples / sec: 982.83
Iteration:  15860, Loss function: 4.150, Average Loss: 4.145, avg. samples / sec: 967.64
Iteration:  15880, Loss function: 3.893, Average Loss: 4.143, avg. samples / sec: 1030.77
Iteration:  15900, Loss function: 3.945, Average Loss: 4.141, avg. samples / sec: 1029.04
Iteration:  15920, Loss function: 4.079, Average Loss: 4.140, avg. samples / sec: 970.56
Iteration:  15940, Loss function: 4.195, Average Loss: 4.141, avg. samples / sec: 1044.66
Iteration:  15960, Loss function: 4.068, Average Loss: 4.139, avg. samples / sec: 1029.06
Iteration:  15980, Loss function: 4.174, Average Loss: 4.138, avg. samples / sec: 1027.95
Iteration:  16000, Loss function: 4.015, Average Loss: 4.138, avg. samples / sec: 980.09
Iteration:  16020, Loss function: 4.277, Average Loss: 4.136, avg. samples / sec: 974.41
Iteration:  16040, Loss function: 3.896, Average Loss: 4.136, avg. samples / sec: 965.88
Iteration:  16060, Loss function: 3.940, Average Loss: 4.134, avg. samples / sec: 1062.13
Iteration:  16080, Loss function: 4.102, Average Loss: 4.134, avg. samples / sec: 960.21
Iteration:  16100, Loss function: 4.232, Average Loss: 4.135, avg. samples / sec: 950.43
Iteration:  16120, Loss function: 4.144, Average Loss: 4.134, avg. samples / sec: 996.34
Iteration:  16140, Loss function: 3.804, Average Loss: 4.133, avg. samples / sec: 989.15
Iteration:  16160, Loss function: 3.893, Average Loss: 4.132, avg. samples / sec: 1002.05
Iteration:  16180, Loss function: 4.281, Average Loss: 4.131, avg. samples / sec: 1002.05
Iteration:  16200, Loss function: 4.171, Average Loss: 4.131, avg. samples / sec: 975.75
Iteration:  16220, Loss function: 4.123, Average Loss: 4.131, avg. samples / sec: 991.63
Iteration:  16240, Loss function: 4.084, Average Loss: 4.129, avg. samples / sec: 998.38
Iteration:  16260, Loss function: 4.224, Average Loss: 4.129, avg. samples / sec: 1054.82
Iteration:  16280, Loss function: 4.103, Average Loss: 4.129, avg. samples / sec: 1019.62
Iteration:  16300, Loss function: 3.973, Average Loss: 4.128, avg. samples / sec: 1085.41
Iteration:  16320, Loss function: 4.090, Average Loss: 4.130, avg. samples / sec: 1022.29
Iteration:  16340, Loss function: 4.215, Average Loss: 4.129, avg. samples / sec: 972.27
Iteration:  16360, Loss function: 3.953, Average Loss: 4.130, avg. samples / sec: 1013.16
Iteration:  16380, Loss function: 3.984, Average Loss: 4.129, avg. samples / sec: 993.40
Iteration:  16400, Loss function: 3.955, Average Loss: 4.129, avg. samples / sec: 977.23
Iteration:  16420, Loss function: 3.791, Average Loss: 4.129, avg. samples / sec: 969.40
Iteration:  16440, Loss function: 3.934, Average Loss: 4.130, avg. samples / sec: 980.90
:::MLLOG {"namespace": "", "time_ms": 1639128492792, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1639128492793, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 17, "current_iter_num": 16459}}
Iteration:  16460, Loss function: 4.370, Average Loss: 4.131, avg. samples / sec: 1029.21
Iteration:  16480, Loss function: 4.005, Average Loss: 4.130, avg. samples / sec: 1065.78
Iteration:  16500, Loss function: 4.219, Average Loss: 4.129, avg. samples / sec: 983.01
Iteration:  16520, Loss function: 3.955, Average Loss: 4.127, avg. samples / sec: 1027.69
Iteration:  16540, Loss function: 3.927, Average Loss: 4.126, avg. samples / sec: 1036.55
Iteration:  16560, Loss function: 3.966, Average Loss: 4.123, avg. samples / sec: 959.29
Iteration:  16580, Loss function: 4.031, Average Loss: 4.121, avg. samples / sec: 1017.48
Iteration:  16600, Loss function: 4.328, Average Loss: 4.120, avg. samples / sec: 1053.74
Iteration:  16620, Loss function: 4.275, Average Loss: 4.119, avg. samples / sec: 988.70
Iteration:  16640, Loss function: 3.901, Average Loss: 4.119, avg. samples / sec: 1008.08
Iteration:  16660, Loss function: 4.587, Average Loss: 4.119, avg. samples / sec: 1006.48
Iteration:  16680, Loss function: 4.176, Average Loss: 4.117, avg. samples / sec: 993.90
Iteration:  16700, Loss function: 4.159, Average Loss: 4.116, avg. samples / sec: 1035.71
Iteration:  16720, Loss function: 3.850, Average Loss: 4.116, avg. samples / sec: 1032.33
Iteration:  16740, Loss function: 4.202, Average Loss: 4.114, avg. samples / sec: 1026.81
Iteration:  16760, Loss function: 4.036, Average Loss: 4.113, avg. samples / sec: 938.33
Iteration:  16780, Loss function: 3.728, Average Loss: 4.112, avg. samples / sec: 1033.20
Iteration:  16800, Loss function: 4.202, Average Loss: 4.111, avg. samples / sec: 1002.23
Iteration:  16820, Loss function: 4.139, Average Loss: 4.110, avg. samples / sec: 1039.40
Iteration:  16840, Loss function: 4.324, Average Loss: 4.110, avg. samples / sec: 1028.65
Iteration:  16860, Loss function: 4.180, Average Loss: 4.110, avg. samples / sec: 1007.55
Iteration:  16880, Loss function: 3.897, Average Loss: 4.109, avg. samples / sec: 1038.40
Iteration:  16900, Loss function: 4.278, Average Loss: 4.109, avg. samples / sec: 1041.52
Iteration:  16920, Loss function: 4.014, Average Loss: 4.107, avg. samples / sec: 934.91
Iteration:  16940, Loss function: 3.965, Average Loss: 4.106, avg. samples / sec: 1008.37
Iteration:  16960, Loss function: 4.334, Average Loss: 4.105, avg. samples / sec: 1016.09
Iteration:  16980, Loss function: 4.214, Average Loss: 4.105, avg. samples / sec: 1051.72
Iteration:  17000, Loss function: 4.125, Average Loss: 4.105, avg. samples / sec: 1015.04
Iteration:  17020, Loss function: 4.158, Average Loss: 4.104, avg. samples / sec: 971.11
Iteration:  17040, Loss function: 3.973, Average Loss: 4.104, avg. samples / sec: 1010.97
Iteration:  17060, Loss function: 4.093, Average Loss: 4.104, avg. samples / sec: 975.80
Iteration:  17080, Loss function: 4.068, Average Loss: 4.103, avg. samples / sec: 931.68
Iteration:  17100, Loss function: 4.133, Average Loss: 4.102, avg. samples / sec: 1002.25
Iteration:  17120, Loss function: 4.168, Average Loss: 4.100, avg. samples / sec: 998.84
Iteration:  17140, Loss function: 4.137, Average Loss: 4.099, avg. samples / sec: 1026.75
Iteration:  17160, Loss function: 3.737, Average Loss: 4.098, avg. samples / sec: 1012.23
Iteration:  17180, Loss function: 4.322, Average Loss: 4.098, avg. samples / sec: 1007.37
Iteration:  17200, Loss function: 4.213, Average Loss: 4.099, avg. samples / sec: 1039.50
Iteration:  17220, Loss function: 4.224, Average Loss: 4.099, avg. samples / sec: 1042.67
Iteration:  17240, Loss function: 3.945, Average Loss: 4.097, avg. samples / sec: 975.99
Iteration:  17260, Loss function: 4.235, Average Loss: 4.097, avg. samples / sec: 1007.43
Iteration:  17280, Loss function: 4.289, Average Loss: 4.096, avg. samples / sec: 1047.43
Iteration:  17300, Loss function: 4.045, Average Loss: 4.095, avg. samples / sec: 921.92
Iteration:  17320, Loss function: 4.098, Average Loss: 4.096, avg. samples / sec: 1102.53
Iteration:  17340, Loss function: 3.836, Average Loss: 4.096, avg. samples / sec: 968.47
Iteration:  17360, Loss function: 4.064, Average Loss: 4.096, avg. samples / sec: 953.82
Iteration:  17380, Loss function: 4.021, Average Loss: 4.095, avg. samples / sec: 1064.11
Iteration:  17400, Loss function: 3.937, Average Loss: 4.096, avg. samples / sec: 1027.57
Iteration:  17420, Loss function: 3.940, Average Loss: 4.095, avg. samples / sec: 993.57
Iteration:  17440, Loss function: 3.798, Average Loss: 4.094, avg. samples / sec: 1023.13
Iteration:  17460, Loss function: 4.393, Average Loss: 4.095, avg. samples / sec: 991.07
Iteration:  17480, Loss function: 4.183, Average Loss: 4.095, avg. samples / sec: 1020.26
:::MLLOG {"namespace": "", "time_ms": 1639128609142, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1639128609144, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 18, "current_iter_num": 17488}}
Iteration:  17500, Loss function: 3.830, Average Loss: 4.093, avg. samples / sec: 1005.53
Iteration:  17520, Loss function: 3.828, Average Loss: 4.092, avg. samples / sec: 997.75
Iteration:  17540, Loss function: 3.942, Average Loss: 4.090, avg. samples / sec: 996.69
Iteration:  17560, Loss function: 4.062, Average Loss: 4.089, avg. samples / sec: 1022.36
Iteration:  17580, Loss function: 3.728, Average Loss: 4.089, avg. samples / sec: 1092.45
Iteration:  17600, Loss function: 3.986, Average Loss: 4.088, avg. samples / sec: 1021.01
Iteration:  17620, Loss function: 4.119, Average Loss: 4.087, avg. samples / sec: 1032.18
Iteration:  17640, Loss function: 4.016, Average Loss: 4.086, avg. samples / sec: 1055.14
Iteration:  17660, Loss function: 3.843, Average Loss: 4.085, avg. samples / sec: 952.08
Iteration:  17680, Loss function: 3.697, Average Loss: 4.083, avg. samples / sec: 933.36
Iteration:  17700, Loss function: 4.091, Average Loss: 4.082, avg. samples / sec: 976.38
Iteration:  17720, Loss function: 3.788, Average Loss: 4.080, avg. samples / sec: 1001.67
Iteration:  17740, Loss function: 4.199, Average Loss: 4.078, avg. samples / sec: 977.79
Iteration:  17760, Loss function: 4.068, Average Loss: 4.077, avg. samples / sec: 957.54
Iteration:  17780, Loss function: 4.251, Average Loss: 4.077, avg. samples / sec: 1100.85
Iteration:  17800, Loss function: 3.942, Average Loss: 4.076, avg. samples / sec: 1034.43
Iteration:  17820, Loss function: 3.843, Average Loss: 4.075, avg. samples / sec: 1037.60
Iteration:  17840, Loss function: 3.861, Average Loss: 4.074, avg. samples / sec: 1048.88
Iteration:  17860, Loss function: 3.824, Average Loss: 4.074, avg. samples / sec: 1069.89
Iteration:  17880, Loss function: 3.962, Average Loss: 4.073, avg. samples / sec: 1022.04
Iteration:  17900, Loss function: 4.111, Average Loss: 4.072, avg. samples / sec: 1004.31
Iteration:  17920, Loss function: 4.090, Average Loss: 4.070, avg. samples / sec: 1008.82
Iteration:  17940, Loss function: 4.015, Average Loss: 4.068, avg. samples / sec: 1006.58
Iteration:  17960, Loss function: 3.783, Average Loss: 4.068, avg. samples / sec: 1014.78
Iteration:  17980, Loss function: 4.031, Average Loss: 4.067, avg. samples / sec: 1041.13
Iteration:  18000, Loss function: 4.140, Average Loss: 4.066, avg. samples / sec: 971.33
Iteration:  18020, Loss function: 4.169, Average Loss: 4.066, avg. samples / sec: 1042.38
Iteration:  18040, Loss function: 4.277, Average Loss: 4.064, avg. samples / sec: 1020.20
Iteration:  18060, Loss function: 4.169, Average Loss: 4.064, avg. samples / sec: 1006.76
Iteration:  18080, Loss function: 4.278, Average Loss: 4.064, avg. samples / sec: 1018.67
Iteration:  18100, Loss function: 3.714, Average Loss: 4.064, avg. samples / sec: 923.08
Iteration:  18120, Loss function: 4.094, Average Loss: 4.065, avg. samples / sec: 948.98
Iteration:  18140, Loss function: 4.086, Average Loss: 4.066, avg. samples / sec: 935.26
Iteration:  18160, Loss function: 4.148, Average Loss: 4.067, avg. samples / sec: 946.15
Iteration:  18180, Loss function: 3.906, Average Loss: 4.066, avg. samples / sec: 998.58
Iteration:  18200, Loss function: 4.294, Average Loss: 4.065, avg. samples / sec: 1021.65
Iteration:  18220, Loss function: 4.208, Average Loss: 4.065, avg. samples / sec: 984.44
Iteration:  18240, Loss function: 3.881, Average Loss: 4.064, avg. samples / sec: 957.02
Iteration:  18260, Loss function: 3.989, Average Loss: 4.063, avg. samples / sec: 950.53
Iteration:  18280, Loss function: 4.296, Average Loss: 4.063, avg. samples / sec: 971.42
Iteration:  18300, Loss function: 4.208, Average Loss: 4.063, avg. samples / sec: 1013.33
Iteration:  18320, Loss function: 4.169, Average Loss: 4.062, avg. samples / sec: 1040.78
Iteration:  18340, Loss function: 3.747, Average Loss: 4.061, avg. samples / sec: 1005.22
Iteration:  18360, Loss function: 4.265, Average Loss: 4.060, avg. samples / sec: 993.84
Iteration:  18380, Loss function: 3.845, Average Loss: 4.061, avg. samples / sec: 972.00
Iteration:  18400, Loss function: 4.121, Average Loss: 4.060, avg. samples / sec: 1038.55
Iteration:  18420, Loss function: 4.066, Average Loss: 4.060, avg. samples / sec: 973.63
Iteration:  18440, Loss function: 4.208, Average Loss: 4.060, avg. samples / sec: 986.99
Iteration:  18460, Loss function: 3.941, Average Loss: 4.061, avg. samples / sec: 931.49
Iteration:  18480, Loss function: 4.091, Average Loss: 4.060, avg. samples / sec: 1018.55
Iteration:  18500, Loss function: 3.972, Average Loss: 4.060, avg. samples / sec: 933.17
:::MLLOG {"namespace": "", "time_ms": 1639128726520, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1639128726522, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 19, "current_iter_num": 18516}}
Iteration:  18520, Loss function: 3.898, Average Loss: 4.059, avg. samples / sec: 1000.35
Iteration:  18540, Loss function: 4.212, Average Loss: 4.058, avg. samples / sec: 1048.05
Iteration:  18560, Loss function: 3.808, Average Loss: 4.056, avg. samples / sec: 1054.51
Iteration:  18580, Loss function: 3.776, Average Loss: 4.054, avg. samples / sec: 1098.58
Iteration:  18600, Loss function: 3.910, Average Loss: 4.052, avg. samples / sec: 896.16
Iteration:  18620, Loss function: 4.236, Average Loss: 4.051, avg. samples / sec: 954.14
Iteration:  18640, Loss function: 4.105, Average Loss: 4.051, avg. samples / sec: 961.95
Iteration:  18660, Loss function: 4.168, Average Loss: 4.051, avg. samples / sec: 1066.01
Iteration:  18680, Loss function: 4.191, Average Loss: 4.051, avg. samples / sec: 1051.53
Iteration:  18700, Loss function: 4.180, Average Loss: 4.051, avg. samples / sec: 1038.77
Iteration:  18720, Loss function: 3.869, Average Loss: 4.050, avg. samples / sec: 904.47
Iteration:  18740, Loss function: 3.956, Average Loss: 4.049, avg. samples / sec: 1046.90
Iteration:  18760, Loss function: 3.951, Average Loss: 4.049, avg. samples / sec: 1007.00
Iteration:  18780, Loss function: 4.205, Average Loss: 4.047, avg. samples / sec: 948.30
Iteration:  18800, Loss function: 4.302, Average Loss: 4.047, avg. samples / sec: 959.87
Iteration:  18820, Loss function: 4.222, Average Loss: 4.047, avg. samples / sec: 1053.64
Iteration:  18840, Loss function: 3.933, Average Loss: 4.048, avg. samples / sec: 1036.80
Iteration:  18860, Loss function: 4.062, Average Loss: 4.045, avg. samples / sec: 1035.59
Iteration:  18880, Loss function: 4.144, Average Loss: 4.045, avg. samples / sec: 988.32
Iteration:  18900, Loss function: 4.023, Average Loss: 4.045, avg. samples / sec: 1024.17
Iteration:  18920, Loss function: 3.998, Average Loss: 4.045, avg. samples / sec: 925.76
Iteration:  18940, Loss function: 3.954, Average Loss: 4.044, avg. samples / sec: 991.54
Iteration:  18960, Loss function: 4.243, Average Loss: 4.043, avg. samples / sec: 977.19
Iteration:  18980, Loss function: 3.923, Average Loss: 4.042, avg. samples / sec: 1054.04
Iteration:  19000, Loss function: 4.239, Average Loss: 4.040, avg. samples / sec: 1048.21
Iteration:  19020, Loss function: 4.235, Average Loss: 4.039, avg. samples / sec: 993.61
Iteration:  19040, Loss function: 4.259, Average Loss: 4.039, avg. samples / sec: 1054.17
Iteration:  19060, Loss function: 4.087, Average Loss: 4.038, avg. samples / sec: 1014.46
Iteration:  19080, Loss function: 4.191, Average Loss: 4.038, avg. samples / sec: 965.50
Iteration:  19100, Loss function: 3.815, Average Loss: 4.037, avg. samples / sec: 1027.67
Iteration:  19120, Loss function: 4.200, Average Loss: 4.038, avg. samples / sec: 1029.69
Iteration:  19140, Loss function: 4.209, Average Loss: 4.039, avg. samples / sec: 986.09
Iteration:  19160, Loss function: 4.036, Average Loss: 4.038, avg. samples / sec: 1130.27
Iteration:  19180, Loss function: 3.682, Average Loss: 4.036, avg. samples / sec: 971.18
Iteration:  19200, Loss function: 3.914, Average Loss: 4.036, avg. samples / sec: 973.90
Iteration:  19220, Loss function: 4.200, Average Loss: 4.035, avg. samples / sec: 982.23
Iteration:  19240, Loss function: 3.728, Average Loss: 4.035, avg. samples / sec: 1004.43
Iteration:  19260, Loss function: 4.040, Average Loss: 4.034, avg. samples / sec: 999.53
Iteration:  19280, Loss function: 4.230, Average Loss: 4.033, avg. samples / sec: 928.08
Iteration:  19300, Loss function: 4.039, Average Loss: 4.032, avg. samples / sec: 947.22
Iteration:  19320, Loss function: 3.951, Average Loss: 4.031, avg. samples / sec: 954.64
Iteration:  19340, Loss function: 3.583, Average Loss: 4.033, avg. samples / sec: 1103.03
Iteration:  19360, Loss function: 4.261, Average Loss: 4.033, avg. samples / sec: 1041.28
Iteration:  19380, Loss function: 3.822, Average Loss: 4.032, avg. samples / sec: 1039.37
Iteration:  19400, Loss function: 3.938, Average Loss: 4.032, avg. samples / sec: 1010.92
Iteration:  19420, Loss function: 3.929, Average Loss: 4.032, avg. samples / sec: 1013.39
Iteration:  19440, Loss function: 4.051, Average Loss: 4.031, avg. samples / sec: 937.95
Iteration:  19460, Loss function: 4.151, Average Loss: 4.031, avg. samples / sec: 954.88
Iteration:  19480, Loss function: 3.866, Average Loss: 4.030, avg. samples / sec: 985.77
Iteration:  19500, Loss function: 3.825, Average Loss: 4.029, avg. samples / sec: 1025.90
Iteration:  19520, Loss function: 4.227, Average Loss: 4.030, avg. samples / sec: 1000.19
Iteration:  19540, Loss function: 3.957, Average Loss: 4.031, avg. samples / sec: 1011.90
:::MLLOG {"namespace": "", "time_ms": 1639128843534, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1639128843535, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 20, "current_iter_num": 19545}}
Iteration:  19560, Loss function: 3.784, Average Loss: 4.029, avg. samples / sec: 1020.82
Iteration:  19580, Loss function: 3.936, Average Loss: 4.027, avg. samples / sec: 991.17
Iteration:  19600, Loss function: 4.138, Average Loss: 4.027, avg. samples / sec: 943.96
Iteration:  19620, Loss function: 4.022, Average Loss: 4.025, avg. samples / sec: 928.76
Iteration:  19640, Loss function: 3.955, Average Loss: 4.024, avg. samples / sec: 967.81
Iteration:  19660, Loss function: 3.924, Average Loss: 4.023, avg. samples / sec: 991.51
Iteration:  19680, Loss function: 4.306, Average Loss: 4.022, avg. samples / sec: 956.57
Iteration:  19700, Loss function: 4.145, Average Loss: 4.022, avg. samples / sec: 1043.62
Iteration:  19720, Loss function: 4.161, Average Loss: 4.022, avg. samples / sec: 1026.72
Iteration:  19740, Loss function: 4.041, Average Loss: 4.021, avg. samples / sec: 962.88
Iteration:  19760, Loss function: 4.063, Average Loss: 4.021, avg. samples / sec: 981.69
Iteration:  19780, Loss function: 4.056, Average Loss: 4.021, avg. samples / sec: 1026.68
Iteration:  19800, Loss function: 4.035, Average Loss: 4.020, avg. samples / sec: 981.17
Iteration:  19820, Loss function: 3.918, Average Loss: 4.020, avg. samples / sec: 1013.08
Iteration:  19840, Loss function: 4.079, Average Loss: 4.019, avg. samples / sec: 1023.48
Iteration:  19860, Loss function: 3.783, Average Loss: 4.018, avg. samples / sec: 922.94
Iteration:  19880, Loss function: 4.032, Average Loss: 4.017, avg. samples / sec: 996.99
Iteration:  19900, Loss function: 4.017, Average Loss: 4.015, avg. samples / sec: 1030.16
Iteration:  19920, Loss function: 4.051, Average Loss: 4.014, avg. samples / sec: 968.01
Iteration:  19940, Loss function: 3.899, Average Loss: 4.014, avg. samples / sec: 1058.26
Iteration:  19960, Loss function: 3.980, Average Loss: 4.014, avg. samples / sec: 979.33
Iteration:  19980, Loss function: 3.986, Average Loss: 4.014, avg. samples / sec: 1060.64
Iteration:  20000, Loss function: 3.771, Average Loss: 4.013, avg. samples / sec: 1011.31
Iteration:  20020, Loss function: 3.753, Average Loss: 4.011, avg. samples / sec: 1040.17
Iteration:  20040, Loss function: 4.015, Average Loss: 4.010, avg. samples / sec: 1095.69
Iteration:  20060, Loss function: 3.921, Average Loss: 4.007, avg. samples / sec: 1016.47
Iteration:  20080, Loss function: 3.885, Average Loss: 4.008, avg. samples / sec: 939.74
Iteration:  20100, Loss function: 4.095, Average Loss: 4.008, avg. samples / sec: 969.05
Iteration:  20120, Loss function: 4.009, Average Loss: 4.008, avg. samples / sec: 1053.12
Iteration:  20140, Loss function: 3.893, Average Loss: 4.007, avg. samples / sec: 1004.12
Iteration:  20160, Loss function: 3.837, Average Loss: 4.008, avg. samples / sec: 1053.52
Iteration:  20180, Loss function: 3.844, Average Loss: 4.008, avg. samples / sec: 917.25
Iteration:  20200, Loss function: 4.037, Average Loss: 4.009, avg. samples / sec: 996.19
Iteration:  20220, Loss function: 3.908, Average Loss: 4.009, avg. samples / sec: 1031.90
Iteration:  20240, Loss function: 3.942, Average Loss: 4.008, avg. samples / sec: 945.02
Iteration:  20260, Loss function: 3.962, Average Loss: 4.008, avg. samples / sec: 892.21
Iteration:  20280, Loss function: 3.673, Average Loss: 4.006, avg. samples / sec: 1002.27
Iteration:  20300, Loss function: 4.225, Average Loss: 4.006, avg. samples / sec: 973.63
Iteration:  20320, Loss function: 4.082, Average Loss: 4.006, avg. samples / sec: 1073.99
Iteration:  20340, Loss function: 4.035, Average Loss: 4.007, avg. samples / sec: 988.31
Iteration:  20360, Loss function: 3.843, Average Loss: 4.005, avg. samples / sec: 1046.16
Iteration:  20380, Loss function: 4.047, Average Loss: 4.006, avg. samples / sec: 942.06
Iteration:  20400, Loss function: 3.937, Average Loss: 4.007, avg. samples / sec: 1038.10
Iteration:  20420, Loss function: 3.840, Average Loss: 4.008, avg. samples / sec: 951.24
Iteration:  20440, Loss function: 4.028, Average Loss: 4.008, avg. samples / sec: 914.78
Iteration:  20460, Loss function: 4.076, Average Loss: 4.008, avg. samples / sec: 1032.99
Iteration:  20480, Loss function: 3.908, Average Loss: 4.008, avg. samples / sec: 997.20
Iteration:  20500, Loss function: 3.733, Average Loss: 4.007, avg. samples / sec: 990.09
Iteration:  20520, Loss function: 3.864, Average Loss: 4.008, avg. samples / sec: 983.35
Iteration:  20540, Loss function: 3.746, Average Loss: 4.007, avg. samples / sec: 969.46
Iteration:  20560, Loss function: 4.079, Average Loss: 4.007, avg. samples / sec: 1028.27
:::MLLOG {"namespace": "", "time_ms": 1639128961506, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1639128961508, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 21, "current_iter_num": 20573}}
Iteration:  20580, Loss function: 4.023, Average Loss: 4.008, avg. samples / sec: 997.36
Iteration:  20600, Loss function: 3.994, Average Loss: 4.006, avg. samples / sec: 1014.04
Iteration:  20620, Loss function: 4.019, Average Loss: 4.005, avg. samples / sec: 992.75
Iteration:  20640, Loss function: 4.131, Average Loss: 4.003, avg. samples / sec: 1028.67
Iteration:  20660, Loss function: 3.938, Average Loss: 4.002, avg. samples / sec: 1004.42
Iteration:  20680, Loss function: 4.031, Average Loss: 4.000, avg. samples / sec: 996.20
Iteration:  20700, Loss function: 3.666, Average Loss: 3.998, avg. samples / sec: 967.59
Iteration:  20720, Loss function: 3.925, Average Loss: 3.998, avg. samples / sec: 1020.09
Iteration:  20740, Loss function: 4.090, Average Loss: 3.999, avg. samples / sec: 1070.12
Iteration:  20760, Loss function: 4.014, Average Loss: 3.997, avg. samples / sec: 1012.05
Iteration:  20780, Loss function: 4.012, Average Loss: 3.997, avg. samples / sec: 965.39
Iteration:  20800, Loss function: 3.803, Average Loss: 3.997, avg. samples / sec: 1036.79
Iteration:  20820, Loss function: 4.121, Average Loss: 3.996, avg. samples / sec: 1022.81
Iteration:  20840, Loss function: 3.940, Average Loss: 3.997, avg. samples / sec: 1007.33
Iteration:  20860, Loss function: 4.229, Average Loss: 3.996, avg. samples / sec: 988.23
Iteration:  20880, Loss function: 4.097, Average Loss: 3.997, avg. samples / sec: 1015.14
Iteration:  20900, Loss function: 3.904, Average Loss: 3.997, avg. samples / sec: 1029.18
Iteration:  20920, Loss function: 4.226, Average Loss: 3.997, avg. samples / sec: 1056.73
Iteration:  20940, Loss function: 4.184, Average Loss: 3.997, avg. samples / sec: 953.39
Iteration:  20960, Loss function: 3.852, Average Loss: 3.997, avg. samples / sec: 969.69
Iteration:  20980, Loss function: 4.001, Average Loss: 3.995, avg. samples / sec: 992.03
Iteration:  21000, Loss function: 3.983, Average Loss: 3.995, avg. samples / sec: 980.82
Iteration:  21020, Loss function: 3.843, Average Loss: 3.993, avg. samples / sec: 987.24
Iteration:  21040, Loss function: 4.081, Average Loss: 3.993, avg. samples / sec: 977.84
Iteration:  21060, Loss function: 3.711, Average Loss: 3.991, avg. samples / sec: 931.19
Iteration:  21080, Loss function: 4.228, Average Loss: 3.991, avg. samples / sec: 984.20
Iteration:  21100, Loss function: 4.160, Average Loss: 3.991, avg. samples / sec: 933.64
Iteration:  21120, Loss function: 3.810, Average Loss: 3.991, avg. samples / sec: 940.81
Iteration:  21140, Loss function: 3.926, Average Loss: 3.990, avg. samples / sec: 998.02
Iteration:  21160, Loss function: 4.265, Average Loss: 3.989, avg. samples / sec: 958.17
Iteration:  21180, Loss function: 3.860, Average Loss: 3.988, avg. samples / sec: 991.00
Iteration:  21200, Loss function: 4.213, Average Loss: 3.987, avg. samples / sec: 942.39
Iteration:  21220, Loss function: 3.753, Average Loss: 3.985, avg. samples / sec: 983.69
Iteration:  21240, Loss function: 3.649, Average Loss: 3.985, avg. samples / sec: 944.72
Iteration:  21260, Loss function: 3.849, Average Loss: 3.985, avg. samples / sec: 989.53
Iteration:  21280, Loss function: 4.096, Average Loss: 3.985, avg. samples / sec: 1056.81
Iteration:  21300, Loss function: 3.719, Average Loss: 3.983, avg. samples / sec: 1028.98
Iteration:  21320, Loss function: 3.731, Average Loss: 3.983, avg. samples / sec: 983.26
Iteration:  21340, Loss function: 3.815, Average Loss: 3.983, avg. samples / sec: 971.67
Iteration:  21360, Loss function: 3.875, Average Loss: 3.982, avg. samples / sec: 922.07
Iteration:  21380, Loss function: 4.192, Average Loss: 3.983, avg. samples / sec: 989.84
Iteration:  21400, Loss function: 4.144, Average Loss: 3.984, avg. samples / sec: 940.69
Iteration:  21420, Loss function: 3.720, Average Loss: 3.983, avg. samples / sec: 972.38
Iteration:  21440, Loss function: 4.214, Average Loss: 3.986, avg. samples / sec: 921.83
Iteration:  21460, Loss function: 3.727, Average Loss: 3.985, avg. samples / sec: 930.61
Iteration:  21480, Loss function: 3.876, Average Loss: 3.984, avg. samples / sec: 1045.30
Iteration:  21500, Loss function: 3.851, Average Loss: 3.985, avg. samples / sec: 1027.58
Iteration:  21520, Loss function: 3.804, Average Loss: 3.985, avg. samples / sec: 1046.51
Iteration:  21540, Loss function: 4.012, Average Loss: 3.983, avg. samples / sec: 1017.61
Iteration:  21560, Loss function: 4.015, Average Loss: 3.984, avg. samples / sec: 979.41
Iteration:  21580, Loss function: 3.849, Average Loss: 3.984, avg. samples / sec: 1001.68
Iteration:  21600, Loss function: 3.964, Average Loss: 3.983, avg. samples / sec: 993.70
:::MLLOG {"namespace": "", "time_ms": 1639129080119, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1639129080121, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 22, "current_iter_num": 21602}}
Iteration:  21620, Loss function: 3.858, Average Loss: 3.983, avg. samples / sec: 1050.15
Iteration:  21640, Loss function: 3.778, Average Loss: 3.982, avg. samples / sec: 1015.77
Iteration:  21660, Loss function: 4.065, Average Loss: 3.982, avg. samples / sec: 911.03
Iteration:  21680, Loss function: 4.018, Average Loss: 3.981, avg. samples / sec: 1042.07
Iteration:  21700, Loss function: 4.241, Average Loss: 3.981, avg. samples / sec: 980.42
Iteration:  21720, Loss function: 3.863, Average Loss: 3.980, avg. samples / sec: 1010.70
Iteration:  21740, Loss function: 3.852, Average Loss: 3.978, avg. samples / sec: 1035.56
Iteration:  21760, Loss function: 3.806, Average Loss: 3.977, avg. samples / sec: 1003.12
Iteration:  21780, Loss function: 4.005, Average Loss: 3.975, avg. samples / sec: 1027.77
Iteration:  21800, Loss function: 3.921, Average Loss: 3.976, avg. samples / sec: 1004.26
Iteration:  21820, Loss function: 3.789, Average Loss: 3.975, avg. samples / sec: 966.68
Iteration:  21840, Loss function: 3.683, Average Loss: 3.975, avg. samples / sec: 966.97
Iteration:  21860, Loss function: 4.055, Average Loss: 3.974, avg. samples / sec: 1048.36
Iteration:  21880, Loss function: 4.276, Average Loss: 3.974, avg. samples / sec: 995.16
Iteration:  21900, Loss function: 3.924, Average Loss: 3.975, avg. samples / sec: 1083.63
Iteration:  21920, Loss function: 3.884, Average Loss: 3.974, avg. samples / sec: 1051.33
Iteration:  21940, Loss function: 4.034, Average Loss: 3.974, avg. samples / sec: 1045.02
Iteration:  21960, Loss function: 4.231, Average Loss: 3.973, avg. samples / sec: 1010.89
Iteration:  21980, Loss function: 3.924, Average Loss: 3.972, avg. samples / sec: 1038.96
Iteration:  22000, Loss function: 3.755, Average Loss: 3.971, avg. samples / sec: 1029.57
Iteration:  22020, Loss function: 3.928, Average Loss: 3.970, avg. samples / sec: 1054.75
Iteration:  22040, Loss function: 3.711, Average Loss: 3.970, avg. samples / sec: 1022.71
Iteration:  22060, Loss function: 3.991, Average Loss: 3.970, avg. samples / sec: 1000.86
Iteration:  22080, Loss function: 4.180, Average Loss: 3.970, avg. samples / sec: 967.51
Iteration:  22100, Loss function: 3.933, Average Loss: 3.969, avg. samples / sec: 953.00
Iteration:  22120, Loss function: 3.709, Average Loss: 3.969, avg. samples / sec: 906.22
Iteration:  22140, Loss function: 3.964, Average Loss: 3.968, avg. samples / sec: 999.02
Iteration:  22160, Loss function: 3.816, Average Loss: 3.969, avg. samples / sec: 1006.78
Iteration:  22180, Loss function: 3.712, Average Loss: 3.968, avg. samples / sec: 1016.84
Iteration:  22200, Loss function: 3.937, Average Loss: 3.967, avg. samples / sec: 1018.71
Iteration:  22220, Loss function: 4.027, Average Loss: 3.965, avg. samples / sec: 1043.48
Iteration:  22240, Loss function: 3.824, Average Loss: 3.963, avg. samples / sec: 985.42
Iteration:  22260, Loss function: 3.856, Average Loss: 3.964, avg. samples / sec: 1101.78
Iteration:  22280, Loss function: 4.077, Average Loss: 3.963, avg. samples / sec: 1038.71
Iteration:  22300, Loss function: 3.653, Average Loss: 3.961, avg. samples / sec: 1010.77
Iteration:  22320, Loss function: 4.087, Average Loss: 3.961, avg. samples / sec: 1020.25
Iteration:  22340, Loss function: 4.067, Average Loss: 3.961, avg. samples / sec: 959.24
Iteration:  22360, Loss function: 3.822, Average Loss: 3.960, avg. samples / sec: 1043.35
Iteration:  22380, Loss function: 3.954, Average Loss: 3.959, avg. samples / sec: 1025.81
Iteration:  22400, Loss function: 4.031, Average Loss: 3.960, avg. samples / sec: 1024.08
Iteration:  22420, Loss function: 3.885, Average Loss: 3.961, avg. samples / sec: 989.34
Iteration:  22440, Loss function: 4.021, Average Loss: 3.961, avg. samples / sec: 1058.06
Iteration:  22460, Loss function: 3.782, Average Loss: 3.961, avg. samples / sec: 941.92
Iteration:  22480, Loss function: 4.186, Average Loss: 3.961, avg. samples / sec: 1085.40
Iteration:  22500, Loss function: 4.090, Average Loss: 3.962, avg. samples / sec: 1032.41
Iteration:  22520, Loss function: 3.819, Average Loss: 3.961, avg. samples / sec: 982.67
Iteration:  22540, Loss function: 3.974, Average Loss: 3.960, avg. samples / sec: 1023.61
Iteration:  22560, Loss function: 3.761, Average Loss: 3.960, avg. samples / sec: 994.78
Iteration:  22580, Loss function: 3.798, Average Loss: 3.961, avg. samples / sec: 1033.76
Iteration:  22600, Loss function: 4.114, Average Loss: 3.962, avg. samples / sec: 1000.08
Iteration:  22620, Loss function: 3.965, Average Loss: 3.962, avg. samples / sec: 966.48
:::MLLOG {"namespace": "", "time_ms": 1639129196230, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1639129196232, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 23, "current_iter_num": 22631}}
Iteration:  22640, Loss function: 3.894, Average Loss: 3.961, avg. samples / sec: 998.45
Iteration:  22660, Loss function: 4.021, Average Loss: 3.961, avg. samples / sec: 963.51
Iteration:  22680, Loss function: 3.631, Average Loss: 3.961, avg. samples / sec: 1003.70
Iteration:  22700, Loss function: 3.893, Average Loss: 3.960, avg. samples / sec: 1060.61
Iteration:  22720, Loss function: 3.722, Average Loss: 3.959, avg. samples / sec: 996.06
Iteration:  22740, Loss function: 3.719, Average Loss: 3.959, avg. samples / sec: 1038.83
Iteration:  22760, Loss function: 4.066, Average Loss: 3.957, avg. samples / sec: 1007.23
Iteration:  22780, Loss function: 3.672, Average Loss: 3.957, avg. samples / sec: 1017.30
Iteration:  22800, Loss function: 4.153, Average Loss: 3.957, avg. samples / sec: 990.50
Iteration:  22820, Loss function: 3.714, Average Loss: 3.956, avg. samples / sec: 913.25
Iteration:  22840, Loss function: 4.047, Average Loss: 3.955, avg. samples / sec: 1052.27
Iteration:  22860, Loss function: 3.820, Average Loss: 3.955, avg. samples / sec: 1045.90
Iteration:  22880, Loss function: 3.881, Average Loss: 3.953, avg. samples / sec: 1036.90
Iteration:  22900, Loss function: 3.888, Average Loss: 3.952, avg. samples / sec: 1035.96
Iteration:  22920, Loss function: 3.634, Average Loss: 3.950, avg. samples / sec: 1045.82
Iteration:  22940, Loss function: 4.082, Average Loss: 3.951, avg. samples / sec: 995.81
Iteration:  22960, Loss function: 4.217, Average Loss: 3.951, avg. samples / sec: 944.01
Iteration:  22980, Loss function: 3.962, Average Loss: 3.950, avg. samples / sec: 956.20
Iteration:  23000, Loss function: 3.994, Average Loss: 3.949, avg. samples / sec: 1068.61
Iteration:  23020, Loss function: 4.042, Average Loss: 3.950, avg. samples / sec: 970.51
Iteration:  23040, Loss function: 3.808, Average Loss: 3.950, avg. samples / sec: 957.87
Iteration:  23060, Loss function: 3.879, Average Loss: 3.949, avg. samples / sec: 967.84
Iteration:  23080, Loss function: 4.098, Average Loss: 3.949, avg. samples / sec: 1063.64
Iteration:  23100, Loss function: 3.772, Average Loss: 3.947, avg. samples / sec: 1091.47
Iteration:  23120, Loss function: 4.128, Average Loss: 3.947, avg. samples / sec: 975.02
Iteration:  23140, Loss function: 3.790, Average Loss: 3.946, avg. samples / sec: 1081.55
Iteration:  23160, Loss function: 3.981, Average Loss: 3.946, avg. samples / sec: 976.39
Iteration:  23180, Loss function: 3.890, Average Loss: 3.945, avg. samples / sec: 1039.37
Iteration:  23200, Loss function: 4.100, Average Loss: 3.945, avg. samples / sec: 995.51
Iteration:  23220, Loss function: 3.912, Average Loss: 3.945, avg. samples / sec: 960.28
Iteration:  23240, Loss function: 3.942, Average Loss: 3.944, avg. samples / sec: 992.52
Iteration:  23260, Loss function: 4.309, Average Loss: 3.944, avg. samples / sec: 922.51
Iteration:  23280, Loss function: 4.010, Average Loss: 3.943, avg. samples / sec: 1011.44
Iteration:  23300, Loss function: 3.847, Average Loss: 3.942, avg. samples / sec: 1004.26
Iteration:  23320, Loss function: 3.966, Average Loss: 3.943, avg. samples / sec: 979.11
Iteration:  23340, Loss function: 4.047, Average Loss: 3.942, avg. samples / sec: 1022.75
Iteration:  23360, Loss function: 3.725, Average Loss: 3.942, avg. samples / sec: 1017.43
Iteration:  23380, Loss function: 4.091, Average Loss: 3.942, avg. samples / sec: 948.51
Iteration:  23400, Loss function: 3.764, Average Loss: 3.942, avg. samples / sec: 1014.39
Iteration:  23420, Loss function: 3.853, Average Loss: 3.941, avg. samples / sec: 949.19
Iteration:  23440, Loss function: 4.121, Average Loss: 3.941, avg. samples / sec: 958.93
Iteration:  23460, Loss function: 3.864, Average Loss: 3.940, avg. samples / sec: 1030.91
Iteration:  23480, Loss function: 3.942, Average Loss: 3.939, avg. samples / sec: 967.27
Iteration:  23500, Loss function: 3.913, Average Loss: 3.939, avg. samples / sec: 1012.94
Iteration:  23520, Loss function: 4.154, Average Loss: 3.938, avg. samples / sec: 1028.67
Iteration:  23540, Loss function: 4.057, Average Loss: 3.938, avg. samples / sec: 997.94
Iteration:  23560, Loss function: 3.738, Average Loss: 3.937, avg. samples / sec: 956.93
Iteration:  23580, Loss function: 3.713, Average Loss: 3.937, avg. samples / sec: 985.14
Iteration:  23600, Loss function: 3.694, Average Loss: 3.937, avg. samples / sec: 1071.14
Iteration:  23620, Loss function: 4.100, Average Loss: 3.938, avg. samples / sec: 1008.29
Iteration:  23640, Loss function: 3.897, Average Loss: 3.938, avg. samples / sec: 991.44
:::MLLOG {"namespace": "", "time_ms": 1639129313366, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1639129313369, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 24, "current_iter_num": 23659}}
Iteration:  23660, Loss function: 3.542, Average Loss: 3.938, avg. samples / sec: 1019.51
Iteration:  23680, Loss function: 3.771, Average Loss: 3.937, avg. samples / sec: 962.36
Iteration:  23700, Loss function: 3.837, Average Loss: 3.936, avg. samples / sec: 933.33
Iteration:  23720, Loss function: 4.192, Average Loss: 3.935, avg. samples / sec: 957.15
Iteration:  23740, Loss function: 3.965, Average Loss: 3.933, avg. samples / sec: 1031.53
Iteration:  23760, Loss function: 3.783, Average Loss: 3.933, avg. samples / sec: 955.42
Iteration:  23780, Loss function: 4.087, Average Loss: 3.932, avg. samples / sec: 960.44
Iteration:  23800, Loss function: 3.963, Average Loss: 3.931, avg. samples / sec: 990.02
Iteration:  23820, Loss function: 4.165, Average Loss: 3.930, avg. samples / sec: 987.30
Iteration:  23840, Loss function: 4.061, Average Loss: 3.930, avg. samples / sec: 882.62
Iteration:  23860, Loss function: 4.344, Average Loss: 3.930, avg. samples / sec: 1001.87
Iteration:  23880, Loss function: 4.058, Average Loss: 3.930, avg. samples / sec: 1046.77
Iteration:  23900, Loss function: 3.928, Average Loss: 3.927, avg. samples / sec: 1004.52
Iteration:  23920, Loss function: 3.992, Average Loss: 3.928, avg. samples / sec: 1054.69
Iteration:  23940, Loss function: 3.737, Average Loss: 3.927, avg. samples / sec: 958.02
Iteration:  23960, Loss function: 3.668, Average Loss: 3.928, avg. samples / sec: 942.39
Iteration:  23980, Loss function: 4.060, Average Loss: 3.928, avg. samples / sec: 1045.98
Iteration:  24000, Loss function: 4.006, Average Loss: 3.927, avg. samples / sec: 970.75
Iteration:  24020, Loss function: 4.030, Average Loss: 3.927, avg. samples / sec: 1044.84
Iteration:  24040, Loss function: 3.969, Average Loss: 3.925, avg. samples / sec: 1040.35
Iteration:  24060, Loss function: 4.017, Average Loss: 3.925, avg. samples / sec: 1009.02
Iteration:  24080, Loss function: 3.769, Average Loss: 3.924, avg. samples / sec: 895.03
Iteration:  24100, Loss function: 3.885, Average Loss: 3.923, avg. samples / sec: 1025.42
Iteration:  24120, Loss function: 4.020, Average Loss: 3.925, avg. samples / sec: 1018.21
Iteration:  24140, Loss function: 3.854, Average Loss: 3.925, avg. samples / sec: 1053.03
Iteration:  24160, Loss function: 4.094, Average Loss: 3.924, avg. samples / sec: 1076.71
Iteration:  24180, Loss function: 4.066, Average Loss: 3.924, avg. samples / sec: 1077.58
Iteration:  24200, Loss function: 3.640, Average Loss: 3.923, avg. samples / sec: 943.69
Iteration:  24220, Loss function: 3.924, Average Loss: 3.923, avg. samples / sec: 1036.59
Iteration:  24240, Loss function: 3.690, Average Loss: 3.922, avg. samples / sec: 1016.92
Iteration:  24260, Loss function: 4.102, Average Loss: 3.923, avg. samples / sec: 998.51
Iteration:  24280, Loss function: 3.766, Average Loss: 3.922, avg. samples / sec: 1043.83
Iteration:  24300, Loss function: 3.788, Average Loss: 3.921, avg. samples / sec: 974.63
Iteration:  24320, Loss function: 3.982, Average Loss: 3.919, avg. samples / sec: 1027.32
Iteration:  24340, Loss function: 3.799, Average Loss: 3.919, avg. samples / sec: 915.93
Iteration:  24360, Loss function: 3.806, Average Loss: 3.918, avg. samples / sec: 1052.69
Iteration:  24380, Loss function: 3.819, Average Loss: 3.919, avg. samples / sec: 996.45
Iteration:  24400, Loss function: 3.885, Average Loss: 3.920, avg. samples / sec: 1019.63
Iteration:  24420, Loss function: 3.743, Average Loss: 3.919, avg. samples / sec: 1009.60
Iteration:  24440, Loss function: 3.666, Average Loss: 3.919, avg. samples / sec: 1029.18
Iteration:  24460, Loss function: 4.041, Average Loss: 3.920, avg. samples / sec: 950.83
Iteration:  24480, Loss function: 4.068, Average Loss: 3.920, avg. samples / sec: 1013.58
Iteration:  24500, Loss function: 3.769, Average Loss: 3.919, avg. samples / sec: 976.26
Iteration:  24520, Loss function: 4.222, Average Loss: 3.921, avg. samples / sec: 968.72
Iteration:  24540, Loss function: 3.947, Average Loss: 3.921, avg. samples / sec: 994.41
Iteration:  24560, Loss function: 4.262, Average Loss: 3.923, avg. samples / sec: 991.67
Iteration:  24580, Loss function: 4.287, Average Loss: 3.924, avg. samples / sec: 978.74
Iteration:  24600, Loss function: 3.948, Average Loss: 3.924, avg. samples / sec: 1000.86
Iteration:  24620, Loss function: 3.992, Average Loss: 3.924, avg. samples / sec: 1009.28
Iteration:  24640, Loss function: 4.085, Average Loss: 3.924, avg. samples / sec: 988.39
Iteration:  24660, Loss function: 3.974, Average Loss: 3.924, avg. samples / sec: 1025.01
Iteration:  24680, Loss function: 3.923, Average Loss: 3.925, avg. samples / sec: 1031.01
:::MLLOG {"namespace": "", "time_ms": 1639129431097, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1639129431098, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 25, "current_iter_num": 24688}}
Iteration:  24700, Loss function: 3.826, Average Loss: 3.924, avg. samples / sec: 996.05
Iteration:  24720, Loss function: 3.800, Average Loss: 3.922, avg. samples / sec: 1016.94
Iteration:  24740, Loss function: 3.842, Average Loss: 3.921, avg. samples / sec: 1033.90
Iteration:  24760, Loss function: 3.701, Average Loss: 3.919, avg. samples / sec: 949.65
Iteration:  24780, Loss function: 3.953, Average Loss: 3.918, avg. samples / sec: 981.54
Iteration:  24800, Loss function: 3.864, Average Loss: 3.918, avg. samples / sec: 961.21
Iteration:  24820, Loss function: 3.628, Average Loss: 3.917, avg. samples / sec: 989.04
Iteration:  24840, Loss function: 3.728, Average Loss: 3.917, avg. samples / sec: 941.34
Iteration:  24860, Loss function: 3.961, Average Loss: 3.917, avg. samples / sec: 974.61
Iteration:  24880, Loss function: 3.705, Average Loss: 3.917, avg. samples / sec: 1037.82
Iteration:  24900, Loss function: 4.044, Average Loss: 3.916, avg. samples / sec: 1025.61
Iteration:  24920, Loss function: 3.882, Average Loss: 3.914, avg. samples / sec: 1055.21
Iteration:  24940, Loss function: 3.811, Average Loss: 3.913, avg. samples / sec: 1043.43
Iteration:  24960, Loss function: 3.773, Average Loss: 3.913, avg. samples / sec: 962.50
Iteration:  24980, Loss function: 3.639, Average Loss: 3.912, avg. samples / sec: 964.01
Iteration:  25000, Loss function: 3.805, Average Loss: 3.912, avg. samples / sec: 1006.42
Iteration:  25020, Loss function: 3.713, Average Loss: 3.911, avg. samples / sec: 964.82
Iteration:  25040, Loss function: 4.161, Average Loss: 3.911, avg. samples / sec: 1028.08
Iteration:  25060, Loss function: 3.995, Average Loss: 3.911, avg. samples / sec: 1051.86
Iteration:  25080, Loss function: 3.884, Average Loss: 3.910, avg. samples / sec: 915.10
Iteration:  25100, Loss function: 4.069, Average Loss: 3.911, avg. samples / sec: 913.62
Iteration:  25120, Loss function: 3.862, Average Loss: 3.912, avg. samples / sec: 942.45
Iteration:  25140, Loss function: 4.224, Average Loss: 3.913, avg. samples / sec: 1011.70
Iteration:  25160, Loss function: 3.693, Average Loss: 3.913, avg. samples / sec: 938.49
Iteration:  25180, Loss function: 4.209, Average Loss: 3.912, avg. samples / sec: 1006.34
Iteration:  25200, Loss function: 3.757, Average Loss: 3.911, avg. samples / sec: 1043.89
Iteration:  25220, Loss function: 3.740, Average Loss: 3.911, avg. samples / sec: 1049.36
Iteration:  25240, Loss function: 3.855, Average Loss: 3.910, avg. samples / sec: 1012.76
Iteration:  25260, Loss function: 3.707, Average Loss: 3.911, avg. samples / sec: 888.58
Iteration:  25280, Loss function: 4.023, Average Loss: 3.911, avg. samples / sec: 992.66
Iteration:  25300, Loss function: 3.811, Average Loss: 3.911, avg. samples / sec: 1034.47
Iteration:  25320, Loss function: 3.870, Average Loss: 3.910, avg. samples / sec: 998.83
Iteration:  25340, Loss function: 4.108, Average Loss: 3.909, avg. samples / sec: 993.03
Iteration:  25360, Loss function: 3.691, Average Loss: 3.907, avg. samples / sec: 984.65
Iteration:  25380, Loss function: 3.744, Average Loss: 3.908, avg. samples / sec: 988.62
Iteration:  25400, Loss function: 3.878, Average Loss: 3.906, avg. samples / sec: 940.08
Iteration:  25420, Loss function: 3.833, Average Loss: 3.906, avg. samples / sec: 932.19
Iteration:  25440, Loss function: 3.930, Average Loss: 3.905, avg. samples / sec: 991.52
Iteration:  25460, Loss function: 4.005, Average Loss: 3.905, avg. samples / sec: 977.03
Iteration:  25480, Loss function: 4.154, Average Loss: 3.903, avg. samples / sec: 939.16
Iteration:  25500, Loss function: 3.958, Average Loss: 3.905, avg. samples / sec: 992.36
Iteration:  25520, Loss function: 3.996, Average Loss: 3.904, avg. samples / sec: 998.14
Iteration:  25540, Loss function: 3.946, Average Loss: 3.904, avg. samples / sec: 974.53
Iteration:  25560, Loss function: 3.724, Average Loss: 3.903, avg. samples / sec: 1045.89
Iteration:  25580, Loss function: 3.726, Average Loss: 3.904, avg. samples / sec: 1035.16
Iteration:  25600, Loss function: 4.017, Average Loss: 3.905, avg. samples / sec: 1045.47
Iteration:  25620, Loss function: 3.877, Average Loss: 3.905, avg. samples / sec: 1016.75
Iteration:  25640, Loss function: 3.895, Average Loss: 3.905, avg. samples / sec: 990.83
Iteration:  25660, Loss function: 3.827, Average Loss: 3.906, avg. samples / sec: 1072.13
Iteration:  25680, Loss function: 4.038, Average Loss: 3.906, avg. samples / sec: 1020.29
Iteration:  25700, Loss function: 3.883, Average Loss: 3.907, avg. samples / sec: 981.76
:::MLLOG {"namespace": "", "time_ms": 1639129549523, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1639129549525, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 26, "current_iter_num": 25717}}
Iteration:  25720, Loss function: 3.788, Average Loss: 3.904, avg. samples / sec: 955.39
Iteration:  25740, Loss function: 3.844, Average Loss: 3.903, avg. samples / sec: 912.16
Iteration:  25760, Loss function: 4.058, Average Loss: 3.902, avg. samples / sec: 1003.83
Iteration:  25780, Loss function: 3.783, Average Loss: 3.901, avg. samples / sec: 968.20
Iteration:  25800, Loss function: 3.551, Average Loss: 3.899, avg. samples / sec: 1007.53
Iteration:  25820, Loss function: 3.925, Average Loss: 3.898, avg. samples / sec: 1030.04
Iteration:  25840, Loss function: 3.932, Average Loss: 3.898, avg. samples / sec: 999.66
Iteration:  25860, Loss function: 3.649, Average Loss: 3.896, avg. samples / sec: 1067.56
Iteration:  25880, Loss function: 3.972, Average Loss: 3.894, avg. samples / sec: 997.14
Iteration:  25900, Loss function: 3.514, Average Loss: 3.893, avg. samples / sec: 950.06
Iteration:  25920, Loss function: 3.516, Average Loss: 3.891, avg. samples / sec: 971.80
Iteration:  25940, Loss function: 3.841, Average Loss: 3.889, avg. samples / sec: 1012.08
Iteration:  25960, Loss function: 3.600, Average Loss: 3.888, avg. samples / sec: 1001.50
Iteration:  25980, Loss function: 3.809, Average Loss: 3.886, avg. samples / sec: 977.88
Iteration:  26000, Loss function: 3.480, Average Loss: 3.885, avg. samples / sec: 987.61
Iteration:  26020, Loss function: 4.045, Average Loss: 3.885, avg. samples / sec: 1014.47
Iteration:  26040, Loss function: 4.084, Average Loss: 3.884, avg. samples / sec: 997.50
Iteration:  26060, Loss function: 4.181, Average Loss: 3.883, avg. samples / sec: 1077.32
Iteration:  26080, Loss function: 3.823, Average Loss: 3.883, avg. samples / sec: 949.43
Iteration:  26100, Loss function: 3.912, Average Loss: 3.883, avg. samples / sec: 982.40
Iteration:  26120, Loss function: 4.053, Average Loss: 3.885, avg. samples / sec: 1008.80
Iteration:  26140, Loss function: 3.849, Average Loss: 3.885, avg. samples / sec: 1057.08
Iteration:  26160, Loss function: 3.755, Average Loss: 3.886, avg. samples / sec: 1022.07
Iteration:  26180, Loss function: 3.646, Average Loss: 3.886, avg. samples / sec: 1035.36
Iteration:  26200, Loss function: 3.766, Average Loss: 3.885, avg. samples / sec: 966.44
Iteration:  26220, Loss function: 3.696, Average Loss: 3.884, avg. samples / sec: 1059.17
Iteration:  26240, Loss function: 4.049, Average Loss: 3.885, avg. samples / sec: 1024.39
Iteration:  26260, Loss function: 3.967, Average Loss: 3.885, avg. samples / sec: 1018.10
Iteration:  26280, Loss function: 3.690, Average Loss: 3.885, avg. samples / sec: 974.39
Iteration:  26300, Loss function: 3.617, Average Loss: 3.885, avg. samples / sec: 1036.76
Iteration:  26320, Loss function: 3.952, Average Loss: 3.886, avg. samples / sec: 942.50
Iteration:  26340, Loss function: 3.819, Average Loss: 3.885, avg. samples / sec: 1027.13
Iteration:  26360, Loss function: 3.701, Average Loss: 3.886, avg. samples / sec: 1028.38
Iteration:  26380, Loss function: 3.942, Average Loss: 3.885, avg. samples / sec: 1044.21
Iteration:  26400, Loss function: 3.873, Average Loss: 3.885, avg. samples / sec: 949.95
Iteration:  26420, Loss function: 3.751, Average Loss: 3.883, avg. samples / sec: 1056.58
Iteration:  26440, Loss function: 3.915, Average Loss: 3.883, avg. samples / sec: 955.94
Iteration:  26460, Loss function: 3.856, Average Loss: 3.883, avg. samples / sec: 1064.13
Iteration:  26480, Loss function: 3.900, Average Loss: 3.884, avg. samples / sec: 988.59
Iteration:  26500, Loss function: 3.878, Average Loss: 3.885, avg. samples / sec: 1005.30
Iteration:  26520, Loss function: 3.928, Average Loss: 3.885, avg. samples / sec: 1022.75
Iteration:  26540, Loss function: 4.086, Average Loss: 3.887, avg. samples / sec: 1065.80
Iteration:  26560, Loss function: 4.022, Average Loss: 3.888, avg. samples / sec: 1033.46
Iteration:  26580, Loss function: 3.794, Average Loss: 3.887, avg. samples / sec: 1071.23
Iteration:  26600, Loss function: 4.043, Average Loss: 3.887, avg. samples / sec: 1023.64
Iteration:  26620, Loss function: 4.177, Average Loss: 3.887, avg. samples / sec: 1030.05
Iteration:  26640, Loss function: 3.990, Average Loss: 3.887, avg. samples / sec: 1043.54
Iteration:  26660, Loss function: 3.798, Average Loss: 3.887, avg. samples / sec: 998.34
Iteration:  26680, Loss function: 3.833, Average Loss: 3.886, avg. samples / sec: 942.97
Iteration:  26700, Loss function: 3.886, Average Loss: 3.886, avg. samples / sec: 994.05
Iteration:  26720, Loss function: 4.128, Average Loss: 3.885, avg. samples / sec: 1019.40
Iteration:  26740, Loss function: 3.734, Average Loss: 3.884, avg. samples / sec: 974.86
:::MLLOG {"namespace": "", "time_ms": 1639129666008, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1639129666009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 27, "current_iter_num": 26745}}
Iteration:  26760, Loss function: 3.788, Average Loss: 3.883, avg. samples / sec: 1040.86
Iteration:  26780, Loss function: 3.703, Average Loss: 3.882, avg. samples / sec: 1026.06
Iteration:  26800, Loss function: 3.720, Average Loss: 3.879, avg. samples / sec: 1011.87
Iteration:  26820, Loss function: 3.665, Average Loss: 3.877, avg. samples / sec: 1045.46
Iteration:  26840, Loss function: 3.897, Average Loss: 3.878, avg. samples / sec: 971.34
Iteration:  26860, Loss function: 3.831, Average Loss: 3.875, avg. samples / sec: 981.92
Iteration:  26880, Loss function: 3.705, Average Loss: 3.875, avg. samples / sec: 1028.85
Iteration:  26900, Loss function: 3.676, Average Loss: 3.874, avg. samples / sec: 1009.17
Iteration:  26920, Loss function: 4.012, Average Loss: 3.874, avg. samples / sec: 975.30
Iteration:  26940, Loss function: 3.853, Average Loss: 3.872, avg. samples / sec: 974.50
Iteration:  26960, Loss function: 4.086, Average Loss: 3.872, avg. samples / sec: 1038.17
Iteration:  26980, Loss function: 3.711, Average Loss: 3.872, avg. samples / sec: 1015.46
Iteration:  27000, Loss function: 3.699, Average Loss: 3.871, avg. samples / sec: 958.20
Iteration:  27020, Loss function: 3.905, Average Loss: 3.869, avg. samples / sec: 1000.61
Iteration:  27040, Loss function: 4.018, Average Loss: 3.870, avg. samples / sec: 999.15
Iteration:  27060, Loss function: 3.632, Average Loss: 3.869, avg. samples / sec: 1058.30
Iteration:  27080, Loss function: 3.797, Average Loss: 3.869, avg. samples / sec: 1045.00
Iteration:  27100, Loss function: 3.779, Average Loss: 3.868, avg. samples / sec: 984.48
Iteration:  27120, Loss function: 3.791, Average Loss: 3.869, avg. samples / sec: 975.44
Iteration:  27140, Loss function: 3.755, Average Loss: 3.869, avg. samples / sec: 1006.79
Iteration:  27160, Loss function: 3.986, Average Loss: 3.868, avg. samples / sec: 970.51
Iteration:  27180, Loss function: 3.924, Average Loss: 3.869, avg. samples / sec: 1057.73
Iteration:  27200, Loss function: 4.025, Average Loss: 3.869, avg. samples / sec: 1062.88
Iteration:  27220, Loss function: 3.995, Average Loss: 3.869, avg. samples / sec: 988.74
Iteration:  27240, Loss function: 3.858, Average Loss: 3.868, avg. samples / sec: 1079.42
Iteration:  27260, Loss function: 3.761, Average Loss: 3.868, avg. samples / sec: 1054.15
Iteration:  27280, Loss function: 4.002, Average Loss: 3.868, avg. samples / sec: 984.40
Iteration:  27300, Loss function: 3.494, Average Loss: 3.868, avg. samples / sec: 954.05
Iteration:  27320, Loss function: 3.690, Average Loss: 3.867, avg. samples / sec: 981.48
Iteration:  27340, Loss function: 3.995, Average Loss: 3.866, avg. samples / sec: 1031.70
Iteration:  27360, Loss function: 3.547, Average Loss: 3.864, avg. samples / sec: 1028.37
Iteration:  27380, Loss function: 3.820, Average Loss: 3.865, avg. samples / sec: 989.89
Iteration:  27400, Loss function: 3.591, Average Loss: 3.864, avg. samples / sec: 961.24
Iteration:  27420, Loss function: 3.827, Average Loss: 3.864, avg. samples / sec: 955.64
Iteration:  27440, Loss function: 4.141, Average Loss: 3.865, avg. samples / sec: 1001.31
Iteration:  27460, Loss function: 3.742, Average Loss: 3.864, avg. samples / sec: 1040.43
Iteration:  27480, Loss function: 4.142, Average Loss: 3.863, avg. samples / sec: 1028.20
Iteration:  27500, Loss function: 3.541, Average Loss: 3.864, avg. samples / sec: 1070.65
Iteration:  27520, Loss function: 4.152, Average Loss: 3.865, avg. samples / sec: 998.25
Iteration:  27540, Loss function: 3.738, Average Loss: 3.865, avg. samples / sec: 983.00
Iteration:  27560, Loss function: 3.955, Average Loss: 3.865, avg. samples / sec: 1032.49
Iteration:  27580, Loss function: 3.733, Average Loss: 3.864, avg. samples / sec: 1071.39
Iteration:  27600, Loss function: 3.779, Average Loss: 3.864, avg. samples / sec: 993.76
Iteration:  27620, Loss function: 3.761, Average Loss: 3.864, avg. samples / sec: 1004.87
Iteration:  27640, Loss function: 3.860, Average Loss: 3.864, avg. samples / sec: 966.99
Iteration:  27660, Loss function: 4.052, Average Loss: 3.864, avg. samples / sec: 977.75
Iteration:  27680, Loss function: 3.893, Average Loss: 3.865, avg. samples / sec: 950.86
Iteration:  27700, Loss function: 4.067, Average Loss: 3.866, avg. samples / sec: 987.84
Iteration:  27720, Loss function: 3.917, Average Loss: 3.866, avg. samples / sec: 1032.82
Iteration:  27740, Loss function: 4.074, Average Loss: 3.864, avg. samples / sec: 1046.25
Iteration:  27760, Loss function: 4.031, Average Loss: 3.865, avg. samples / sec: 997.33
:::MLLOG {"namespace": "", "time_ms": 1639129782501, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1639129782502, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 28, "current_iter_num": 27774}}
Iteration:  27780, Loss function: 3.968, Average Loss: 3.865, avg. samples / sec: 987.56
Iteration:  27800, Loss function: 4.018, Average Loss: 3.864, avg. samples / sec: 970.48
Iteration:  27820, Loss function: 3.879, Average Loss: 3.862, avg. samples / sec: 1024.04
Iteration:  27840, Loss function: 3.868, Average Loss: 3.861, avg. samples / sec: 1060.15
Iteration:  27860, Loss function: 3.583, Average Loss: 3.858, avg. samples / sec: 1045.10
Iteration:  27880, Loss function: 3.776, Average Loss: 3.858, avg. samples / sec: 1059.05
Iteration:  27900, Loss function: 3.918, Average Loss: 3.857, avg. samples / sec: 960.41
Iteration:  27920, Loss function: 3.747, Average Loss: 3.856, avg. samples / sec: 1041.63
Iteration:  27940, Loss function: 3.541, Average Loss: 3.855, avg. samples / sec: 1021.66
Iteration:  27960, Loss function: 3.977, Average Loss: 3.854, avg. samples / sec: 966.23
Iteration:  27980, Loss function: 3.649, Average Loss: 3.852, avg. samples / sec: 996.85
Iteration:  28000, Loss function: 3.652, Average Loss: 3.852, avg. samples / sec: 950.68
Iteration:  28020, Loss function: 4.141, Average Loss: 3.853, avg. samples / sec: 1015.51
Iteration:  28040, Loss function: 4.080, Average Loss: 3.852, avg. samples / sec: 985.93
Iteration:  28060, Loss function: 3.909, Average Loss: 3.853, avg. samples / sec: 927.69
Iteration:  28080, Loss function: 3.579, Average Loss: 3.852, avg. samples / sec: 1007.86
Iteration:  28100, Loss function: 3.836, Average Loss: 3.852, avg. samples / sec: 981.47
Iteration:  28120, Loss function: 3.635, Average Loss: 3.852, avg. samples / sec: 967.78
Iteration:  28140, Loss function: 3.760, Average Loss: 3.852, avg. samples / sec: 997.41
Iteration:  28160, Loss function: 3.723, Average Loss: 3.851, avg. samples / sec: 1018.16
Iteration:  28180, Loss function: 3.716, Average Loss: 3.851, avg. samples / sec: 1041.23
Iteration:  28200, Loss function: 3.505, Average Loss: 3.850, avg. samples / sec: 994.15
Iteration:  28220, Loss function: 3.838, Average Loss: 3.849, avg. samples / sec: 979.13
Iteration:  28240, Loss function: 3.823, Average Loss: 3.849, avg. samples / sec: 1032.09
Iteration:  28260, Loss function: 3.664, Average Loss: 3.848, avg. samples / sec: 1023.25
Iteration:  28280, Loss function: 4.124, Average Loss: 3.848, avg. samples / sec: 1046.75
Iteration:  28300, Loss function: 3.952, Average Loss: 3.849, avg. samples / sec: 1028.66
Iteration:  28320, Loss function: 3.811, Average Loss: 3.849, avg. samples / sec: 991.26
Iteration:  28340, Loss function: 3.477, Average Loss: 3.848, avg. samples / sec: 988.81
Iteration:  28360, Loss function: 3.882, Average Loss: 3.848, avg. samples / sec: 1002.24
Iteration:  28380, Loss function: 3.846, Average Loss: 3.848, avg. samples / sec: 1022.17
Iteration:  28400, Loss function: 3.890, Average Loss: 3.848, avg. samples / sec: 1061.22
Iteration:  28420, Loss function: 3.824, Average Loss: 3.847, avg. samples / sec: 1055.77
Iteration:  28440, Loss function: 3.963, Average Loss: 3.849, avg. samples / sec: 1028.04
Iteration:  28460, Loss function: 3.705, Average Loss: 3.849, avg. samples / sec: 949.19
Iteration:  28480, Loss function: 3.903, Average Loss: 3.847, avg. samples / sec: 948.08
Iteration:  28500, Loss function: 3.874, Average Loss: 3.848, avg. samples / sec: 1005.63
Iteration:  28520, Loss function: 3.462, Average Loss: 3.846, avg. samples / sec: 943.62
Iteration:  28540, Loss function: 3.789, Average Loss: 3.845, avg. samples / sec: 1014.14
Iteration:  28560, Loss function: 4.053, Average Loss: 3.845, avg. samples / sec: 1002.46
Iteration:  28580, Loss function: 3.460, Average Loss: 3.844, avg. samples / sec: 1003.73
Iteration:  28600, Loss function: 3.861, Average Loss: 3.843, avg. samples / sec: 1003.35
Iteration:  28620, Loss function: 3.950, Average Loss: 3.844, avg. samples / sec: 1028.08
Iteration:  28640, Loss function: 3.786, Average Loss: 3.844, avg. samples / sec: 1022.53
Iteration:  28660, Loss function: 3.925, Average Loss: 3.844, avg. samples / sec: 993.31
Iteration:  28680, Loss function: 3.933, Average Loss: 3.844, avg. samples / sec: 1028.23
Iteration:  28700, Loss function: 3.938, Average Loss: 3.845, avg. samples / sec: 1019.55
Iteration:  28720, Loss function: 3.801, Average Loss: 3.845, avg. samples / sec: 1028.19
Iteration:  28740, Loss function: 3.891, Average Loss: 3.845, avg. samples / sec: 1039.79
Iteration:  28760, Loss function: 3.748, Average Loss: 3.848, avg. samples / sec: 949.52
Iteration:  28780, Loss function: 3.971, Average Loss: 3.848, avg. samples / sec: 1013.04
Iteration:  28800, Loss function: 3.700, Average Loss: 3.848, avg. samples / sec: 1030.16
:::MLLOG {"namespace": "", "time_ms": 1639129899298, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1639129899299, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 29, "current_iter_num": 28803}}
Iteration:  28820, Loss function: 3.591, Average Loss: 3.849, avg. samples / sec: 952.40
Iteration:  28840, Loss function: 3.691, Average Loss: 3.849, avg. samples / sec: 975.81
Iteration:  28860, Loss function: 3.850, Average Loss: 3.847, avg. samples / sec: 954.30
Iteration:  28880, Loss function: 3.608, Average Loss: 3.846, avg. samples / sec: 1001.16
Iteration:  28900, Loss function: 3.751, Average Loss: 3.845, avg. samples / sec: 951.11
Iteration:  28920, Loss function: 3.684, Average Loss: 3.845, avg. samples / sec: 1014.13
Iteration:  28940, Loss function: 3.714, Average Loss: 3.844, avg. samples / sec: 1013.23
Iteration:  28960, Loss function: 3.729, Average Loss: 3.843, avg. samples / sec: 1056.17
Iteration:  28980, Loss function: 3.737, Average Loss: 3.842, avg. samples / sec: 1012.12
Iteration:  29000, Loss function: 3.437, Average Loss: 3.841, avg. samples / sec: 942.04
Iteration:  29020, Loss function: 4.061, Average Loss: 3.841, avg. samples / sec: 942.11
Iteration:  29040, Loss function: 3.669, Average Loss: 3.840, avg. samples / sec: 1088.79
Iteration:  29060, Loss function: 3.759, Average Loss: 3.841, avg. samples / sec: 984.99
Iteration:  29080, Loss function: 3.632, Average Loss: 3.841, avg. samples / sec: 941.77
Iteration:  29100, Loss function: 3.609, Average Loss: 3.840, avg. samples / sec: 1013.85
Iteration:  29120, Loss function: 3.785, Average Loss: 3.840, avg. samples / sec: 1024.72
Iteration:  29140, Loss function: 3.871, Average Loss: 3.841, avg. samples / sec: 946.40
Iteration:  29160, Loss function: 3.964, Average Loss: 3.841, avg. samples / sec: 1011.75
Iteration:  29180, Loss function: 3.846, Average Loss: 3.841, avg. samples / sec: 1021.65
Iteration:  29200, Loss function: 3.648, Average Loss: 3.840, avg. samples / sec: 933.03
Iteration:  29220, Loss function: 3.758, Average Loss: 3.841, avg. samples / sec: 1003.37
Iteration:  29240, Loss function: 3.746, Average Loss: 3.839, avg. samples / sec: 999.04
Iteration:  29260, Loss function: 3.918, Average Loss: 3.840, avg. samples / sec: 986.66
Iteration:  29280, Loss function: 3.728, Average Loss: 3.841, avg. samples / sec: 953.66
Iteration:  29300, Loss function: 3.919, Average Loss: 3.840, avg. samples / sec: 1023.48
Iteration:  29320, Loss function: 3.574, Average Loss: 3.839, avg. samples / sec: 1000.30
Iteration:  29340, Loss function: 3.487, Average Loss: 3.838, avg. samples / sec: 1016.18
Iteration:  29360, Loss function: 3.964, Average Loss: 3.839, avg. samples / sec: 1011.61
Iteration:  29380, Loss function: 4.022, Average Loss: 3.839, avg. samples / sec: 948.86
Iteration:  29400, Loss function: 3.720, Average Loss: 3.839, avg. samples / sec: 1032.45
Iteration:  29420, Loss function: 3.773, Average Loss: 3.838, avg. samples / sec: 1011.03
Iteration:  29440, Loss function: 3.824, Average Loss: 3.838, avg. samples / sec: 1037.82
Iteration:  29460, Loss function: 3.819, Average Loss: 3.837, avg. samples / sec: 1062.67
Iteration:  29480, Loss function: 3.812, Average Loss: 3.837, avg. samples / sec: 990.15
Iteration:  29500, Loss function: 3.950, Average Loss: 3.835, avg. samples / sec: 993.50
Iteration:  29520, Loss function: 3.882, Average Loss: 3.837, avg. samples / sec: 986.29
Iteration:  29540, Loss function: 3.764, Average Loss: 3.836, avg. samples / sec: 1045.85
Iteration:  29560, Loss function: 3.875, Average Loss: 3.835, avg. samples / sec: 1004.97
Iteration:  29580, Loss function: 3.598, Average Loss: 3.833, avg. samples / sec: 992.18
Iteration:  29600, Loss function: 3.916, Average Loss: 3.832, avg. samples / sec: 952.37
Iteration:  29620, Loss function: 3.910, Average Loss: 3.832, avg. samples / sec: 1030.66
Iteration:  29640, Loss function: 3.763, Average Loss: 3.831, avg. samples / sec: 979.24
Iteration:  29660, Loss function: 3.830, Average Loss: 3.830, avg. samples / sec: 961.08
Iteration:  29680, Loss function: 3.816, Average Loss: 3.830, avg. samples / sec: 966.77
Iteration:  29700, Loss function: 3.756, Average Loss: 3.831, avg. samples / sec: 991.92
Iteration:  29720, Loss function: 3.775, Average Loss: 3.830, avg. samples / sec: 992.76
Iteration:  29740, Loss function: 3.741, Average Loss: 3.831, avg. samples / sec: 996.59
Iteration:  29760, Loss function: 3.920, Average Loss: 3.831, avg. samples / sec: 953.13
Iteration:  29780, Loss function: 3.636, Average Loss: 3.830, avg. samples / sec: 1010.92
Iteration:  29800, Loss function: 3.637, Average Loss: 3.831, avg. samples / sec: 1020.17
Iteration:  29820, Loss function: 3.628, Average Loss: 3.831, avg. samples / sec: 957.45
:::MLLOG {"namespace": "", "time_ms": 1639130017355, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1639130017357, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 30, "current_iter_num": 29831}}
Iteration:  29840, Loss function: 3.738, Average Loss: 3.829, avg. samples / sec: 969.30
Iteration:  29860, Loss function: 3.692, Average Loss: 3.828, avg. samples / sec: 956.98
Iteration:  29880, Loss function: 3.749, Average Loss: 3.826, avg. samples / sec: 932.22
Iteration:  29900, Loss function: 3.702, Average Loss: 3.825, avg. samples / sec: 1060.94
Iteration:  29920, Loss function: 3.956, Average Loss: 3.823, avg. samples / sec: 990.99
Iteration:  29940, Loss function: 3.869, Average Loss: 3.822, avg. samples / sec: 1000.76
Iteration:  29960, Loss function: 3.789, Average Loss: 3.821, avg. samples / sec: 964.91
Iteration:  29980, Loss function: 3.654, Average Loss: 3.821, avg. samples / sec: 1051.62
Iteration:  30000, Loss function: 3.861, Average Loss: 3.820, avg. samples / sec: 1014.25
Iteration:  30020, Loss function: 3.867, Average Loss: 3.819, avg. samples / sec: 916.23
Iteration:  30040, Loss function: 3.966, Average Loss: 3.820, avg. samples / sec: 971.53
Iteration:  30060, Loss function: 3.418, Average Loss: 3.818, avg. samples / sec: 1060.44
Iteration:  30080, Loss function: 3.480, Average Loss: 3.817, avg. samples / sec: 1066.60
Iteration:  30100, Loss function: 3.900, Average Loss: 3.817, avg. samples / sec: 1016.05
Iteration:  30120, Loss function: 3.867, Average Loss: 3.817, avg. samples / sec: 993.17
Iteration:  30140, Loss function: 3.926, Average Loss: 3.817, avg. samples / sec: 969.26
Iteration:  30160, Loss function: 3.901, Average Loss: 3.818, avg. samples / sec: 1001.66
Iteration:  30180, Loss function: 3.705, Average Loss: 3.819, avg. samples / sec: 1038.31
Iteration:  30200, Loss function: 3.928, Average Loss: 3.819, avg. samples / sec: 998.73
Iteration:  30220, Loss function: 3.831, Average Loss: 3.819, avg. samples / sec: 1023.92
Iteration:  30240, Loss function: 3.676, Average Loss: 3.819, avg. samples / sec: 1072.01
Iteration:  30260, Loss function: 3.609, Average Loss: 3.819, avg. samples / sec: 1014.41
Iteration:  30280, Loss function: 4.028, Average Loss: 3.818, avg. samples / sec: 995.62
Iteration:  30300, Loss function: 3.971, Average Loss: 3.817, avg. samples / sec: 935.60
Iteration:  30320, Loss function: 3.793, Average Loss: 3.816, avg. samples / sec: 1049.69
Iteration:  30340, Loss function: 3.738, Average Loss: 3.815, avg. samples / sec: 980.10
Iteration:  30360, Loss function: 3.794, Average Loss: 3.816, avg. samples / sec: 971.18
Iteration:  30380, Loss function: 3.861, Average Loss: 3.816, avg. samples / sec: 1012.07
Iteration:  30400, Loss function: 3.837, Average Loss: 3.815, avg. samples / sec: 1011.41
Iteration:  30420, Loss function: 3.674, Average Loss: 3.815, avg. samples / sec: 995.29
Iteration:  30440, Loss function: 3.867, Average Loss: 3.815, avg. samples / sec: 964.23
Iteration:  30460, Loss function: 3.865, Average Loss: 3.816, avg. samples / sec: 942.88
Iteration:  30480, Loss function: 3.742, Average Loss: 3.817, avg. samples / sec: 1003.94
Iteration:  30500, Loss function: 3.967, Average Loss: 3.818, avg. samples / sec: 1098.18
Iteration:  30520, Loss function: 3.854, Average Loss: 3.818, avg. samples / sec: 968.11
Iteration:  30540, Loss function: 3.599, Average Loss: 3.818, avg. samples / sec: 906.27
Iteration:  30560, Loss function: 3.937, Average Loss: 3.819, avg. samples / sec: 988.46
Iteration:  30580, Loss function: 4.146, Average Loss: 3.819, avg. samples / sec: 1003.05
Iteration:  30600, Loss function: 3.521, Average Loss: 3.819, avg. samples / sec: 999.12
Iteration:  30620, Loss function: 3.651, Average Loss: 3.817, avg. samples / sec: 1002.26
Iteration:  30640, Loss function: 3.717, Average Loss: 3.817, avg. samples / sec: 1028.55
Iteration:  30660, Loss function: 3.612, Average Loss: 3.817, avg. samples / sec: 998.76
Iteration:  30680, Loss function: 3.692, Average Loss: 3.818, avg. samples / sec: 929.52
Iteration:  30700, Loss function: 3.777, Average Loss: 3.818, avg. samples / sec: 885.09
Iteration:  30720, Loss function: 3.747, Average Loss: 3.818, avg. samples / sec: 1024.26
Iteration:  30740, Loss function: 3.829, Average Loss: 3.818, avg. samples / sec: 991.20
Iteration:  30760, Loss function: 3.940, Average Loss: 3.819, avg. samples / sec: 973.42
Iteration:  30780, Loss function: 4.042, Average Loss: 3.818, avg. samples / sec: 1021.39
Iteration:  30800, Loss function: 3.778, Average Loss: 3.818, avg. samples / sec: 988.36
Iteration:  30820, Loss function: 3.892, Average Loss: 3.819, avg. samples / sec: 997.56
Iteration:  30840, Loss function: 3.633, Average Loss: 3.817, avg. samples / sec: 1087.57
:::MLLOG {"namespace": "", "time_ms": 1639130135161, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1639130135163, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 31, "current_iter_num": 30860}}
Iteration:  30860, Loss function: 3.608, Average Loss: 3.817, avg. samples / sec: 1053.48
Iteration:  30880, Loss function: 3.702, Average Loss: 3.816, avg. samples / sec: 1008.80
Iteration:  30900, Loss function: 3.756, Average Loss: 3.813, avg. samples / sec: 987.38
Iteration:  30920, Loss function: 3.769, Average Loss: 3.814, avg. samples / sec: 1061.89
Iteration:  30940, Loss function: 3.929, Average Loss: 3.813, avg. samples / sec: 1067.47
Iteration:  30960, Loss function: 3.981, Average Loss: 3.812, avg. samples / sec: 1017.80
Iteration:  30980, Loss function: 3.816, Average Loss: 3.811, avg. samples / sec: 1042.61
Iteration:  31000, Loss function: 3.794, Average Loss: 3.810, avg. samples / sec: 1002.35
Iteration:  31020, Loss function: 3.822, Average Loss: 3.810, avg. samples / sec: 1001.02
Iteration:  31040, Loss function: 3.852, Average Loss: 3.811, avg. samples / sec: 1003.65
Iteration:  31060, Loss function: 4.002, Average Loss: 3.811, avg. samples / sec: 965.48
Iteration:  31080, Loss function: 4.034, Average Loss: 3.810, avg. samples / sec: 1047.86
Iteration:  31100, Loss function: 3.658, Average Loss: 3.809, avg. samples / sec: 1031.45
Iteration:  31120, Loss function: 3.534, Average Loss: 3.808, avg. samples / sec: 1064.17
Iteration:  31140, Loss function: 3.960, Average Loss: 3.808, avg. samples / sec: 1006.50
Iteration:  31160, Loss function: 4.090, Average Loss: 3.808, avg. samples / sec: 1036.70
Iteration:  31180, Loss function: 3.798, Average Loss: 3.809, avg. samples / sec: 991.68
Iteration:  31200, Loss function: 3.702, Average Loss: 3.808, avg. samples / sec: 920.99
Iteration:  31220, Loss function: 3.727, Average Loss: 3.809, avg. samples / sec: 982.42
Iteration:  31240, Loss function: 3.747, Average Loss: 3.810, avg. samples / sec: 930.07
Iteration:  31260, Loss function: 3.826, Average Loss: 3.808, avg. samples / sec: 1009.01
Iteration:  31280, Loss function: 4.013, Average Loss: 3.809, avg. samples / sec: 1033.33
Iteration:  31300, Loss function: 3.848, Average Loss: 3.810, avg. samples / sec: 1020.52
Iteration:  31320, Loss function: 3.722, Average Loss: 3.809, avg. samples / sec: 1074.26
Iteration:  31340, Loss function: 3.628, Average Loss: 3.811, avg. samples / sec: 980.61
Iteration:  31360, Loss function: 3.777, Average Loss: 3.810, avg. samples / sec: 1027.45
Iteration:  31380, Loss function: 4.090, Average Loss: 3.809, avg. samples / sec: 1014.92
Iteration:  31400, Loss function: 4.191, Average Loss: 3.809, avg. samples / sec: 1046.38
Iteration:  31420, Loss function: 3.764, Average Loss: 3.808, avg. samples / sec: 999.78
Iteration:  31440, Loss function: 3.709, Average Loss: 3.806, avg. samples / sec: 1040.60
Iteration:  31460, Loss function: 3.802, Average Loss: 3.806, avg. samples / sec: 1042.73
Iteration:  31480, Loss function: 3.687, Average Loss: 3.806, avg. samples / sec: 1032.74
Iteration:  31500, Loss function: 3.953, Average Loss: 3.805, avg. samples / sec: 955.66
Iteration:  31520, Loss function: 3.694, Average Loss: 3.804, avg. samples / sec: 1023.62
Iteration:  31540, Loss function: 3.800, Average Loss: 3.804, avg. samples / sec: 1046.61
Iteration:  31560, Loss function: 3.810, Average Loss: 3.803, avg. samples / sec: 967.35
Iteration:  31580, Loss function: 3.712, Average Loss: 3.802, avg. samples / sec: 1000.32
Iteration:  31600, Loss function: 3.739, Average Loss: 3.803, avg. samples / sec: 1029.96
Iteration:  31620, Loss function: 3.791, Average Loss: 3.804, avg. samples / sec: 1002.36
Iteration:  31640, Loss function: 3.683, Average Loss: 3.805, avg. samples / sec: 960.59
Iteration:  31660, Loss function: 3.645, Average Loss: 3.805, avg. samples / sec: 1010.78
Iteration:  31680, Loss function: 3.727, Average Loss: 3.805, avg. samples / sec: 974.59
Iteration:  31700, Loss function: 3.607, Average Loss: 3.804, avg. samples / sec: 963.99
Iteration:  31720, Loss function: 3.686, Average Loss: 3.805, avg. samples / sec: 938.62
Iteration:  31740, Loss function: 3.607, Average Loss: 3.804, avg. samples / sec: 1001.70
Iteration:  31760, Loss function: 3.952, Average Loss: 3.803, avg. samples / sec: 1029.13
Iteration:  31780, Loss function: 3.575, Average Loss: 3.803, avg. samples / sec: 991.56
Iteration:  31800, Loss function: 3.822, Average Loss: 3.803, avg. samples / sec: 1010.35
Iteration:  31820, Loss function: 3.774, Average Loss: 3.803, avg. samples / sec: 978.80
Iteration:  31840, Loss function: 3.931, Average Loss: 3.803, avg. samples / sec: 1046.67
Iteration:  31860, Loss function: 3.880, Average Loss: 3.803, avg. samples / sec: 971.02
Iteration:  31880, Loss function: 4.038, Average Loss: 3.804, avg. samples / sec: 1027.24
:::MLLOG {"namespace": "", "time_ms": 1639130251647, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1639130251649, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 32, "current_iter_num": 31889}}
Iteration:  31900, Loss function: 3.367, Average Loss: 3.803, avg. samples / sec: 1052.89
Iteration:  31920, Loss function: 3.419, Average Loss: 3.802, avg. samples / sec: 1013.40
Iteration:  31940, Loss function: 4.069, Average Loss: 3.801, avg. samples / sec: 942.17
Iteration:  31960, Loss function: 3.897, Average Loss: 3.800, avg. samples / sec: 1014.05
Iteration:  31980, Loss function: 3.526, Average Loss: 3.799, avg. samples / sec: 1009.41
Iteration:  32000, Loss function: 3.696, Average Loss: 3.798, avg. samples / sec: 1073.02
Iteration:  32020, Loss function: 3.708, Average Loss: 3.796, avg. samples / sec: 1056.09
Iteration:  32040, Loss function: 4.009, Average Loss: 3.796, avg. samples / sec: 1031.28
Iteration:  32060, Loss function: 3.820, Average Loss: 3.794, avg. samples / sec: 1025.73
Iteration:  32080, Loss function: 3.710, Average Loss: 3.793, avg. samples / sec: 952.33
Iteration:  32100, Loss function: 3.893, Average Loss: 3.794, avg. samples / sec: 996.54
Iteration:  32120, Loss function: 3.867, Average Loss: 3.794, avg. samples / sec: 1071.65
Iteration:  32140, Loss function: 3.539, Average Loss: 3.792, avg. samples / sec: 999.56
Iteration:  32160, Loss function: 3.778, Average Loss: 3.792, avg. samples / sec: 1014.11
Iteration:  32180, Loss function: 3.602, Average Loss: 3.791, avg. samples / sec: 954.71
Iteration:  32200, Loss function: 3.613, Average Loss: 3.790, avg. samples / sec: 1014.46
Iteration:  32220, Loss function: 4.008, Average Loss: 3.790, avg. samples / sec: 1029.83
Iteration:  32240, Loss function: 3.572, Average Loss: 3.791, avg. samples / sec: 1024.84
Iteration:  32260, Loss function: 3.756, Average Loss: 3.790, avg. samples / sec: 1030.40
Iteration:  32280, Loss function: 3.466, Average Loss: 3.789, avg. samples / sec: 1020.56
Iteration:  32300, Loss function: 3.717, Average Loss: 3.788, avg. samples / sec: 961.89
Iteration:  32320, Loss function: 3.957, Average Loss: 3.788, avg. samples / sec: 1031.30
Iteration:  32340, Loss function: 3.790, Average Loss: 3.787, avg. samples / sec: 1001.83
Iteration:  32360, Loss function: 3.657, Average Loss: 3.787, avg. samples / sec: 1026.77
Iteration:  32380, Loss function: 3.694, Average Loss: 3.788, avg. samples / sec: 980.56
Iteration:  32400, Loss function: 3.416, Average Loss: 3.788, avg. samples / sec: 1039.39
Iteration:  32420, Loss function: 3.629, Average Loss: 3.788, avg. samples / sec: 1001.04
Iteration:  32440, Loss function: 3.554, Average Loss: 3.788, avg. samples / sec: 971.77
Iteration:  32460, Loss function: 3.734, Average Loss: 3.788, avg. samples / sec: 975.04
Iteration:  32480, Loss function: 3.589, Average Loss: 3.789, avg. samples / sec: 997.21
Iteration:  32500, Loss function: 3.536, Average Loss: 3.788, avg. samples / sec: 983.37
Iteration:  32520, Loss function: 4.055, Average Loss: 3.789, avg. samples / sec: 986.09
Iteration:  32540, Loss function: 3.923, Average Loss: 3.790, avg. samples / sec: 1046.03
Iteration:  32560, Loss function: 4.050, Average Loss: 3.790, avg. samples / sec: 1029.50
Iteration:  32580, Loss function: 3.724, Average Loss: 3.791, avg. samples / sec: 1030.69
Iteration:  32600, Loss function: 3.533, Average Loss: 3.789, avg. samples / sec: 1040.11
Iteration:  32620, Loss function: 3.706, Average Loss: 3.789, avg. samples / sec: 1028.87
Iteration:  32640, Loss function: 3.812, Average Loss: 3.790, avg. samples / sec: 1038.17
Iteration:  32660, Loss function: 4.012, Average Loss: 3.790, avg. samples / sec: 1042.36
Iteration:  32680, Loss function: 3.848, Average Loss: 3.791, avg. samples / sec: 1071.31
Iteration:  32700, Loss function: 3.821, Average Loss: 3.792, avg. samples / sec: 989.37
Iteration:  32720, Loss function: 4.028, Average Loss: 3.791, avg. samples / sec: 974.54
Iteration:  32740, Loss function: 4.017, Average Loss: 3.790, avg. samples / sec: 988.47
Iteration:  32760, Loss function: 3.608, Average Loss: 3.788, avg. samples / sec: 1026.48
Iteration:  32780, Loss function: 3.765, Average Loss: 3.788, avg. samples / sec: 932.86
Iteration:  32800, Loss function: 4.009, Average Loss: 3.789, avg. samples / sec: 972.57
Iteration:  32820, Loss function: 3.848, Average Loss: 3.788, avg. samples / sec: 1001.09
Iteration:  32840, Loss function: 4.128, Average Loss: 3.789, avg. samples / sec: 1060.01
Iteration:  32860, Loss function: 3.638, Average Loss: 3.789, avg. samples / sec: 1040.69
Iteration:  32880, Loss function: 3.815, Average Loss: 3.788, avg. samples / sec: 1024.83
Iteration:  32900, Loss function: 3.581, Average Loss: 3.788, avg. samples / sec: 1045.97
:::MLLOG {"namespace": "", "time_ms": 1639130367482, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1639130367484, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 33, "current_iter_num": 32917}}
Iteration:  32920, Loss function: 3.525, Average Loss: 3.786, avg. samples / sec: 1031.04
Iteration:  32940, Loss function: 3.862, Average Loss: 3.785, avg. samples / sec: 981.63
Iteration:  32960, Loss function: 3.968, Average Loss: 3.785, avg. samples / sec: 949.05
Iteration:  32980, Loss function: 3.813, Average Loss: 3.784, avg. samples / sec: 1004.83
Iteration:  33000, Loss function: 3.901, Average Loss: 3.783, avg. samples / sec: 1047.81
Iteration:  33020, Loss function: 3.739, Average Loss: 3.782, avg. samples / sec: 969.43
Iteration:  33040, Loss function: 3.863, Average Loss: 3.782, avg. samples / sec: 1012.65
Iteration:  33060, Loss function: 3.974, Average Loss: 3.782, avg. samples / sec: 1001.89
Iteration:  33080, Loss function: 3.705, Average Loss: 3.782, avg. samples / sec: 1002.97
Iteration:  33100, Loss function: 3.777, Average Loss: 3.781, avg. samples / sec: 1027.40
Iteration:  33120, Loss function: 3.899, Average Loss: 3.780, avg. samples / sec: 975.06
Iteration:  33140, Loss function: 3.571, Average Loss: 3.780, avg. samples / sec: 934.27
Iteration:  33160, Loss function: 3.808, Average Loss: 3.779, avg. samples / sec: 919.88
Iteration:  33180, Loss function: 3.535, Average Loss: 3.779, avg. samples / sec: 1028.19
Iteration:  33200, Loss function: 3.423, Average Loss: 3.778, avg. samples / sec: 989.03
Iteration:  33220, Loss function: 3.882, Average Loss: 3.778, avg. samples / sec: 985.32
Iteration:  33240, Loss function: 3.781, Average Loss: 3.776, avg. samples / sec: 931.83
Iteration:  33260, Loss function: 3.952, Average Loss: 3.776, avg. samples / sec: 994.60
Iteration:  33280, Loss function: 3.882, Average Loss: 3.775, avg. samples / sec: 1038.54
Iteration:  33300, Loss function: 3.620, Average Loss: 3.774, avg. samples / sec: 1008.49
Iteration:  33320, Loss function: 3.673, Average Loss: 3.773, avg. samples / sec: 1041.17
Iteration:  33340, Loss function: 3.788, Average Loss: 3.772, avg. samples / sec: 1085.06
Iteration:  33360, Loss function: 3.544, Average Loss: 3.772, avg. samples / sec: 987.04
Iteration:  33380, Loss function: 3.623, Average Loss: 3.772, avg. samples / sec: 1004.07
Iteration:  33400, Loss function: 4.141, Average Loss: 3.771, avg. samples / sec: 969.19
Iteration:  33420, Loss function: 3.988, Average Loss: 3.771, avg. samples / sec: 1070.09
Iteration:  33440, Loss function: 3.509, Average Loss: 3.771, avg. samples / sec: 964.78
Iteration:  33460, Loss function: 3.617, Average Loss: 3.771, avg. samples / sec: 977.83
Iteration:  33480, Loss function: 3.845, Average Loss: 3.772, avg. samples / sec: 1025.75
Iteration:  33500, Loss function: 3.750, Average Loss: 3.773, avg. samples / sec: 989.29
Iteration:  33520, Loss function: 4.010, Average Loss: 3.773, avg. samples / sec: 942.85
Iteration:  33540, Loss function: 3.904, Average Loss: 3.773, avg. samples / sec: 1031.68
Iteration:  33560, Loss function: 3.914, Average Loss: 3.773, avg. samples / sec: 981.11
Iteration:  33580, Loss function: 3.902, Average Loss: 3.772, avg. samples / sec: 1005.63
Iteration:  33600, Loss function: 3.784, Average Loss: 3.773, avg. samples / sec: 1048.84
Iteration:  33620, Loss function: 3.509, Average Loss: 3.772, avg. samples / sec: 1043.51
Iteration:  33640, Loss function: 3.578, Average Loss: 3.770, avg. samples / sec: 1011.54
Iteration:  33660, Loss function: 4.109, Average Loss: 3.772, avg. samples / sec: 1033.14
Iteration:  33680, Loss function: 3.767, Average Loss: 3.773, avg. samples / sec: 1010.21
Iteration:  33700, Loss function: 3.882, Average Loss: 3.772, avg. samples / sec: 1024.85
Iteration:  33720, Loss function: 3.472, Average Loss: 3.772, avg. samples / sec: 952.65
Iteration:  33740, Loss function: 3.584, Average Loss: 3.772, avg. samples / sec: 961.76
Iteration:  33760, Loss function: 3.678, Average Loss: 3.772, avg. samples / sec: 955.69
Iteration:  33780, Loss function: 3.809, Average Loss: 3.772, avg. samples / sec: 1019.10
Iteration:  33800, Loss function: 3.895, Average Loss: 3.773, avg. samples / sec: 974.22
Iteration:  33820, Loss function: 3.774, Average Loss: 3.773, avg. samples / sec: 955.22
Iteration:  33840, Loss function: 3.693, Average Loss: 3.775, avg. samples / sec: 978.58
Iteration:  33860, Loss function: 3.411, Average Loss: 3.774, avg. samples / sec: 1019.31
Iteration:  33880, Loss function: 3.589, Average Loss: 3.774, avg. samples / sec: 1007.33
Iteration:  33900, Loss function: 3.894, Average Loss: 3.774, avg. samples / sec: 1028.40
Iteration:  33920, Loss function: 3.562, Average Loss: 3.773, avg. samples / sec: 1039.91
Iteration:  33940, Loss function: 3.754, Average Loss: 3.773, avg. samples / sec: 1007.21
:::MLLOG {"namespace": "", "time_ms": 1639130485125, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1639130485126, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 34, "current_iter_num": 33946}}
Iteration:  33960, Loss function: 3.523, Average Loss: 3.773, avg. samples / sec: 985.14
Iteration:  33980, Loss function: 3.626, Average Loss: 3.772, avg. samples / sec: 977.56
Iteration:  34000, Loss function: 3.710, Average Loss: 3.770, avg. samples / sec: 1004.85
Iteration:  34020, Loss function: 3.469, Average Loss: 3.769, avg. samples / sec: 1020.58
Iteration:  34040, Loss function: 3.783, Average Loss: 3.768, avg. samples / sec: 1039.08
Iteration:  34060, Loss function: 3.730, Average Loss: 3.768, avg. samples / sec: 1030.57
Iteration:  34080, Loss function: 4.011, Average Loss: 3.767, avg. samples / sec: 1104.60
Iteration:  34100, Loss function: 3.644, Average Loss: 3.767, avg. samples / sec: 969.31
Iteration:  34120, Loss function: 3.565, Average Loss: 3.767, avg. samples / sec: 975.25
Iteration:  34140, Loss function: 3.842, Average Loss: 3.766, avg. samples / sec: 964.75
Iteration:  34160, Loss function: 3.644, Average Loss: 3.766, avg. samples / sec: 1058.50
Iteration:  34180, Loss function: 4.009, Average Loss: 3.766, avg. samples / sec: 1056.85
Iteration:  34200, Loss function: 3.684, Average Loss: 3.767, avg. samples / sec: 1015.14
Iteration:  34220, Loss function: 3.892, Average Loss: 3.766, avg. samples / sec: 1013.86
Iteration:  34240, Loss function: 3.585, Average Loss: 3.767, avg. samples / sec: 964.93
Iteration:  34260, Loss function: 3.844, Average Loss: 3.765, avg. samples / sec: 1024.27
Iteration:  34280, Loss function: 3.748, Average Loss: 3.765, avg. samples / sec: 971.89
Iteration:  34300, Loss function: 3.743, Average Loss: 3.765, avg. samples / sec: 1002.56
Iteration:  34320, Loss function: 3.577, Average Loss: 3.765, avg. samples / sec: 1018.78
Iteration:  34340, Loss function: 3.805, Average Loss: 3.764, avg. samples / sec: 981.33
Iteration:  34360, Loss function: 3.782, Average Loss: 3.764, avg. samples / sec: 1048.36
Iteration:  34380, Loss function: 3.889, Average Loss: 3.765, avg. samples / sec: 1008.74
Iteration:  34400, Loss function: 3.895, Average Loss: 3.764, avg. samples / sec: 1010.45
Iteration:  34420, Loss function: 3.652, Average Loss: 3.764, avg. samples / sec: 1041.73
Iteration:  34440, Loss function: 4.035, Average Loss: 3.764, avg. samples / sec: 996.05
Iteration:  34460, Loss function: 3.640, Average Loss: 3.765, avg. samples / sec: 1071.18
Iteration:  34480, Loss function: 3.896, Average Loss: 3.765, avg. samples / sec: 1004.42
Iteration:  34500, Loss function: 3.947, Average Loss: 3.766, avg. samples / sec: 1007.30
Iteration:  34520, Loss function: 3.626, Average Loss: 3.766, avg. samples / sec: 988.01
Iteration:  34540, Loss function: 3.646, Average Loss: 3.765, avg. samples / sec: 1050.18
Iteration:  34560, Loss function: 3.588, Average Loss: 3.765, avg. samples / sec: 1076.48
Iteration:  34580, Loss function: 3.760, Average Loss: 3.765, avg. samples / sec: 1037.64
Iteration:  34600, Loss function: 3.799, Average Loss: 3.766, avg. samples / sec: 983.95
Iteration:  34620, Loss function: 4.031, Average Loss: 3.766, avg. samples / sec: 1021.67
Iteration:  34640, Loss function: 3.618, Average Loss: 3.765, avg. samples / sec: 1036.89
Iteration:  34660, Loss function: 3.858, Average Loss: 3.766, avg. samples / sec: 1023.73
Iteration:  34680, Loss function: 3.875, Average Loss: 3.768, avg. samples / sec: 993.07
Iteration:  34700, Loss function: 4.048, Average Loss: 3.768, avg. samples / sec: 1041.58
Iteration:  34720, Loss function: 3.568, Average Loss: 3.767, avg. samples / sec: 1013.79
Iteration:  34740, Loss function: 4.014, Average Loss: 3.765, avg. samples / sec: 1034.43
Iteration:  34760, Loss function: 3.636, Average Loss: 3.764, avg. samples / sec: 974.23
Iteration:  34780, Loss function: 3.774, Average Loss: 3.764, avg. samples / sec: 1023.61
Iteration:  34800, Loss function: 3.887, Average Loss: 3.764, avg. samples / sec: 1057.51
Iteration:  34820, Loss function: 3.901, Average Loss: 3.763, avg. samples / sec: 985.99
Iteration:  34840, Loss function: 3.888, Average Loss: 3.763, avg. samples / sec: 1005.54
Iteration:  34860, Loss function: 3.736, Average Loss: 3.762, avg. samples / sec: 999.03
Iteration:  34880, Loss function: 4.164, Average Loss: 3.761, avg. samples / sec: 929.41
Iteration:  34900, Loss function: 3.973, Average Loss: 3.762, avg. samples / sec: 986.84
Iteration:  34920, Loss function: 3.527, Average Loss: 3.762, avg. samples / sec: 962.38
Iteration:  34940, Loss function: 3.492, Average Loss: 3.762, avg. samples / sec: 857.90
Iteration:  34960, Loss function: 3.899, Average Loss: 3.762, avg. samples / sec: 972.01
:::MLLOG {"namespace": "", "time_ms": 1639130601689, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1639130601691, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 35, "current_iter_num": 34975}}
Iteration:  34980, Loss function: 3.657, Average Loss: 3.762, avg. samples / sec: 954.96
Iteration:  35000, Loss function: 3.856, Average Loss: 3.761, avg. samples / sec: 1045.91
Iteration:  35020, Loss function: 4.049, Average Loss: 3.760, avg. samples / sec: 1089.07
Iteration:  35040, Loss function: 4.010, Average Loss: 3.761, avg. samples / sec: 943.07
Iteration:  35060, Loss function: 3.568, Average Loss: 3.761, avg. samples / sec: 1005.97
Iteration:  35080, Loss function: 3.497, Average Loss: 3.760, avg. samples / sec: 1038.89
Iteration:  35100, Loss function: 3.754, Average Loss: 3.758, avg. samples / sec: 996.08
Iteration:  35120, Loss function: 4.075, Average Loss: 3.758, avg. samples / sec: 1018.18
Iteration:  35140, Loss function: 3.568, Average Loss: 3.757, avg. samples / sec: 982.95
Iteration:  35160, Loss function: 3.867, Average Loss: 3.757, avg. samples / sec: 1047.99
Iteration:  35180, Loss function: 3.776, Average Loss: 3.756, avg. samples / sec: 998.20
Iteration:  35200, Loss function: 3.702, Average Loss: 3.755, avg. samples / sec: 976.77
Iteration:  35220, Loss function: 3.870, Average Loss: 3.755, avg. samples / sec: 1022.66
Iteration:  35240, Loss function: 3.574, Average Loss: 3.755, avg. samples / sec: 936.36
Iteration:  35260, Loss function: 3.726, Average Loss: 3.754, avg. samples / sec: 1013.61
Iteration:  35280, Loss function: 3.705, Average Loss: 3.753, avg. samples / sec: 1014.56
Iteration:  35300, Loss function: 3.615, Average Loss: 3.752, avg. samples / sec: 1029.51
Iteration:  35320, Loss function: 3.865, Average Loss: 3.752, avg. samples / sec: 1056.59
Iteration:  35340, Loss function: 3.962, Average Loss: 3.752, avg. samples / sec: 965.64
Iteration:  35360, Loss function: 3.814, Average Loss: 3.752, avg. samples / sec: 963.37
Iteration:  35380, Loss function: 3.687, Average Loss: 3.753, avg. samples / sec: 1010.50
Iteration:  35400, Loss function: 3.894, Average Loss: 3.753, avg. samples / sec: 1104.96
Iteration:  35420, Loss function: 3.886, Average Loss: 3.754, avg. samples / sec: 1012.00
Iteration:  35440, Loss function: 3.772, Average Loss: 3.755, avg. samples / sec: 1047.56
Iteration:  35460, Loss function: 3.749, Average Loss: 3.755, avg. samples / sec: 1017.04
Iteration:  35480, Loss function: 3.570, Average Loss: 3.755, avg. samples / sec: 948.10
Iteration:  35500, Loss function: 3.764, Average Loss: 3.755, avg. samples / sec: 930.05
Iteration:  35520, Loss function: 3.775, Average Loss: 3.755, avg. samples / sec: 965.16
Iteration:  35540, Loss function: 3.461, Average Loss: 3.754, avg. samples / sec: 1000.68
Iteration:  35560, Loss function: 3.816, Average Loss: 3.753, avg. samples / sec: 1033.45
Iteration:  35580, Loss function: 3.624, Average Loss: 3.753, avg. samples / sec: 1027.03
Iteration:  35600, Loss function: 3.681, Average Loss: 3.752, avg. samples / sec: 1047.52
Iteration:  35620, Loss function: 3.811, Average Loss: 3.751, avg. samples / sec: 992.91
Iteration:  35640, Loss function: 3.798, Average Loss: 3.751, avg. samples / sec: 989.56
Iteration:  35660, Loss function: 3.671, Average Loss: 3.751, avg. samples / sec: 991.66
Iteration:  35680, Loss function: 3.606, Average Loss: 3.753, avg. samples / sec: 986.11
Iteration:  35700, Loss function: 3.933, Average Loss: 3.753, avg. samples / sec: 1033.44
Iteration:  35720, Loss function: 3.836, Average Loss: 3.753, avg. samples / sec: 973.34
Iteration:  35740, Loss function: 3.749, Average Loss: 3.752, avg. samples / sec: 957.48
Iteration:  35760, Loss function: 3.690, Average Loss: 3.751, avg. samples / sec: 1063.37
Iteration:  35780, Loss function: 3.414, Average Loss: 3.751, avg. samples / sec: 1009.26
Iteration:  35800, Loss function: 3.999, Average Loss: 3.751, avg. samples / sec: 976.48
Iteration:  35820, Loss function: 4.188, Average Loss: 3.752, avg. samples / sec: 976.56
Iteration:  35840, Loss function: 3.582, Average Loss: 3.751, avg. samples / sec: 991.76
Iteration:  35860, Loss function: 3.741, Average Loss: 3.750, avg. samples / sec: 1014.00
Iteration:  35880, Loss function: 3.914, Average Loss: 3.751, avg. samples / sec: 1066.51
Iteration:  35900, Loss function: 3.556, Average Loss: 3.751, avg. samples / sec: 1007.45
Iteration:  35920, Loss function: 3.878, Average Loss: 3.751, avg. samples / sec: 1001.49
Iteration:  35940, Loss function: 3.717, Average Loss: 3.750, avg. samples / sec: 952.58
Iteration:  35960, Loss function: 3.700, Average Loss: 3.751, avg. samples / sec: 906.36
Iteration:  35980, Loss function: 3.550, Average Loss: 3.751, avg. samples / sec: 967.71
Iteration:  36000, Loss function: 3.757, Average Loss: 3.751, avg. samples / sec: 1005.56
:::MLLOG {"namespace": "", "time_ms": 1639130718775, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1639130718777, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 36, "current_iter_num": 36003}}
Iteration:  36020, Loss function: 3.744, Average Loss: 3.749, avg. samples / sec: 903.66
Iteration:  36040, Loss function: 3.413, Average Loss: 3.748, avg. samples / sec: 990.40
Iteration:  36060, Loss function: 3.501, Average Loss: 3.747, avg. samples / sec: 1007.60
Iteration:  36080, Loss function: 3.847, Average Loss: 3.745, avg. samples / sec: 1036.11
Iteration:  36100, Loss function: 3.886, Average Loss: 3.745, avg. samples / sec: 1056.22
Iteration:  36120, Loss function: 3.619, Average Loss: 3.745, avg. samples / sec: 1034.90
Iteration:  36140, Loss function: 3.775, Average Loss: 3.744, avg. samples / sec: 1008.55
Iteration:  36160, Loss function: 3.928, Average Loss: 3.743, avg. samples / sec: 1042.22
Iteration:  36180, Loss function: 3.678, Average Loss: 3.742, avg. samples / sec: 1055.41
Iteration:  36200, Loss function: 3.637, Average Loss: 3.742, avg. samples / sec: 1004.77
Iteration:  36220, Loss function: 3.942, Average Loss: 3.743, avg. samples / sec: 945.03
Iteration:  36240, Loss function: 3.553, Average Loss: 3.741, avg. samples / sec: 1023.64
Iteration:  36260, Loss function: 3.769, Average Loss: 3.740, avg. samples / sec: 1036.21
Iteration:  36280, Loss function: 3.626, Average Loss: 3.740, avg. samples / sec: 935.36
Iteration:  36300, Loss function: 3.600, Average Loss: 3.739, avg. samples / sec: 986.45
Iteration:  36320, Loss function: 3.947, Average Loss: 3.738, avg. samples / sec: 959.15
Iteration:  36340, Loss function: 3.576, Average Loss: 3.738, avg. samples / sec: 987.46
Iteration:  36360, Loss function: 3.541, Average Loss: 3.737, avg. samples / sec: 1017.19
Iteration:  36380, Loss function: 4.089, Average Loss: 3.738, avg. samples / sec: 931.58
Iteration:  36400, Loss function: 3.572, Average Loss: 3.738, avg. samples / sec: 949.35
Iteration:  36420, Loss function: 3.653, Average Loss: 3.739, avg. samples / sec: 977.07
Iteration:  36440, Loss function: 3.616, Average Loss: 3.740, avg. samples / sec: 943.90
Iteration:  36460, Loss function: 3.664, Average Loss: 3.740, avg. samples / sec: 1035.69
Iteration:  36480, Loss function: 3.923, Average Loss: 3.741, avg. samples / sec: 1031.35
Iteration:  36500, Loss function: 3.942, Average Loss: 3.741, avg. samples / sec: 955.93
Iteration:  36520, Loss function: 3.806, Average Loss: 3.741, avg. samples / sec: 1028.57
Iteration:  36540, Loss function: 3.747, Average Loss: 3.741, avg. samples / sec: 948.29
Iteration:  36560, Loss function: 3.509, Average Loss: 3.741, avg. samples / sec: 1016.55
Iteration:  36580, Loss function: 3.871, Average Loss: 3.741, avg. samples / sec: 1021.07
Iteration:  36600, Loss function: 3.730, Average Loss: 3.740, avg. samples / sec: 1013.30
Iteration:  36620, Loss function: 3.490, Average Loss: 3.740, avg. samples / sec: 967.71
Iteration:  36640, Loss function: 3.574, Average Loss: 3.739, avg. samples / sec: 1009.60
Iteration:  36660, Loss function: 3.654, Average Loss: 3.740, avg. samples / sec: 1017.38
Iteration:  36680, Loss function: 3.671, Average Loss: 3.738, avg. samples / sec: 1054.09
Iteration:  36700, Loss function: 4.213, Average Loss: 3.739, avg. samples / sec: 1007.31
Iteration:  36720, Loss function: 3.641, Average Loss: 3.738, avg. samples / sec: 997.07
Iteration:  36740, Loss function: 3.570, Average Loss: 3.737, avg. samples / sec: 982.50
Iteration:  36760, Loss function: 3.527, Average Loss: 3.738, avg. samples / sec: 1045.45
Iteration:  36780, Loss function: 4.114, Average Loss: 3.739, avg. samples / sec: 1072.00
Iteration:  36800, Loss function: 3.870, Average Loss: 3.740, avg. samples / sec: 928.45
Iteration:  36820, Loss function: 3.778, Average Loss: 3.739, avg. samples / sec: 957.91
Iteration:  36840, Loss function: 3.615, Average Loss: 3.739, avg. samples / sec: 1053.96
Iteration:  36860, Loss function: 3.541, Average Loss: 3.738, avg. samples / sec: 1062.96
Iteration:  36880, Loss function: 3.643, Average Loss: 3.738, avg. samples / sec: 1072.72
Iteration:  36900, Loss function: 3.673, Average Loss: 3.737, avg. samples / sec: 972.38
Iteration:  36920, Loss function: 3.479, Average Loss: 3.737, avg. samples / sec: 1023.64
Iteration:  36940, Loss function: 3.910, Average Loss: 3.737, avg. samples / sec: 1021.99
Iteration:  36960, Loss function: 3.656, Average Loss: 3.736, avg. samples / sec: 967.51
Iteration:  36980, Loss function: 3.712, Average Loss: 3.737, avg. samples / sec: 1004.42
Iteration:  37000, Loss function: 3.503, Average Loss: 3.736, avg. samples / sec: 1041.98
Iteration:  37020, Loss function: 3.321, Average Loss: 3.734, avg. samples / sec: 973.93
:::MLLOG {"namespace": "", "time_ms": 1639130835980, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1639130835982, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 37, "current_iter_num": 37032}}
Iteration:  37040, Loss function: 3.607, Average Loss: 3.734, avg. samples / sec: 1016.16
Iteration:  37060, Loss function: 3.252, Average Loss: 3.733, avg. samples / sec: 1001.00
Iteration:  37080, Loss function: 3.882, Average Loss: 3.731, avg. samples / sec: 1095.58
Iteration:  37100, Loss function: 3.835, Average Loss: 3.732, avg. samples / sec: 985.14
Iteration:  37120, Loss function: 3.675, Average Loss: 3.731, avg. samples / sec: 933.12
Iteration:  37140, Loss function: 3.851, Average Loss: 3.732, avg. samples / sec: 945.79
Iteration:  37160, Loss function: 3.695, Average Loss: 3.731, avg. samples / sec: 1050.52
Iteration:  37180, Loss function: 3.681, Average Loss: 3.730, avg. samples / sec: 965.58
Iteration:  37200, Loss function: 3.654, Average Loss: 3.729, avg. samples / sec: 985.54
Iteration:  37220, Loss function: 3.813, Average Loss: 3.730, avg. samples / sec: 970.59
Iteration:  37240, Loss function: 3.771, Average Loss: 3.729, avg. samples / sec: 1050.52
Iteration:  37260, Loss function: 3.578, Average Loss: 3.727, avg. samples / sec: 1021.61
Iteration:  37280, Loss function: 3.726, Average Loss: 3.728, avg. samples / sec: 969.35
Iteration:  37300, Loss function: 3.913, Average Loss: 3.728, avg. samples / sec: 1022.19
Iteration:  37320, Loss function: 3.977, Average Loss: 3.729, avg. samples / sec: 965.15
Iteration:  37340, Loss function: 3.591, Average Loss: 3.729, avg. samples / sec: 994.59
Iteration:  37360, Loss function: 3.439, Average Loss: 3.728, avg. samples / sec: 1019.69
Iteration:  37380, Loss function: 3.995, Average Loss: 3.727, avg. samples / sec: 1014.90
Iteration:  37400, Loss function: 3.785, Average Loss: 3.727, avg. samples / sec: 1021.84
Iteration:  37420, Loss function: 3.890, Average Loss: 3.725, avg. samples / sec: 1027.33
Iteration:  37440, Loss function: 3.878, Average Loss: 3.724, avg. samples / sec: 990.93
Iteration:  37460, Loss function: 3.472, Average Loss: 3.725, avg. samples / sec: 930.49
Iteration:  37480, Loss function: 3.422, Average Loss: 3.725, avg. samples / sec: 899.09
Iteration:  37500, Loss function: 3.605, Average Loss: 3.726, avg. samples / sec: 950.13
Iteration:  37520, Loss function: 3.945, Average Loss: 3.726, avg. samples / sec: 996.61
Iteration:  37540, Loss function: 3.696, Average Loss: 3.726, avg. samples / sec: 964.97
Iteration:  37560, Loss function: 3.516, Average Loss: 3.726, avg. samples / sec: 970.16
Iteration:  37580, Loss function: 3.661, Average Loss: 3.726, avg. samples / sec: 1034.83
Iteration:  37600, Loss function: 3.883, Average Loss: 3.725, avg. samples / sec: 1094.32
Iteration:  37620, Loss function: 3.505, Average Loss: 3.725, avg. samples / sec: 1040.73
Iteration:  37640, Loss function: 3.653, Average Loss: 3.727, avg. samples / sec: 956.87
Iteration:  37660, Loss function: 3.792, Average Loss: 3.726, avg. samples / sec: 965.35
Iteration:  37680, Loss function: 3.766, Average Loss: 3.727, avg. samples / sec: 943.87
Iteration:  37700, Loss function: 3.710, Average Loss: 3.725, avg. samples / sec: 984.68
Iteration:  37720, Loss function: 3.659, Average Loss: 3.725, avg. samples / sec: 925.62
Iteration:  37740, Loss function: 3.649, Average Loss: 3.725, avg. samples / sec: 934.55
Iteration:  37760, Loss function: 3.566, Average Loss: 3.725, avg. samples / sec: 1003.75
Iteration:  37780, Loss function: 3.798, Average Loss: 3.725, avg. samples / sec: 1035.10
Iteration:  37800, Loss function: 4.039, Average Loss: 3.725, avg. samples / sec: 984.82
Iteration:  37820, Loss function: 3.608, Average Loss: 3.725, avg. samples / sec: 1016.40
Iteration:  37840, Loss function: 3.578, Average Loss: 3.726, avg. samples / sec: 992.75
Iteration:  37860, Loss function: 3.817, Average Loss: 3.727, avg. samples / sec: 1023.93
Iteration:  37880, Loss function: 4.084, Average Loss: 3.729, avg. samples / sec: 1040.90
Iteration:  37900, Loss function: 3.871, Average Loss: 3.730, avg. samples / sec: 1019.10
Iteration:  37920, Loss function: 3.699, Average Loss: 3.730, avg. samples / sec: 1016.96
Iteration:  37940, Loss function: 3.762, Average Loss: 3.729, avg. samples / sec: 1102.30
Iteration:  37960, Loss function: 3.557, Average Loss: 3.727, avg. samples / sec: 1021.98
Iteration:  37980, Loss function: 3.669, Average Loss: 3.727, avg. samples / sec: 891.09
Iteration:  38000, Loss function: 3.682, Average Loss: 3.726, avg. samples / sec: 1021.20
Iteration:  38020, Loss function: 3.830, Average Loss: 3.727, avg. samples / sec: 1032.12
Iteration:  38040, Loss function: 3.623, Average Loss: 3.726, avg. samples / sec: 965.39
Iteration:  38060, Loss function: 3.708, Average Loss: 3.726, avg. samples / sec: 1007.29
:::MLLOG {"namespace": "", "time_ms": 1639130954022, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1639130954024, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 38, "current_iter_num": 38061}}
Iteration:  38080, Loss function: 3.785, Average Loss: 3.724, avg. samples / sec: 1024.07
Iteration:  38100, Loss function: 3.446, Average Loss: 3.722, avg. samples / sec: 999.69
Iteration:  38120, Loss function: 3.835, Average Loss: 3.722, avg. samples / sec: 1049.21
Iteration:  38140, Loss function: 3.616, Average Loss: 3.721, avg. samples / sec: 1005.10
Iteration:  38160, Loss function: 3.526, Average Loss: 3.719, avg. samples / sec: 1042.94
Iteration:  38180, Loss function: 3.749, Average Loss: 3.720, avg. samples / sec: 940.69
Iteration:  38200, Loss function: 3.386, Average Loss: 3.719, avg. samples / sec: 981.20
Iteration:  38220, Loss function: 3.567, Average Loss: 3.717, avg. samples / sec: 1005.81
Iteration:  38240, Loss function: 3.589, Average Loss: 3.716, avg. samples / sec: 984.68
Iteration:  38260, Loss function: 3.599, Average Loss: 3.714, avg. samples / sec: 961.48
Iteration:  38280, Loss function: 3.557, Average Loss: 3.714, avg. samples / sec: 978.60
Iteration:  38300, Loss function: 3.543, Average Loss: 3.713, avg. samples / sec: 949.81
Iteration:  38320, Loss function: 3.670, Average Loss: 3.714, avg. samples / sec: 978.15
Iteration:  38340, Loss function: 3.623, Average Loss: 3.713, avg. samples / sec: 1006.29
Iteration:  38360, Loss function: 3.800, Average Loss: 3.714, avg. samples / sec: 983.89
Iteration:  38380, Loss function: 4.004, Average Loss: 3.714, avg. samples / sec: 1050.68
Iteration:  38400, Loss function: 3.767, Average Loss: 3.715, avg. samples / sec: 980.71
Iteration:  38420, Loss function: 3.612, Average Loss: 3.715, avg. samples / sec: 1021.13
Iteration:  38440, Loss function: 3.994, Average Loss: 3.716, avg. samples / sec: 1028.94
Iteration:  38460, Loss function: 3.561, Average Loss: 3.714, avg. samples / sec: 1005.13
Iteration:  38480, Loss function: 3.528, Average Loss: 3.715, avg. samples / sec: 1005.30
Iteration:  38500, Loss function: 3.772, Average Loss: 3.715, avg. samples / sec: 981.64
Iteration:  38520, Loss function: 3.829, Average Loss: 3.717, avg. samples / sec: 1037.30
Iteration:  38540, Loss function: 3.487, Average Loss: 3.716, avg. samples / sec: 1065.20
Iteration:  38560, Loss function: 3.845, Average Loss: 3.717, avg. samples / sec: 959.72
Iteration:  38580, Loss function: 3.540, Average Loss: 3.716, avg. samples / sec: 927.77
Iteration:  38600, Loss function: 3.957, Average Loss: 3.717, avg. samples / sec: 1030.45
Iteration:  38620, Loss function: 3.709, Average Loss: 3.717, avg. samples / sec: 1040.37
Iteration:  38640, Loss function: 3.554, Average Loss: 3.715, avg. samples / sec: 998.58
Iteration:  38660, Loss function: 3.718, Average Loss: 3.716, avg. samples / sec: 1019.78
Iteration:  38680, Loss function: 3.761, Average Loss: 3.716, avg. samples / sec: 1031.52
Iteration:  38700, Loss function: 3.895, Average Loss: 3.716, avg. samples / sec: 1042.76
Iteration:  38720, Loss function: 3.699, Average Loss: 3.715, avg. samples / sec: 1020.15
Iteration:  38740, Loss function: 3.707, Average Loss: 3.715, avg. samples / sec: 1042.61
Iteration:  38760, Loss function: 3.812, Average Loss: 3.716, avg. samples / sec: 979.98
Iteration:  38780, Loss function: 3.836, Average Loss: 3.715, avg. samples / sec: 1050.39
Iteration:  38800, Loss function: 3.576, Average Loss: 3.715, avg. samples / sec: 1029.79
Iteration:  38820, Loss function: 3.569, Average Loss: 3.716, avg. samples / sec: 998.88
Iteration:  38840, Loss function: 3.673, Average Loss: 3.717, avg. samples / sec: 1029.83
Iteration:  38860, Loss function: 3.650, Average Loss: 3.716, avg. samples / sec: 1003.36
Iteration:  38880, Loss function: 3.668, Average Loss: 3.714, avg. samples / sec: 1024.29
Iteration:  38900, Loss function: 3.563, Average Loss: 3.715, avg. samples / sec: 970.50
Iteration:  38920, Loss function: 3.652, Average Loss: 3.715, avg. samples / sec: 1028.73
Iteration:  38940, Loss function: 3.801, Average Loss: 3.716, avg. samples / sec: 1010.60
Iteration:  38960, Loss function: 3.478, Average Loss: 3.715, avg. samples / sec: 985.12
Iteration:  38980, Loss function: 3.544, Average Loss: 3.715, avg. samples / sec: 1069.05
Iteration:  39000, Loss function: 3.778, Average Loss: 3.715, avg. samples / sec: 1015.43
Iteration:  39020, Loss function: 3.474, Average Loss: 3.714, avg. samples / sec: 994.74
Iteration:  39040, Loss function: 4.112, Average Loss: 3.716, avg. samples / sec: 1095.63
Iteration:  39060, Loss function: 3.712, Average Loss: 3.717, avg. samples / sec: 966.23
Iteration:  39080, Loss function: 3.649, Average Loss: 3.718, avg. samples / sec: 1032.13
:::MLLOG {"namespace": "", "time_ms": 1639131070321, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1639131070324, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 39, "current_iter_num": 39089}}
Iteration:  39100, Loss function: 3.655, Average Loss: 3.716, avg. samples / sec: 984.07
Iteration:  39120, Loss function: 3.238, Average Loss: 3.715, avg. samples / sec: 996.28
Iteration:  39140, Loss function: 3.457, Average Loss: 3.713, avg. samples / sec: 1073.11
Iteration:  39160, Loss function: 3.592, Average Loss: 3.712, avg. samples / sec: 1055.92
Iteration:  39180, Loss function: 3.634, Average Loss: 3.711, avg. samples / sec: 1031.19
Iteration:  39200, Loss function: 3.630, Average Loss: 3.710, avg. samples / sec: 1023.12
Iteration:  39220, Loss function: 3.477, Average Loss: 3.709, avg. samples / sec: 1056.98
Iteration:  39240, Loss function: 3.593, Average Loss: 3.708, avg. samples / sec: 1008.14
Iteration:  39260, Loss function: 3.700, Average Loss: 3.707, avg. samples / sec: 1059.55
Iteration:  39280, Loss function: 3.817, Average Loss: 3.707, avg. samples / sec: 1033.85
Iteration:  39300, Loss function: 3.634, Average Loss: 3.706, avg. samples / sec: 1059.10
Iteration:  39320, Loss function: 3.844, Average Loss: 3.706, avg. samples / sec: 1041.67
Iteration:  39340, Loss function: 3.591, Average Loss: 3.705, avg. samples / sec: 1001.17
Iteration:  39360, Loss function: 3.588, Average Loss: 3.704, avg. samples / sec: 1028.11
Iteration:  39380, Loss function: 3.714, Average Loss: 3.703, avg. samples / sec: 1006.20
Iteration:  39400, Loss function: 3.623, Average Loss: 3.703, avg. samples / sec: 1000.50
Iteration:  39420, Loss function: 3.837, Average Loss: 3.703, avg. samples / sec: 1036.30
Iteration:  39440, Loss function: 3.607, Average Loss: 3.703, avg. samples / sec: 978.01
Iteration:  39460, Loss function: 3.681, Average Loss: 3.701, avg. samples / sec: 1005.75
Iteration:  39480, Loss function: 3.771, Average Loss: 3.702, avg. samples / sec: 1010.59
Iteration:  39500, Loss function: 3.531, Average Loss: 3.702, avg. samples / sec: 948.96
Iteration:  39520, Loss function: 3.662, Average Loss: 3.702, avg. samples / sec: 1006.52
Iteration:  39540, Loss function: 3.641, Average Loss: 3.701, avg. samples / sec: 1030.76
Iteration:  39560, Loss function: 3.641, Average Loss: 3.701, avg. samples / sec: 998.39
Iteration:  39580, Loss function: 3.509, Average Loss: 3.701, avg. samples / sec: 1016.72
Iteration:  39600, Loss function: 3.532, Average Loss: 3.700, avg. samples / sec: 976.17
Iteration:  39620, Loss function: 3.904, Average Loss: 3.699, avg. samples / sec: 956.56
Iteration:  39640, Loss function: 3.446, Average Loss: 3.699, avg. samples / sec: 982.79
Iteration:  39660, Loss function: 3.678, Average Loss: 3.700, avg. samples / sec: 921.94
Iteration:  39680, Loss function: 3.532, Average Loss: 3.701, avg. samples / sec: 1018.36
Iteration:  39700, Loss function: 3.606, Average Loss: 3.701, avg. samples / sec: 965.64
Iteration:  39720, Loss function: 3.802, Average Loss: 3.702, avg. samples / sec: 1013.78
Iteration:  39740, Loss function: 3.791, Average Loss: 3.701, avg. samples / sec: 999.62
Iteration:  39760, Loss function: 3.837, Average Loss: 3.701, avg. samples / sec: 966.95
Iteration:  39780, Loss function: 3.810, Average Loss: 3.702, avg. samples / sec: 946.19
Iteration:  39800, Loss function: 3.722, Average Loss: 3.702, avg. samples / sec: 988.02
Iteration:  39820, Loss function: 3.694, Average Loss: 3.703, avg. samples / sec: 1030.66
Iteration:  39840, Loss function: 3.552, Average Loss: 3.703, avg. samples / sec: 972.51
Iteration:  39860, Loss function: 3.546, Average Loss: 3.706, avg. samples / sec: 1026.35
Iteration:  39880, Loss function: 3.849, Average Loss: 3.705, avg. samples / sec: 921.25
Iteration:  39900, Loss function: 3.582, Average Loss: 3.705, avg. samples / sec: 975.86
Iteration:  39920, Loss function: 3.824, Average Loss: 3.705, avg. samples / sec: 1010.68
Iteration:  39940, Loss function: 3.932, Average Loss: 3.705, avg. samples / sec: 1007.03
Iteration:  39960, Loss function: 3.676, Average Loss: 3.704, avg. samples / sec: 1014.47
Iteration:  39980, Loss function: 3.678, Average Loss: 3.704, avg. samples / sec: 1059.35
Iteration:  40000, Loss function: 3.627, Average Loss: 3.704, avg. samples / sec: 981.20
Iteration:  40020, Loss function: 3.655, Average Loss: 3.704, avg. samples / sec: 972.24
Iteration:  40040, Loss function: 3.606, Average Loss: 3.704, avg. samples / sec: 1000.83
Iteration:  40060, Loss function: 3.798, Average Loss: 3.703, avg. samples / sec: 1043.74
Iteration:  40080, Loss function: 3.657, Average Loss: 3.704, avg. samples / sec: 1013.04
Iteration:  40100, Loss function: 3.609, Average Loss: 3.704, avg. samples / sec: 1086.34
:::MLLOG {"namespace": "", "time_ms": 1639131187018, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1639131187019, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 40, "current_iter_num": 40118}}
Iteration:  40120, Loss function: 3.751, Average Loss: 3.705, avg. samples / sec: 997.13
Iteration:  40140, Loss function: 3.672, Average Loss: 3.705, avg. samples / sec: 1023.87
Iteration:  40160, Loss function: 3.859, Average Loss: 3.705, avg. samples / sec: 987.78
Iteration:  40180, Loss function: 3.698, Average Loss: 3.706, avg. samples / sec: 975.14
Iteration:  40200, Loss function: 3.832, Average Loss: 3.705, avg. samples / sec: 977.78
Iteration:  40220, Loss function: 3.664, Average Loss: 3.704, avg. samples / sec: 1010.24
Iteration:  40240, Loss function: 3.639, Average Loss: 3.704, avg. samples / sec: 1098.07
Iteration:  40260, Loss function: 3.541, Average Loss: 3.703, avg. samples / sec: 967.28
Iteration:  40280, Loss function: 3.743, Average Loss: 3.703, avg. samples / sec: 982.73
Iteration:  40300, Loss function: 3.436, Average Loss: 3.702, avg. samples / sec: 960.04
Iteration:  40320, Loss function: 3.304, Average Loss: 3.701, avg. samples / sec: 964.39
Iteration:  40340, Loss function: 3.693, Average Loss: 3.701, avg. samples / sec: 1001.59
Iteration:  40360, Loss function: 3.584, Average Loss: 3.699, avg. samples / sec: 970.33
Iteration:  40380, Loss function: 3.598, Average Loss: 3.698, avg. samples / sec: 987.43
Iteration:  40400, Loss function: 3.732, Average Loss: 3.699, avg. samples / sec: 1004.76
Iteration:  40420, Loss function: 3.643, Average Loss: 3.698, avg. samples / sec: 968.86
Iteration:  40440, Loss function: 3.702, Average Loss: 3.697, avg. samples / sec: 994.49
Iteration:  40460, Loss function: 3.919, Average Loss: 3.698, avg. samples / sec: 1013.50
Iteration:  40480, Loss function: 3.548, Average Loss: 3.698, avg. samples / sec: 965.43
Iteration:  40500, Loss function: 3.752, Average Loss: 3.697, avg. samples / sec: 1068.90
Iteration:  40520, Loss function: 3.930, Average Loss: 3.696, avg. samples / sec: 1031.66
Iteration:  40540, Loss function: 3.763, Average Loss: 3.696, avg. samples / sec: 988.32
Iteration:  40560, Loss function: 3.387, Average Loss: 3.696, avg. samples / sec: 1027.49
Iteration:  40580, Loss function: 3.601, Average Loss: 3.695, avg. samples / sec: 957.02
Iteration:  40600, Loss function: 3.507, Average Loss: 3.695, avg. samples / sec: 1005.21
Iteration:  40620, Loss function: 3.762, Average Loss: 3.695, avg. samples / sec: 981.01
Iteration:  40640, Loss function: 3.829, Average Loss: 3.695, avg. samples / sec: 1046.43
Iteration:  40660, Loss function: 3.602, Average Loss: 3.697, avg. samples / sec: 1045.90
Iteration:  40680, Loss function: 3.683, Average Loss: 3.697, avg. samples / sec: 1001.30
Iteration:  40700, Loss function: 3.802, Average Loss: 3.698, avg. samples / sec: 1025.08
Iteration:  40720, Loss function: 3.575, Average Loss: 3.698, avg. samples / sec: 1066.75
Iteration:  40740, Loss function: 3.706, Average Loss: 3.698, avg. samples / sec: 975.88
Iteration:  40760, Loss function: 3.736, Average Loss: 3.698, avg. samples / sec: 1018.89
Iteration:  40780, Loss function: 3.964, Average Loss: 3.699, avg. samples / sec: 981.72
Iteration:  40800, Loss function: 3.526, Average Loss: 3.699, avg. samples / sec: 973.56
Iteration:  40820, Loss function: 3.742, Average Loss: 3.699, avg. samples / sec: 976.13
Iteration:  40840, Loss function: 3.661, Average Loss: 3.698, avg. samples / sec: 1019.73
Iteration:  40860, Loss function: 3.564, Average Loss: 3.699, avg. samples / sec: 1015.32
Iteration:  40880, Loss function: 3.492, Average Loss: 3.698, avg. samples / sec: 991.04
Iteration:  40900, Loss function: 3.483, Average Loss: 3.699, avg. samples / sec: 946.60
Iteration:  40920, Loss function: 3.869, Average Loss: 3.701, avg. samples / sec: 993.18
Iteration:  40940, Loss function: 3.515, Average Loss: 3.700, avg. samples / sec: 1037.48
Iteration:  40960, Loss function: 3.585, Average Loss: 3.699, avg. samples / sec: 1050.61
Iteration:  40980, Loss function: 3.527, Average Loss: 3.699, avg. samples / sec: 1107.77
Iteration:  41000, Loss function: 3.660, Average Loss: 3.698, avg. samples / sec: 1071.02
Iteration:  41020, Loss function: 3.959, Average Loss: 3.697, avg. samples / sec: 1093.91
Iteration:  41040, Loss function: 3.786, Average Loss: 3.697, avg. samples / sec: 1167.34
Iteration:  41060, Loss function: 3.516, Average Loss: 3.698, avg. samples / sec: 1208.47
Iteration:  41080, Loss function: 3.579, Average Loss: 3.698, avg. samples / sec: 1200.48
Iteration:  41100, Loss function: 3.749, Average Loss: 3.698, avg. samples / sec: 1197.06
Iteration:  41120, Loss function: 3.588, Average Loss: 3.699, avg. samples / sec: 1204.15
Iteration:  41140, Loss function: 3.528, Average Loss: 3.699, avg. samples / sec: 1208.39
:::MLLOG {"namespace": "", "time_ms": 1639131301247, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 40}}
Predicting Ended, total time: 33.76 s
:::MLLOG {"namespace": "", "time_ms": 1639131335117, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1639131335126, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 41, "epoch_count": 10}}
:::MLLOG {"namespace": "", "time_ms": 1639131335127, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 41, "current_iter_num": 41146}}
Loading and preparing results...
Iteration:  41160, Loss function: 3.666, Average Loss: 3.698, avg. samples / sec: 62.75
DONE (t=1.83s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  41180, Loss function: 3.844, Average Loss: 3.698, avg. samples / sec: 948.00
Iteration:  41200, Loss function: 3.373, Average Loss: 3.696, avg. samples / sec: 864.28
DONE (t=5.45s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19388
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.34832
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.19466
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19886
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.28899
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.30388
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30388
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.19388 AP goal: 0.23000
Iteration:  41220, Loss function: 3.916, Average Loss: 3.694, avg. samples / sec: 964.54
:::MLLOG {"namespace": "", "time_ms": 1639131344516, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639131344517, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.19388477391026257, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1639131344517, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 40}}
Iteration:  41240, Loss function: 3.476, Average Loss: 3.693, avg. samples / sec: 932.03
Iteration:  41260, Loss function: 3.632, Average Loss: 3.692, avg. samples / sec: 953.32
Iteration:  41280, Loss function: 3.777, Average Loss: 3.691, avg. samples / sec: 976.03
Iteration:  41300, Loss function: 3.389, Average Loss: 3.690, avg. samples / sec: 996.29
Iteration:  41320, Loss function: 3.508, Average Loss: 3.689, avg. samples / sec: 1032.70
Iteration:  41340, Loss function: 3.757, Average Loss: 3.688, avg. samples / sec: 962.77
Iteration:  41360, Loss function: 3.908, Average Loss: 3.687, avg. samples / sec: 913.77
Iteration:  41380, Loss function: 3.880, Average Loss: 3.687, avg. samples / sec: 976.31
Iteration:  41400, Loss function: 4.016, Average Loss: 3.688, avg. samples / sec: 998.97
Iteration:  41420, Loss function: 3.834, Average Loss: 3.688, avg. samples / sec: 1050.81
Iteration:  41440, Loss function: 3.274, Average Loss: 3.687, avg. samples / sec: 1020.91
Iteration:  41460, Loss function: 3.524, Average Loss: 3.687, avg. samples / sec: 990.41
Iteration:  41480, Loss function: 3.304, Average Loss: 3.687, avg. samples / sec: 1007.91
Iteration:  41500, Loss function: 4.042, Average Loss: 3.687, avg. samples / sec: 1017.92
Iteration:  41520, Loss function: 3.793, Average Loss: 3.686, avg. samples / sec: 965.70
Iteration:  41540, Loss function: 3.463, Average Loss: 3.686, avg. samples / sec: 1094.30
Iteration:  41560, Loss function: 3.801, Average Loss: 3.686, avg. samples / sec: 1019.20
Iteration:  41580, Loss function: 3.507, Average Loss: 3.684, avg. samples / sec: 969.38
Iteration:  41600, Loss function: 3.825, Average Loss: 3.685, avg. samples / sec: 962.97
Iteration:  41620, Loss function: 3.788, Average Loss: 3.684, avg. samples / sec: 993.98
Iteration:  41640, Loss function: 3.991, Average Loss: 3.685, avg. samples / sec: 1023.67
Iteration:  41660, Loss function: 3.749, Average Loss: 3.686, avg. samples / sec: 1039.61
Iteration:  41680, Loss function: 3.623, Average Loss: 3.684, avg. samples / sec: 1007.15
Iteration:  41700, Loss function: 4.047, Average Loss: 3.686, avg. samples / sec: 900.32
Iteration:  41720, Loss function: 3.513, Average Loss: 3.684, avg. samples / sec: 953.63
Iteration:  41740, Loss function: 3.505, Average Loss: 3.684, avg. samples / sec: 924.41
Iteration:  41760, Loss function: 3.589, Average Loss: 3.685, avg. samples / sec: 906.96
Iteration:  41780, Loss function: 3.731, Average Loss: 3.685, avg. samples / sec: 1017.40
Iteration:  41800, Loss function: 3.541, Average Loss: 3.684, avg. samples / sec: 1051.50
Iteration:  41820, Loss function: 3.600, Average Loss: 3.683, avg. samples / sec: 1024.55
Iteration:  41840, Loss function: 3.725, Average Loss: 3.683, avg. samples / sec: 1058.22
Iteration:  41860, Loss function: 3.883, Average Loss: 3.683, avg. samples / sec: 1036.81
Iteration:  41880, Loss function: 3.421, Average Loss: 3.682, avg. samples / sec: 982.54
Iteration:  41900, Loss function: 3.616, Average Loss: 3.681, avg. samples / sec: 1027.53
Iteration:  41920, Loss function: 3.906, Average Loss: 3.684, avg. samples / sec: 1067.68
Iteration:  41940, Loss function: 3.634, Average Loss: 3.683, avg. samples / sec: 1045.62
Iteration:  41960, Loss function: 3.787, Average Loss: 3.683, avg. samples / sec: 979.23
Iteration:  41980, Loss function: 3.554, Average Loss: 3.682, avg. samples / sec: 957.16
Iteration:  42000, Loss function: 4.180, Average Loss: 3.684, avg. samples / sec: 936.85
Iteration:  42020, Loss function: 3.812, Average Loss: 3.684, avg. samples / sec: 973.36
Iteration:  42040, Loss function: 3.399, Average Loss: 3.685, avg. samples / sec: 1037.24
Iteration:  42060, Loss function: 3.905, Average Loss: 3.686, avg. samples / sec: 969.72
Iteration:  42080, Loss function: 3.528, Average Loss: 3.686, avg. samples / sec: 966.74
Iteration:  42100, Loss function: 3.722, Average Loss: 3.687, avg. samples / sec: 1039.74
Iteration:  42120, Loss function: 3.576, Average Loss: 3.687, avg. samples / sec: 997.32
Iteration:  42140, Loss function: 3.670, Average Loss: 3.687, avg. samples / sec: 957.24
Iteration:  42160, Loss function: 3.342, Average Loss: 3.686, avg. samples / sec: 998.87
:::MLLOG {"namespace": "", "time_ms": 1639131454189, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639131454190, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 42, "current_iter_num": 42175}}
Iteration:  42180, Loss function: 3.710, Average Loss: 3.686, avg. samples / sec: 976.79
Iteration:  42200, Loss function: 3.503, Average Loss: 3.686, avg. samples / sec: 989.40
Iteration:  42220, Loss function: 3.314, Average Loss: 3.685, avg. samples / sec: 1056.57
Iteration:  42240, Loss function: 3.607, Average Loss: 3.684, avg. samples / sec: 986.26
Iteration:  42260, Loss function: 3.833, Average Loss: 3.684, avg. samples / sec: 986.63
Iteration:  42280, Loss function: 3.471, Average Loss: 3.683, avg. samples / sec: 1010.71
Iteration:  42300, Loss function: 3.383, Average Loss: 3.682, avg. samples / sec: 981.48
Iteration:  42320, Loss function: 3.975, Average Loss: 3.683, avg. samples / sec: 944.18
Iteration:  42340, Loss function: 3.722, Average Loss: 3.684, avg. samples / sec: 1011.35
Iteration:  42360, Loss function: 3.526, Average Loss: 3.684, avg. samples / sec: 992.42
Iteration:  42380, Loss function: 3.568, Average Loss: 3.683, avg. samples / sec: 952.57
Iteration:  42400, Loss function: 3.871, Average Loss: 3.684, avg. samples / sec: 990.57
Iteration:  42420, Loss function: 3.756, Average Loss: 3.682, avg. samples / sec: 1008.01
Iteration:  42440, Loss function: 3.295, Average Loss: 3.681, avg. samples / sec: 964.57
Iteration:  42460, Loss function: 3.674, Average Loss: 3.682, avg. samples / sec: 1065.50
Iteration:  42480, Loss function: 3.616, Average Loss: 3.682, avg. samples / sec: 1000.33
Iteration:  42500, Loss function: 3.532, Average Loss: 3.683, avg. samples / sec: 1062.41
Iteration:  42520, Loss function: 3.736, Average Loss: 3.682, avg. samples / sec: 1010.73
Iteration:  42540, Loss function: 3.734, Average Loss: 3.682, avg. samples / sec: 997.25
Iteration:  42560, Loss function: 3.591, Average Loss: 3.681, avg. samples / sec: 993.54
Iteration:  42580, Loss function: 3.780, Average Loss: 3.683, avg. samples / sec: 1060.55
Iteration:  42600, Loss function: 3.832, Average Loss: 3.682, avg. samples / sec: 1001.07
Iteration:  42620, Loss function: 4.016, Average Loss: 3.681, avg. samples / sec: 991.80
Iteration:  42640, Loss function: 3.709, Average Loss: 3.681, avg. samples / sec: 1033.25
Iteration:  42660, Loss function: 3.582, Average Loss: 3.681, avg. samples / sec: 993.38
Iteration:  42680, Loss function: 3.884, Average Loss: 3.681, avg. samples / sec: 1062.22
Iteration:  42700, Loss function: 3.882, Average Loss: 3.681, avg. samples / sec: 1062.02
Iteration:  42720, Loss function: 3.763, Average Loss: 3.680, avg. samples / sec: 984.23
Iteration:  42740, Loss function: 3.550, Average Loss: 3.679, avg. samples / sec: 994.24
Iteration:  42760, Loss function: 3.758, Average Loss: 3.679, avg. samples / sec: 1025.77
Iteration:  42780, Loss function: 3.525, Average Loss: 3.677, avg. samples / sec: 997.39
Iteration:  42800, Loss function: 3.743, Average Loss: 3.677, avg. samples / sec: 950.37
Iteration:  42820, Loss function: 3.982, Average Loss: 3.678, avg. samples / sec: 950.54
Iteration:  42840, Loss function: 3.710, Average Loss: 3.678, avg. samples / sec: 979.21
Iteration:  42860, Loss function: 3.540, Average Loss: 3.676, avg. samples / sec: 1034.78
Iteration:  42880, Loss function: 3.615, Average Loss: 3.676, avg. samples / sec: 1052.71
Iteration:  42900, Loss function: 3.609, Average Loss: 3.676, avg. samples / sec: 1020.10
Iteration:  42920, Loss function: 3.541, Average Loss: 3.676, avg. samples / sec: 987.78
Iteration:  42940, Loss function: 3.603, Average Loss: 3.677, avg. samples / sec: 919.03
Iteration:  42960, Loss function: 3.617, Average Loss: 3.676, avg. samples / sec: 1018.66
Iteration:  42980, Loss function: 3.592, Average Loss: 3.675, avg. samples / sec: 985.96
Iteration:  43000, Loss function: 3.805, Average Loss: 3.675, avg. samples / sec: 1053.43
Iteration:  43020, Loss function: 3.649, Average Loss: 3.673, avg. samples / sec: 968.35
Iteration:  43040, Loss function: 3.609, Average Loss: 3.674, avg. samples / sec: 952.82
Iteration:  43060, Loss function: 3.734, Average Loss: 3.676, avg. samples / sec: 992.11
Iteration:  43080, Loss function: 3.765, Average Loss: 3.676, avg. samples / sec: 972.62
Iteration:  43100, Loss function: 3.792, Average Loss: 3.676, avg. samples / sec: 1002.16
Iteration:  43120, Loss function: 3.882, Average Loss: 3.676, avg. samples / sec: 1103.15
Iteration:  43140, Loss function: 3.838, Average Loss: 3.677, avg. samples / sec: 1003.16
Iteration:  43160, Loss function: 3.562, Average Loss: 3.677, avg. samples / sec: 957.85
Iteration:  43180, Loss function: 3.898, Average Loss: 3.677, avg. samples / sec: 1002.80
Iteration:  43200, Loss function: 3.768, Average Loss: 3.677, avg. samples / sec: 995.39
:::MLLOG {"namespace": "", "time_ms": 1639131571451, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1639131571452, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 43, "current_iter_num": 43204}}
Iteration:  43220, Loss function: 3.803, Average Loss: 3.678, avg. samples / sec: 982.51
Iteration:  43240, Loss function: 3.591, Average Loss: 3.677, avg. samples / sec: 886.95
Iteration:  43260, Loss function: 3.518, Average Loss: 3.677, avg. samples / sec: 985.72
Iteration:  43280, Loss function: 3.916, Average Loss: 3.676, avg. samples / sec: 1004.29
Iteration:  43300, Loss function: 3.359, Average Loss: 3.675, avg. samples / sec: 1055.47
Iteration:  43320, Loss function: 3.836, Average Loss: 3.674, avg. samples / sec: 932.50
Iteration:  43340, Loss function: 3.593, Average Loss: 3.673, avg. samples / sec: 941.04
Iteration:  43360, Loss function: 3.744, Average Loss: 3.674, avg. samples / sec: 1029.63
Iteration:  43380, Loss function: 3.753, Average Loss: 3.674, avg. samples / sec: 1033.92
Iteration:  43400, Loss function: 3.878, Average Loss: 3.674, avg. samples / sec: 951.86
Iteration:  43420, Loss function: 3.685, Average Loss: 3.674, avg. samples / sec: 1003.47
Iteration:  43440, Loss function: 3.803, Average Loss: 3.673, avg. samples / sec: 980.42
Iteration:  43460, Loss function: 3.622, Average Loss: 3.672, avg. samples / sec: 978.96
Iteration:  43480, Loss function: 3.644, Average Loss: 3.672, avg. samples / sec: 1019.44
Iteration:  43500, Loss function: 3.809, Average Loss: 3.672, avg. samples / sec: 940.68
Iteration:  43520, Loss function: 3.535, Average Loss: 3.671, avg. samples / sec: 1011.39
Iteration:  43540, Loss function: 3.660, Average Loss: 3.670, avg. samples / sec: 954.19
Iteration:  43560, Loss function: 3.638, Average Loss: 3.671, avg. samples / sec: 953.49
Iteration:  43580, Loss function: 3.551, Average Loss: 3.671, avg. samples / sec: 1017.25
Iteration:  43600, Loss function: 3.895, Average Loss: 3.670, avg. samples / sec: 967.20
Iteration:  43620, Loss function: 3.709, Average Loss: 3.670, avg. samples / sec: 932.27
Iteration:  43640, Loss function: 3.828, Average Loss: 3.669, avg. samples / sec: 998.74
Iteration:  43660, Loss function: 3.565, Average Loss: 3.669, avg. samples / sec: 977.09
Iteration:  43680, Loss function: 3.713, Average Loss: 3.668, avg. samples / sec: 1021.98
Iteration:  43700, Loss function: 3.710, Average Loss: 3.668, avg. samples / sec: 999.67
Iteration:  43720, Loss function: 3.513, Average Loss: 3.668, avg. samples / sec: 917.86
Iteration:  43740, Loss function: 3.618, Average Loss: 3.667, avg. samples / sec: 1044.91
Iteration:  43760, Loss function: 3.601, Average Loss: 3.669, avg. samples / sec: 965.89
Iteration:  43780, Loss function: 3.638, Average Loss: 3.670, avg. samples / sec: 962.25
Iteration:  43800, Loss function: 3.617, Average Loss: 3.670, avg. samples / sec: 993.84
Iteration:  43820, Loss function: 3.788, Average Loss: 3.670, avg. samples / sec: 1064.67
Iteration:  43840, Loss function: 3.585, Average Loss: 3.670, avg. samples / sec: 1024.61
Iteration:  43860, Loss function: 3.447, Average Loss: 3.668, avg. samples / sec: 1070.56
Iteration:  43880, Loss function: 3.715, Average Loss: 3.668, avg. samples / sec: 985.50
Iteration:  43900, Loss function: 3.994, Average Loss: 3.667, avg. samples / sec: 1007.46
Iteration:  43920, Loss function: 3.958, Average Loss: 3.667, avg. samples / sec: 996.47
Iteration:  43940, Loss function: 3.548, Average Loss: 3.666, avg. samples / sec: 1004.37
Iteration:  43960, Loss function: 3.655, Average Loss: 3.666, avg. samples / sec: 1061.01
Iteration:  43980, Loss function: 3.700, Average Loss: 3.667, avg. samples / sec: 1050.85
Iteration:  44000, Loss function: 3.613, Average Loss: 3.666, avg. samples / sec: 1025.82
Iteration:  44020, Loss function: 3.937, Average Loss: 3.666, avg. samples / sec: 967.30
Iteration:  44040, Loss function: 3.786, Average Loss: 3.667, avg. samples / sec: 948.62
Iteration:  44060, Loss function: 3.723, Average Loss: 3.667, avg. samples / sec: 1040.42
Iteration:  44080, Loss function: 3.753, Average Loss: 3.667, avg. samples / sec: 939.09
Iteration:  44100, Loss function: 3.584, Average Loss: 3.665, avg. samples / sec: 1054.62
Iteration:  44120, Loss function: 3.977, Average Loss: 3.665, avg. samples / sec: 955.51
Iteration:  44140, Loss function: 3.625, Average Loss: 3.666, avg. samples / sec: 967.16
Iteration:  44160, Loss function: 3.621, Average Loss: 3.666, avg. samples / sec: 1054.03
Iteration:  44180, Loss function: 3.443, Average Loss: 3.665, avg. samples / sec: 1032.28
Iteration:  44200, Loss function: 3.634, Average Loss: 3.665, avg. samples / sec: 1057.07
Iteration:  44220, Loss function: 3.711, Average Loss: 3.664, avg. samples / sec: 1004.14
:::MLLOG {"namespace": "", "time_ms": 1639131689418, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1639131689419, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 44, "current_iter_num": 44232}}
Iteration:  44240, Loss function: 3.773, Average Loss: 3.664, avg. samples / sec: 1021.38
Iteration:  44260, Loss function: 3.466, Average Loss: 3.663, avg. samples / sec: 1029.70
Iteration:  44280, Loss function: 3.275, Average Loss: 3.662, avg. samples / sec: 1041.34
Iteration:  44300, Loss function: 3.533, Average Loss: 3.661, avg. samples / sec: 1081.01
Iteration:  44320, Loss function: 3.485, Average Loss: 3.660, avg. samples / sec: 1041.32
Iteration:  44340, Loss function: 3.730, Average Loss: 3.660, avg. samples / sec: 1009.79
Iteration:  44360, Loss function: 3.461, Average Loss: 3.659, avg. samples / sec: 1002.47
Iteration:  44380, Loss function: 3.649, Average Loss: 3.658, avg. samples / sec: 948.21
Iteration:  44400, Loss function: 3.534, Average Loss: 3.659, avg. samples / sec: 1012.80
Iteration:  44420, Loss function: 3.666, Average Loss: 3.658, avg. samples / sec: 962.08
Iteration:  44440, Loss function: 3.553, Average Loss: 3.657, avg. samples / sec: 986.75
Iteration:  44460, Loss function: 3.827, Average Loss: 3.656, avg. samples / sec: 1012.33
Iteration:  44480, Loss function: 3.511, Average Loss: 3.657, avg. samples / sec: 902.72
Iteration:  44500, Loss function: 3.754, Average Loss: 3.656, avg. samples / sec: 956.98
Iteration:  44520, Loss function: 3.694, Average Loss: 3.657, avg. samples / sec: 1009.58
Iteration:  44540, Loss function: 3.574, Average Loss: 3.656, avg. samples / sec: 1035.14
Iteration:  44560, Loss function: 3.891, Average Loss: 3.657, avg. samples / sec: 1001.51
Iteration:  44580, Loss function: 3.457, Average Loss: 3.657, avg. samples / sec: 983.42
Iteration:  44600, Loss function: 3.577, Average Loss: 3.655, avg. samples / sec: 978.37
Iteration:  44620, Loss function: 3.695, Average Loss: 3.655, avg. samples / sec: 1011.25
Iteration:  44640, Loss function: 3.654, Average Loss: 3.655, avg. samples / sec: 1000.23
Iteration:  44660, Loss function: 3.696, Average Loss: 3.655, avg. samples / sec: 976.58
Iteration:  44680, Loss function: 3.757, Average Loss: 3.655, avg. samples / sec: 998.03
Iteration:  44700, Loss function: 3.489, Average Loss: 3.654, avg. samples / sec: 1042.77
Iteration:  44720, Loss function: 3.696, Average Loss: 3.654, avg. samples / sec: 1061.52
Iteration:  44740, Loss function: 3.565, Average Loss: 3.654, avg. samples / sec: 1023.63
Iteration:  44760, Loss function: 3.568, Average Loss: 3.654, avg. samples / sec: 972.87
Iteration:  44780, Loss function: 3.700, Average Loss: 3.653, avg. samples / sec: 986.26
Iteration:  44800, Loss function: 3.737, Average Loss: 3.653, avg. samples / sec: 1009.78
Iteration:  44820, Loss function: 3.671, Average Loss: 3.652, avg. samples / sec: 953.43
Iteration:  44840, Loss function: 3.637, Average Loss: 3.653, avg. samples / sec: 965.14
Iteration:  44860, Loss function: 3.820, Average Loss: 3.654, avg. samples / sec: 985.14
Iteration:  44880, Loss function: 3.614, Average Loss: 3.654, avg. samples / sec: 867.81
Iteration:  44900, Loss function: 3.653, Average Loss: 3.652, avg. samples / sec: 972.31
Iteration:  44920, Loss function: 3.735, Average Loss: 3.653, avg. samples / sec: 981.78
Iteration:  44940, Loss function: 3.354, Average Loss: 3.652, avg. samples / sec: 1066.12
Iteration:  44960, Loss function: 3.691, Average Loss: 3.652, avg. samples / sec: 997.59
Iteration:  44980, Loss function: 3.730, Average Loss: 3.651, avg. samples / sec: 1098.39
Iteration:  45000, Loss function: 3.822, Average Loss: 3.653, avg. samples / sec: 932.52
Iteration:  45020, Loss function: 3.665, Average Loss: 3.652, avg. samples / sec: 918.61
Iteration:  45040, Loss function: 3.588, Average Loss: 3.652, avg. samples / sec: 960.15
Iteration:  45060, Loss function: 3.731, Average Loss: 3.653, avg. samples / sec: 952.82
Iteration:  45080, Loss function: 3.677, Average Loss: 3.653, avg. samples / sec: 1013.78
Iteration:  45100, Loss function: 3.435, Average Loss: 3.652, avg. samples / sec: 996.26
Iteration:  45120, Loss function: 3.615, Average Loss: 3.653, avg. samples / sec: 952.94
Iteration:  45140, Loss function: 3.758, Average Loss: 3.652, avg. samples / sec: 1036.77
Iteration:  45160, Loss function: 3.598, Average Loss: 3.653, avg. samples / sec: 957.77
Iteration:  45180, Loss function: 3.530, Average Loss: 3.654, avg. samples / sec: 1085.62
Iteration:  45200, Loss function: 3.366, Average Loss: 3.653, avg. samples / sec: 1051.10
Iteration:  45220, Loss function: 3.782, Average Loss: 3.655, avg. samples / sec: 1003.03
Iteration:  45240, Loss function: 3.545, Average Loss: 3.656, avg. samples / sec: 1037.61
Iteration:  45260, Loss function: 3.880, Average Loss: 3.657, avg. samples / sec: 1022.11
:::MLLOG {"namespace": "", "time_ms": 1639131807226, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 44}}
lr decay step #1
:::MLLOG {"namespace": "", "time_ms": 1639131807227, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 45, "current_iter_num": 45261}}
Iteration:  45280, Loss function: 3.719, Average Loss: 3.656, avg. samples / sec: 965.84
Iteration:  45300, Loss function: 3.418, Average Loss: 3.653, avg. samples / sec: 1051.35
Iteration:  45320, Loss function: 3.577, Average Loss: 3.649, avg. samples / sec: 1087.57
Iteration:  45340, Loss function: 3.362, Average Loss: 3.645, avg. samples / sec: 1016.98
Iteration:  45360, Loss function: 3.467, Average Loss: 3.639, avg. samples / sec: 1001.32
Iteration:  45380, Loss function: 3.381, Average Loss: 3.634, avg. samples / sec: 971.76
Iteration:  45400, Loss function: 3.323, Average Loss: 3.631, avg. samples / sec: 979.95
Iteration:  45420, Loss function: 3.206, Average Loss: 3.627, avg. samples / sec: 1033.94
Iteration:  45440, Loss function: 3.164, Average Loss: 3.622, avg. samples / sec: 914.26
Iteration:  45460, Loss function: 3.083, Average Loss: 3.615, avg. samples / sec: 959.81
Iteration:  45480, Loss function: 3.815, Average Loss: 3.611, avg. samples / sec: 994.15
Iteration:  45500, Loss function: 3.369, Average Loss: 3.606, avg. samples / sec: 961.10
Iteration:  45520, Loss function: 3.443, Average Loss: 3.601, avg. samples / sec: 1044.06
Iteration:  45540, Loss function: 3.212, Average Loss: 3.596, avg. samples / sec: 1059.84
Iteration:  45560, Loss function: 3.534, Average Loss: 3.592, avg. samples / sec: 1005.49
Iteration:  45580, Loss function: 3.419, Average Loss: 3.588, avg. samples / sec: 1025.09
Iteration:  45600, Loss function: 3.366, Average Loss: 3.582, avg. samples / sec: 1046.01
Iteration:  45620, Loss function: 3.372, Average Loss: 3.579, avg. samples / sec: 1048.72
Iteration:  45640, Loss function: 3.535, Average Loss: 3.574, avg. samples / sec: 1083.90
Iteration:  45660, Loss function: 3.404, Average Loss: 3.571, avg. samples / sec: 989.87
Iteration:  45680, Loss function: 3.543, Average Loss: 3.568, avg. samples / sec: 1055.83
Iteration:  45700, Loss function: 3.292, Average Loss: 3.564, avg. samples / sec: 1026.59
Iteration:  45720, Loss function: 3.578, Average Loss: 3.560, avg. samples / sec: 1052.91
Iteration:  45740, Loss function: 3.531, Average Loss: 3.555, avg. samples / sec: 1009.90
Iteration:  45760, Loss function: 3.244, Average Loss: 3.551, avg. samples / sec: 1006.08
Iteration:  45780, Loss function: 3.463, Average Loss: 3.547, avg. samples / sec: 1005.77
Iteration:  45800, Loss function: 3.334, Average Loss: 3.542, avg. samples / sec: 1034.47
Iteration:  45820, Loss function: 3.187, Average Loss: 3.537, avg. samples / sec: 964.52
Iteration:  45840, Loss function: 3.073, Average Loss: 3.534, avg. samples / sec: 904.52
Iteration:  45860, Loss function: 3.713, Average Loss: 3.531, avg. samples / sec: 964.54
Iteration:  45880, Loss function: 3.322, Average Loss: 3.527, avg. samples / sec: 956.79
Iteration:  45900, Loss function: 3.310, Average Loss: 3.523, avg. samples / sec: 1008.86
Iteration:  45920, Loss function: 3.283, Average Loss: 3.518, avg. samples / sec: 999.58
Iteration:  45940, Loss function: 3.411, Average Loss: 3.514, avg. samples / sec: 991.32
Iteration:  45960, Loss function: 3.204, Average Loss: 3.512, avg. samples / sec: 929.61
Iteration:  45980, Loss function: 3.432, Average Loss: 3.508, avg. samples / sec: 973.09
Iteration:  46000, Loss function: 3.453, Average Loss: 3.506, avg. samples / sec: 972.73
Iteration:  46020, Loss function: 3.406, Average Loss: 3.503, avg. samples / sec: 973.73
Iteration:  46040, Loss function: 3.450, Average Loss: 3.499, avg. samples / sec: 1037.10
Iteration:  46060, Loss function: 3.389, Average Loss: 3.495, avg. samples / sec: 1007.31
Iteration:  46080, Loss function: 3.445, Average Loss: 3.492, avg. samples / sec: 963.15
Iteration:  46100, Loss function: 3.287, Average Loss: 3.489, avg. samples / sec: 1016.34
Iteration:  46120, Loss function: 3.559, Average Loss: 3.484, avg. samples / sec: 952.47
Iteration:  46140, Loss function: 3.323, Average Loss: 3.481, avg. samples / sec: 1031.79
Iteration:  46160, Loss function: 3.096, Average Loss: 3.478, avg. samples / sec: 1071.09
Iteration:  46180, Loss function: 3.108, Average Loss: 3.476, avg. samples / sec: 1037.80
Iteration:  46200, Loss function: 3.383, Average Loss: 3.473, avg. samples / sec: 1027.16
Iteration:  46220, Loss function: 3.491, Average Loss: 3.470, avg. samples / sec: 1010.62
Iteration:  46240, Loss function: 3.742, Average Loss: 3.468, avg. samples / sec: 1033.63
Iteration:  46260, Loss function: 3.357, Average Loss: 3.465, avg. samples / sec: 992.90
Iteration:  46280, Loss function: 3.364, Average Loss: 3.461, avg. samples / sec: 1014.09
:::MLLOG {"namespace": "", "time_ms": 1639131924171, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1639131924172, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 46, "current_iter_num": 46290}}
Iteration:  46300, Loss function: 3.490, Average Loss: 3.458, avg. samples / sec: 1005.31
Iteration:  46320, Loss function: 3.301, Average Loss: 3.454, avg. samples / sec: 977.22
Iteration:  46340, Loss function: 3.389, Average Loss: 3.450, avg. samples / sec: 956.49
Iteration:  46360, Loss function: 3.431, Average Loss: 3.449, avg. samples / sec: 1001.04
Iteration:  46380, Loss function: 3.227, Average Loss: 3.444, avg. samples / sec: 960.85
Iteration:  46400, Loss function: 3.215, Average Loss: 3.440, avg. samples / sec: 1042.08
Iteration:  46420, Loss function: 3.285, Average Loss: 3.438, avg. samples / sec: 1030.36
Iteration:  46440, Loss function: 3.315, Average Loss: 3.434, avg. samples / sec: 1012.15
Iteration:  46460, Loss function: 2.942, Average Loss: 3.431, avg. samples / sec: 1041.90
Iteration:  46480, Loss function: 3.460, Average Loss: 3.428, avg. samples / sec: 1093.55
Iteration:  46500, Loss function: 3.471, Average Loss: 3.426, avg. samples / sec: 976.16
Iteration:  46520, Loss function: 3.265, Average Loss: 3.423, avg. samples / sec: 989.93
Iteration:  46540, Loss function: 3.181, Average Loss: 3.422, avg. samples / sec: 1006.14
Iteration:  46560, Loss function: 3.258, Average Loss: 3.418, avg. samples / sec: 935.56
Iteration:  46580, Loss function: 3.309, Average Loss: 3.417, avg. samples / sec: 1083.28
Iteration:  46600, Loss function: 3.355, Average Loss: 3.415, avg. samples / sec: 967.43
Iteration:  46620, Loss function: 3.136, Average Loss: 3.412, avg. samples / sec: 1071.63
Iteration:  46640, Loss function: 3.600, Average Loss: 3.410, avg. samples / sec: 964.02
Iteration:  46660, Loss function: 3.623, Average Loss: 3.407, avg. samples / sec: 982.51
Iteration:  46680, Loss function: 3.285, Average Loss: 3.404, avg. samples / sec: 1003.04
Iteration:  46700, Loss function: 3.313, Average Loss: 3.401, avg. samples / sec: 1063.18
Iteration:  46720, Loss function: 3.482, Average Loss: 3.399, avg. samples / sec: 1034.72
Iteration:  46740, Loss function: 3.286, Average Loss: 3.396, avg. samples / sec: 976.67
Iteration:  46760, Loss function: 3.572, Average Loss: 3.394, avg. samples / sec: 1024.70
Iteration:  46780, Loss function: 3.150, Average Loss: 3.392, avg. samples / sec: 969.84
Iteration:  46800, Loss function: 3.130, Average Loss: 3.389, avg. samples / sec: 1017.87
Iteration:  46820, Loss function: 3.201, Average Loss: 3.387, avg. samples / sec: 1008.10
Iteration:  46840, Loss function: 3.346, Average Loss: 3.385, avg. samples / sec: 979.41
Iteration:  46860, Loss function: 3.491, Average Loss: 3.383, avg. samples / sec: 984.81
Iteration:  46880, Loss function: 3.263, Average Loss: 3.381, avg. samples / sec: 1025.71
Iteration:  46900, Loss function: 3.239, Average Loss: 3.379, avg. samples / sec: 1066.79
Iteration:  46920, Loss function: 2.884, Average Loss: 3.375, avg. samples / sec: 1012.57
Iteration:  46940, Loss function: 3.338, Average Loss: 3.373, avg. samples / sec: 1039.36
Iteration:  46960, Loss function: 3.414, Average Loss: 3.370, avg. samples / sec: 1009.82
Iteration:  46980, Loss function: 3.219, Average Loss: 3.368, avg. samples / sec: 1008.95
Iteration:  47000, Loss function: 3.065, Average Loss: 3.367, avg. samples / sec: 1000.73
Iteration:  47020, Loss function: 3.505, Average Loss: 3.365, avg. samples / sec: 959.41
Iteration:  47040, Loss function: 3.188, Average Loss: 3.362, avg. samples / sec: 1005.74
Iteration:  47060, Loss function: 3.277, Average Loss: 3.361, avg. samples / sec: 930.36
Iteration:  47080, Loss function: 3.322, Average Loss: 3.359, avg. samples / sec: 1018.78
Iteration:  47100, Loss function: 3.109, Average Loss: 3.358, avg. samples / sec: 1020.45
Iteration:  47120, Loss function: 3.205, Average Loss: 3.356, avg. samples / sec: 1030.34
Iteration:  47140, Loss function: 3.318, Average Loss: 3.355, avg. samples / sec: 933.72
Iteration:  47160, Loss function: 3.328, Average Loss: 3.352, avg. samples / sec: 979.47
Iteration:  47180, Loss function: 3.248, Average Loss: 3.350, avg. samples / sec: 1022.00
Iteration:  47200, Loss function: 3.321, Average Loss: 3.350, avg. samples / sec: 947.32
Iteration:  47220, Loss function: 3.331, Average Loss: 3.348, avg. samples / sec: 942.71
Iteration:  47240, Loss function: 3.181, Average Loss: 3.347, avg. samples / sec: 1028.49
Iteration:  47260, Loss function: 3.308, Average Loss: 3.346, avg. samples / sec: 1035.09
Iteration:  47280, Loss function: 3.321, Average Loss: 3.344, avg. samples / sec: 1000.40
Iteration:  47300, Loss function: 3.521, Average Loss: 3.342, avg. samples / sec: 924.66
:::MLLOG {"namespace": "", "time_ms": 1639132041282, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1639132041285, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 47, "current_iter_num": 47318}}
Iteration:  47320, Loss function: 3.230, Average Loss: 3.342, avg. samples / sec: 1030.00
Iteration:  47340, Loss function: 3.198, Average Loss: 3.340, avg. samples / sec: 1036.15
Iteration:  47360, Loss function: 3.196, Average Loss: 3.339, avg. samples / sec: 953.67
Iteration:  47380, Loss function: 3.419, Average Loss: 3.338, avg. samples / sec: 1007.76
Iteration:  47400, Loss function: 3.264, Average Loss: 3.336, avg. samples / sec: 1014.44
Iteration:  47420, Loss function: 3.295, Average Loss: 3.334, avg. samples / sec: 974.21
Iteration:  47440, Loss function: 3.320, Average Loss: 3.333, avg. samples / sec: 935.87
Iteration:  47460, Loss function: 3.381, Average Loss: 3.333, avg. samples / sec: 948.75
Iteration:  47480, Loss function: 3.351, Average Loss: 3.332, avg. samples / sec: 921.55
Iteration:  47500, Loss function: 3.487, Average Loss: 3.331, avg. samples / sec: 971.19
Iteration:  47520, Loss function: 2.986, Average Loss: 3.331, avg. samples / sec: 917.40
Iteration:  47540, Loss function: 3.130, Average Loss: 3.329, avg. samples / sec: 918.54
Iteration:  47560, Loss function: 3.263, Average Loss: 3.327, avg. samples / sec: 1027.66
Iteration:  47580, Loss function: 3.221, Average Loss: 3.325, avg. samples / sec: 1037.42
Iteration:  47600, Loss function: 3.330, Average Loss: 3.324, avg. samples / sec: 992.80
Iteration:  47620, Loss function: 3.229, Average Loss: 3.323, avg. samples / sec: 991.66
Iteration:  47640, Loss function: 3.332, Average Loss: 3.322, avg. samples / sec: 1019.65
Iteration:  47660, Loss function: 3.054, Average Loss: 3.320, avg. samples / sec: 1005.67
Iteration:  47680, Loss function: 3.384, Average Loss: 3.320, avg. samples / sec: 936.89
Iteration:  47700, Loss function: 3.111, Average Loss: 3.318, avg. samples / sec: 980.64
Iteration:  47720, Loss function: 3.047, Average Loss: 3.316, avg. samples / sec: 1043.54
Iteration:  47740, Loss function: 3.297, Average Loss: 3.314, avg. samples / sec: 976.63
Iteration:  47760, Loss function: 3.158, Average Loss: 3.314, avg. samples / sec: 1039.38
Iteration:  47780, Loss function: 3.083, Average Loss: 3.313, avg. samples / sec: 1040.68
Iteration:  47800, Loss function: 3.537, Average Loss: 3.313, avg. samples / sec: 885.11
Iteration:  47820, Loss function: 3.203, Average Loss: 3.311, avg. samples / sec: 1009.58
Iteration:  47840, Loss function: 3.505, Average Loss: 3.310, avg. samples / sec: 1029.16
Iteration:  47860, Loss function: 3.438, Average Loss: 3.308, avg. samples / sec: 1020.24
Iteration:  47880, Loss function: 3.297, Average Loss: 3.308, avg. samples / sec: 958.41
Iteration:  47900, Loss function: 3.295, Average Loss: 3.307, avg. samples / sec: 1040.76
Iteration:  47920, Loss function: 3.080, Average Loss: 3.306, avg. samples / sec: 981.93
Iteration:  47940, Loss function: 3.202, Average Loss: 3.305, avg. samples / sec: 1064.65
Iteration:  47960, Loss function: 3.225, Average Loss: 3.304, avg. samples / sec: 1096.77
Iteration:  47980, Loss function: 3.176, Average Loss: 3.302, avg. samples / sec: 1087.14
Iteration:  48000, Loss function: 3.098, Average Loss: 3.301, avg. samples / sec: 1006.10
Iteration:  48020, Loss function: 3.269, Average Loss: 3.301, avg. samples / sec: 1019.32
Iteration:  48040, Loss function: 3.260, Average Loss: 3.302, avg. samples / sec: 925.28
Iteration:  48060, Loss function: 3.309, Average Loss: 3.301, avg. samples / sec: 1003.57
Iteration:  48080, Loss function: 3.739, Average Loss: 3.301, avg. samples / sec: 1015.21
Iteration:  48100, Loss function: 3.439, Average Loss: 3.300, avg. samples / sec: 986.61
Iteration:  48120, Loss function: 3.317, Average Loss: 3.298, avg. samples / sec: 992.66
Iteration:  48140, Loss function: 3.182, Average Loss: 3.298, avg. samples / sec: 1014.03
Iteration:  48160, Loss function: 3.202, Average Loss: 3.298, avg. samples / sec: 997.33
Iteration:  48180, Loss function: 3.162, Average Loss: 3.296, avg. samples / sec: 993.80
Iteration:  48200, Loss function: 3.406, Average Loss: 3.294, avg. samples / sec: 1011.29
Iteration:  48220, Loss function: 3.370, Average Loss: 3.294, avg. samples / sec: 1053.81
Iteration:  48240, Loss function: 3.184, Average Loss: 3.293, avg. samples / sec: 1041.81
Iteration:  48260, Loss function: 3.299, Average Loss: 3.292, avg. samples / sec: 975.34
Iteration:  48280, Loss function: 3.439, Average Loss: 3.291, avg. samples / sec: 986.28
Iteration:  48300, Loss function: 3.435, Average Loss: 3.291, avg. samples / sec: 1084.32
Iteration:  48320, Loss function: 2.896, Average Loss: 3.290, avg. samples / sec: 1035.54
Iteration:  48340, Loss function: 3.185, Average Loss: 3.289, avg. samples / sec: 1009.03
:::MLLOG {"namespace": "", "time_ms": 1639132158799, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1639132158801, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 48, "current_iter_num": 48347}}
Iteration:  48360, Loss function: 3.227, Average Loss: 3.289, avg. samples / sec: 951.22
Iteration:  48380, Loss function: 2.928, Average Loss: 3.287, avg. samples / sec: 1062.86
Iteration:  48400, Loss function: 3.387, Average Loss: 3.286, avg. samples / sec: 1032.87
Iteration:  48420, Loss function: 3.376, Average Loss: 3.284, avg. samples / sec: 1028.93
Iteration:  48440, Loss function: 3.098, Average Loss: 3.284, avg. samples / sec: 1009.88
Iteration:  48460, Loss function: 2.867, Average Loss: 3.281, avg. samples / sec: 993.24
Iteration:  48480, Loss function: 3.125, Average Loss: 3.280, avg. samples / sec: 966.39
Iteration:  48500, Loss function: 3.396, Average Loss: 3.280, avg. samples / sec: 1006.05
Iteration:  48520, Loss function: 3.303, Average Loss: 3.280, avg. samples / sec: 1013.62
Iteration:  48540, Loss function: 3.262, Average Loss: 3.280, avg. samples / sec: 954.86
Iteration:  48560, Loss function: 3.005, Average Loss: 3.279, avg. samples / sec: 987.36
Iteration:  48580, Loss function: 3.060, Average Loss: 3.277, avg. samples / sec: 997.07
Iteration:  48600, Loss function: 3.470, Average Loss: 3.277, avg. samples / sec: 1027.44
Iteration:  48620, Loss function: 3.286, Average Loss: 3.276, avg. samples / sec: 995.01
Iteration:  48640, Loss function: 3.598, Average Loss: 3.274, avg. samples / sec: 998.65
Iteration:  48660, Loss function: 3.158, Average Loss: 3.272, avg. samples / sec: 1023.11
Iteration:  48680, Loss function: 3.413, Average Loss: 3.272, avg. samples / sec: 964.94
Iteration:  48700, Loss function: 3.123, Average Loss: 3.272, avg. samples / sec: 965.07
Iteration:  48720, Loss function: 3.098, Average Loss: 3.271, avg. samples / sec: 955.98
Iteration:  48740, Loss function: 3.551, Average Loss: 3.273, avg. samples / sec: 983.38
Iteration:  48760, Loss function: 3.360, Average Loss: 3.273, avg. samples / sec: 981.76
Iteration:  48780, Loss function: 3.296, Average Loss: 3.274, avg. samples / sec: 963.75
Iteration:  48800, Loss function: 3.492, Average Loss: 3.274, avg. samples / sec: 991.01
Iteration:  48820, Loss function: 3.214, Average Loss: 3.273, avg. samples / sec: 957.10
Iteration:  48840, Loss function: 3.145, Average Loss: 3.273, avg. samples / sec: 1020.40
Iteration:  48860, Loss function: 3.216, Average Loss: 3.272, avg. samples / sec: 1005.62
Iteration:  48880, Loss function: 3.133, Average Loss: 3.271, avg. samples / sec: 1021.25
Iteration:  48900, Loss function: 3.322, Average Loss: 3.271, avg. samples / sec: 984.67
Iteration:  48920, Loss function: 3.313, Average Loss: 3.272, avg. samples / sec: 1005.85
Iteration:  48940, Loss function: 3.273, Average Loss: 3.271, avg. samples / sec: 1031.08
Iteration:  48960, Loss function: 3.352, Average Loss: 3.271, avg. samples / sec: 959.73
Iteration:  48980, Loss function: 3.177, Average Loss: 3.271, avg. samples / sec: 961.54
Iteration:  49000, Loss function: 3.338, Average Loss: 3.271, avg. samples / sec: 1022.69
Iteration:  49020, Loss function: 3.052, Average Loss: 3.269, avg. samples / sec: 942.80
Iteration:  49040, Loss function: 3.348, Average Loss: 3.268, avg. samples / sec: 1060.74
Iteration:  49060, Loss function: 3.322, Average Loss: 3.266, avg. samples / sec: 1075.61
Iteration:  49080, Loss function: 3.452, Average Loss: 3.266, avg. samples / sec: 996.06
Iteration:  49100, Loss function: 3.112, Average Loss: 3.266, avg. samples / sec: 966.39
Iteration:  49120, Loss function: 3.341, Average Loss: 3.264, avg. samples / sec: 1066.90
Iteration:  49140, Loss function: 3.389, Average Loss: 3.264, avg. samples / sec: 993.06
Iteration:  49160, Loss function: 3.007, Average Loss: 3.263, avg. samples / sec: 944.87
Iteration:  49180, Loss function: 3.406, Average Loss: 3.263, avg. samples / sec: 995.69
Iteration:  49200, Loss function: 3.038, Average Loss: 3.263, avg. samples / sec: 994.67
Iteration:  49220, Loss function: 3.019, Average Loss: 3.262, avg. samples / sec: 981.37
Iteration:  49240, Loss function: 3.341, Average Loss: 3.262, avg. samples / sec: 951.62
Iteration:  49260, Loss function: 3.178, Average Loss: 3.262, avg. samples / sec: 966.52
Iteration:  49280, Loss function: 3.612, Average Loss: 3.261, avg. samples / sec: 963.52
Iteration:  49300, Loss function: 3.099, Average Loss: 3.259, avg. samples / sec: 951.38
Iteration:  49320, Loss function: 3.367, Average Loss: 3.259, avg. samples / sec: 1010.33
Iteration:  49340, Loss function: 3.150, Average Loss: 3.258, avg. samples / sec: 1036.84
Iteration:  49360, Loss function: 3.253, Average Loss: 3.258, avg. samples / sec: 1073.16
:::MLLOG {"namespace": "", "time_ms": 1639132276622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1639132276624, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 49, "current_iter_num": 49376}}
Iteration:  49380, Loss function: 3.296, Average Loss: 3.257, avg. samples / sec: 1039.06
Iteration:  49400, Loss function: 3.117, Average Loss: 3.256, avg. samples / sec: 951.79
Iteration:  49420, Loss function: 3.183, Average Loss: 3.255, avg. samples / sec: 987.99
Iteration:  49440, Loss function: 3.164, Average Loss: 3.254, avg. samples / sec: 1061.94
Iteration:  49460, Loss function: 3.282, Average Loss: 3.254, avg. samples / sec: 1047.58
Iteration:  49480, Loss function: 3.118, Average Loss: 3.253, avg. samples / sec: 1020.85
Iteration:  49500, Loss function: 3.117, Average Loss: 3.251, avg. samples / sec: 969.83
Iteration:  49520, Loss function: 3.083, Average Loss: 3.251, avg. samples / sec: 1080.79
Iteration:  49540, Loss function: 3.254, Average Loss: 3.251, avg. samples / sec: 979.49
Iteration:  49560, Loss function: 3.337, Average Loss: 3.250, avg. samples / sec: 1000.18
Iteration:  49580, Loss function: 3.252, Average Loss: 3.250, avg. samples / sec: 991.46
Iteration:  49600, Loss function: 3.262, Average Loss: 3.250, avg. samples / sec: 1081.68
Iteration:  49620, Loss function: 3.473, Average Loss: 3.250, avg. samples / sec: 1014.56
Iteration:  49640, Loss function: 3.198, Average Loss: 3.251, avg. samples / sec: 1030.65
Iteration:  49660, Loss function: 3.427, Average Loss: 3.250, avg. samples / sec: 964.84
Iteration:  49680, Loss function: 3.153, Average Loss: 3.248, avg. samples / sec: 1041.29
Iteration:  49700, Loss function: 3.256, Average Loss: 3.247, avg. samples / sec: 869.10
Iteration:  49720, Loss function: 3.308, Average Loss: 3.246, avg. samples / sec: 948.04
Iteration:  49740, Loss function: 3.388, Average Loss: 3.245, avg. samples / sec: 1032.85
Iteration:  49760, Loss function: 3.067, Average Loss: 3.245, avg. samples / sec: 977.08
Iteration:  49780, Loss function: 3.132, Average Loss: 3.244, avg. samples / sec: 1034.80
Iteration:  49800, Loss function: 3.060, Average Loss: 3.243, avg. samples / sec: 1044.29
Iteration:  49820, Loss function: 3.256, Average Loss: 3.244, avg. samples / sec: 1000.97
Iteration:  49840, Loss function: 3.269, Average Loss: 3.243, avg. samples / sec: 965.08
Iteration:  49860, Loss function: 3.258, Average Loss: 3.243, avg. samples / sec: 993.86
Iteration:  49880, Loss function: 3.055, Average Loss: 3.242, avg. samples / sec: 1010.28
Iteration:  49900, Loss function: 3.107, Average Loss: 3.241, avg. samples / sec: 1020.32
Iteration:  49920, Loss function: 3.294, Average Loss: 3.240, avg. samples / sec: 1030.51
Iteration:  49940, Loss function: 3.262, Average Loss: 3.240, avg. samples / sec: 991.99
Iteration:  49960, Loss function: 3.106, Average Loss: 3.241, avg. samples / sec: 1050.85
Iteration:  49980, Loss function: 3.313, Average Loss: 3.240, avg. samples / sec: 1022.51
Iteration:  50000, Loss function: 3.256, Average Loss: 3.239, avg. samples / sec: 1011.41
Iteration:  50020, Loss function: 3.046, Average Loss: 3.239, avg. samples / sec: 1048.11
Iteration:  50040, Loss function: 3.156, Average Loss: 3.238, avg. samples / sec: 974.81
Iteration:  50060, Loss function: 3.164, Average Loss: 3.238, avg. samples / sec: 977.69
Iteration:  50080, Loss function: 3.057, Average Loss: 3.238, avg. samples / sec: 1069.02
Iteration:  50100, Loss function: 3.478, Average Loss: 3.238, avg. samples / sec: 977.48
Iteration:  50120, Loss function: 3.632, Average Loss: 3.238, avg. samples / sec: 994.84
Iteration:  50140, Loss function: 2.937, Average Loss: 3.237, avg. samples / sec: 972.82
Iteration:  50160, Loss function: 3.363, Average Loss: 3.236, avg. samples / sec: 1017.67
Iteration:  50180, Loss function: 3.071, Average Loss: 3.237, avg. samples / sec: 1040.20
Iteration:  50200, Loss function: 3.244, Average Loss: 3.237, avg. samples / sec: 976.42
Iteration:  50220, Loss function: 3.189, Average Loss: 3.236, avg. samples / sec: 1008.08
Iteration:  50240, Loss function: 3.145, Average Loss: 3.236, avg. samples / sec: 1030.16
Iteration:  50260, Loss function: 3.091, Average Loss: 3.236, avg. samples / sec: 969.51
Iteration:  50280, Loss function: 3.095, Average Loss: 3.235, avg. samples / sec: 1058.54
Iteration:  50300, Loss function: 3.390, Average Loss: 3.235, avg. samples / sec: 977.56
Iteration:  50320, Loss function: 3.257, Average Loss: 3.235, avg. samples / sec: 1006.41
Iteration:  50340, Loss function: 3.486, Average Loss: 3.234, avg. samples / sec: 961.59
Iteration:  50360, Loss function: 3.303, Average Loss: 3.233, avg. samples / sec: 937.62
Iteration:  50380, Loss function: 3.231, Average Loss: 3.232, avg. samples / sec: 964.01
Iteration:  50400, Loss function: 3.517, Average Loss: 3.232, avg. samples / sec: 980.93
:::MLLOG {"namespace": "", "time_ms": 1639132393634, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1639132393636, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 50, "current_iter_num": 50404}}
Iteration:  50420, Loss function: 3.227, Average Loss: 3.231, avg. samples / sec: 996.91
Iteration:  50440, Loss function: 3.357, Average Loss: 3.230, avg. samples / sec: 969.39
Iteration:  50460, Loss function: 3.353, Average Loss: 3.230, avg. samples / sec: 1013.15
Iteration:  50480, Loss function: 2.890, Average Loss: 3.230, avg. samples / sec: 1034.61
Iteration:  50500, Loss function: 3.451, Average Loss: 3.230, avg. samples / sec: 1039.15
Iteration:  50520, Loss function: 3.207, Average Loss: 3.229, avg. samples / sec: 1028.37
Iteration:  50540, Loss function: 3.092, Average Loss: 3.228, avg. samples / sec: 946.21
Iteration:  50560, Loss function: 2.877, Average Loss: 3.228, avg. samples / sec: 998.52
Iteration:  50580, Loss function: 3.403, Average Loss: 3.228, avg. samples / sec: 982.80
Iteration:  50600, Loss function: 2.844, Average Loss: 3.226, avg. samples / sec: 1022.64
Iteration:  50620, Loss function: 3.024, Average Loss: 3.226, avg. samples / sec: 1021.16
Iteration:  50640, Loss function: 3.256, Average Loss: 3.225, avg. samples / sec: 1017.30
Iteration:  50660, Loss function: 3.222, Average Loss: 3.224, avg. samples / sec: 985.43
Iteration:  50680, Loss function: 3.292, Average Loss: 3.225, avg. samples / sec: 951.79
Iteration:  50700, Loss function: 3.263, Average Loss: 3.225, avg. samples / sec: 1015.70
Iteration:  50720, Loss function: 3.119, Average Loss: 3.224, avg. samples / sec: 1014.61
Iteration:  50740, Loss function: 3.025, Average Loss: 3.223, avg. samples / sec: 1076.77
Iteration:  50760, Loss function: 3.534, Average Loss: 3.222, avg. samples / sec: 1022.09
Iteration:  50780, Loss function: 2.984, Average Loss: 3.221, avg. samples / sec: 943.60
Iteration:  50800, Loss function: 3.036, Average Loss: 3.222, avg. samples / sec: 995.13
Iteration:  50820, Loss function: 3.326, Average Loss: 3.223, avg. samples / sec: 974.48
Iteration:  50840, Loss function: 3.132, Average Loss: 3.223, avg. samples / sec: 998.40
Iteration:  50860, Loss function: 3.310, Average Loss: 3.222, avg. samples / sec: 1045.72
Iteration:  50880, Loss function: 3.123, Average Loss: 3.221, avg. samples / sec: 997.90
Iteration:  50900, Loss function: 3.153, Average Loss: 3.222, avg. samples / sec: 994.97
Iteration:  50920, Loss function: 3.366, Average Loss: 3.221, avg. samples / sec: 1044.94
Iteration:  50940, Loss function: 3.353, Average Loss: 3.221, avg. samples / sec: 1008.61
Iteration:  50960, Loss function: 3.649, Average Loss: 3.220, avg. samples / sec: 981.64
Iteration:  50980, Loss function: 3.030, Average Loss: 3.219, avg. samples / sec: 1008.86
Iteration:  51000, Loss function: 2.988, Average Loss: 3.218, avg. samples / sec: 1052.89
Iteration:  51020, Loss function: 3.426, Average Loss: 3.219, avg. samples / sec: 980.97
Iteration:  51040, Loss function: 3.114, Average Loss: 3.220, avg. samples / sec: 1009.62
Iteration:  51060, Loss function: 3.111, Average Loss: 3.220, avg. samples / sec: 990.86
Iteration:  51080, Loss function: 2.955, Average Loss: 3.219, avg. samples / sec: 1035.50
Iteration:  51100, Loss function: 3.274, Average Loss: 3.219, avg. samples / sec: 990.81
Iteration:  51120, Loss function: 3.488, Average Loss: 3.221, avg. samples / sec: 973.59
Iteration:  51140, Loss function: 3.340, Average Loss: 3.221, avg. samples / sec: 988.47
Iteration:  51160, Loss function: 3.201, Average Loss: 3.221, avg. samples / sec: 1094.80
Iteration:  51180, Loss function: 3.335, Average Loss: 3.221, avg. samples / sec: 1102.65
Iteration:  51200, Loss function: 3.282, Average Loss: 3.220, avg. samples / sec: 1095.59
Iteration:  51220, Loss function: 3.126, Average Loss: 3.218, avg. samples / sec: 1135.84
Iteration:  51240, Loss function: 3.416, Average Loss: 3.217, avg. samples / sec: 1138.99
Iteration:  51260, Loss function: 3.190, Average Loss: 3.216, avg. samples / sec: 1095.39
Iteration:  51280, Loss function: 2.950, Average Loss: 3.217, avg. samples / sec: 1173.05
Iteration:  51300, Loss function: 3.253, Average Loss: 3.216, avg. samples / sec: 1180.02
Iteration:  51320, Loss function: 3.448, Average Loss: 3.217, avg. samples / sec: 1180.11
Iteration:  51340, Loss function: 2.922, Average Loss: 3.217, avg. samples / sec: 1173.37
Iteration:  51360, Loss function: 3.216, Average Loss: 3.217, avg. samples / sec: 1182.45
Iteration:  51380, Loss function: 3.001, Average Loss: 3.216, avg. samples / sec: 1178.93
Iteration:  51400, Loss function: 3.386, Average Loss: 3.216, avg. samples / sec: 1201.60
Iteration:  51420, Loss function: 3.123, Average Loss: 3.216, avg. samples / sec: 1211.69
:::MLLOG {"namespace": "", "time_ms": 1639132506254, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "train.py", "lineno": 427, "epoch_num": 50}}
Predicting Ended, total time: 28.43 s
:::MLLOG {"namespace": "", "time_ms": 1639132534702, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "train.py", "lineno": 331, "first_epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1639132534754, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "train.py", "lineno": 338, "first_epoch_num": 51, "epoch_count": 5}}
:::MLLOG {"namespace": "", "time_ms": 1639132534754, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "train.py", "lineno": 348, "epoch_num": 51, "current_iter_num": 51433}}
Loading and preparing results...
Iteration:  51440, Loss function: 3.207, Average Loss: 3.216, avg. samples / sec: 75.10
DONE (t=0.81s)
Running per image evaluation...
Evaluate annotation type *bbox*
Iteration:  51460, Loss function: 3.022, Average Loss: 3.215, avg. samples / sec: 1234.47
DONE (t=2.04s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23918
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.40536
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.24607
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32362
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.23011
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.33470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.35114
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.35114
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Current AP: 0.23918 AP goal: 0.23000
Iteration:  51480, Loss function: 3.054, Average Loss: 3.214, avg. samples / sec: 1234.02
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "train.py", "lineno": 85, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23918185300659617, "metadata": {"file": "train.py", "lineno": 88, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539175, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "train.py", "lineno": 89, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1639132539296, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "train.py", "lineno": 449, "status": "success"}}
++ date +%s
+ end=1639132540
++ date '+%Y-%m-%d %r'
+ end_fmt='2021-12-10 10:35:40 AM'
+ echo 'START TIMING RUN WAS 2021-12-10 08:56:27 AM'
START TIMING RUN WAS 2021-12-10 08:56:27 AM
+ echo 'ENDING TIMING RUN AT 2021-12-10 10:35:40 AM'
ENDING TIMING RUN AT 2021-12-10 10:35:40 AM
+ nvidia-smi -L
GPU 0: NVIDIA A100-SXM4-40GB (UUID: GPU-c9297a60-5079-9a56-b935-51e08dc0f65e)
+ result=5953
+ result_name=SINGLE_STAGE_DETECTOR
+ echo 'RESULT,SINGLE_STAGE_DETECTOR,,5953,nvidia,2021-12-10 08:56:27 AM'
RESULT,SINGLE_STAGE_DETECTOR,,5953,nvidia,2021-12-10 08:56:27 AM
+ echo 'ALL FINISHED GPU: 1 x full x 8 Pods'
ALL FINISHED GPU: 1 x full x 8 Pods
